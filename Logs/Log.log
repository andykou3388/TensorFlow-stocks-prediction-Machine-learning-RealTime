h5py._conv - [DEBUG]{MainThread} - <module>() - Creating converter from 7 to 5
h5py._conv - [DEBUG]{MainThread} - <module>() - Creating converter from 5 to 7
h5py._conv - [DEBUG]{MainThread} - <module>() - Creating converter from 7 to 5
h5py._conv - [DEBUG]{MainThread} - <module>() - Creating converter from 5 to 7
matplotlib - [DEBUG]{MainThread} - wrapper() - matplotlib data path: /opt/conda/lib/python3.10/site-packages/matplotlib/mpl-data
matplotlib - [DEBUG]{MainThread} - wrapper() - CONFIGDIR=/root/.config/matplotlib
matplotlib - [DEBUG]{MainThread} - <module>() - interactive is False
matplotlib - [DEBUG]{MainThread} - <module>() - platform is linux
matplotlib - [DEBUG]{MainThread} - wrapper() - CACHEDIR=/root/.cache/matplotlib
matplotlib.font_manager - [DEBUG]{MainThread} - _load_fontmanager() - Using fontManager instance from /root/.cache/matplotlib/fontlist-v390.json
yfinance - [DEBUG]{MainThread} - wrapper() - Entering history()
peewee - [DEBUG]{MainThread} - execute_sql() - ('CREATE TABLE IF NOT EXISTS "_tz_kv" ("key" VARCHAR(255) NOT NULL PRIMARY KEY, "value" VARCHAR(255)) WITHOUT ROWID', [])
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['0700.HK', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -  Entering history()
yfinance - [DEBUG]{MainThread} - history() - 0700.HK: Yahoo GET parameters: {'range': '60d', 'interval': '15m', 'includePrePost': True, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -   Entering get()
yfinance - [DEBUG]{MainThread} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{MainThread} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/0700.HK
yfinance - [DEBUG]{MainThread} - _make_request() - params={'range': '60d', 'interval': '15m', 'includePrePost': True, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{MainThread} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -        Entering _load_cookie_curlCffi()
peewee - [DEBUG]{MainThread} - execute_sql() - ('CREATE TABLE IF NOT EXISTS "_cookieschema" ("strategy" VARCHAR(255) NOT NULL PRIMARY KEY, "fetch_date" DATETIME NOT NULL, "cookie_bytes" BLOB NOT NULL) WITHOUT ROWID', [])
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -        Exiting _load_cookie_curlCffi()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing persistent cookie
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -        Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{MainThread} - wrapper() -        Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_crumb_basic() - crumb = 'dK3IG/1ev6r'
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _make_request() - response code=200
yfinance - [DEBUG]{MainThread} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{MainThread} - wrapper() -   Exiting get()
yfinance - [DEBUG]{MainThread} - history() - 0700.HK: yfinance received OHLC data: 2025-05-15 01:15:00 -> 2025-08-07 03:59:58
yfinance - [DEBUG]{MainThread} - history() - 0700.HK: OHLC after cleaning: 2025-05-15 09:15:00+08:00 -> 2025-08-07 11:59:58+08:00
yfinance - [DEBUG]{MainThread} - history() - 0700.HK: OHLC after combining events: 2025-05-15 09:15:00+08:00 -> 2025-08-07 11:59:58+08:00
yfinance - [DEBUG]{MainThread} - history() - 0700.HK: yfinance returning OHLC: 2025-05-15 09:15:00+08:00 -> 2025-08-07 11:45:00+08:00
yfinance - [DEBUG]{MainThread} - wrapper() -  Exiting history()
yfinance - [DEBUG]{MainThread} - wrapper() - Exiting history()
root - [INFO]{MainThread} - get_buy_sell_points_Roll() - get_buy_sell_points_Roll df.shape: (1426, 8) delete_aux_rows: True
                  Date   Open   High    Low  Close   Volume  sell_value_POS  sell_value_NEG
0  2025-05-15 09:15:00  547.0  547.0  531.5  535.0       52           518.5           518.5
1  2025-05-15 09:30:00  531.5  532.0  516.0  519.0  9661769           518.5           517.5
2  2025-05-15 09:45:00  519.0  522.5  519.0  520.5  1817195           518.5           517.5
3  2025-05-15 10:00:00  520.5  523.5  520.0  523.0  1334357           518.5           516.5
4  2025-05-15 10:15:00  523.5  523.5  520.0  520.0  1543035           518.5           516.5
5  2025-05-15 10:30:00  520.0  523.5  519.0  521.0  1131960           518.5           516.5
6  2025-05-15 10:45:00  521.0  521.5  519.5  520.5   728101           518.5           516.5
7  2025-05-15 11:00:00  520.5  521.5  519.0  519.0   779170           516.5           516.5
8  2025-05-15 11:15:00  519.5  520.0  518.5  519.5   703960           516.5           516.5
9  2025-05-15 11:30:00  519.5  520.0  519.0  519.5   307113           516.5           516.5
root - [INFO]{MainThread} - get_buy_sell_points_Roll() - Parameters of acquisition "buy_sell_points" for this stock is set to POSITIVE (units) 	92%: 5.5 	98%: 7.5 NEGATIVE (units) 	93%: 6.0 	98%: 9.0
root - [INFO]{MainThread} - get_ALL_tech_data_local() - Andy - 1
root - [INFO]{MainThread} - get_ALL_tech_data_local() - Andy - 2
root - [INFO]{MainThread} - get_ALL_tech_data_local() - Andy - 3
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=99)
           2	LOAD_GLOBAL(arg=0, lineno=106)
           4	LOAD_FAST(arg=0, lineno=106)
           6	CALL_FUNCTION(arg=1, lineno=106)
           8	STORE_FAST(arg=4, lineno=106)
          10	LOAD_GLOBAL(arg=1, lineno=107)
          12	LOAD_METHOD(arg=2, lineno=107)
          14	LOAD_FAST(arg=4, lineno=107)
          16	CALL_METHOD(arg=1, lineno=107)
          18	STORE_FAST(arg=5, lineno=107)
          20	LOAD_GLOBAL(arg=1, lineno=108)
          22	LOAD_METHOD(arg=2, lineno=108)
          24	LOAD_FAST(arg=4, lineno=108)
          26	CALL_METHOD(arg=1, lineno=108)
          28	STORE_FAST(arg=6, lineno=108)
          30	LOAD_GLOBAL(arg=1, lineno=109)
          32	LOAD_METHOD(arg=2, lineno=109)
          34	LOAD_FAST(arg=4, lineno=109)
          36	CALL_METHOD(arg=1, lineno=109)
          38	STORE_FAST(arg=7, lineno=109)
          40	LOAD_GLOBAL(arg=3, lineno=111)
          42	LOAD_FAST(arg=3, lineno=111)
          44	LOAD_FAST(arg=4, lineno=111)
          46	CALL_FUNCTION(arg=2, lineno=111)
          48	GET_ITER(arg=None, lineno=111)
>         50	FOR_ITER(arg=188, lineno=111)
          52	STORE_FAST(arg=8, lineno=111)
          54	LOAD_FAST(arg=1, lineno=113)
          56	LOAD_FAST(arg=8, lineno=113)
          58	BINARY_SUBSCR(arg=None, lineno=113)
          60	LOAD_FAST(arg=5, lineno=113)
          62	LOAD_FAST(arg=8, lineno=113)
          64	LOAD_CONST(arg=1, lineno=113)
          66	BINARY_SUBTRACT(arg=None, lineno=113)
          68	BINARY_SUBSCR(arg=None, lineno=113)
          70	COMPARE_OP(arg=0, lineno=113)
          72	POP_JUMP_IF_TRUE(arg=50, lineno=113)
          74	LOAD_FAST(arg=0, lineno=113)
          76	LOAD_FAST(arg=8, lineno=113)
          78	LOAD_CONST(arg=1, lineno=113)
          80	BINARY_SUBTRACT(arg=None, lineno=113)
          82	BINARY_SUBSCR(arg=None, lineno=113)
          84	LOAD_FAST(arg=5, lineno=113)
          86	LOAD_FAST(arg=8, lineno=113)
          88	LOAD_CONST(arg=1, lineno=113)
          90	BINARY_SUBTRACT(arg=None, lineno=113)
          92	BINARY_SUBSCR(arg=None, lineno=113)
          94	COMPARE_OP(arg=4, lineno=113)
          96	POP_JUMP_IF_FALSE(arg=57, lineno=113)
>         98	LOAD_FAST(arg=1, lineno=114)
         100	LOAD_FAST(arg=8, lineno=114)
         102	BINARY_SUBSCR(arg=None, lineno=114)
         104	LOAD_FAST(arg=5, lineno=114)
         106	LOAD_FAST(arg=8, lineno=114)
         108	STORE_SUBSCR(arg=None, lineno=114)
         110	JUMP_FORWARD(arg=8, lineno=114)
>        112	LOAD_FAST(arg=5, lineno=116)
         114	LOAD_FAST(arg=8, lineno=116)
         116	LOAD_CONST(arg=1, lineno=116)
         118	BINARY_SUBTRACT(arg=None, lineno=116)
         120	BINARY_SUBSCR(arg=None, lineno=116)
         122	LOAD_FAST(arg=5, lineno=116)
         124	LOAD_FAST(arg=8, lineno=116)
         126	STORE_SUBSCR(arg=None, lineno=116)
>        128	LOAD_FAST(arg=2, lineno=118)
         130	LOAD_FAST(arg=8, lineno=118)
         132	BINARY_SUBSCR(arg=None, lineno=118)
         134	LOAD_FAST(arg=6, lineno=118)
         136	LOAD_FAST(arg=8, lineno=118)
         138	LOAD_CONST(arg=1, lineno=118)
         140	BINARY_SUBTRACT(arg=None, lineno=118)
         142	BINARY_SUBSCR(arg=None, lineno=118)
         144	COMPARE_OP(arg=4, lineno=118)
         146	POP_JUMP_IF_TRUE(arg=87, lineno=118)
         148	LOAD_FAST(arg=0, lineno=118)
         150	LOAD_FAST(arg=8, lineno=118)
         152	LOAD_CONST(arg=1, lineno=118)
         154	BINARY_SUBTRACT(arg=None, lineno=118)
         156	BINARY_SUBSCR(arg=None, lineno=118)
         158	LOAD_FAST(arg=6, lineno=118)
         160	LOAD_FAST(arg=8, lineno=118)
         162	LOAD_CONST(arg=1, lineno=118)
         164	BINARY_SUBTRACT(arg=None, lineno=118)
         166	BINARY_SUBSCR(arg=None, lineno=118)
         168	COMPARE_OP(arg=0, lineno=118)
         170	POP_JUMP_IF_FALSE(arg=94, lineno=118)
>        172	LOAD_FAST(arg=2, lineno=119)
         174	LOAD_FAST(arg=8, lineno=119)
         176	BINARY_SUBSCR(arg=None, lineno=119)
         178	LOAD_FAST(arg=6, lineno=119)
         180	LOAD_FAST(arg=8, lineno=119)
         182	STORE_SUBSCR(arg=None, lineno=119)
         184	JUMP_FORWARD(arg=8, lineno=119)
>        186	LOAD_FAST(arg=6, lineno=121)
         188	LOAD_FAST(arg=8, lineno=121)
         190	LOAD_CONST(arg=1, lineno=121)
         192	BINARY_SUBTRACT(arg=None, lineno=121)
         194	BINARY_SUBSCR(arg=None, lineno=121)
         196	LOAD_FAST(arg=6, lineno=121)
         198	LOAD_FAST(arg=8, lineno=121)
         200	STORE_SUBSCR(arg=None, lineno=121)
>        202	LOAD_FAST(arg=7, lineno=123)
         204	LOAD_FAST(arg=8, lineno=123)
         206	LOAD_CONST(arg=1, lineno=123)
         208	BINARY_SUBTRACT(arg=None, lineno=123)
         210	BINARY_SUBSCR(arg=None, lineno=123)
         212	LOAD_FAST(arg=5, lineno=123)
         214	LOAD_FAST(arg=8, lineno=123)
         216	LOAD_CONST(arg=1, lineno=123)
         218	BINARY_SUBTRACT(arg=None, lineno=123)
         220	BINARY_SUBSCR(arg=None, lineno=123)
         222	COMPARE_OP(arg=2, lineno=123)
         224	POP_JUMP_IF_FALSE(arg=129, lineno=123)
         226	LOAD_FAST(arg=0, lineno=123)
         228	LOAD_FAST(arg=8, lineno=123)
         230	BINARY_SUBSCR(arg=None, lineno=123)
         232	LOAD_FAST(arg=5, lineno=123)
         234	LOAD_FAST(arg=8, lineno=123)
         236	BINARY_SUBSCR(arg=None, lineno=123)
         238	COMPARE_OP(arg=1, lineno=123)
         240	POP_JUMP_IF_FALSE(arg=129, lineno=123)
         242	LOAD_FAST(arg=5, lineno=124)
         244	LOAD_FAST(arg=8, lineno=124)
         246	BINARY_SUBSCR(arg=None, lineno=124)
         248	LOAD_FAST(arg=7, lineno=124)
         250	LOAD_FAST(arg=8, lineno=124)
         252	STORE_SUBSCR(arg=None, lineno=124)
         254	JUMP_ABSOLUTE(arg=26, lineno=124)
>        256	LOAD_FAST(arg=7, lineno=125)
         258	LOAD_FAST(arg=8, lineno=125)
         260	LOAD_CONST(arg=1, lineno=125)
         262	BINARY_SUBTRACT(arg=None, lineno=125)
         264	BINARY_SUBSCR(arg=None, lineno=125)
         266	LOAD_FAST(arg=5, lineno=125)
         268	LOAD_FAST(arg=8, lineno=125)
         270	LOAD_CONST(arg=1, lineno=125)
         272	BINARY_SUBTRACT(arg=None, lineno=125)
         274	BINARY_SUBSCR(arg=None, lineno=125)
         276	COMPARE_OP(arg=2, lineno=125)
         278	POP_JUMP_IF_FALSE(arg=156, lineno=125)
         280	LOAD_FAST(arg=0, lineno=125)
         282	LOAD_FAST(arg=8, lineno=125)
         284	BINARY_SUBSCR(arg=None, lineno=125)
         286	LOAD_FAST(arg=5, lineno=125)
         288	LOAD_FAST(arg=8, lineno=125)
         290	BINARY_SUBSCR(arg=None, lineno=125)
         292	COMPARE_OP(arg=4, lineno=125)
         294	POP_JUMP_IF_FALSE(arg=156, lineno=125)
         296	LOAD_FAST(arg=6, lineno=126)
         298	LOAD_FAST(arg=8, lineno=126)
         300	BINARY_SUBSCR(arg=None, lineno=126)
         302	LOAD_FAST(arg=7, lineno=126)
         304	LOAD_FAST(arg=8, lineno=126)
         306	STORE_SUBSCR(arg=None, lineno=126)
         308	JUMP_ABSOLUTE(arg=26, lineno=126)
>        310	LOAD_FAST(arg=7, lineno=127)
         312	LOAD_FAST(arg=8, lineno=127)
         314	LOAD_CONST(arg=1, lineno=127)
         316	BINARY_SUBTRACT(arg=None, lineno=127)
         318	BINARY_SUBSCR(arg=None, lineno=127)
         320	LOAD_FAST(arg=6, lineno=127)
         322	LOAD_FAST(arg=8, lineno=127)
         324	LOAD_CONST(arg=1, lineno=127)
         326	BINARY_SUBTRACT(arg=None, lineno=127)
         328	BINARY_SUBSCR(arg=None, lineno=127)
         330	COMPARE_OP(arg=2, lineno=127)
         332	POP_JUMP_IF_FALSE(arg=183, lineno=127)
         334	LOAD_FAST(arg=0, lineno=127)
         336	LOAD_FAST(arg=8, lineno=127)
         338	BINARY_SUBSCR(arg=None, lineno=127)
         340	LOAD_FAST(arg=6, lineno=127)
         342	LOAD_FAST(arg=8, lineno=127)
         344	BINARY_SUBSCR(arg=None, lineno=127)
         346	COMPARE_OP(arg=5, lineno=127)
         348	POP_JUMP_IF_FALSE(arg=183, lineno=127)
         350	LOAD_FAST(arg=6, lineno=128)
         352	LOAD_FAST(arg=8, lineno=128)
         354	BINARY_SUBSCR(arg=None, lineno=128)
         356	LOAD_FAST(arg=7, lineno=128)
         358	LOAD_FAST(arg=8, lineno=128)
         360	STORE_SUBSCR(arg=None, lineno=128)
         362	JUMP_ABSOLUTE(arg=26, lineno=128)
>        364	LOAD_FAST(arg=7, lineno=129)
         366	LOAD_FAST(arg=8, lineno=129)
         368	LOAD_CONST(arg=1, lineno=129)
         370	BINARY_SUBTRACT(arg=None, lineno=129)
         372	BINARY_SUBSCR(arg=None, lineno=129)
         374	LOAD_FAST(arg=6, lineno=129)
         376	LOAD_FAST(arg=8, lineno=129)
         378	LOAD_CONST(arg=1, lineno=129)
         380	BINARY_SUBTRACT(arg=None, lineno=129)
         382	BINARY_SUBSCR(arg=None, lineno=129)
         384	COMPARE_OP(arg=2, lineno=129)
         386	POP_JUMP_IF_FALSE(arg=210, lineno=129)
         388	LOAD_FAST(arg=0, lineno=129)
         390	LOAD_FAST(arg=8, lineno=129)
         392	BINARY_SUBSCR(arg=None, lineno=129)
         394	LOAD_FAST(arg=6, lineno=129)
         396	LOAD_FAST(arg=8, lineno=129)
         398	BINARY_SUBSCR(arg=None, lineno=129)
         400	COMPARE_OP(arg=0, lineno=129)
         402	POP_JUMP_IF_FALSE(arg=210, lineno=129)
         404	LOAD_FAST(arg=5, lineno=130)
         406	LOAD_FAST(arg=8, lineno=130)
         408	BINARY_SUBSCR(arg=None, lineno=130)
         410	LOAD_FAST(arg=7, lineno=130)
         412	LOAD_FAST(arg=8, lineno=130)
         414	STORE_SUBSCR(arg=None, lineno=130)
         416	JUMP_ABSOLUTE(arg=26, lineno=130)
>        418	LOAD_CONST(arg=2, lineno=132)
         420	LOAD_FAST(arg=7, lineno=132)
         422	LOAD_FAST(arg=8, lineno=132)
         424	STORE_SUBSCR(arg=None, lineno=132)
         426	JUMP_ABSOLUTE(arg=26, lineno=132)
>        428	LOAD_FAST(arg=7, lineno=134)
         430	RETURN_VALUE(arg=None, lineno=134)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=99)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=106)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=106)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=106)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$close4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=STORE_FAST(arg=4, lineno=106)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$6call_function.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=LOAD_METHOD(arg=2, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$10load_global.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=14, inst=LOAD_FAST(arg=4, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$12load_method.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=16, inst=CALL_METHOD(arg=1, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$12load_method.4', '$length14.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=18, inst=STORE_FAST(arg=5, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$16call_method.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=20, inst=LOAD_GLOBAL(arg=1, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=22, inst=LOAD_METHOD(arg=2, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$20load_global.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=24, inst=LOAD_FAST(arg=4, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$22load_method.8']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=26, inst=CALL_METHOD(arg=1, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$22load_method.8', '$length24.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=28, inst=STORE_FAST(arg=6, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$26call_method.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=30, inst=LOAD_GLOBAL(arg=1, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=32, inst=LOAD_METHOD(arg=2, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$30load_global.11']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=34, inst=LOAD_FAST(arg=4, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$32load_method.12']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=36, inst=CALL_METHOD(arg=1, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$32load_method.12', '$length34.13']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=38, inst=STORE_FAST(arg=7, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$36call_method.14']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=40, inst=LOAD_GLOBAL(arg=3, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=42, inst=LOAD_FAST(arg=3, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$40load_global.15']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=44, inst=LOAD_FAST(arg=4, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$40load_global.15', '$n42.16']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=46, inst=CALL_FUNCTION(arg=2, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$40load_global.15', '$n42.16', '$length44.17']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=48, inst=GET_ITER(arg=None, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$46call_function.18']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$48get_iter.19',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi50.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=50 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=50, inst=FOR_ITER(arg=188, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi50.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=428, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=('$phi50.0', '$50for_iter.2'), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=428 nstack_initial=0), State(pc_initial=52 nstack_initial=2)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=428 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=428, inst=LOAD_FAST(arg=7, lineno=134)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=430, inst=RETURN_VALUE(arg=None, lineno=134)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$supertrend428.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=52 nstack_initial=2)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi52.0', '$phi52.1']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=52 nstack_initial=2)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=52, inst=STORE_FAST(arg=8, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$phi52.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=54, inst=LOAD_FAST(arg=1, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=56, inst=LOAD_FAST(arg=8, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$basic_ub54.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=58, inst=BINARY_SUBSCR(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$basic_ub54.2', '$i56.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=60, inst=LOAD_FAST(arg=5, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=62, inst=LOAD_FAST(arg=8, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$final_ub60.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$final_ub60.5', '$i62.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=66, inst=BINARY_SUBTRACT(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$final_ub60.5', '$i62.6', '$const64.7.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=68, inst=BINARY_SUBSCR(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$final_ub60.5', '$66binary_subtract.8']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=70, inst=COMPARE_OP(arg=0, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$68binary_subscr.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=72, inst=POP_JUMP_IF_TRUE(arg=50, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$70compare_op.10']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=74, stack=('$phi52.0',), blockstack=(), npush=0), Edge(pc=98, stack=('$phi52.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=74 nstack_initial=1), State(pc_initial=98 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi74.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=74 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=74, inst=LOAD_FAST(arg=0, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=76, inst=LOAD_FAST(arg=8, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$close74.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$close74.1', '$i76.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=80, inst=BINARY_SUBTRACT(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$close74.1', '$i76.2', '$const78.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$close74.1', '$80binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=84, inst=LOAD_FAST(arg=5, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=86, inst=LOAD_FAST(arg=8, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$final_ub84.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=88, inst=LOAD_CONST(arg=1, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$final_ub84.6', '$i86.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=90, inst=BINARY_SUBTRACT(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$final_ub84.6', '$i86.7', '$const88.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=92, inst=BINARY_SUBSCR(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$final_ub84.6', '$90binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=94, inst=COMPARE_OP(arg=4, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$92binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=96, inst=POP_JUMP_IF_FALSE(arg=57, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$94compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=98, stack=('$phi74.0',), blockstack=(), npush=0), Edge(pc=112, stack=('$phi74.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=98 nstack_initial=1), State(pc_initial=98 nstack_initial=1), State(pc_initial=112 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi98.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=98 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=98, inst=LOAD_FAST(arg=1, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=100, inst=LOAD_FAST(arg=8, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$basic_ub98.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=102, inst=BINARY_SUBSCR(arg=None, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$basic_ub98.1', '$i100.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=104, inst=LOAD_FAST(arg=5, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$102binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=106, inst=LOAD_FAST(arg=8, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$102binary_subscr.3', '$final_ub104.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=108, inst=STORE_SUBSCR(arg=None, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$102binary_subscr.3', '$final_ub104.4', '$i106.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=110, inst=JUMP_FORWARD(arg=8, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=128, stack=('$phi98.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=98 nstack_initial=1), State(pc_initial=112 nstack_initial=1), State(pc_initial=128 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=112 nstack_initial=1), State(pc_initial=128 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi112.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=112 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=112, inst=LOAD_FAST(arg=5, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=114, inst=LOAD_FAST(arg=8, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$final_ub112.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=116, inst=LOAD_CONST(arg=1, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$final_ub112.1', '$i114.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=118, inst=BINARY_SUBTRACT(arg=None, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$final_ub112.1', '$i114.2', '$const116.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=120, inst=BINARY_SUBSCR(arg=None, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$final_ub112.1', '$118binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=122, inst=LOAD_FAST(arg=5, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$120binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=124, inst=LOAD_FAST(arg=8, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$120binary_subscr.5', '$final_ub122.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=126, inst=STORE_SUBSCR(arg=None, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$120binary_subscr.5', '$final_ub122.6', '$i124.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=128, stack=('$phi112.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=128 nstack_initial=1), State(pc_initial=128 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi128.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=128 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=128, inst=LOAD_FAST(arg=2, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=130, inst=LOAD_FAST(arg=8, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$basic_lb128.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=132, inst=BINARY_SUBSCR(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$basic_lb128.1', '$i130.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=134, inst=LOAD_FAST(arg=6, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=136, inst=LOAD_FAST(arg=8, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$final_lb134.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=138, inst=LOAD_CONST(arg=1, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$final_lb134.4', '$i136.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=140, inst=BINARY_SUBTRACT(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$final_lb134.4', '$i136.5', '$const138.6.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=142, inst=BINARY_SUBSCR(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$final_lb134.4', '$140binary_subtract.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=144, inst=COMPARE_OP(arg=4, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$142binary_subscr.8']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=146, inst=POP_JUMP_IF_TRUE(arg=87, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$144compare_op.9']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=148, stack=('$phi128.0',), blockstack=(), npush=0), Edge(pc=172, stack=('$phi128.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=128 nstack_initial=1), State(pc_initial=148 nstack_initial=1), State(pc_initial=172 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=148 nstack_initial=1), State(pc_initial=172 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi148.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=148 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=150, inst=LOAD_FAST(arg=8, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$close148.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=152, inst=LOAD_CONST(arg=1, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$close148.1', '$i150.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=154, inst=BINARY_SUBTRACT(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$close148.1', '$i150.2', '$const152.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=156, inst=BINARY_SUBSCR(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$close148.1', '$154binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=158, inst=LOAD_FAST(arg=6, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=160, inst=LOAD_FAST(arg=8, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$final_lb158.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=162, inst=LOAD_CONST(arg=1, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$final_lb158.6', '$i160.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=164, inst=BINARY_SUBTRACT(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$final_lb158.6', '$i160.7', '$const162.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=166, inst=BINARY_SUBSCR(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$final_lb158.6', '$164binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=168, inst=COMPARE_OP(arg=0, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$166binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=170, inst=POP_JUMP_IF_FALSE(arg=94, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$168compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=172, stack=('$phi148.0',), blockstack=(), npush=0), Edge(pc=186, stack=('$phi148.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=172 nstack_initial=1), State(pc_initial=172 nstack_initial=1), State(pc_initial=186 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi172.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=172 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=172, inst=LOAD_FAST(arg=2, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=174, inst=LOAD_FAST(arg=8, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$basic_lb172.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=176, inst=BINARY_SUBSCR(arg=None, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$basic_lb172.1', '$i174.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=178, inst=LOAD_FAST(arg=6, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$176binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=180, inst=LOAD_FAST(arg=8, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$176binary_subscr.3', '$final_lb178.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=182, inst=STORE_SUBSCR(arg=None, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$176binary_subscr.3', '$final_lb178.4', '$i180.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=184, inst=JUMP_FORWARD(arg=8, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=202, stack=('$phi172.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=172 nstack_initial=1), State(pc_initial=186 nstack_initial=1), State(pc_initial=202 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=186 nstack_initial=1), State(pc_initial=202 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi186.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=186 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=186, inst=LOAD_FAST(arg=6, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=188, inst=LOAD_FAST(arg=8, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$final_lb186.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=190, inst=LOAD_CONST(arg=1, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$final_lb186.1', '$i188.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=192, inst=BINARY_SUBTRACT(arg=None, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$final_lb186.1', '$i188.2', '$const190.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=194, inst=BINARY_SUBSCR(arg=None, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$final_lb186.1', '$192binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=196, inst=LOAD_FAST(arg=6, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$194binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=198, inst=LOAD_FAST(arg=8, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$194binary_subscr.5', '$final_lb196.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=200, inst=STORE_SUBSCR(arg=None, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$194binary_subscr.5', '$final_lb196.6', '$i198.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=202, stack=('$phi186.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=202 nstack_initial=1), State(pc_initial=202 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi202.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=202 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=202, inst=LOAD_FAST(arg=7, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=204, inst=LOAD_FAST(arg=8, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$supertrend202.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=206, inst=LOAD_CONST(arg=1, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$supertrend202.1', '$i204.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=208, inst=BINARY_SUBTRACT(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$supertrend202.1', '$i204.2', '$const206.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=210, inst=BINARY_SUBSCR(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$supertrend202.1', '$208binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=212, inst=LOAD_FAST(arg=5, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=214, inst=LOAD_FAST(arg=8, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$final_ub212.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=216, inst=LOAD_CONST(arg=1, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$final_ub212.6', '$i214.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=218, inst=BINARY_SUBTRACT(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$final_ub212.6', '$i214.7', '$const216.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=220, inst=BINARY_SUBSCR(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$final_ub212.6', '$218binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=222, inst=COMPARE_OP(arg=2, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$220binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=224, inst=POP_JUMP_IF_FALSE(arg=129, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$222compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=226, stack=('$phi202.0',), blockstack=(), npush=0), Edge(pc=256, stack=('$phi202.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=202 nstack_initial=1), State(pc_initial=226 nstack_initial=1), State(pc_initial=256 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=226 nstack_initial=1), State(pc_initial=256 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi226.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=226 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=226, inst=LOAD_FAST(arg=0, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=228, inst=LOAD_FAST(arg=8, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$close226.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=230, inst=BINARY_SUBSCR(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$close226.1', '$i228.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=232, inst=LOAD_FAST(arg=5, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$230binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=234, inst=LOAD_FAST(arg=8, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$230binary_subscr.3', '$final_ub232.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=236, inst=BINARY_SUBSCR(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$230binary_subscr.3', '$final_ub232.4', '$i234.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=238, inst=COMPARE_OP(arg=1, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$230binary_subscr.3', '$236binary_subscr.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=240, inst=POP_JUMP_IF_FALSE(arg=129, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$238compare_op.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=242, stack=('$phi226.0',), blockstack=(), npush=0), Edge(pc=256, stack=('$phi226.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=256 nstack_initial=1), State(pc_initial=242 nstack_initial=1), State(pc_initial=256 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi256.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=256 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=256, inst=LOAD_FAST(arg=7, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=258, inst=LOAD_FAST(arg=8, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$supertrend256.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=260, inst=LOAD_CONST(arg=1, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$supertrend256.1', '$i258.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=262, inst=BINARY_SUBTRACT(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$supertrend256.1', '$i258.2', '$const260.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=264, inst=BINARY_SUBSCR(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$supertrend256.1', '$262binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=266, inst=LOAD_FAST(arg=5, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=268, inst=LOAD_FAST(arg=8, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$final_ub266.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=270, inst=LOAD_CONST(arg=1, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$final_ub266.6', '$i268.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=272, inst=BINARY_SUBTRACT(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$final_ub266.6', '$i268.7', '$const270.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=274, inst=BINARY_SUBSCR(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$final_ub266.6', '$272binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=276, inst=COMPARE_OP(arg=2, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$274binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=278, inst=POP_JUMP_IF_FALSE(arg=156, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$276compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=280, stack=('$phi256.0',), blockstack=(), npush=0), Edge(pc=310, stack=('$phi256.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=242 nstack_initial=1), State(pc_initial=256 nstack_initial=1), State(pc_initial=280 nstack_initial=1), State(pc_initial=310 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi242.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=242 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=242, inst=LOAD_FAST(arg=5, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=244, inst=LOAD_FAST(arg=8, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$final_ub242.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=246, inst=BINARY_SUBSCR(arg=None, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$final_ub242.1', '$i244.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=248, inst=LOAD_FAST(arg=7, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$246binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=250, inst=LOAD_FAST(arg=8, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$246binary_subscr.3', '$supertrend248.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=252, inst=STORE_SUBSCR(arg=None, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$246binary_subscr.3', '$supertrend248.4', '$i250.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=254, inst=JUMP_ABSOLUTE(arg=26, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi242.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=256 nstack_initial=1), State(pc_initial=280 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=280 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi280.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=280 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=280, inst=LOAD_FAST(arg=0, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=282, inst=LOAD_FAST(arg=8, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$close280.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=284, inst=BINARY_SUBSCR(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$close280.1', '$i282.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=286, inst=LOAD_FAST(arg=5, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$284binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=288, inst=LOAD_FAST(arg=8, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$284binary_subscr.3', '$final_ub286.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=290, inst=BINARY_SUBSCR(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$284binary_subscr.3', '$final_ub286.4', '$i288.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=292, inst=COMPARE_OP(arg=4, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$284binary_subscr.3', '$290binary_subscr.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=294, inst=POP_JUMP_IF_FALSE(arg=156, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$292compare_op.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=296, stack=('$phi280.0',), blockstack=(), npush=0), Edge(pc=310, stack=('$phi280.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=310 nstack_initial=1), State(pc_initial=50 nstack_initial=1), State(pc_initial=296 nstack_initial=1), State(pc_initial=310 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi310.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=310 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=310, inst=LOAD_FAST(arg=7, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=312, inst=LOAD_FAST(arg=8, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$supertrend310.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=314, inst=LOAD_CONST(arg=1, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$supertrend310.1', '$i312.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=316, inst=BINARY_SUBTRACT(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$supertrend310.1', '$i312.2', '$const314.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=318, inst=BINARY_SUBSCR(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$supertrend310.1', '$316binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=320, inst=LOAD_FAST(arg=6, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=322, inst=LOAD_FAST(arg=8, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$final_lb320.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=324, inst=LOAD_CONST(arg=1, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$final_lb320.6', '$i322.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=326, inst=BINARY_SUBTRACT(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$final_lb320.6', '$i322.7', '$const324.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=328, inst=BINARY_SUBSCR(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$final_lb320.6', '$326binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=330, inst=COMPARE_OP(arg=2, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$328binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=332, inst=POP_JUMP_IF_FALSE(arg=183, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$330compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=334, stack=('$phi310.0',), blockstack=(), npush=0), Edge(pc=364, stack=('$phi310.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=296 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=334 nstack_initial=1), State(pc_initial=364 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=296 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=334 nstack_initial=1), State(pc_initial=364 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi296.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=296 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=296, inst=LOAD_FAST(arg=6, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=298, inst=LOAD_FAST(arg=8, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$final_lb296.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=300, inst=BINARY_SUBSCR(arg=None, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$final_lb296.1', '$i298.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=302, inst=LOAD_FAST(arg=7, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$300binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=304, inst=LOAD_FAST(arg=8, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$300binary_subscr.3', '$supertrend302.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=306, inst=STORE_SUBSCR(arg=None, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$300binary_subscr.3', '$supertrend302.4', '$i304.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=308, inst=JUMP_ABSOLUTE(arg=26, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi296.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=310 nstack_initial=1), State(pc_initial=334 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=334 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi334.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=334 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=334, inst=LOAD_FAST(arg=0, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=336, inst=LOAD_FAST(arg=8, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$close334.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=338, inst=BINARY_SUBSCR(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$close334.1', '$i336.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=340, inst=LOAD_FAST(arg=6, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$338binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=342, inst=LOAD_FAST(arg=8, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$338binary_subscr.3', '$final_lb340.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=344, inst=BINARY_SUBSCR(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$338binary_subscr.3', '$final_lb340.4', '$i342.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=346, inst=COMPARE_OP(arg=5, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$338binary_subscr.3', '$344binary_subscr.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=348, inst=POP_JUMP_IF_FALSE(arg=183, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$346compare_op.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=350, stack=('$phi334.0',), blockstack=(), npush=0), Edge(pc=364, stack=('$phi334.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=364 nstack_initial=1), State(pc_initial=50 nstack_initial=1), State(pc_initial=350 nstack_initial=1), State(pc_initial=364 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi364.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=364 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=364, inst=LOAD_FAST(arg=7, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=366, inst=LOAD_FAST(arg=8, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$supertrend364.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=368, inst=LOAD_CONST(arg=1, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$supertrend364.1', '$i366.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=370, inst=BINARY_SUBTRACT(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$supertrend364.1', '$i366.2', '$const368.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=372, inst=BINARY_SUBSCR(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$supertrend364.1', '$370binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=374, inst=LOAD_FAST(arg=6, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=376, inst=LOAD_FAST(arg=8, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$final_lb374.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=378, inst=LOAD_CONST(arg=1, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$final_lb374.6', '$i376.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=380, inst=BINARY_SUBTRACT(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$final_lb374.6', '$i376.7', '$const378.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=382, inst=BINARY_SUBSCR(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$final_lb374.6', '$380binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=384, inst=COMPARE_OP(arg=2, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$382binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=386, inst=POP_JUMP_IF_FALSE(arg=210, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$384compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=388, stack=('$phi364.0',), blockstack=(), npush=0), Edge(pc=418, stack=('$phi364.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=350 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=388 nstack_initial=1), State(pc_initial=418 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=350 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=388 nstack_initial=1), State(pc_initial=418 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi350.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=350 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=350, inst=LOAD_FAST(arg=6, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=352, inst=LOAD_FAST(arg=8, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$final_lb350.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=354, inst=BINARY_SUBSCR(arg=None, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$final_lb350.1', '$i352.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=356, inst=LOAD_FAST(arg=7, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$354binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=358, inst=LOAD_FAST(arg=8, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$354binary_subscr.3', '$supertrend356.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=360, inst=STORE_SUBSCR(arg=None, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$354binary_subscr.3', '$supertrend356.4', '$i358.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=362, inst=JUMP_ABSOLUTE(arg=26, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi350.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=364 nstack_initial=1), State(pc_initial=388 nstack_initial=1), State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=388 nstack_initial=1), State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi388.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=388 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=388, inst=LOAD_FAST(arg=0, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=390, inst=LOAD_FAST(arg=8, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$close388.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=392, inst=BINARY_SUBSCR(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$close388.1', '$i390.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=394, inst=LOAD_FAST(arg=6, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$392binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=396, inst=LOAD_FAST(arg=8, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$392binary_subscr.3', '$final_lb394.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=398, inst=BINARY_SUBSCR(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$392binary_subscr.3', '$final_lb394.4', '$i396.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=400, inst=COMPARE_OP(arg=0, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$392binary_subscr.3', '$398binary_subscr.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=402, inst=POP_JUMP_IF_FALSE(arg=210, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$400compare_op.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=404, stack=('$phi388.0',), blockstack=(), npush=0), Edge(pc=418, stack=('$phi388.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1), State(pc_initial=404 nstack_initial=1), State(pc_initial=418 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi418.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=418 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=418, inst=LOAD_CONST(arg=2, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=420, inst=LOAD_FAST(arg=7, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0', '$const418.1.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=422, inst=LOAD_FAST(arg=8, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0', '$const418.1.2', '$supertrend420.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=424, inst=STORE_SUBSCR(arg=None, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0', '$const418.1.2', '$supertrend420.2', '$i422.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=426, inst=JUMP_ABSOLUTE(arg=26, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi418.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=404 nstack_initial=1), State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=404 nstack_initial=1), State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi404.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=404 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=404, inst=LOAD_FAST(arg=5, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=406, inst=LOAD_FAST(arg=8, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$final_ub404.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=408, inst=BINARY_SUBSCR(arg=None, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$final_ub404.1', '$i406.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=410, inst=LOAD_FAST(arg=7, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$408binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=412, inst=LOAD_FAST(arg=8, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$408binary_subscr.3', '$supertrend410.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=414, inst=STORE_SUBSCR(arg=None, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$408binary_subscr.3', '$supertrend410.4', '$i412.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=416, inst=JUMP_ABSOLUTE(arg=26, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi404.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): {'$phi50.0'},
             State(pc_initial=52 nstack_initial=2): {'$phi52.1'},
             State(pc_initial=74 nstack_initial=1): set(),
             State(pc_initial=98 nstack_initial=1): set(),
             State(pc_initial=112 nstack_initial=1): set(),
             State(pc_initial=128 nstack_initial=1): set(),
             State(pc_initial=148 nstack_initial=1): set(),
             State(pc_initial=172 nstack_initial=1): set(),
             State(pc_initial=186 nstack_initial=1): set(),
             State(pc_initial=202 nstack_initial=1): set(),
             State(pc_initial=226 nstack_initial=1): set(),
             State(pc_initial=242 nstack_initial=1): set(),
             State(pc_initial=256 nstack_initial=1): set(),
             State(pc_initial=280 nstack_initial=1): set(),
             State(pc_initial=296 nstack_initial=1): set(),
             State(pc_initial=310 nstack_initial=1): set(),
             State(pc_initial=334 nstack_initial=1): set(),
             State(pc_initial=350 nstack_initial=1): set(),
             State(pc_initial=364 nstack_initial=1): set(),
             State(pc_initial=388 nstack_initial=1): set(),
             State(pc_initial=404 nstack_initial=1): set(),
             State(pc_initial=418 nstack_initial=1): set(),
             State(pc_initial=428 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {'$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi52.1': State(pc_initial=50 nstack_initial=1)}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi128.0': {('$phi112.0',
                            State(pc_initial=112 nstack_initial=1)),
                           ('$phi98.0', State(pc_initial=98 nstack_initial=1))},
             '$phi148.0': {('$phi128.0',
                            State(pc_initial=128 nstack_initial=1))},
             '$phi172.0': {('$phi128.0',
                            State(pc_initial=128 nstack_initial=1)),
                           ('$phi148.0',
                            State(pc_initial=148 nstack_initial=1))},
             '$phi186.0': {('$phi148.0',
                            State(pc_initial=148 nstack_initial=1))},
             '$phi202.0': {('$phi172.0',
                            State(pc_initial=172 nstack_initial=1)),
                           ('$phi186.0',
                            State(pc_initial=186 nstack_initial=1))},
             '$phi226.0': {('$phi202.0',
                            State(pc_initial=202 nstack_initial=1))},
             '$phi242.0': {('$phi226.0',
                            State(pc_initial=226 nstack_initial=1))},
             '$phi256.0': {('$phi202.0',
                            State(pc_initial=202 nstack_initial=1)),
                           ('$phi226.0',
                            State(pc_initial=226 nstack_initial=1))},
             '$phi280.0': {('$phi256.0',
                            State(pc_initial=256 nstack_initial=1))},
             '$phi296.0': {('$phi280.0',
                            State(pc_initial=280 nstack_initial=1))},
             '$phi310.0': {('$phi256.0',
                            State(pc_initial=256 nstack_initial=1)),
                           ('$phi280.0',
                            State(pc_initial=280 nstack_initial=1))},
             '$phi334.0': {('$phi310.0',
                            State(pc_initial=310 nstack_initial=1))},
             '$phi350.0': {('$phi334.0',
                            State(pc_initial=334 nstack_initial=1))},
             '$phi364.0': {('$phi310.0',
                            State(pc_initial=310 nstack_initial=1)),
                           ('$phi334.0',
                            State(pc_initial=334 nstack_initial=1))},
             '$phi388.0': {('$phi364.0',
                            State(pc_initial=364 nstack_initial=1))},
             '$phi404.0': {('$phi388.0',
                            State(pc_initial=388 nstack_initial=1))},
             '$phi418.0': {('$phi364.0',
                            State(pc_initial=364 nstack_initial=1)),
                           ('$phi388.0',
                            State(pc_initial=388 nstack_initial=1))},
             '$phi50.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi242.0', State(pc_initial=242 nstack_initial=1)),
                          ('$phi296.0', State(pc_initial=296 nstack_initial=1)),
                          ('$phi350.0', State(pc_initial=350 nstack_initial=1)),
                          ('$phi404.0', State(pc_initial=404 nstack_initial=1)),
                          ('$phi418.0',
                           State(pc_initial=418 nstack_initial=1))},
             '$phi52.0': {('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))},
             '$phi74.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi98.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))}})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi128.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi148.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi172.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi186.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi202.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi226.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi242.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi256.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi280.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi296.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi310.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi334.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi350.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi364.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi388.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi404.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi418.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi50.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi52.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))},
             '$phi74.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi98.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))}})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi128.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi148.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi172.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi186.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi202.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi226.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi242.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi256.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi280.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi296.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi310.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi334.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi350.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi364.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi388.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi404.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi418.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))},
             '$phi74.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))}})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi128.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi148.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi172.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi186.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi202.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi226.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi242.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi256.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi280.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi296.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi310.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi334.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi350.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi364.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi388.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi404.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi418.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))},
             '$phi74.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))}})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {'$phi50.0': {('$48get_iter.19', State(pc_initial=0 nstack_initial=0))},
 '$phi52.1': {('$50for_iter.2', State(pc_initial=50 nstack_initial=1))}}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi50.0': '$48get_iter.19'},
             State(pc_initial=50 nstack_initial=1): {'$phi52.1': '$50for_iter.2'}})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$close4.1'}), (6, {'func': '$2load_global.0', 'args': ['$close4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_global.3'}), (12, {'item': '$10load_global.3', 'res': '$12load_method.4'}), (14, {'res': '$length14.5'}), (16, {'func': '$12load_method.4', 'args': ['$length14.5'], 'res': '$16call_method.6'}), (18, {'value': '$16call_method.6'}), (20, {'res': '$20load_global.7'}), (22, {'item': '$20load_global.7', 'res': '$22load_method.8'}), (24, {'res': '$length24.9'}), (26, {'func': '$22load_method.8', 'args': ['$length24.9'], 'res': '$26call_method.10'}), (28, {'value': '$26call_method.10'}), (30, {'res': '$30load_global.11'}), (32, {'item': '$30load_global.11', 'res': '$32load_method.12'}), (34, {'res': '$length34.13'}), (36, {'func': '$32load_method.12', 'args': ['$length34.13'], 'res': '$36call_method.14'}), (38, {'value': '$36call_method.14'}), (40, {'res': '$40load_global.15'}), (42, {'res': '$n42.16'}), (44, {'res': '$length44.17'}), (46, {'func': '$40load_global.15', 'args': ['$n42.16', '$length44.17'], 'res': '$46call_function.18'}), (48, {'value': '$46call_function.18', 'res': '$48get_iter.19'})), outgoing_phis={'$phi50.0': '$48get_iter.19'}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$48get_iter.19',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((50, {'iterator': '$phi50.0', 'pair': '$50for_iter.1', 'indval': '$50for_iter.2', 'pred': '$50for_iter.3'}),), outgoing_phis={'$phi52.1': '$50for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={428: (), 52: ('$phi50.0', '$50for_iter.2')})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=52 nstack_initial=2):
AdaptBlockInfo(insts=((52, {'value': '$phi52.1'}), (54, {'res': '$basic_ub54.2'}), (56, {'res': '$i56.3'}), (58, {'index': '$i56.3', 'target': '$basic_ub54.2', 'res': '$58binary_subscr.4'}), (60, {'res': '$final_ub60.5'}), (62, {'res': '$i62.6'}), (64, {'res': '$const64.7.1'}), (66, {'lhs': '$i62.6', 'rhs': '$const64.7.1', 'res': '$66binary_subtract.8'}), (68, {'index': '$66binary_subtract.8', 'target': '$final_ub60.5', 'res': '$68binary_subscr.9'}), (70, {'lhs': '$58binary_subscr.4', 'rhs': '$68binary_subscr.9', 'res': '$70compare_op.10'}), (72, {'pred': '$70compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ('$phi52.0',), 98: ('$phi52.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=74 nstack_initial=1):
AdaptBlockInfo(insts=((74, {'res': '$close74.1'}), (76, {'res': '$i76.2'}), (78, {'res': '$const78.3.1'}), (80, {'lhs': '$i76.2', 'rhs': '$const78.3.1', 'res': '$80binary_subtract.4'}), (82, {'index': '$80binary_subtract.4', 'target': '$close74.1', 'res': '$82binary_subscr.5'}), (84, {'res': '$final_ub84.6'}), (86, {'res': '$i86.7'}), (88, {'res': '$const88.8.1'}), (90, {'lhs': '$i86.7', 'rhs': '$const88.8.1', 'res': '$90binary_subtract.9'}), (92, {'index': '$90binary_subtract.9', 'target': '$final_ub84.6', 'res': '$92binary_subscr.10'}), (94, {'lhs': '$82binary_subscr.5', 'rhs': '$92binary_subscr.10', 'res': '$94compare_op.11'}), (96, {'pred': '$94compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: ('$phi74.0',), 112: ('$phi74.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=98 nstack_initial=1):
AdaptBlockInfo(insts=((98, {'res': '$basic_ub98.1'}), (100, {'res': '$i100.2'}), (102, {'index': '$i100.2', 'target': '$basic_ub98.1', 'res': '$102binary_subscr.3'}), (104, {'res': '$final_ub104.4'}), (106, {'res': '$i106.5'}), (108, {'target': '$final_ub104.4', 'index': '$i106.5', 'value': '$102binary_subscr.3'}), (110, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={128: ('$phi98.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=112 nstack_initial=1):
AdaptBlockInfo(insts=((112, {'res': '$final_ub112.1'}), (114, {'res': '$i114.2'}), (116, {'res': '$const116.3.1'}), (118, {'lhs': '$i114.2', 'rhs': '$const116.3.1', 'res': '$118binary_subtract.4'}), (120, {'index': '$118binary_subtract.4', 'target': '$final_ub112.1', 'res': '$120binary_subscr.5'}), (122, {'res': '$final_ub122.6'}), (124, {'res': '$i124.7'}), (126, {'target': '$final_ub122.6', 'index': '$i124.7', 'value': '$120binary_subscr.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={128: ('$phi112.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=128 nstack_initial=1):
AdaptBlockInfo(insts=((128, {'res': '$basic_lb128.1'}), (130, {'res': '$i130.2'}), (132, {'index': '$i130.2', 'target': '$basic_lb128.1', 'res': '$132binary_subscr.3'}), (134, {'res': '$final_lb134.4'}), (136, {'res': '$i136.5'}), (138, {'res': '$const138.6.1'}), (140, {'lhs': '$i136.5', 'rhs': '$const138.6.1', 'res': '$140binary_subtract.7'}), (142, {'index': '$140binary_subtract.7', 'target': '$final_lb134.4', 'res': '$142binary_subscr.8'}), (144, {'lhs': '$132binary_subscr.3', 'rhs': '$142binary_subscr.8', 'res': '$144compare_op.9'}), (146, {'pred': '$144compare_op.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={148: ('$phi128.0',), 172: ('$phi128.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=148 nstack_initial=1):
AdaptBlockInfo(insts=((148, {'res': '$close148.1'}), (150, {'res': '$i150.2'}), (152, {'res': '$const152.3.1'}), (154, {'lhs': '$i150.2', 'rhs': '$const152.3.1', 'res': '$154binary_subtract.4'}), (156, {'index': '$154binary_subtract.4', 'target': '$close148.1', 'res': '$156binary_subscr.5'}), (158, {'res': '$final_lb158.6'}), (160, {'res': '$i160.7'}), (162, {'res': '$const162.8.1'}), (164, {'lhs': '$i160.7', 'rhs': '$const162.8.1', 'res': '$164binary_subtract.9'}), (166, {'index': '$164binary_subtract.9', 'target': '$final_lb158.6', 'res': '$166binary_subscr.10'}), (168, {'lhs': '$156binary_subscr.5', 'rhs': '$166binary_subscr.10', 'res': '$168compare_op.11'}), (170, {'pred': '$168compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={172: ('$phi148.0',), 186: ('$phi148.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=172 nstack_initial=1):
AdaptBlockInfo(insts=((172, {'res': '$basic_lb172.1'}), (174, {'res': '$i174.2'}), (176, {'index': '$i174.2', 'target': '$basic_lb172.1', 'res': '$176binary_subscr.3'}), (178, {'res': '$final_lb178.4'}), (180, {'res': '$i180.5'}), (182, {'target': '$final_lb178.4', 'index': '$i180.5', 'value': '$176binary_subscr.3'}), (184, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={202: ('$phi172.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=186 nstack_initial=1):
AdaptBlockInfo(insts=((186, {'res': '$final_lb186.1'}), (188, {'res': '$i188.2'}), (190, {'res': '$const190.3.1'}), (192, {'lhs': '$i188.2', 'rhs': '$const190.3.1', 'res': '$192binary_subtract.4'}), (194, {'index': '$192binary_subtract.4', 'target': '$final_lb186.1', 'res': '$194binary_subscr.5'}), (196, {'res': '$final_lb196.6'}), (198, {'res': '$i198.7'}), (200, {'target': '$final_lb196.6', 'index': '$i198.7', 'value': '$194binary_subscr.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={202: ('$phi186.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=202 nstack_initial=1):
AdaptBlockInfo(insts=((202, {'res': '$supertrend202.1'}), (204, {'res': '$i204.2'}), (206, {'res': '$const206.3.1'}), (208, {'lhs': '$i204.2', 'rhs': '$const206.3.1', 'res': '$208binary_subtract.4'}), (210, {'index': '$208binary_subtract.4', 'target': '$supertrend202.1', 'res': '$210binary_subscr.5'}), (212, {'res': '$final_ub212.6'}), (214, {'res': '$i214.7'}), (216, {'res': '$const216.8.1'}), (218, {'lhs': '$i214.7', 'rhs': '$const216.8.1', 'res': '$218binary_subtract.9'}), (220, {'index': '$218binary_subtract.9', 'target': '$final_ub212.6', 'res': '$220binary_subscr.10'}), (222, {'lhs': '$210binary_subscr.5', 'rhs': '$220binary_subscr.10', 'res': '$222compare_op.11'}), (224, {'pred': '$222compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={226: ('$phi202.0',), 256: ('$phi202.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=226 nstack_initial=1):
AdaptBlockInfo(insts=((226, {'res': '$close226.1'}), (228, {'res': '$i228.2'}), (230, {'index': '$i228.2', 'target': '$close226.1', 'res': '$230binary_subscr.3'}), (232, {'res': '$final_ub232.4'}), (234, {'res': '$i234.5'}), (236, {'index': '$i234.5', 'target': '$final_ub232.4', 'res': '$236binary_subscr.6'}), (238, {'lhs': '$230binary_subscr.3', 'rhs': '$236binary_subscr.6', 'res': '$238compare_op.7'}), (240, {'pred': '$238compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={242: ('$phi226.0',), 256: ('$phi226.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=242 nstack_initial=1):
AdaptBlockInfo(insts=((242, {'res': '$final_ub242.1'}), (244, {'res': '$i244.2'}), (246, {'index': '$i244.2', 'target': '$final_ub242.1', 'res': '$246binary_subscr.3'}), (248, {'res': '$supertrend248.4'}), (250, {'res': '$i250.5'}), (252, {'target': '$supertrend248.4', 'index': '$i250.5', 'value': '$246binary_subscr.3'}), (254, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi242.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=256 nstack_initial=1):
AdaptBlockInfo(insts=((256, {'res': '$supertrend256.1'}), (258, {'res': '$i258.2'}), (260, {'res': '$const260.3.1'}), (262, {'lhs': '$i258.2', 'rhs': '$const260.3.1', 'res': '$262binary_subtract.4'}), (264, {'index': '$262binary_subtract.4', 'target': '$supertrend256.1', 'res': '$264binary_subscr.5'}), (266, {'res': '$final_ub266.6'}), (268, {'res': '$i268.7'}), (270, {'res': '$const270.8.1'}), (272, {'lhs': '$i268.7', 'rhs': '$const270.8.1', 'res': '$272binary_subtract.9'}), (274, {'index': '$272binary_subtract.9', 'target': '$final_ub266.6', 'res': '$274binary_subscr.10'}), (276, {'lhs': '$264binary_subscr.5', 'rhs': '$274binary_subscr.10', 'res': '$276compare_op.11'}), (278, {'pred': '$276compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={280: ('$phi256.0',), 310: ('$phi256.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=280 nstack_initial=1):
AdaptBlockInfo(insts=((280, {'res': '$close280.1'}), (282, {'res': '$i282.2'}), (284, {'index': '$i282.2', 'target': '$close280.1', 'res': '$284binary_subscr.3'}), (286, {'res': '$final_ub286.4'}), (288, {'res': '$i288.5'}), (290, {'index': '$i288.5', 'target': '$final_ub286.4', 'res': '$290binary_subscr.6'}), (292, {'lhs': '$284binary_subscr.3', 'rhs': '$290binary_subscr.6', 'res': '$292compare_op.7'}), (294, {'pred': '$292compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={296: ('$phi280.0',), 310: ('$phi280.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=296 nstack_initial=1):
AdaptBlockInfo(insts=((296, {'res': '$final_lb296.1'}), (298, {'res': '$i298.2'}), (300, {'index': '$i298.2', 'target': '$final_lb296.1', 'res': '$300binary_subscr.3'}), (302, {'res': '$supertrend302.4'}), (304, {'res': '$i304.5'}), (306, {'target': '$supertrend302.4', 'index': '$i304.5', 'value': '$300binary_subscr.3'}), (308, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi296.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=310 nstack_initial=1):
AdaptBlockInfo(insts=((310, {'res': '$supertrend310.1'}), (312, {'res': '$i312.2'}), (314, {'res': '$const314.3.1'}), (316, {'lhs': '$i312.2', 'rhs': '$const314.3.1', 'res': '$316binary_subtract.4'}), (318, {'index': '$316binary_subtract.4', 'target': '$supertrend310.1', 'res': '$318binary_subscr.5'}), (320, {'res': '$final_lb320.6'}), (322, {'res': '$i322.7'}), (324, {'res': '$const324.8.1'}), (326, {'lhs': '$i322.7', 'rhs': '$const324.8.1', 'res': '$326binary_subtract.9'}), (328, {'index': '$326binary_subtract.9', 'target': '$final_lb320.6', 'res': '$328binary_subscr.10'}), (330, {'lhs': '$318binary_subscr.5', 'rhs': '$328binary_subscr.10', 'res': '$330compare_op.11'}), (332, {'pred': '$330compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={334: ('$phi310.0',), 364: ('$phi310.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=334 nstack_initial=1):
AdaptBlockInfo(insts=((334, {'res': '$close334.1'}), (336, {'res': '$i336.2'}), (338, {'index': '$i336.2', 'target': '$close334.1', 'res': '$338binary_subscr.3'}), (340, {'res': '$final_lb340.4'}), (342, {'res': '$i342.5'}), (344, {'index': '$i342.5', 'target': '$final_lb340.4', 'res': '$344binary_subscr.6'}), (346, {'lhs': '$338binary_subscr.3', 'rhs': '$344binary_subscr.6', 'res': '$346compare_op.7'}), (348, {'pred': '$346compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={350: ('$phi334.0',), 364: ('$phi334.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=350 nstack_initial=1):
AdaptBlockInfo(insts=((350, {'res': '$final_lb350.1'}), (352, {'res': '$i352.2'}), (354, {'index': '$i352.2', 'target': '$final_lb350.1', 'res': '$354binary_subscr.3'}), (356, {'res': '$supertrend356.4'}), (358, {'res': '$i358.5'}), (360, {'target': '$supertrend356.4', 'index': '$i358.5', 'value': '$354binary_subscr.3'}), (362, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi350.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=364 nstack_initial=1):
AdaptBlockInfo(insts=((364, {'res': '$supertrend364.1'}), (366, {'res': '$i366.2'}), (368, {'res': '$const368.3.1'}), (370, {'lhs': '$i366.2', 'rhs': '$const368.3.1', 'res': '$370binary_subtract.4'}), (372, {'index': '$370binary_subtract.4', 'target': '$supertrend364.1', 'res': '$372binary_subscr.5'}), (374, {'res': '$final_lb374.6'}), (376, {'res': '$i376.7'}), (378, {'res': '$const378.8.1'}), (380, {'lhs': '$i376.7', 'rhs': '$const378.8.1', 'res': '$380binary_subtract.9'}), (382, {'index': '$380binary_subtract.9', 'target': '$final_lb374.6', 'res': '$382binary_subscr.10'}), (384, {'lhs': '$372binary_subscr.5', 'rhs': '$382binary_subscr.10', 'res': '$384compare_op.11'}), (386, {'pred': '$384compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={388: ('$phi364.0',), 418: ('$phi364.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=388 nstack_initial=1):
AdaptBlockInfo(insts=((388, {'res': '$close388.1'}), (390, {'res': '$i390.2'}), (392, {'index': '$i390.2', 'target': '$close388.1', 'res': '$392binary_subscr.3'}), (394, {'res': '$final_lb394.4'}), (396, {'res': '$i396.5'}), (398, {'index': '$i396.5', 'target': '$final_lb394.4', 'res': '$398binary_subscr.6'}), (400, {'lhs': '$392binary_subscr.3', 'rhs': '$398binary_subscr.6', 'res': '$400compare_op.7'}), (402, {'pred': '$400compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={404: ('$phi388.0',), 418: ('$phi388.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=404 nstack_initial=1):
AdaptBlockInfo(insts=((404, {'res': '$final_ub404.1'}), (406, {'res': '$i406.2'}), (408, {'index': '$i406.2', 'target': '$final_ub404.1', 'res': '$408binary_subscr.3'}), (410, {'res': '$supertrend410.4'}), (412, {'res': '$i412.5'}), (414, {'target': '$supertrend410.4', 'index': '$i412.5', 'value': '$408binary_subscr.3'}), (416, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi404.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=418 nstack_initial=1):
AdaptBlockInfo(insts=((418, {'res': '$const418.1.2'}), (420, {'res': '$supertrend420.2'}), (422, {'res': '$i422.3'}), (424, {'target': '$supertrend420.2', 'index': '$i422.3', 'value': '$const418.1.2'}), (426, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi418.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=428 nstack_initial=0):
AdaptBlockInfo(insts=((428, {'res': '$supertrend428.0'}), (430, {'retval': '$supertrend428.0', 'castval': '$430return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    close = arg(0, name=close)               ['close']
    basic_ub = arg(1, name=basic_ub)         ['basic_ub']
    basic_lb = arg(2, name=basic_lb)         ['basic_lb']
    n = arg(3, name=n)                       ['n']
    $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
    length = call $2load_global.0(close, func=$2load_global.0, args=[Var(close, helper_loops.py:99)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'close', 'length']
    $10load_global.3 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>) ['$10load_global.3']
    $12load_method.4 = getattr(value=$10load_global.3, attr=zeros) ['$10load_global.3', '$12load_method.4']
    final_ub = call $12load_method.4(length, func=$12load_method.4, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_method.4', 'final_ub', 'length']
    $20load_global.7 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.7']
    $22load_method.8 = getattr(value=$20load_global.7, attr=zeros) ['$20load_global.7', '$22load_method.8']
    final_lb = call $22load_method.8(length, func=$22load_method.8, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.8', 'final_lb', 'length']
    $30load_global.11 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>) ['$30load_global.11']
    $32load_method.12 = getattr(value=$30load_global.11, attr=zeros) ['$30load_global.11', '$32load_method.12']
    supertrend = call $32load_method.12(length, func=$32load_method.12, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$32load_method.12', 'length', 'supertrend']
    $40load_global.15 = global(range: <class 'range'>) ['$40load_global.15']
    $46call_function.18 = call $40load_global.15(n, length, func=$40load_global.15, args=[Var(n, helper_loops.py:99), Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_global.15', '$46call_function.18', 'length', 'n']
    $48get_iter.19 = getiter(value=$46call_function.18) ['$46call_function.18', '$48get_iter.19']
    $phi50.0 = $48get_iter.19                ['$48get_iter.19', '$phi50.0']
    jump 50                                  []
label 50:
    $50for_iter.1 = iternext(value=$phi50.0) ['$50for_iter.1', '$phi50.0']
    $50for_iter.2 = pair_first(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.2']
    $50for_iter.3 = pair_second(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.3']
    $phi52.1 = $50for_iter.2                 ['$50for_iter.2', '$phi52.1']
    branch $50for_iter.3, 52, 428            ['$50for_iter.3']
label 52:
    i = $phi52.1                             ['$phi52.1', 'i']
    $58binary_subscr.4 = getitem(value=basic_ub, index=i, fn=<built-in function getitem>) ['$58binary_subscr.4', 'basic_ub', 'i']
    $const64.7.1 = const(int, 1)             ['$const64.7.1']
    $66binary_subtract.8 = i - $const64.7.1  ['$66binary_subtract.8', '$const64.7.1', 'i']
    $68binary_subscr.9 = getitem(value=final_ub, index=$66binary_subtract.8, fn=<built-in function getitem>) ['$66binary_subtract.8', '$68binary_subscr.9', 'final_ub']
    $70compare_op.10 = $58binary_subscr.4 < $68binary_subscr.9 ['$58binary_subscr.4', '$68binary_subscr.9', '$70compare_op.10']
    bool72 = global(bool: <class 'bool'>)    ['bool72']
    $72pred = call bool72($70compare_op.10, func=bool72, args=(Var($70compare_op.10, helper_loops.py:113),), kws=(), vararg=None, varkwarg=None, target=None) ['$70compare_op.10', '$72pred', 'bool72']
    branch $72pred, 98, 74                   ['$72pred']
label 74:
    $const78.3.1 = const(int, 1)             ['$const78.3.1']
    $80binary_subtract.4 = i - $const78.3.1  ['$80binary_subtract.4', '$const78.3.1', 'i']
    $82binary_subscr.5 = getitem(value=close, index=$80binary_subtract.4, fn=<built-in function getitem>) ['$80binary_subtract.4', '$82binary_subscr.5', 'close']
    $const88.8.1 = const(int, 1)             ['$const88.8.1']
    $90binary_subtract.9 = i - $const88.8.1  ['$90binary_subtract.9', '$const88.8.1', 'i']
    $92binary_subscr.10 = getitem(value=final_ub, index=$90binary_subtract.9, fn=<built-in function getitem>) ['$90binary_subtract.9', '$92binary_subscr.10', 'final_ub']
    $94compare_op.11 = $82binary_subscr.5 > $92binary_subscr.10 ['$82binary_subscr.5', '$92binary_subscr.10', '$94compare_op.11']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
    $96pred = call bool96($94compare_op.11, func=bool96, args=(Var($94compare_op.11, helper_loops.py:113),), kws=(), vararg=None, varkwarg=None, target=None) ['$94compare_op.11', '$96pred', 'bool96']
    branch $96pred, 98, 112                  ['$96pred']
label 98:
    $102binary_subscr.3 = getitem(value=basic_ub, index=i, fn=<built-in function getitem>) ['$102binary_subscr.3', 'basic_ub', 'i']
    final_ub[i] = $102binary_subscr.3        ['$102binary_subscr.3', 'final_ub', 'i']
    jump 128                                 []
label 112:
    $const116.3.1 = const(int, 1)            ['$const116.3.1']
    $118binary_subtract.4 = i - $const116.3.1 ['$118binary_subtract.4', '$const116.3.1', 'i']
    $120binary_subscr.5 = getitem(value=final_ub, index=$118binary_subtract.4, fn=<built-in function getitem>) ['$118binary_subtract.4', '$120binary_subscr.5', 'final_ub']
    final_ub[i] = $120binary_subscr.5        ['$120binary_subscr.5', 'final_ub', 'i']
    jump 128                                 []
label 128:
    $132binary_subscr.3 = getitem(value=basic_lb, index=i, fn=<built-in function getitem>) ['$132binary_subscr.3', 'basic_lb', 'i']
    $const138.6.1 = const(int, 1)            ['$const138.6.1']
    $140binary_subtract.7 = i - $const138.6.1 ['$140binary_subtract.7', '$const138.6.1', 'i']
    $142binary_subscr.8 = getitem(value=final_lb, index=$140binary_subtract.7, fn=<built-in function getitem>) ['$140binary_subtract.7', '$142binary_subscr.8', 'final_lb']
    $144compare_op.9 = $132binary_subscr.3 > $142binary_subscr.8 ['$132binary_subscr.3', '$142binary_subscr.8', '$144compare_op.9']
    bool146 = global(bool: <class 'bool'>)   ['bool146']
    $146pred = call bool146($144compare_op.9, func=bool146, args=(Var($144compare_op.9, helper_loops.py:118),), kws=(), vararg=None, varkwarg=None, target=None) ['$144compare_op.9', '$146pred', 'bool146']
    branch $146pred, 172, 148                ['$146pred']
label 148:
    $const152.3.1 = const(int, 1)            ['$const152.3.1']
    $154binary_subtract.4 = i - $const152.3.1 ['$154binary_subtract.4', '$const152.3.1', 'i']
    $156binary_subscr.5 = getitem(value=close, index=$154binary_subtract.4, fn=<built-in function getitem>) ['$154binary_subtract.4', '$156binary_subscr.5', 'close']
    $const162.8.1 = const(int, 1)            ['$const162.8.1']
    $164binary_subtract.9 = i - $const162.8.1 ['$164binary_subtract.9', '$const162.8.1', 'i']
    $166binary_subscr.10 = getitem(value=final_lb, index=$164binary_subtract.9, fn=<built-in function getitem>) ['$164binary_subtract.9', '$166binary_subscr.10', 'final_lb']
    $168compare_op.11 = $156binary_subscr.5 < $166binary_subscr.10 ['$156binary_subscr.5', '$166binary_subscr.10', '$168compare_op.11']
    bool170 = global(bool: <class 'bool'>)   ['bool170']
    $170pred = call bool170($168compare_op.11, func=bool170, args=(Var($168compare_op.11, helper_loops.py:118),), kws=(), vararg=None, varkwarg=None, target=None) ['$168compare_op.11', '$170pred', 'bool170']
    branch $170pred, 172, 186                ['$170pred']
label 172:
    $176binary_subscr.3 = getitem(value=basic_lb, index=i, fn=<built-in function getitem>) ['$176binary_subscr.3', 'basic_lb', 'i']
    final_lb[i] = $176binary_subscr.3        ['$176binary_subscr.3', 'final_lb', 'i']
    jump 202                                 []
label 186:
    $const190.3.1 = const(int, 1)            ['$const190.3.1']
    $192binary_subtract.4 = i - $const190.3.1 ['$192binary_subtract.4', '$const190.3.1', 'i']
    $194binary_subscr.5 = getitem(value=final_lb, index=$192binary_subtract.4, fn=<built-in function getitem>) ['$192binary_subtract.4', '$194binary_subscr.5', 'final_lb']
    final_lb[i] = $194binary_subscr.5        ['$194binary_subscr.5', 'final_lb', 'i']
    jump 202                                 []
label 202:
    $const206.3.1 = const(int, 1)            ['$const206.3.1']
    $208binary_subtract.4 = i - $const206.3.1 ['$208binary_subtract.4', '$const206.3.1', 'i']
    $210binary_subscr.5 = getitem(value=supertrend, index=$208binary_subtract.4, fn=<built-in function getitem>) ['$208binary_subtract.4', '$210binary_subscr.5', 'supertrend']
    $const216.8.1 = const(int, 1)            ['$const216.8.1']
    $218binary_subtract.9 = i - $const216.8.1 ['$218binary_subtract.9', '$const216.8.1', 'i']
    $220binary_subscr.10 = getitem(value=final_ub, index=$218binary_subtract.9, fn=<built-in function getitem>) ['$218binary_subtract.9', '$220binary_subscr.10', 'final_ub']
    $222compare_op.11 = $210binary_subscr.5 == $220binary_subscr.10 ['$210binary_subscr.5', '$220binary_subscr.10', '$222compare_op.11']
    bool224 = global(bool: <class 'bool'>)   ['bool224']
    $224pred = call bool224($222compare_op.11, func=bool224, args=(Var($222compare_op.11, helper_loops.py:123),), kws=(), vararg=None, varkwarg=None, target=None) ['$222compare_op.11', '$224pred', 'bool224']
    branch $224pred, 226, 256                ['$224pred']
label 226:
    $230binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>) ['$230binary_subscr.3', 'close', 'i']
    $236binary_subscr.6 = getitem(value=final_ub, index=i, fn=<built-in function getitem>) ['$236binary_subscr.6', 'final_ub', 'i']
    $238compare_op.7 = $230binary_subscr.3 <= $236binary_subscr.6 ['$230binary_subscr.3', '$236binary_subscr.6', '$238compare_op.7']
    bool240 = global(bool: <class 'bool'>)   ['bool240']
    $240pred = call bool240($238compare_op.7, func=bool240, args=(Var($238compare_op.7, helper_loops.py:123),), kws=(), vararg=None, varkwarg=None, target=None) ['$238compare_op.7', '$240pred', 'bool240']
    branch $240pred, 242, 256                ['$240pred']
label 242:
    $246binary_subscr.3 = getitem(value=final_ub, index=i, fn=<built-in function getitem>) ['$246binary_subscr.3', 'final_ub', 'i']
    supertrend[i] = $246binary_subscr.3      ['$246binary_subscr.3', 'i', 'supertrend']
    jump 50                                  []
label 256:
    $const260.3.1 = const(int, 1)            ['$const260.3.1']
    $262binary_subtract.4 = i - $const260.3.1 ['$262binary_subtract.4', '$const260.3.1', 'i']
    $264binary_subscr.5 = getitem(value=supertrend, index=$262binary_subtract.4, fn=<built-in function getitem>) ['$262binary_subtract.4', '$264binary_subscr.5', 'supertrend']
    $const270.8.1 = const(int, 1)            ['$const270.8.1']
    $272binary_subtract.9 = i - $const270.8.1 ['$272binary_subtract.9', '$const270.8.1', 'i']
    $274binary_subscr.10 = getitem(value=final_ub, index=$272binary_subtract.9, fn=<built-in function getitem>) ['$272binary_subtract.9', '$274binary_subscr.10', 'final_ub']
    $276compare_op.11 = $264binary_subscr.5 == $274binary_subscr.10 ['$264binary_subscr.5', '$274binary_subscr.10', '$276compare_op.11']
    bool278 = global(bool: <class 'bool'>)   ['bool278']
    $278pred = call bool278($276compare_op.11, func=bool278, args=(Var($276compare_op.11, helper_loops.py:125),), kws=(), vararg=None, varkwarg=None, target=None) ['$276compare_op.11', '$278pred', 'bool278']
    branch $278pred, 280, 310                ['$278pred']
label 280:
    $284binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>) ['$284binary_subscr.3', 'close', 'i']
    $290binary_subscr.6 = getitem(value=final_ub, index=i, fn=<built-in function getitem>) ['$290binary_subscr.6', 'final_ub', 'i']
    $292compare_op.7 = $284binary_subscr.3 > $290binary_subscr.6 ['$284binary_subscr.3', '$290binary_subscr.6', '$292compare_op.7']
    bool294 = global(bool: <class 'bool'>)   ['bool294']
    $294pred = call bool294($292compare_op.7, func=bool294, args=(Var($292compare_op.7, helper_loops.py:125),), kws=(), vararg=None, varkwarg=None, target=None) ['$292compare_op.7', '$294pred', 'bool294']
    branch $294pred, 296, 310                ['$294pred']
label 296:
    $300binary_subscr.3 = getitem(value=final_lb, index=i, fn=<built-in function getitem>) ['$300binary_subscr.3', 'final_lb', 'i']
    supertrend[i] = $300binary_subscr.3      ['$300binary_subscr.3', 'i', 'supertrend']
    jump 50                                  []
label 310:
    $const314.3.1 = const(int, 1)            ['$const314.3.1']
    $316binary_subtract.4 = i - $const314.3.1 ['$316binary_subtract.4', '$const314.3.1', 'i']
    $318binary_subscr.5 = getitem(value=supertrend, index=$316binary_subtract.4, fn=<built-in function getitem>) ['$316binary_subtract.4', '$318binary_subscr.5', 'supertrend']
    $const324.8.1 = const(int, 1)            ['$const324.8.1']
    $326binary_subtract.9 = i - $const324.8.1 ['$326binary_subtract.9', '$const324.8.1', 'i']
    $328binary_subscr.10 = getitem(value=final_lb, index=$326binary_subtract.9, fn=<built-in function getitem>) ['$326binary_subtract.9', '$328binary_subscr.10', 'final_lb']
    $330compare_op.11 = $318binary_subscr.5 == $328binary_subscr.10 ['$318binary_subscr.5', '$328binary_subscr.10', '$330compare_op.11']
    bool332 = global(bool: <class 'bool'>)   ['bool332']
    $332pred = call bool332($330compare_op.11, func=bool332, args=(Var($330compare_op.11, helper_loops.py:127),), kws=(), vararg=None, varkwarg=None, target=None) ['$330compare_op.11', '$332pred', 'bool332']
    branch $332pred, 334, 364                ['$332pred']
label 334:
    $338binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>) ['$338binary_subscr.3', 'close', 'i']
    $344binary_subscr.6 = getitem(value=final_lb, index=i, fn=<built-in function getitem>) ['$344binary_subscr.6', 'final_lb', 'i']
    $346compare_op.7 = $338binary_subscr.3 >= $344binary_subscr.6 ['$338binary_subscr.3', '$344binary_subscr.6', '$346compare_op.7']
    bool348 = global(bool: <class 'bool'>)   ['bool348']
    $348pred = call bool348($346compare_op.7, func=bool348, args=(Var($346compare_op.7, helper_loops.py:127),), kws=(), vararg=None, varkwarg=None, target=None) ['$346compare_op.7', '$348pred', 'bool348']
    branch $348pred, 350, 364                ['$348pred']
label 350:
    $354binary_subscr.3 = getitem(value=final_lb, index=i, fn=<built-in function getitem>) ['$354binary_subscr.3', 'final_lb', 'i']
    supertrend[i] = $354binary_subscr.3      ['$354binary_subscr.3', 'i', 'supertrend']
    jump 50                                  []
label 364:
    $const368.3.1 = const(int, 1)            ['$const368.3.1']
    $370binary_subtract.4 = i - $const368.3.1 ['$370binary_subtract.4', '$const368.3.1', 'i']
    $372binary_subscr.5 = getitem(value=supertrend, index=$370binary_subtract.4, fn=<built-in function getitem>) ['$370binary_subtract.4', '$372binary_subscr.5', 'supertrend']
    $const378.8.1 = const(int, 1)            ['$const378.8.1']
    $380binary_subtract.9 = i - $const378.8.1 ['$380binary_subtract.9', '$const378.8.1', 'i']
    $382binary_subscr.10 = getitem(value=final_lb, index=$380binary_subtract.9, fn=<built-in function getitem>) ['$380binary_subtract.9', '$382binary_subscr.10', 'final_lb']
    $384compare_op.11 = $372binary_subscr.5 == $382binary_subscr.10 ['$372binary_subscr.5', '$382binary_subscr.10', '$384compare_op.11']
    bool386 = global(bool: <class 'bool'>)   ['bool386']
    $386pred = call bool386($384compare_op.11, func=bool386, args=(Var($384compare_op.11, helper_loops.py:129),), kws=(), vararg=None, varkwarg=None, target=None) ['$384compare_op.11', '$386pred', 'bool386']
    branch $386pred, 388, 418                ['$386pred']
label 388:
    $392binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>) ['$392binary_subscr.3', 'close', 'i']
    $398binary_subscr.6 = getitem(value=final_lb, index=i, fn=<built-in function getitem>) ['$398binary_subscr.6', 'final_lb', 'i']
    $400compare_op.7 = $392binary_subscr.3 < $398binary_subscr.6 ['$392binary_subscr.3', '$398binary_subscr.6', '$400compare_op.7']
    bool402 = global(bool: <class 'bool'>)   ['bool402']
    $402pred = call bool402($400compare_op.7, func=bool402, args=(Var($400compare_op.7, helper_loops.py:129),), kws=(), vararg=None, varkwarg=None, target=None) ['$400compare_op.7', '$402pred', 'bool402']
    branch $402pred, 404, 418                ['$402pred']
label 404:
    $408binary_subscr.3 = getitem(value=final_ub, index=i, fn=<built-in function getitem>) ['$408binary_subscr.3', 'final_ub', 'i']
    supertrend[i] = $408binary_subscr.3      ['$408binary_subscr.3', 'i', 'supertrend']
    jump 50                                  []
label 418:
    $const418.1.2 = const(float, 0.0)        ['$const418.1.2']
    supertrend[i] = $const418.1.2            ['$const418.1.2', 'i', 'supertrend']
    jump 50                                  []
label 428:
    $430return_value.1 = cast(value=supertrend) ['$430return_value.1', 'supertrend']
    return $430return_value.1                ['$430return_value.1']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7a7110b0fbb0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: close = arg(0, name=close)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: basic_ub = arg(1, name=basic_ub)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: basic_lb = arg(2, name=basic_lb)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: n = arg(3, name=n)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(len: <built-in function len>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: length = call $2load_global.0(close, func=$2load_global.0, args=[Var(close, helper_loops.py:99)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $10load_global.3 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $12load_method.4 = getattr(value=$10load_global.3, attr=zeros)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_ub = call $12load_method.4(length, func=$12load_method.4, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $20load_global.7 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $22load_method.8 = getattr(value=$20load_global.7, attr=zeros)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_lb = call $22load_method.8(length, func=$22load_method.8, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $30load_global.11 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $32load_method.12 = getattr(value=$30load_global.11, attr=zeros)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend = call $32load_method.12(length, func=$32load_method.12, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $40load_global.15 = global(range: <class 'range'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $46call_function.18 = call $40load_global.15(n, length, func=$40load_global.15, args=[Var(n, helper_loops.py:99), Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $48get_iter.19 = getiter(value=$46call_function.18)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $phi50.0 = $48get_iter.19
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 50
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 50
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7a7110b0fbb0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $50for_iter.1 = iternext(value=$phi50.0)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $phi52.1 = $50for_iter.2
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $50for_iter.3, 52, 428
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 52
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7a7110b0fbb0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: i = $phi52.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $58binary_subscr.4 = getitem(value=basic_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const64.7.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $66binary_subtract.8 = i - $const64.7.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $68binary_subscr.9 = getitem(value=final_ub, index=$66binary_subtract.8, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $70compare_op.10 = $58binary_subscr.4 < $68binary_subscr.9
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool72 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $72pred = call bool72($70compare_op.10, func=bool72, args=(Var($70compare_op.10, helper_loops.py:113),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $72pred, 98, 74
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 74
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7a7110b0fbb0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const78.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $80binary_subtract.4 = i - $const78.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $82binary_subscr.5 = getitem(value=close, index=$80binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const88.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $90binary_subtract.9 = i - $const88.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $92binary_subscr.10 = getitem(value=final_ub, index=$90binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $94compare_op.11 = $82binary_subscr.5 > $92binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool96 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $96pred = call bool96($94compare_op.11, func=bool96, args=(Var($94compare_op.11, helper_loops.py:113),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $96pred, 98, 112
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 98
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7a7110b0fbb0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $102binary_subscr.3 = getitem(value=basic_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_ub[i] = $102binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 128
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 112
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7a7110b0fbb0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const116.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $118binary_subtract.4 = i - $const116.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $120binary_subscr.5 = getitem(value=final_ub, index=$118binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_ub[i] = $120binary_subscr.5
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 128
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 128
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7a7110b0fbb0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $132binary_subscr.3 = getitem(value=basic_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const138.6.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $140binary_subtract.7 = i - $const138.6.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $142binary_subscr.8 = getitem(value=final_lb, index=$140binary_subtract.7, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $144compare_op.9 = $132binary_subscr.3 > $142binary_subscr.8
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool146 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $146pred = call bool146($144compare_op.9, func=bool146, args=(Var($144compare_op.9, helper_loops.py:118),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $146pred, 172, 148
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 148
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7a7110b0fbb0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const152.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $154binary_subtract.4 = i - $const152.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $156binary_subscr.5 = getitem(value=close, index=$154binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const162.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $164binary_subtract.9 = i - $const162.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $166binary_subscr.10 = getitem(value=final_lb, index=$164binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $168compare_op.11 = $156binary_subscr.5 < $166binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool170 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $170pred = call bool170($168compare_op.11, func=bool170, args=(Var($168compare_op.11, helper_loops.py:118),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $170pred, 172, 186
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 172
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7a7110b0fbb0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $176binary_subscr.3 = getitem(value=basic_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_lb[i] = $176binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 202
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 186
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7a7110b0fbb0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const190.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $192binary_subtract.4 = i - $const190.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $194binary_subscr.5 = getitem(value=final_lb, index=$192binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_lb[i] = $194binary_subscr.5
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 202
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 202
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7a7110b0fbb0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const206.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $208binary_subtract.4 = i - $const206.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $210binary_subscr.5 = getitem(value=supertrend, index=$208binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const216.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $218binary_subtract.9 = i - $const216.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $220binary_subscr.10 = getitem(value=final_ub, index=$218binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $222compare_op.11 = $210binary_subscr.5 == $220binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool224 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $224pred = call bool224($222compare_op.11, func=bool224, args=(Var($222compare_op.11, helper_loops.py:123),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $224pred, 226, 256
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 226
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7a7110b0fbb0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $230binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $236binary_subscr.6 = getitem(value=final_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $238compare_op.7 = $230binary_subscr.3 <= $236binary_subscr.6
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool240 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $240pred = call bool240($238compare_op.7, func=bool240, args=(Var($238compare_op.7, helper_loops.py:123),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $240pred, 242, 256
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 242
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7a7110b0fbb0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $246binary_subscr.3 = getitem(value=final_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $246binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 256
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7a7110b0fbb0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const260.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $262binary_subtract.4 = i - $const260.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $264binary_subscr.5 = getitem(value=supertrend, index=$262binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const270.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $272binary_subtract.9 = i - $const270.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $274binary_subscr.10 = getitem(value=final_ub, index=$272binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $276compare_op.11 = $264binary_subscr.5 == $274binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool278 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $278pred = call bool278($276compare_op.11, func=bool278, args=(Var($276compare_op.11, helper_loops.py:125),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $278pred, 280, 310
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 280
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7a7110b0fbb0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $284binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $290binary_subscr.6 = getitem(value=final_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $292compare_op.7 = $284binary_subscr.3 > $290binary_subscr.6
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool294 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $294pred = call bool294($292compare_op.7, func=bool294, args=(Var($292compare_op.7, helper_loops.py:125),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $294pred, 296, 310
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 296
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7a7110b0fbb0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $300binary_subscr.3 = getitem(value=final_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $300binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 310
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7a7110b0fbb0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const314.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $316binary_subtract.4 = i - $const314.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $318binary_subscr.5 = getitem(value=supertrend, index=$316binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const324.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $326binary_subtract.9 = i - $const324.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $328binary_subscr.10 = getitem(value=final_lb, index=$326binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $330compare_op.11 = $318binary_subscr.5 == $328binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool332 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $332pred = call bool332($330compare_op.11, func=bool332, args=(Var($330compare_op.11, helper_loops.py:127),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $332pred, 334, 364
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 334
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7a7110b0fbb0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $338binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $344binary_subscr.6 = getitem(value=final_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $346compare_op.7 = $338binary_subscr.3 >= $344binary_subscr.6
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool348 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $348pred = call bool348($346compare_op.7, func=bool348, args=(Var($346compare_op.7, helper_loops.py:127),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $348pred, 350, 364
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 350
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7a7110b0fbb0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $354binary_subscr.3 = getitem(value=final_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $354binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 364
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7a7110b0fbb0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const368.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $370binary_subtract.4 = i - $const368.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $372binary_subscr.5 = getitem(value=supertrend, index=$370binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const378.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $380binary_subtract.9 = i - $const378.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $382binary_subscr.10 = getitem(value=final_lb, index=$380binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $384compare_op.11 = $372binary_subscr.5 == $382binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool386 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $386pred = call bool386($384compare_op.11, func=bool386, args=(Var($384compare_op.11, helper_loops.py:129),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $386pred, 388, 418
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 388
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7a7110b0fbb0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $392binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $398binary_subscr.6 = getitem(value=final_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $400compare_op.7 = $392binary_subscr.3 < $398binary_subscr.6
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool402 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $402pred = call bool402($400compare_op.7, func=bool402, args=(Var($400compare_op.7, helper_loops.py:129),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $402pred, 404, 418
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 404
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7a7110b0fbb0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $408binary_subscr.3 = getitem(value=final_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $408binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 418
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7a7110b0fbb0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const418.1.2 = const(float, 0.0)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $const418.1.2
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 428
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7a7110b0fbb0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $430return_value.1 = cast(value=supertrend)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $430return_value.1
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 429
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7a7110b0fbb0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 50
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$102binary_subscr.3': [(<numba.core.ir.Assign object at 0x7a7110ce5330>,
                                      98)],
             '$10load_global.3': [(<numba.core.ir.Assign object at 0x7a7110c9d120>,
                                   0)],
             '$118binary_subtract.4': [(<numba.core.ir.Assign object at 0x7a7110ce5b70>,
                                        112)],
             '$120binary_subscr.5': [(<numba.core.ir.Assign object at 0x7a7110ce5cf0>,
                                      112)],
             '$12load_method.4': [(<numba.core.ir.Assign object at 0x7a7110c9d2a0>,
                                   0)],
             '$132binary_subscr.3': [(<numba.core.ir.Assign object at 0x7a7110ce6350>,
                                      128)],
             '$140binary_subtract.7': [(<numba.core.ir.Assign object at 0x7a7110ce6890>,
                                        128)],
             '$142binary_subscr.8': [(<numba.core.ir.Assign object at 0x7a7110ce6a10>,
                                      128)],
             '$144compare_op.9': [(<numba.core.ir.Assign object at 0x7a7110ce6b90>,
                                   128)],
             '$146pred': [(<numba.core.ir.Assign object at 0x7a7110ce6e00>,
                           128)],
             '$154binary_subtract.4': [(<numba.core.ir.Assign object at 0x7a7110ce7310>,
                                        148)],
             '$156binary_subscr.5': [(<numba.core.ir.Assign object at 0x7a7110ce7490>,
                                      148)],
             '$164binary_subtract.9': [(<numba.core.ir.Assign object at 0x7a7110ce79d0>,
                                        148)],
             '$166binary_subscr.10': [(<numba.core.ir.Assign object at 0x7a7110ce7b50>,
                                       148)],
             '$168compare_op.11': [(<numba.core.ir.Assign object at 0x7a7110ce7cd0>,
                                    148)],
             '$170pred': [(<numba.core.ir.Assign object at 0x7a7110ce7f40>,
                           148)],
             '$176binary_subscr.3': [(<numba.core.ir.Assign object at 0x7a7110cf0310>,
                                      172)],
             '$192binary_subtract.4': [(<numba.core.ir.Assign object at 0x7a7110cf0b50>,
                                        186)],
             '$194binary_subscr.5': [(<numba.core.ir.Assign object at 0x7a7110cf0cd0>,
                                      186)],
             '$208binary_subtract.4': [(<numba.core.ir.Assign object at 0x7a7110cf14b0>,
                                        202)],
             '$20load_global.7': [(<numba.core.ir.Assign object at 0x7a7110c9d7e0>,
                                   0)],
             '$210binary_subscr.5': [(<numba.core.ir.Assign object at 0x7a7110cf1630>,
                                      202)],
             '$218binary_subtract.9': [(<numba.core.ir.Assign object at 0x7a7110cf1b70>,
                                        202)],
             '$220binary_subscr.10': [(<numba.core.ir.Assign object at 0x7a7110cf1cf0>,
                                       202)],
             '$222compare_op.11': [(<numba.core.ir.Assign object at 0x7a7110cf1e70>,
                                    202)],
             '$224pred': [(<numba.core.ir.Assign object at 0x7a7110cf20e0>,
                           202)],
             '$22load_method.8': [(<numba.core.ir.Assign object at 0x7a7110c9d960>,
                                   0)],
             '$230binary_subscr.3': [(<numba.core.ir.Assign object at 0x7a7110cf2470>,
                                      226)],
             '$236binary_subscr.6': [(<numba.core.ir.Assign object at 0x7a7110cf2830>,
                                      226)],
             '$238compare_op.7': [(<numba.core.ir.Assign object at 0x7a7110cf29b0>,
                                   226)],
             '$240pred': [(<numba.core.ir.Assign object at 0x7a7110cf2c20>,
                           226)],
             '$246binary_subscr.3': [(<numba.core.ir.Assign object at 0x7a7110cf2fb0>,
                                      242)],
             '$262binary_subtract.4': [(<numba.core.ir.Assign object at 0x7a7110cf37f0>,
                                        256)],
             '$264binary_subscr.5': [(<numba.core.ir.Assign object at 0x7a7110cf3970>,
                                      256)],
             '$272binary_subtract.9': [(<numba.core.ir.Assign object at 0x7a7110cf3eb0>,
                                        256)],
             '$274binary_subscr.10': [(<numba.core.ir.Assign object at 0x7a7110cf8070>,
                                       256)],
             '$276compare_op.11': [(<numba.core.ir.Assign object at 0x7a7110cf81f0>,
                                    256)],
             '$278pred': [(<numba.core.ir.Assign object at 0x7a7110cf8460>,
                           256)],
             '$284binary_subscr.3': [(<numba.core.ir.Assign object at 0x7a7110cf87f0>,
                                      280)],
             '$290binary_subscr.6': [(<numba.core.ir.Assign object at 0x7a7110cf8bb0>,
                                      280)],
             '$292compare_op.7': [(<numba.core.ir.Assign object at 0x7a7110cf8d30>,
                                   280)],
             '$294pred': [(<numba.core.ir.Assign object at 0x7a7110cf8fa0>,
                           280)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7a7110c9cbe0>,
                                  0)],
             '$300binary_subscr.3': [(<numba.core.ir.Assign object at 0x7a7110cf9330>,
                                      296)],
             '$30load_global.11': [(<numba.core.ir.Assign object at 0x7a7110c9dea0>,
                                    0)],
             '$316binary_subtract.4': [(<numba.core.ir.Assign object at 0x7a7110cf9b70>,
                                        310)],
             '$318binary_subscr.5': [(<numba.core.ir.Assign object at 0x7a7110cf9cf0>,
                                      310)],
             '$326binary_subtract.9': [(<numba.core.ir.Assign object at 0x7a7110cfa230>,
                                        310)],
             '$328binary_subscr.10': [(<numba.core.ir.Assign object at 0x7a7110cfa3b0>,
                                       310)],
             '$32load_method.12': [(<numba.core.ir.Assign object at 0x7a7110c9e020>,
                                    0)],
             '$330compare_op.11': [(<numba.core.ir.Assign object at 0x7a7110cfa530>,
                                    310)],
             '$332pred': [(<numba.core.ir.Assign object at 0x7a7110cfa7a0>,
                           310)],
             '$338binary_subscr.3': [(<numba.core.ir.Assign object at 0x7a7110cfab30>,
                                      334)],
             '$344binary_subscr.6': [(<numba.core.ir.Assign object at 0x7a7110cfaef0>,
                                      334)],
             '$346compare_op.7': [(<numba.core.ir.Assign object at 0x7a7110cfb070>,
                                   334)],
             '$348pred': [(<numba.core.ir.Assign object at 0x7a7110cfb2e0>,
                           334)],
             '$354binary_subscr.3': [(<numba.core.ir.Assign object at 0x7a7110cfb670>,
                                      350)],
             '$370binary_subtract.4': [(<numba.core.ir.Assign object at 0x7a7110cfbeb0>,
                                        364)],
             '$372binary_subscr.5': [(<numba.core.ir.Assign object at 0x7a7110b0c070>,
                                      364)],
             '$380binary_subtract.9': [(<numba.core.ir.Assign object at 0x7a7110b0c5b0>,
                                        364)],
             '$382binary_subscr.10': [(<numba.core.ir.Assign object at 0x7a7110b0c730>,
                                       364)],
             '$384compare_op.11': [(<numba.core.ir.Assign object at 0x7a7110b0c8b0>,
                                    364)],
             '$386pred': [(<numba.core.ir.Assign object at 0x7a7110b0cb20>,
                           364)],
             '$392binary_subscr.3': [(<numba.core.ir.Assign object at 0x7a7110b0ceb0>,
                                      388)],
             '$398binary_subscr.6': [(<numba.core.ir.Assign object at 0x7a7110b0d270>,
                                      388)],
             '$400compare_op.7': [(<numba.core.ir.Assign object at 0x7a7110b0d3f0>,
                                   388)],
             '$402pred': [(<numba.core.ir.Assign object at 0x7a7110b0d660>,
                           388)],
             '$408binary_subscr.3': [(<numba.core.ir.Assign object at 0x7a7110b0d9f0>,
                                      404)],
             '$40load_global.15': [(<numba.core.ir.Assign object at 0x7a7110c9e560>,
                                    0)],
             '$430return_value.1': [(<numba.core.ir.Assign object at 0x7a7110b0e4a0>,
                                     428)],
             '$46call_function.18': [(<numba.core.ir.Assign object at 0x7a7110c9e980>,
                                      0)],
             '$48get_iter.19': [(<numba.core.ir.Assign object at 0x7a7110c9eaa0>,
                                 0)],
             '$50for_iter.1': [(<numba.core.ir.Assign object at 0x7a7110c9e710>,
                                50)],
             '$50for_iter.2': [(<numba.core.ir.Assign object at 0x7a7110c9eb90>,
                                50)],
             '$50for_iter.3': [(<numba.core.ir.Assign object at 0x7a7110c9ecb0>,
                                50)],
             '$58binary_subscr.4': [(<numba.core.ir.Assign object at 0x7a7110c9f370>,
                                     52)],
             '$66binary_subtract.8': [(<numba.core.ir.Assign object at 0x7a7110c9f8b0>,
                                       52)],
             '$68binary_subscr.9': [(<numba.core.ir.Assign object at 0x7a7110c9fa30>,
                                     52)],
             '$70compare_op.10': [(<numba.core.ir.Assign object at 0x7a7110c9fbb0>,
                                   52)],
             '$72pred': [(<numba.core.ir.Assign object at 0x7a7110c9fe20>, 52)],
             '$80binary_subtract.4': [(<numba.core.ir.Assign object at 0x7a7110ce4370>,
                                       74)],
             '$82binary_subscr.5': [(<numba.core.ir.Assign object at 0x7a7110ce44f0>,
                                     74)],
             '$90binary_subtract.9': [(<numba.core.ir.Assign object at 0x7a7110ce4a30>,
                                       74)],
             '$92binary_subscr.10': [(<numba.core.ir.Assign object at 0x7a7110ce4bb0>,
                                      74)],
             '$94compare_op.11': [(<numba.core.ir.Assign object at 0x7a7110ce4d30>,
                                   74)],
             '$96pred': [(<numba.core.ir.Assign object at 0x7a7110ce4fa0>, 74)],
             '$const116.3.1': [(<numba.core.ir.Assign object at 0x7a7110ce59c0>,
                                112)],
             '$const138.6.1': [(<numba.core.ir.Assign object at 0x7a7110ce66e0>,
                                128)],
             '$const152.3.1': [(<numba.core.ir.Assign object at 0x7a7110ce7160>,
                                148)],
             '$const162.8.1': [(<numba.core.ir.Assign object at 0x7a7110ce7820>,
                                148)],
             '$const190.3.1': [(<numba.core.ir.Assign object at 0x7a7110cf09a0>,
                                186)],
             '$const206.3.1': [(<numba.core.ir.Assign object at 0x7a7110cf1300>,
                                202)],
             '$const216.8.1': [(<numba.core.ir.Assign object at 0x7a7110cf19c0>,
                                202)],
             '$const260.3.1': [(<numba.core.ir.Assign object at 0x7a7110cf3640>,
                                256)],
             '$const270.8.1': [(<numba.core.ir.Assign object at 0x7a7110cf3d00>,
                                256)],
             '$const314.3.1': [(<numba.core.ir.Assign object at 0x7a7110cf99c0>,
                                310)],
             '$const324.8.1': [(<numba.core.ir.Assign object at 0x7a7110cfa080>,
                                310)],
             '$const368.3.1': [(<numba.core.ir.Assign object at 0x7a7110cfbd00>,
                                364)],
             '$const378.8.1': [(<numba.core.ir.Assign object at 0x7a7110b0c400>,
                                364)],
             '$const418.1.2': [(<numba.core.ir.Assign object at 0x7a7110b0de40>,
                                418)],
             '$const64.7.1': [(<numba.core.ir.Assign object at 0x7a7110c9f700>,
                               52)],
             '$const78.3.1': [(<numba.core.ir.Assign object at 0x7a7110ce41c0>,
                               74)],
             '$const88.8.1': [(<numba.core.ir.Assign object at 0x7a7110ce4880>,
                               74)],
             '$phi50.0': [(<numba.core.ir.Assign object at 0x7a7110c9cd90>, 0)],
             '$phi52.1': [(<numba.core.ir.Assign object at 0x7a7110c9e1d0>,
                           50)],
             'basic_lb': [(<numba.core.ir.Assign object at 0x7a7110c9c280>, 0)],
             'basic_ub': [(<numba.core.ir.Assign object at 0x7a7110c9c580>, 0)],
             'bool146': [(<numba.core.ir.Assign object at 0x7a7110ce6ce0>,
                          128)],
             'bool170': [(<numba.core.ir.Assign object at 0x7a7110ce7e20>,
                          148)],
             'bool224': [(<numba.core.ir.Assign object at 0x7a7110cf1fc0>,
                          202)],
             'bool240': [(<numba.core.ir.Assign object at 0x7a7110cf2b00>,
                          226)],
             'bool278': [(<numba.core.ir.Assign object at 0x7a7110cf8340>,
                          256)],
             'bool294': [(<numba.core.ir.Assign object at 0x7a7110cf8e80>,
                          280)],
             'bool332': [(<numba.core.ir.Assign object at 0x7a7110cfa680>,
                          310)],
             'bool348': [(<numba.core.ir.Assign object at 0x7a7110cfb1c0>,
                          334)],
             'bool386': [(<numba.core.ir.Assign object at 0x7a7110b0ca00>,
                          364)],
             'bool402': [(<numba.core.ir.Assign object at 0x7a7110b0d540>,
                          388)],
             'bool72': [(<numba.core.ir.Assign object at 0x7a7110c9fd00>, 52)],
             'bool96': [(<numba.core.ir.Assign object at 0x7a7110ce4e80>, 74)],
             'close': [(<numba.core.ir.Assign object at 0x7a7110c9c7f0>, 0)],
             'final_lb': [(<numba.core.ir.Assign object at 0x7a7110c9dc90>, 0)],
             'final_ub': [(<numba.core.ir.Assign object at 0x7a7110c9d5d0>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x7a7110c9ef80>, 52)],
             'length': [(<numba.core.ir.Assign object at 0x7a7110c9cee0>, 0)],
             'n': [(<numba.core.ir.Assign object at 0x7a7110c9ca60>, 0)],
             'supertrend': [(<numba.core.ir.Assign object at 0x7a7110c9e350>,
                             0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x7a7110c7fca0>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4522)
           2	LOAD_GLOBAL(arg=0, lineno=4523)
           4	LOAD_ATTR(arg=1, lineno=4523)
           6	LOAD_FAST(arg=0, lineno=4523)
           8	LOAD_FAST(arg=1, lineno=4523)
          10	LOAD_CONST(arg=1, lineno=4523)
          12	CALL_FUNCTION_KW(arg=2, lineno=4523)
          14	STORE_FAST(arg=2, lineno=4523)
          16	LOAD_FAST(arg=2, lineno=4524)
          18	LOAD_METHOD(arg=2, lineno=4524)
          20	CALL_METHOD(arg=0, lineno=4524)
          22	POP_TOP(arg=None, lineno=4524)
          24	LOAD_FAST(arg=2, lineno=4525)
          26	RETURN_VALUE(arg=None, lineno=4525)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4522)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_attr.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_attr.1', '$shape6.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_attr.1', '$shape6.2', '$dtype8.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=CALL_FUNCTION_KW(arg=2, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_attr.1', '$shape6.2', '$dtype8.3', '$const10.4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=14, inst=STORE_FAST(arg=2, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$12call_function_kw.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=4524)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=4524)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$arr16.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=20, inst=CALL_METHOD(arg=0, lineno=4524)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$18load_method.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=22, inst=POP_TOP(arg=None, lineno=4524)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$20call_method.8']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=24, inst=LOAD_FAST(arg=2, lineno=4525)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=26, inst=RETURN_VALUE(arg=None, lineno=4525)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$arr24.9']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'res': '$shape6.2'}), (8, {'res': '$dtype8.3'}), (10, {'res': '$const10.4.1'}), (12, {'func': '$4load_attr.1', 'args': ['$shape6.2', '$dtype8.3'], 'names': '$const10.4.1', 'res': '$12call_function_kw.5'}), (14, {'value': '$12call_function_kw.5'}), (16, {'res': '$arr16.6'}), (18, {'item': '$arr16.6', 'res': '$18load_method.7'}), (20, {'func': '$18load_method.7', 'args': [], 'res': '$20call_method.8'}), (24, {'res': '$arr24.9'}), (26, {'retval': '$arr24.9', 'castval': '$26return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=empty) ['$2load_global.0', '$4load_attr.1']
    arr = call $4load_attr.1(shape, func=$4load_attr.1, args=[Var(shape, arrayobj.py:4522)], kws=[('dtype', Var(dtype, arrayobj.py:4522))], vararg=None, varkwarg=None, target=None) ['$4load_attr.1', 'arr', 'dtype', 'shape']
    $18load_method.7 = getattr(value=arr, attr=_zero_fill) ['$18load_method.7', 'arr']
    $20call_method.8 = call $18load_method.7(func=$18load_method.7, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_method.7', '$20call_method.8']
    $26return_value.10 = cast(value=arr)     ['$26return_value.10', 'arr']
    return $26return_value.10                ['$26return_value.10']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7a7110b69ba0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: shape = arg(0, name=shape)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: dtype = arg(1, name=dtype)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: arr = call $4load_attr.1(shape, func=$4load_attr.1, args=[Var(shape, arrayobj.py:4522)], kws=[('dtype', Var(dtype, arrayobj.py:4522))], vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $18load_method.7 = getattr(value=arr, attr=_zero_fill)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $20call_method.8 = call $18load_method.7(func=$18load_method.7, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $26return_value.10 = cast(value=arr)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $26return_value.10
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$18load_method.7': [(<numba.core.ir.Assign object at 0x7a7110b6b400>,
                                   0)],
             '$20call_method.8': [(<numba.core.ir.Assign object at 0x7a7110b6b610>,
                                   0)],
             '$26return_value.10': [(<numba.core.ir.Assign object at 0x7a7110b6b820>,
                                     0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7a7110b6a920>,
                                  0)],
             '$4load_attr.1': [(<numba.core.ir.Assign object at 0x7a7110b6aaa0>,
                                0)],
             'arr': [(<numba.core.ir.Assign object at 0x7a7110b6b160>, 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x7a7110b6a7a0>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x7a7110b6a680>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x7a7110b69ba0>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4454)
           2	LOAD_GLOBAL(arg=0, lineno=4455)
           4	LOAD_FAST(arg=0, lineno=4455)
           6	LOAD_FAST(arg=1, lineno=4455)
           8	LOAD_DEREF(arg=0, lineno=4455)
          10	CALL_FUNCTION(arg=3, lineno=4455)
          12	RETURN_VALUE(arg=None, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4454)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$shape4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=LOAD_DEREF(arg=0, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$shape4.1', '$dtype6.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=CALL_FUNCTION(arg=3, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$shape4.1', '$dtype6.2', '$8load_deref.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$10call_function.4']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'res': '$dtype6.2'}), (8, {'res': '$8load_deref.3'}), (10, {'func': '$2load_global.0', 'args': ['$shape4.1', '$dtype6.2', '$8load_deref.3'], 'res': '$10call_function.4'}), (12, {'retval': '$10call_function.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$2load_global.0']
    $8load_deref.3 = freevar(retty: array(float64, 1d, C)) ['$8load_deref.3']
    $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4454), Var(dtype, arrayobj.py:4454), Var($8load_deref.3, arrayobj.py:4455)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_deref.3', 'dtype', 'shape']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7a7110a35210>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: shape = arg(0, name=shape)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: dtype = arg(1, name=dtype)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $8load_deref.3 = freevar(retty: array(float64, 1d, C))
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4454), Var(dtype, arrayobj.py:4454), Var($8load_deref.3, arrayobj.py:4455)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $12return_value.5 = cast(value=$10call_function.4)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $12return_value.5
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$10call_function.4': [(<numba.core.ir.Assign object at 0x7a7110a35ed0>,
                                     0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x7a7110a35ff0>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7a7110a35930>,
                                  0)],
             '$8load_deref.3': [(<numba.core.ir.Assign object at 0x7a7110a35cf0>,
                                 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x7a7110a357b0>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x7a7110a349a0>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x7a7110a35210>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4330)
           2	LOAD_FAST(arg=0, lineno=4333)
           4	LOAD_METHOD(arg=0, lineno=4333)
           6	LOAD_FAST(arg=1, lineno=4333)
           8	LOAD_FAST(arg=2, lineno=4333)
          10	CALL_METHOD(arg=2, lineno=4333)
          12	RETURN_VALUE(arg=None, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4330)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_METHOD(arg=0, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$arrtype2.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_method.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_method.1', '$size6.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=CALL_METHOD(arg=2, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_method.1', '$size6.2', '$align8.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$10call_method.4']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$arrtype2.0'}), (4, {'item': '$arrtype2.0', 'res': '$4load_method.1'}), (6, {'res': '$size6.2'}), (8, {'res': '$align8.3'}), (10, {'func': '$4load_method.1', 'args': ['$size6.2', '$align8.3'], 'res': '$10call_method.4'}), (12, {'retval': '$10call_method.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    arrtype = arg(0, name=arrtype)           ['arrtype']
    size = arg(1, name=size)                 ['size']
    align = arg(2, name=align)               ['align']
    $4load_method.1 = getattr(value=arrtype, attr=_allocate) ['$4load_method.1', 'arrtype']
    $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:4330), Var(align, arrayobj.py:4330)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', 'align', 'size']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7a7110a9c2b0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: arrtype = arg(0, name=arrtype)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: size = arg(1, name=size)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: align = arg(2, name=align)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $4load_method.1 = getattr(value=arrtype, attr=_allocate)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:4330), Var(align, arrayobj.py:4330)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $12return_value.5 = cast(value=$10call_method.4)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $12return_value.5
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$10call_method.4': [(<numba.core.ir.Assign object at 0x7a7110a77d90>,
                                   0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x7a7110a77e80>,
                                    0)],
             '$4load_method.1': [(<numba.core.ir.Assign object at 0x7a7110a77940>,
                                  0)],
             'align': [(<numba.core.ir.Assign object at 0x7a7110a776a0>, 0)],
             'arrtype': [(<numba.core.ir.Assign object at 0x7a7110a74c40>, 0)],
             'size': [(<numba.core.ir.Assign object at 0x7a7110a77580>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x7a7110a9c2b0>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4325)
           2	LOAD_GLOBAL(arg=0, lineno=4326)
           4	LOAD_FAST(arg=1, lineno=4326)
           6	LOAD_FAST(arg=2, lineno=4326)
           8	CALL_FUNCTION(arg=2, lineno=4326)
          10	RETURN_VALUE(arg=None, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4325)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=LOAD_FAST(arg=2, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$allocsize4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$allocsize4.1', '$align6.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=RETURN_VALUE(arg=None, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$8call_function.3']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$allocsize4.1'}), (6, {'res': '$align6.2'}), (8, {'func': '$2load_global.0', 'args': ['$allocsize4.1', '$align6.2'], 'res': '$8call_function.3'}), (10, {'retval': '$8call_function.3', 'castval': '$10return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    cls = arg(0, name=cls)                   ['cls']
    allocsize = arg(1, name=allocsize)       ['allocsize']
    align = arg(2, name=align)               ['align']
    $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:4325), Var(align, arrayobj.py:4325)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'align', 'allocsize']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7a7110a9e050>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: cls = arg(0, name=cls)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: allocsize = arg(1, name=allocsize)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: align = arg(2, name=align)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:4325), Var(align, arrayobj.py:4325)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $10return_value.4 = cast(value=$8call_function.3)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $10return_value.4
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$10return_value.4': [(<numba.core.ir.Assign object at 0x7a7110a9eec0>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7a7110a9e980>,
                                  0)],
             '$8call_function.3': [(<numba.core.ir.Assign object at 0x7a7110a9eda0>,
                                    0)],
             'align': [(<numba.core.ir.Assign object at 0x7a7110a9e800>, 0)],
             'allocsize': [(<numba.core.ir.Assign object at 0x7a7110a9e6e0>,
                            0)],
             'cls': [(<numba.core.ir.Assign object at 0x7a7110a9e5c0>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x7a7110a9e050>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4513)
           2	LOAD_GLOBAL(arg=0, lineno=4514)
           4	LOAD_FAST(arg=0, lineno=4514)
           6	CALL_FUNCTION(arg=1, lineno=4514)
           8	POP_TOP(arg=None, lineno=4514)
          10	LOAD_CONST(arg=0, lineno=4514)
          12	RETURN_VALUE(arg=None, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4513)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$self4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=POP_TOP(arg=None, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$6call_function.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=LOAD_CONST(arg=0, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$const10.3.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$self4.1'}), (6, {'func': '$2load_global.0', 'args': ['$self4.1'], 'res': '$6call_function.2'}), (10, {'res': '$const10.3.0'}), (12, {'retval': '$const10.3.0', 'castval': '$12return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    self = arg(0, name=self)                 ['self']
    $2load_global.0 = global(_zero_fill_array_method: <intrinsic _zero_fill_array_method>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(self, func=$2load_global.0, args=[Var(self, arrayobj.py:4513)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'self']
    $const10.3.0 = const(NoneType, None)     ['$const10.3.0']
    $12return_value.4 = cast(value=$const10.3.0) ['$12return_value.4', '$const10.3.0']
    return $12return_value.4                 ['$12return_value.4']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7a7110936350>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: self = arg(0, name=self)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(_zero_fill_array_method: <intrinsic _zero_fill_array_method>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $6call_function.2 = call $2load_global.0(self, func=$2load_global.0, args=[Var(self, arrayobj.py:4513)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const10.3.0 = const(NoneType, None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $12return_value.4 = cast(value=$const10.3.0)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $12return_value.4
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$12return_value.4': [(<numba.core.ir.Assign object at 0x7a7110936f20>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7a7110936980>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x7a7110936c80>,
                                    0)],
             '$const10.3.0': [(<numba.core.ir.Assign object at 0x7a7110936da0>,
                               0)],
             'self': [(<numba.core.ir.Assign object at 0x7a7110935cc0>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x7a7110936350>
root - [INFO]{MainThread} - get_ALL_tech_data_local() - Andy - 4
root - [INFO]{MainThread} - get_ALL_tech_data_local() - Andy - 5
root - [INFO]{MainThread} - get_all_pandas_TU_tecnical() - Andy - 5.1
root - [INFO]{MainThread} - get_all_pandas_TU_tecnical() - Andy - 5.2
root - [INFO]{MainThread} - get_all_pandas_TU_tecnical() - Andy - 5.3
root - [INFO]{MainThread} - get_all_pandas_TU_tecnical() - Andy - 5.4
root - [INFO]{MainThread} - get_LowerHighs_LowerHighs() - Andy - 5.4.1
root - [INFO]{MainThread} - get_LowerHighs_LowerHighs() - Andy - 5.4.2
root - [INFO]{MainThread} - get_LowerHighs_LowerHighs() - Andy - 5.4.3
root - [INFO]{MainThread} - get_LowerHighs_LowerHighs() - getLowerLows parameters - order: 5, k: 2
root - [INFO]{MainThread} - get_LowerHighs_LowerHighs() - getLowerLows result: [deque([1, 29], maxlen=2), deque([29, 50], maxlen=2), deque([58, 72], maxlen=2), deque([90, 126], maxlen=2), deque([126, 138], maxlen=2), deque([138, 148], maxlen=2), deque([148, 179], maxlen=2), deque([179, 191], maxlen=2), deque([197, 228], maxlen=2), deque([242, 294], maxlen=2), deque([387, 399], maxlen=2), deque([420, 438], maxlen=2), deque([485, 509], maxlen=2), deque([509, 529], maxlen=2), deque([546, 581], maxlen=2), deque([581, 595], maxlen=2), deque([626, 635], maxlen=2), deque([703, 713], maxlen=2), deque([727, 751], maxlen=2), deque([759, 775], maxlen=2), deque([775, 802], maxlen=2), deque([802, 821], maxlen=2), deque([835, 844], maxlen=2), deque([863, 906], maxlen=2), deque([906, 914], maxlen=2), deque([1017, 1035], maxlen=2), deque([1157, 1175], maxlen=2), deque([1183, 1191], maxlen=2), deque([1191, 1226], maxlen=2), deque([1237, 1250], maxlen=2), deque([1259, 1304], maxlen=2), deque([1364, 1378], maxlen=2)]
root - [INFO]{MainThread} - get_LowerHighs_LowerHighs() - Andy - 5.4.4
root - [INFO]{MainThread} - get_LowerHighs_LowerHighs() - getLowerLows result: [deque([23, 45], maxlen=2), deque([108, 144], maxlen=2), deque([144, 155], maxlen=2), deque([155, 167], maxlen=2), deque([167, 192], maxlen=2), deque([207, 240], maxlen=2), deque([260, 283], maxlen=2), deque([333, 348], maxlen=2), deque([356, 379], maxlen=2), deque([379, 389], maxlen=2), deque([408, 426], maxlen=2), deque([426, 449], maxlen=2), deque([449, 458], maxlen=2), deque([472, 495], maxlen=2), deque([495, 518], maxlen=2), deque([542, 564], maxlen=2), deque([564, 586], maxlen=2), deque([586, 600], maxlen=2), deque([610, 633], maxlen=2), deque([633, 640], maxlen=2), deque([681, 687], maxlen=2), deque([702, 724], maxlen=2), deque([748, 761], maxlen=2), deque([761, 767], maxlen=2), deque([767, 779], maxlen=2), deque([779, 789], maxlen=2), deque([789, 806], maxlen=2), deque([866, 889], maxlen=2), deque([889, 951], maxlen=2), deque([951, 959], maxlen=2), deque([1006, 1028], maxlen=2), deque([1051, 1075], maxlen=2), deque([1148, 1162], maxlen=2), deque([1162, 1178], maxlen=2), deque([1195, 1234], maxlen=2), deque([1265, 1282], maxlen=2), deque([1282, 1329], maxlen=2), deque([1375, 1383], maxlen=2)]
root - [INFO]{MainThread} - get_LowerHighs_LowerHighs() - Andy - 5.4.5
root - [INFO]{MainThread} - get_LowerHighs_LowerHighs() - Andy - 5.4.5.1
root - [INFO]{MainThread} - get_LowerHighs_LowerHighs() - Andy - 5.4.5.2
root - [INFO]{MainThread} - get_LowerHighs_LowerHighs() - Index(['Date - (1385, 346) -                      Date  buy_sell_point   Open   High    Low  Close  ...      volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n1383  2025-08-07 11:30:00               0  565.5  568.0  565.5  567.5  ... -4.258443e+07          0.108696            8                4    570.0    566.5\n1384  2025-08-07 11:45:00               0  567.5  568.0  565.5  565.5  ... -4.271969e+07         -0.065217            9                3    570.0    566.5\n\n[2 rows x 346 columns][deque([1, 29], maxlen=2), deque([29, 50], maxlen=2), deque([58, 72], maxlen=2), deque([90, 126], maxlen=2), deque([126, 138], maxlen=2), deque([138, 148], maxlen=2), deque([148, 179], maxlen=2), deque([179, 191], maxlen=2), deque([197, 228], maxlen=2), deque([242, 294], maxlen=2), deque([387, 399], maxlen=2), deque([420, 438], maxlen=2), deque([485, 509], maxlen=2), deque([509, 529], maxlen=2), deque([546, 581], maxlen=2), deque([581, 595], maxlen=2), deque([626, 635], maxlen=2), deque([703, 713], maxlen=2), deque([727, 751], maxlen=2), deque([759, 775], maxlen=2), deque([775, 802], maxlen=2), deque([802, 821], maxlen=2), deque([835, 844], maxlen=2), deque([863, 906], maxlen=2), deque([906, 914], maxlen=2), deque([1017, 1035], maxlen=2), deque([1157, 1175], maxlen=2), deque([1183, 1191], maxlen=2), deque([1191, 1226], maxlen=2), deque([1237, 1250], maxlen=2), deque([1259, 1304], maxlen=2), deque([1364, 1378], maxlen=2)]',
       'buy_sell_point - (1385, 346) -                      Date  buy_sell_point   Open   High    Low  Close  ...      volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n1383  2025-08-07 11:30:00               0  565.5  568.0  565.5  567.5  ... -4.258443e+07          0.108696            8                4    570.0    566.5\n1384  2025-08-07 11:45:00               0  567.5  568.0  565.5  565.5  ... -4.271969e+07         -0.065217            9                3    570.0    566.5\n\n[2 rows x 346 columns][deque([1, 29], maxlen=2), deque([29, 50], maxlen=2), deque([58, 72], maxlen=2), deque([90, 126], maxlen=2), deque([126, 138], maxlen=2), deque([138, 148], maxlen=2), deque([148, 179], maxlen=2), deque([179, 191], maxlen=2), deque([197, 228], maxlen=2), deque([242, 294], maxlen=2), deque([387, 399], maxlen=2), deque([420, 438], maxlen=2), deque([485, 509], maxlen=2), deque([509, 529], maxlen=2), deque([546, 581], maxlen=2), deque([581, 595], maxlen=2), deque([626, 635], maxlen=2), deque([703, 713], maxlen=2), deque([727, 751], maxlen=2), deque([759, 775], maxlen=2), deque([775, 802], maxlen=2), deque([802, 821], maxlen=2), deque([835, 844], maxlen=2), deque([863, 906], maxlen=2), deque([906, 914], maxlen=2), deque([1017, 1035], maxlen=2), deque([1157, 1175], maxlen=2), deque([1183, 1191], maxlen=2), deque([1191, 1226], maxlen=2), deque([1237, 1250], maxlen=2), deque([1259, 1304], maxlen=2), deque([1364, 1378], maxlen=2)]',
       'Open - (1385, 346) -                      Date  buy_sell_point   Open   High    Low  Close  ...      volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n1383  2025-08-07 11:30:00               0  565.5  568.0  565.5  567.5  ... -4.258443e+07          0.108696            8                4    570.0    566.5\n1384  2025-08-07 11:45:00               0  567.5  568.0  565.5  565.5  ... -4.271969e+07         -0.065217            9                3    570.0    566.5\n\n[2 rows x 346 columns][deque([1, 29], maxlen=2), deque([29, 50], maxlen=2), deque([58, 72], maxlen=2), deque([90, 126], maxlen=2), deque([126, 138], maxlen=2), deque([138, 148], maxlen=2), deque([148, 179], maxlen=2), deque([179, 191], maxlen=2), deque([197, 228], maxlen=2), deque([242, 294], maxlen=2), deque([387, 399], maxlen=2), deque([420, 438], maxlen=2), deque([485, 509], maxlen=2), deque([509, 529], maxlen=2), deque([546, 581], maxlen=2), deque([581, 595], maxlen=2), deque([626, 635], maxlen=2), deque([703, 713], maxlen=2), deque([727, 751], maxlen=2), deque([759, 775], maxlen=2), deque([775, 802], maxlen=2), deque([802, 821], maxlen=2), deque([835, 844], maxlen=2), deque([863, 906], maxlen=2), deque([906, 914], maxlen=2), deque([1017, 1035], maxlen=2), deque([1157, 1175], maxlen=2), deque([1183, 1191], maxlen=2), deque([1191, 1226], maxlen=2), deque([1237, 1250], maxlen=2), deque([1259, 1304], maxlen=2), deque([1364, 1378], maxlen=2)]',
       'High - (1385, 346) -                      Date  buy_sell_point   Open   High    Low  Close  ...      volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n1383  2025-08-07 11:30:00               0  565.5  568.0  565.5  567.5  ... -4.258443e+07          0.108696            8                4    570.0    566.5\n1384  2025-08-07 11:45:00               0  567.5  568.0  565.5  565.5  ... -4.271969e+07         -0.065217            9                3    570.0    566.5\n\n[2 rows x 346 columns][deque([1, 29], maxlen=2), deque([29, 50], maxlen=2), deque([58, 72], maxlen=2), deque([90, 126], maxlen=2), deque([126, 138], maxlen=2), deque([138, 148], maxlen=2), deque([148, 179], maxlen=2), deque([179, 191], maxlen=2), deque([197, 228], maxlen=2), deque([242, 294], maxlen=2), deque([387, 399], maxlen=2), deque([420, 438], maxlen=2), deque([485, 509], maxlen=2), deque([509, 529], maxlen=2), deque([546, 581], maxlen=2), deque([581, 595], maxlen=2), deque([626, 635], maxlen=2), deque([703, 713], maxlen=2), deque([727, 751], maxlen=2), deque([759, 775], maxlen=2), deque([775, 802], maxlen=2), deque([802, 821], maxlen=2), deque([835, 844], maxlen=2), deque([863, 906], maxlen=2), deque([906, 914], maxlen=2), deque([1017, 1035], maxlen=2), deque([1157, 1175], maxlen=2), deque([1183, 1191], maxlen=2), deque([1191, 1226], maxlen=2), deque([1237, 1250], maxlen=2), deque([1259, 1304], maxlen=2), deque([1364, 1378], maxlen=2)]',
       'Low - (1385, 346) -                      Date  buy_sell_point   Open   High    Low  Close  ...      volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n1383  2025-08-07 11:30:00               0  565.5  568.0  565.5  567.5  ... -4.258443e+07          0.108696            8                4    570.0    566.5\n1384  2025-08-07 11:45:00               0  567.5  568.0  565.5  565.5  ... -4.271969e+07         -0.065217            9                3    570.0    566.5\n\n[2 rows x 346 columns][deque([1, 29], maxlen=2), deque([29, 50], maxlen=2), deque([58, 72], maxlen=2), deque([90, 126], maxlen=2), deque([126, 138], maxlen=2), deque([138, 148], maxlen=2), deque([148, 179], maxlen=2), deque([179, 191], maxlen=2), deque([197, 228], maxlen=2), deque([242, 294], maxlen=2), deque([387, 399], maxlen=2), deque([420, 438], maxlen=2), deque([485, 509], maxlen=2), deque([509, 529], maxlen=2), deque([546, 581], maxlen=2), deque([581, 595], maxlen=2), deque([626, 635], maxlen=2), deque([703, 713], maxlen=2), deque([727, 751], maxlen=2), deque([759, 775], maxlen=2), deque([775, 802], maxlen=2), deque([802, 821], maxlen=2), deque([835, 844], maxlen=2), deque([863, 906], maxlen=2), deque([906, 914], maxlen=2), deque([1017, 1035], maxlen=2), deque([1157, 1175], maxlen=2), deque([1183, 1191], maxlen=2), deque([1191, 1226], maxlen=2), deque([1237, 1250], maxlen=2), deque([1259, 1304], maxlen=2), deque([1364, 1378], maxlen=2)]',
       'Close - (1385, 346) -                      Date  buy_sell_point   Open   High    Low  Close  ...      volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n1383  2025-08-07 11:30:00               0  565.5  568.0  565.5  567.5  ... -4.258443e+07          0.108696            8                4    570.0    566.5\n1384  2025-08-07 11:45:00               0  567.5  568.0  565.5  565.5  ... -4.271969e+07         -0.065217            9                3    570.0    566.5\n\n[2 rows x 346 columns][deque([1, 29], maxlen=2), deque([29, 50], maxlen=2), deque([58, 72], maxlen=2), deque([90, 126], maxlen=2), deque([126, 138], maxlen=2), deque([138, 148], maxlen=2), deque([148, 179], maxlen=2), deque([179, 191], maxlen=2), deque([197, 228], maxlen=2), deque([242, 294], maxlen=2), deque([387, 399], maxlen=2), deque([420, 438], maxlen=2), deque([485, 509], maxlen=2), deque([509, 529], maxlen=2), deque([546, 581], maxlen=2), deque([581, 595], maxlen=2), deque([626, 635], maxlen=2), deque([703, 713], maxlen=2), deque([727, 751], maxlen=2), deque([759, 775], maxlen=2), deque([775, 802], maxlen=2), deque([802, 821], maxlen=2), deque([835, 844], maxlen=2), deque([863, 906], maxlen=2), deque([906, 914], maxlen=2), deque([1017, 1035], maxlen=2), deque([1157, 1175], maxlen=2), deque([1183, 1191], maxlen=2), deque([1191, 1226], maxlen=2), deque([1237, 1250], maxlen=2), deque([1259, 1304], maxlen=2), deque([1364, 1378], maxlen=2)]',
       'Volume - (1385, 346) -                      Date  buy_sell_point   Open   High    Low  Close  ...      volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n1383  2025-08-07 11:30:00               0  565.5  568.0  565.5  567.5  ... -4.258443e+07          0.108696            8                4    570.0    566.5\n1384  2025-08-07 11:45:00               0  567.5  568.0  565.5  565.5  ... -4.271969e+07         -0.065217            9                3    570.0    566.5\n\n[2 rows x 346 columns][deque([1, 29], maxlen=2), deque([29, 50], maxlen=2), deque([58, 72], maxlen=2), deque([90, 126], maxlen=2), deque([126, 138], maxlen=2), deque([138, 148], maxlen=2), deque([148, 179], maxlen=2), deque([179, 191], maxlen=2), deque([197, 228], maxlen=2), deque([242, 294], maxlen=2), deque([387, 399], maxlen=2), deque([420, 438], maxlen=2), deque([485, 509], maxlen=2), deque([509, 529], maxlen=2), deque([546, 581], maxlen=2), deque([581, 595], maxlen=2), deque([626, 635], maxlen=2), deque([703, 713], maxlen=2), deque([727, 751], maxlen=2), deque([759, 775], maxlen=2), deque([775, 802], maxlen=2), deque([802, 821], maxlen=2), deque([835, 844], maxlen=2), deque([863, 906], maxlen=2), deque([906, 914], maxlen=2), deque([1017, 1035], maxlen=2), deque([1157, 1175], maxlen=2), deque([1183, 1191], maxlen=2), deque([1191, 1226], maxlen=2), deque([1237, 1250], maxlen=2), deque([1259, 1304], maxlen=2), deque([1364, 1378], maxlen=2)]',
       'per_Close - (1385, 346) -                      Date  buy_sell_point   Open   High    Low  Close  ...      volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n1383  2025-08-07 11:30:00               0  565.5  568.0  565.5  567.5  ... -4.258443e+07          0.108696            8                4    570.0    566.5\n1384  2025-08-07 11:45:00               0  567.5  568.0  565.5  565.5  ... -4.271969e+07         -0.065217            9                3    570.0    566.5\n\n[2 rows x 346 columns][deque([1, 29], maxlen=2), deque([29, 50], maxlen=2), deque([58, 72], maxlen=2), deque([90, 126], maxlen=2), deque([126, 138], maxlen=2), deque([138, 148], maxlen=2), deque([148, 179], maxlen=2), deque([179, 191], maxlen=2), deque([197, 228], maxlen=2), deque([242, 294], maxlen=2), deque([387, 399], maxlen=2), deque([420, 438], maxlen=2), deque([485, 509], maxlen=2), deque([509, 529], maxlen=2), deque([546, 581], maxlen=2), deque([581, 595], maxlen=2), deque([626, 635], maxlen=2), deque([703, 713], maxlen=2), deque([727, 751], maxlen=2), deque([759, 775], maxlen=2), deque([775, 802], maxlen=2), deque([802, 821], maxlen=2), deque([835, 844], maxlen=2), deque([863, 906], maxlen=2), deque([906, 914], maxlen=2), deque([1017, 1035], maxlen=2), deque([1157, 1175], maxlen=2), deque([1183, 1191], maxlen=2), deque([1191, 1226], maxlen=2), deque([1237, 1250], maxlen=2), deque([1259, 1304], maxlen=2), deque([1364, 1378], maxlen=2)]',
       'per_Volume - (1385, 346) -                      Date  buy_sell_point   Open   High    Low  Close  ...      volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n1383  2025-08-07 11:30:00               0  565.5  568.0  565.5  567.5  ... -4.258443e+07          0.108696            8                4    570.0    566.5\n1384  2025-08-07 11:45:00               0  567.5  568.0  565.5  565.5  ... -4.271969e+07         -0.065217            9                3    570.0    566.5\n\n[2 rows x 346 columns][deque([1, 29], maxlen=2), deque([29, 50], maxlen=2), deque([58, 72], maxlen=2), deque([90, 126], maxlen=2), deque([126, 138], maxlen=2), deque([138, 148], maxlen=2), deque([148, 179], maxlen=2), deque([179, 191], maxlen=2), deque([197, 228], maxlen=2), deque([242, 294], maxlen=2), deque([387, 399], maxlen=2), deque([420, 438], maxlen=2), deque([485, 509], maxlen=2), deque([509, 529], maxlen=2), deque([546, 581], maxlen=2), deque([581, 595], maxlen=2), deque([626, 635], maxlen=2), deque([703, 713], maxlen=2), deque([727, 751], maxlen=2), deque([759, 775], maxlen=2), deque([775, 802], maxlen=2), deque([802, 821], maxlen=2), deque([835, 844], maxlen=2), deque([863, 906], maxlen=2), deque([906, 914], maxlen=2), deque([1017, 1035], maxlen=2), deque([1157, 1175], maxlen=2), deque([1183, 1191], maxlen=2), deque([1191, 1226], maxlen=2), deque([1237, 1250], maxlen=2), deque([1259, 1304], maxlen=2), deque([1364, 1378], maxlen=2)]',
       'has_preMarket - (1385, 346) -                      Date  buy_sell_point   Open   High    Low  Close  ...      volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n1383  2025-08-07 11:30:00               0  565.5  568.0  565.5  567.5  ... -4.258443e+07          0.108696            8                4    570.0    566.5\n1384  2025-08-07 11:45:00               0  567.5  568.0  565.5  565.5  ... -4.271969e+07         -0.065217            9                3    570.0    566.5\n\n[2 rows x 346 columns][deque([1, 29], maxlen=2), deque([29, 50], maxlen=2), deque([58, 72], maxlen=2), deque([90, 126], maxlen=2), deque([126, 138], maxlen=2), deque([138, 148], maxlen=2), deque([148, 179], maxlen=2), deque([179, 191], maxlen=2), deque([197, 228], maxlen=2), deque([242, 294], maxlen=2), deque([387, 399], maxlen=2), deque([420, 438], maxlen=2), deque([485, 509], maxlen=2), deque([509, 529], maxlen=2), deque([546, 581], maxlen=2), deque([581, 595], maxlen=2), deque([626, 635], maxlen=2), deque([703, 713], maxlen=2), deque([727, 751], maxlen=2), deque([759, 775], maxlen=2), deque([775, 802], maxlen=2), deque([802, 821], maxlen=2), deque([835, 844], maxlen=2), deque([863, 906], maxlen=2), deque([906, 914], maxlen=2), deque([1017, 1035], maxlen=2), deque([1157, 1175], maxlen=2), deque([1183, 1191], maxlen=2), deque([1191, 1226], maxlen=2), deque([1237, 1250], maxlen=2), deque([1259, 1304], maxlen=2), deque([1364, 1378], maxlen=2)]',
       ...
       'volu_NVI_1 - (1385, 346) -                      Date  buy_sell_point   Open   High    Low  Close  ...      volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n1383  2025-08-07 11:30:00               0  565.5  568.0  565.5  567.5  ... -4.258443e+07          0.108696            8                4    570.0    566.5\n1384  2025-08-07 11:45:00               0  567.5  568.0  565.5  565.5  ... -4.271969e+07         -0.065217            9                3    570.0    566.5\n\n[2 rows x 346 columns][deque([1, 29], maxlen=2), deque([29, 50], maxlen=2), deque([58, 72], maxlen=2), deque([90, 126], maxlen=2), deque([126, 138], maxlen=2), deque([138, 148], maxlen=2), deque([148, 179], maxlen=2), deque([179, 191], maxlen=2), deque([197, 228], maxlen=2), deque([242, 294], maxlen=2), deque([387, 399], maxlen=2), deque([420, 438], maxlen=2), deque([485, 509], maxlen=2), deque([509, 529], maxlen=2), deque([546, 581], maxlen=2), deque([581, 595], maxlen=2), deque([626, 635], maxlen=2), deque([703, 713], maxlen=2), deque([727, 751], maxlen=2), deque([759, 775], maxlen=2), deque([775, 802], maxlen=2), deque([802, 821], maxlen=2), deque([835, 844], maxlen=2), deque([863, 906], maxlen=2), deque([906, 914], maxlen=2), deque([1017, 1035], maxlen=2), deque([1157, 1175], maxlen=2), deque([1183, 1191], maxlen=2), deque([1191, 1226], maxlen=2), deque([1237, 1250], maxlen=2), deque([1259, 1304], maxlen=2), deque([1364, 1378], maxlen=2)]',
       'volu_PVI_1 - (1385, 346) -                      Date  buy_sell_point   Open   High    Low  Close  ...      volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n1383  2025-08-07 11:30:00               0  565.5  568.0  565.5  567.5  ... -4.258443e+07          0.108696            8                4    570.0    566.5\n1384  2025-08-07 11:45:00               0  567.5  568.0  565.5  565.5  ... -4.271969e+07         -0.065217            9                3    570.0    566.5\n\n[2 rows x 346 columns][deque([1, 29], maxlen=2), deque([29, 50], maxlen=2), deque([58, 72], maxlen=2), deque([90, 126], maxlen=2), deque([126, 138], maxlen=2), deque([138, 148], maxlen=2), deque([148, 179], maxlen=2), deque([179, 191], maxlen=2), deque([197, 228], maxlen=2), deque([242, 294], maxlen=2), deque([387, 399], maxlen=2), deque([420, 438], maxlen=2), deque([485, 509], maxlen=2), deque([509, 529], maxlen=2), deque([546, 581], maxlen=2), deque([581, 595], maxlen=2), deque([626, 635], maxlen=2), deque([703, 713], maxlen=2), deque([727, 751], maxlen=2), deque([759, 775], maxlen=2), deque([775, 802], maxlen=2), deque([802, 821], maxlen=2), deque([835, 844], maxlen=2), deque([863, 906], maxlen=2), deque([906, 914], maxlen=2), deque([1017, 1035], maxlen=2), deque([1157, 1175], maxlen=2), deque([1183, 1191], maxlen=2), deque([1191, 1226], maxlen=2), deque([1237, 1250], maxlen=2), deque([1259, 1304], maxlen=2), deque([1364, 1378], maxlen=2)]',
       'volu_PVOL - (1385, 346) -                      Date  buy_sell_point   Open   High    Low  Close  ...      volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n1383  2025-08-07 11:30:00               0  565.5  568.0  565.5  567.5  ... -4.258443e+07          0.108696            8                4    570.0    566.5\n1384  2025-08-07 11:45:00               0  567.5  568.0  565.5  565.5  ... -4.271969e+07         -0.065217            9                3    570.0    566.5\n\n[2 rows x 346 columns][deque([1, 29], maxlen=2), deque([29, 50], maxlen=2), deque([58, 72], maxlen=2), deque([90, 126], maxlen=2), deque([126, 138], maxlen=2), deque([138, 148], maxlen=2), deque([148, 179], maxlen=2), deque([179, 191], maxlen=2), deque([197, 228], maxlen=2), deque([242, 294], maxlen=2), deque([387, 399], maxlen=2), deque([420, 438], maxlen=2), deque([485, 509], maxlen=2), deque([509, 529], maxlen=2), deque([546, 581], maxlen=2), deque([581, 595], maxlen=2), deque([626, 635], maxlen=2), deque([703, 713], maxlen=2), deque([727, 751], maxlen=2), deque([759, 775], maxlen=2), deque([775, 802], maxlen=2), deque([802, 821], maxlen=2), deque([835, 844], maxlen=2), deque([863, 906], maxlen=2), deque([906, 914], maxlen=2), deque([1017, 1035], maxlen=2), deque([1157, 1175], maxlen=2), deque([1183, 1191], maxlen=2), deque([1191, 1226], maxlen=2), deque([1237, 1250], maxlen=2), deque([1259, 1304], maxlen=2), deque([1364, 1378], maxlen=2)]',
       'volu_PVR - (1385, 346) -                      Date  buy_sell_point   Open   High    Low  Close  ...      volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n1383  2025-08-07 11:30:00               0  565.5  568.0  565.5  567.5  ... -4.258443e+07          0.108696            8                4    570.0    566.5\n1384  2025-08-07 11:45:00               0  567.5  568.0  565.5  565.5  ... -4.271969e+07         -0.065217            9                3    570.0    566.5\n\n[2 rows x 346 columns][deque([1, 29], maxlen=2), deque([29, 50], maxlen=2), deque([58, 72], maxlen=2), deque([90, 126], maxlen=2), deque([126, 138], maxlen=2), deque([138, 148], maxlen=2), deque([148, 179], maxlen=2), deque([179, 191], maxlen=2), deque([197, 228], maxlen=2), deque([242, 294], maxlen=2), deque([387, 399], maxlen=2), deque([420, 438], maxlen=2), deque([485, 509], maxlen=2), deque([509, 529], maxlen=2), deque([546, 581], maxlen=2), deque([581, 595], maxlen=2), deque([626, 635], maxlen=2), deque([703, 713], maxlen=2), deque([727, 751], maxlen=2), deque([759, 775], maxlen=2), deque([775, 802], maxlen=2), deque([802, 821], maxlen=2), deque([835, 844], maxlen=2), deque([863, 906], maxlen=2), deque([906, 914], maxlen=2), deque([1017, 1035], maxlen=2), deque([1157, 1175], maxlen=2), deque([1183, 1191], maxlen=2), deque([1191, 1226], maxlen=2), deque([1237, 1250], maxlen=2), deque([1259, 1304], maxlen=2), deque([1364, 1378], maxlen=2)]',
       'volu_PVT - (1385, 346) -                      Date  buy_sell_point   Open   High    Low  Close  ...      volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n1383  2025-08-07 11:30:00               0  565.5  568.0  565.5  567.5  ... -4.258443e+07          0.108696            8                4    570.0    566.5\n1384  2025-08-07 11:45:00               0  567.5  568.0  565.5  565.5  ... -4.271969e+07         -0.065217            9                3    570.0    566.5\n\n[2 rows x 346 columns][deque([1, 29], maxlen=2), deque([29, 50], maxlen=2), deque([58, 72], maxlen=2), deque([90, 126], maxlen=2), deque([126, 138], maxlen=2), deque([138, 148], maxlen=2), deque([148, 179], maxlen=2), deque([179, 191], maxlen=2), deque([197, 228], maxlen=2), deque([242, 294], maxlen=2), deque([387, 399], maxlen=2), deque([420, 438], maxlen=2), deque([485, 509], maxlen=2), deque([509, 529], maxlen=2), deque([546, 581], maxlen=2), deque([581, 595], maxlen=2), deque([626, 635], maxlen=2), deque([703, 713], maxlen=2), deque([727, 751], maxlen=2), deque([759, 775], maxlen=2), deque([775, 802], maxlen=2), deque([802, 821], maxlen=2), deque([835, 844], maxlen=2), deque([863, 906], maxlen=2), deque([906, 914], maxlen=2), deque([1017, 1035], maxlen=2), deque([1157, 1175], maxlen=2), deque([1183, 1191], maxlen=2), deque([1191, 1226], maxlen=2), deque([1237, 1250], maxlen=2), deque([1259, 1304], maxlen=2), deque([1364, 1378], maxlen=2)]',
       'mtum_murrey_math - (1385, 346) -                      Date  buy_sell_point   Open   High    Low  Close  ...      volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n1383  2025-08-07 11:30:00               0  565.5  568.0  565.5  567.5  ... -4.258443e+07          0.108696            8                4    570.0    566.5\n1384  2025-08-07 11:45:00               0  567.5  568.0  565.5  565.5  ... -4.271969e+07         -0.065217            9                3    570.0    566.5\n\n[2 rows x 346 columns][deque([1, 29], maxlen=2), deque([29, 50], maxlen=2), deque([58, 72], maxlen=2), deque([90, 126], maxlen=2), deque([126, 138], maxlen=2), deque([138, 148], maxlen=2), deque([148, 179], maxlen=2), deque([179, 191], maxlen=2), deque([197, 228], maxlen=2), deque([242, 294], maxlen=2), deque([387, 399], maxlen=2), deque([420, 438], maxlen=2), deque([485, 509], maxlen=2), deque([509, 529], maxlen=2), deque([546, 581], maxlen=2), deque([581, 595], maxlen=2), deque([626, 635], maxlen=2), deque([703, 713], maxlen=2), deque([727, 751], maxlen=2), deque([759, 775], maxlen=2), deque([775, 802], maxlen=2), deque([802, 821], maxlen=2), deque([835, 844], maxlen=2), deque([863, 906], maxlen=2), deque([906, 914], maxlen=2), deque([1017, 1035], maxlen=2), deque([1157, 1175], maxlen=2), deque([1183, 1191], maxlen=2), deque([1191, 1226], maxlen=2), deque([1237, 1250], maxlen=2), deque([1259, 1304], maxlen=2), deque([1364, 1378], maxlen=2)]',
       'mtum_td_seq - (1385, 346) -                      Date  buy_sell_point   Open   High    Low  Close  ...      volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n1383  2025-08-07 11:30:00               0  565.5  568.0  565.5  567.5  ... -4.258443e+07          0.108696            8                4    570.0    566.5\n1384  2025-08-07 11:45:00               0  567.5  568.0  565.5  565.5  ... -4.271969e+07         -0.065217            9                3    570.0    566.5\n\n[2 rows x 346 columns][deque([1, 29], maxlen=2), deque([29, 50], maxlen=2), deque([58, 72], maxlen=2), deque([90, 126], maxlen=2), deque([126, 138], maxlen=2), deque([138, 148], maxlen=2), deque([148, 179], maxlen=2), deque([179, 191], maxlen=2), deque([197, 228], maxlen=2), deque([242, 294], maxlen=2), deque([387, 399], maxlen=2), deque([420, 438], maxlen=2), deque([485, 509], maxlen=2), deque([509, 529], maxlen=2), deque([546, 581], maxlen=2), deque([581, 595], maxlen=2), deque([626, 635], maxlen=2), deque([703, 713], maxlen=2), deque([727, 751], maxlen=2), deque([759, 775], maxlen=2), deque([775, 802], maxlen=2), deque([802, 821], maxlen=2), deque([835, 844], maxlen=2), deque([863, 906], maxlen=2), deque([906, 914], maxlen=2), deque([1017, 1035], maxlen=2), deque([1157, 1175], maxlen=2), deque([1183, 1191], maxlen=2), deque([1191, 1226], maxlen=2), deque([1237, 1250], maxlen=2), deque([1259, 1304], maxlen=2), deque([1364, 1378], maxlen=2)]',
       'mtum_td_seq_sig - (1385, 346) -                      Date  buy_sell_point   Open   High    Low  Close  ...      volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n1383  2025-08-07 11:30:00               0  565.5  568.0  565.5  567.5  ... -4.258443e+07          0.108696            8                4    570.0    566.5\n1384  2025-08-07 11:45:00               0  567.5  568.0  565.5  565.5  ... -4.271969e+07         -0.065217            9                3    570.0    566.5\n\n[2 rows x 346 columns][deque([1, 29], maxlen=2), deque([29, 50], maxlen=2), deque([58, 72], maxlen=2), deque([90, 126], maxlen=2), deque([126, 138], maxlen=2), deque([138, 148], maxlen=2), deque([148, 179], maxlen=2), deque([179, 191], maxlen=2), deque([197, 228], maxlen=2), deque([242, 294], maxlen=2), deque([387, 399], maxlen=2), deque([420, 438], maxlen=2), deque([485, 509], maxlen=2), deque([509, 529], maxlen=2), deque([546, 581], maxlen=2), deque([581, 595], maxlen=2), deque([626, 635], maxlen=2), deque([703, 713], maxlen=2), deque([727, 751], maxlen=2), deque([759, 775], maxlen=2), deque([775, 802], maxlen=2), deque([802, 821], maxlen=2), deque([835, 844], maxlen=2), deque([863, 906], maxlen=2), deque([906, 914], maxlen=2), deque([1017, 1035], maxlen=2), deque([1157, 1175], maxlen=2), deque([1183, 1191], maxlen=2), deque([1191, 1226], maxlen=2), deque([1237, 1250], maxlen=2), deque([1259, 1304], maxlen=2), deque([1364, 1378], maxlen=2)]',
       'tend_hh - (1385, 346) -                      Date  buy_sell_point   Open   High    Low  Close  ...      volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n1383  2025-08-07 11:30:00               0  565.5  568.0  565.5  567.5  ... -4.258443e+07          0.108696            8                4    570.0    566.5\n1384  2025-08-07 11:45:00               0  567.5  568.0  565.5  565.5  ... -4.271969e+07         -0.065217            9                3    570.0    566.5\n\n[2 rows x 346 columns][deque([1, 29], maxlen=2), deque([29, 50], maxlen=2), deque([58, 72], maxlen=2), deque([90, 126], maxlen=2), deque([126, 138], maxlen=2), deque([138, 148], maxlen=2), deque([148, 179], maxlen=2), deque([179, 191], maxlen=2), deque([197, 228], maxlen=2), deque([242, 294], maxlen=2), deque([387, 399], maxlen=2), deque([420, 438], maxlen=2), deque([485, 509], maxlen=2), deque([509, 529], maxlen=2), deque([546, 581], maxlen=2), deque([581, 595], maxlen=2), deque([626, 635], maxlen=2), deque([703, 713], maxlen=2), deque([727, 751], maxlen=2), deque([759, 775], maxlen=2), deque([775, 802], maxlen=2), deque([802, 821], maxlen=2), deque([835, 844], maxlen=2), deque([863, 906], maxlen=2), deque([906, 914], maxlen=2), deque([1017, 1035], maxlen=2), deque([1157, 1175], maxlen=2), deque([1183, 1191], maxlen=2), deque([1191, 1226], maxlen=2), deque([1237, 1250], maxlen=2), deque([1259, 1304], maxlen=2), deque([1364, 1378], maxlen=2)]',
       'tend_hl - (1385, 346) -                      Date  buy_sell_point   Open   High    Low  Close  ...      volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n1383  2025-08-07 11:30:00               0  565.5  568.0  565.5  567.5  ... -4.258443e+07          0.108696            8                4    570.0    566.5\n1384  2025-08-07 11:45:00               0  567.5  568.0  565.5  565.5  ... -4.271969e+07         -0.065217            9                3    570.0    566.5\n\n[2 rows x 346 columns][deque([1, 29], maxlen=2), deque([29, 50], maxlen=2), deque([58, 72], maxlen=2), deque([90, 126], maxlen=2), deque([126, 138], maxlen=2), deque([138, 148], maxlen=2), deque([148, 179], maxlen=2), deque([179, 191], maxlen=2), deque([197, 228], maxlen=2), deque([242, 294], maxlen=2), deque([387, 399], maxlen=2), deque([420, 438], maxlen=2), deque([485, 509], maxlen=2), deque([509, 529], maxlen=2), deque([546, 581], maxlen=2), deque([581, 595], maxlen=2), deque([626, 635], maxlen=2), deque([703, 713], maxlen=2), deque([727, 751], maxlen=2), deque([759, 775], maxlen=2), deque([775, 802], maxlen=2), deque([802, 821], maxlen=2), deque([835, 844], maxlen=2), deque([863, 906], maxlen=2), deque([906, 914], maxlen=2), deque([1017, 1035], maxlen=2), deque([1157, 1175], maxlen=2), deque([1183, 1191], maxlen=2), deque([1191, 1226], maxlen=2), deque([1237, 1250], maxlen=2), deque([1259, 1304], maxlen=2), deque([1364, 1378], maxlen=2)]'],
      dtype='object', length=346)
root - [INFO]{MainThread} - get_LowerHighs_LowerHighs() - Andy - 5.4.5.3
root - [INFO]{MainThread} - get_LowerHighs_LowerHighs() - Andy - 5.4.5.4
root - [INFO]{MainThread} - get_LowerHighs_LowerHighs() - Andy - 5.4.6
root - [INFO]{MainThread} - get_LowerHighs_LowerHighs() - Andy - 5.4.7
root - [INFO]{MainThread} - get_all_pandas_TU_tecnical() - Andy - 5.5
root - [INFO]{MainThread} - get_all_pandas_TU_tecnical() - Andy - 5.6
root - [INFO]{MainThread} - get_all_pandas_TU_tecnical() - Andy - 5.7
root - [INFO]{MainThread} - get_all_pandas_TU_tecnical() - Andy - 5.7.1
root - [INFO]{MainThread} - get_all_pandas_TU_tecnical() - Andy - 5.8
root - [INFO]{MainThread} - get_all_pandas_TU_tecnical() - Andy - 5.9
root - [INFO]{MainThread} - get_ALL_tech_data_local() - Andy - 6
root - [INFO]{MainThread} - get_ALL_tech_data_local() - Andy - 7
yfinance - [DEBUG]{MainThread} - wrapper() - Entering history()
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['^HSI', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -  Entering history()
yfinance - [DEBUG]{MainThread} - history() - ^HSI: Yahoo GET parameters: {'range': '60d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -   Entering get()
yfinance - [DEBUG]{MainThread} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{MainThread} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/^HSI
yfinance - [DEBUG]{MainThread} - _make_request() - params={'range': '60d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{MainThread} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - _get_crumb_basic() - reusing crumb
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _make_request() - response code=200
yfinance - [DEBUG]{MainThread} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{MainThread} - wrapper() -   Exiting get()
yfinance - [DEBUG]{MainThread} - history() - ^HSI: yfinance received OHLC data: 2025-05-15 01:30:00 -> 2025-08-07 04:05:00
yfinance - [DEBUG]{MainThread} - history() - ^HSI: OHLC after cleaning: 2025-05-15 09:30:00+08:00 -> 2025-08-07 12:05:00+08:00
yfinance - [DEBUG]{MainThread} - history() - ^HSI: OHLC after combining events: 2025-05-15 09:30:00+08:00 -> 2025-08-07 12:05:00+08:00
yfinance - [DEBUG]{MainThread} - history() - ^HSI: yfinance returning OHLC: 2025-05-15 09:30:00+08:00 -> 2025-08-07 12:00:00+08:00
yfinance - [DEBUG]{MainThread} - wrapper() -  Exiting history()
yfinance - [DEBUG]{MainThread} - wrapper() - Exiting history()
matplotlib - [DEBUG]{MainThread} - wrapper() - matplotlib data path: /opt/conda/lib/python3.10/site-packages/matplotlib/mpl-data
matplotlib - [DEBUG]{MainThread} - wrapper() - CONFIGDIR=/root/.config/matplotlib
matplotlib - [DEBUG]{MainThread} - <module>() - interactive is False
matplotlib - [DEBUG]{MainThread} - <module>() - platform is linux
matplotlib - [DEBUG]{MainThread} - wrapper() - CACHEDIR=/root/.cache/matplotlib
matplotlib.font_manager - [DEBUG]{MainThread} - _load_fontmanager() - Using fontManager instance from /root/.cache/matplotlib/fontlist-v390.json
root - [INFO]{MainThread} - <module>() - Processing stock: 2888.HK, CSV path: d_price/2888.HK_PLAIN_stock_history_MONTH_3_AD.csv
root - [INFO]{MainThread} - <module>() - Processing stock: 2888.HK, Buy/Sell type: neg, Columns JSON: <Feature_selection_json_columns.JsonColumns object at 0x7b9893043eb0>
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1360, 1075) Path: d_price/2888.HK_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, mtum_MACD_signal, mtum_MACD_fix_signal, mtum_STCmacd_10_12_26_05, mtum_MACD_fix, mtum_MACD, olap_BBAND_dif, mtum_DMP_14, mtum_MACD_ext_signal, mtum_AO_5_34, mtum_APO, mtum_PLUS_DM, volu_PVT, mtum_PPO, mtum_MACD_ext
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point  mtum_MACD_signal  mtum_MACD_fix_signal  ...  mtum_PLUS_DM     volu_PVT  mtum_PPO  mtum_MACD_ext
0  2025-05-08 09:45:00               0               NaN                   NaN  ...           NaN          NaN       NaN            NaN
1  2025-05-08 10:00:00               0               NaN                   NaN  ...           NaN -5441.905989       NaN            NaN
2  2025-05-08 10:15:00               0               NaN                   NaN  ...           NaN -4633.977435       NaN            NaN
3  2025-05-08 10:30:00               0               NaN                   NaN  ...           NaN   239.103817       NaN            NaN
4  2025-05-08 10:45:00               0               NaN                   NaN  ...           NaN   758.397349       NaN            NaN

[5 rows x 16 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point  mtum_MACD_signal  mtum_MACD_fix_signal  mtum_STCmacd_10_12_26_05  ...  mtum_PLUS_DM      volu_PVT     mtum_PPO  mtum_MACD_ext
count     1360.000000       1327.000000           1327.000000               1335.000000  ...   1347.000000  1.359000e+03  1335.000000    1327.000000
mean        -0.220588          0.174011              0.165809                  0.173978  ...      2.080962  4.006968e+06     0.134056       0.165321
std         33.552632          0.434848              0.414170                  0.477982  ...      1.246418  1.283495e+06     0.582038       0.750281
min       -100.000000         -1.043109             -0.989506                 -1.477256  ...      0.317245 -1.237354e+04    -1.580898      -2.094872
25%          0.000000         -0.142982             -0.136294                 -0.158651  ...      1.261030  3.429837e+06    -0.225125      -0.296154
50%          0.000000          0.110965              0.105660                  0.123521  ...      1.790762  3.842333e+06     0.074868       0.087179
75%          0.000000          0.408720              0.390819                  0.408022  ...      2.504998  5.160512e+06     0.440660       0.556089
max        100.000000          1.747920              1.663759                  2.010547  ...      9.341193  7.822783e+06     3.052088       3.469871

[8 rows x 15 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() -  groupby(Y_TARGET).count()                 Date
buy_sell_point      
0               1282
100               78
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96mDataFrame head:
            Date  buy_sell_point  mtum_MACD_signal  mtum_MACD_fix_signal  ...  mtum_PLUS_DM      volu_PVT  mtum_PPO  mtum_MACD_ext
33  1.746796e+09               0          0.233377              0.229162  ...      1.695708  15296.857070  0.429545       0.469872
34  1.746797e+09               0          0.242322              0.236970  ...      1.574586  14299.554127  0.378455       0.414103
35  1.746798e+09               0          0.250957              0.244555  ...      1.462116  14299.554127  0.327957       0.358975
36  1.746799e+09               0          0.256777              0.249557  ...      1.457677  13849.969700  0.304414       0.333333
37  1.746800e+09               0          0.256752              0.249114  ...      1.353558  12195.449492  0.279758       0.306410

[5 rows x 16 columns][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 15)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 15)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96marr_vali sample: [[1.74680460e+09 2.60973000e-01 2.51331000e-01 3.28161000e-01
  3.03743000e-01 3.17952000e-01 1.36514100e+00 2.31827800e+00
  2.99217000e-01 6.27941000e-01 2.71796000e-01 2.31827800e+00
  3.20245280e+04 2.47511000e-01 2.71796000e-01]
 [1.74680370e+09 2.46728000e-01 2.38228000e-01 2.75810000e-01
  2.52897000e-01 2.63745000e-01 1.13912700e+00 1.95814500e+00
  3.21225000e-01 4.92058000e-01 2.40385000e-01 1.95814500e+00
  1.64126623e+04 2.19060000e-01 2.40385000e-01]
 [1.74680280e+09 2.42473000e-01 2.34561000e-01 2.55888000e-01
  2.32305000e-01 2.41629000e-01 1.08738700e+00 2.00108100e+00
  3.45798000e-01 4.45881000e-01 2.42949000e-01 2.00108100e+00
  1.64126623e+04 2.21537000e-01 2.42949000e-01]
 [1.74680190e+09 2.42685000e-01 2.35124000e-01 2.26738000e-01
  2.02791000e-01 2.09887000e-01 1.23677400e+00 1.72424000e+00
  3.64459000e-01 4.27940000e-01 2.41667000e-01 1.72424000e+00
  1.02017493e+04 2.20499000e-01 2.41667000e-01]
 [1.74680100e+09 2.50884000e-01 2.43208000e-01 2.47326000e-01
  2.19584000e-01 2.27411000e-01 1.34996700e+00 1.85687300e+00
  3.78989000e-01 4.94117000e-01 2.83333000e-01 1.85687300e+00
  9.95105028e+03 2.58634000e-01 2.83333000e-01]
 [1.74680010e+09 2.56752000e-01 2.49114000e-01 2.80187000e-01
  2.47341000e-01 2.56652000e-01 1.47729900e+00 1.35355800e+00
  3.87251000e-01 5.16471000e-01 3.06410000e-01 1.35355800e+00
  1.21954495e+04 2.79758000e-01 3.06410000e-01]
 [1.74679920e+09 2.56777000e-01 2.49557000e-01 3.07873000e-01
  2.69565000e-01 2.80058000e-01 1.74115400e+00 1.45767700e+00
  3.88034000e-01 5.74412000e-01 3.33333000e-01 1.45767700e+00
  1.38499697e+04 3.04414000e-01 3.33333000e-01]
 [1.74679830e+09 2.50957000e-01 2.44555000e-01 3.18369000e-01
  2.74896000e-01 2.85496000e-01 1.85257000e+00 1.46211600e+00
  3.84473000e-01 5.87060000e-01 3.58975000e-01 1.46211600e+00
  1.42995541e+04 3.27957000e-01 3.58975000e-01]
 [1.74679740e+09 2.42322000e-01 2.36970000e-01 3.16952000e-01
  2.68204000e-01 2.78103000e-01 2.01544500e+00 1.57458600e+00
  3.73861000e-01 5.83824000e-01 4.14103000e-01 1.57458600e+00
  1.42995541e+04 3.78455000e-01 4.14103000e-01]
 [1.74679650e+09 2.33377000e-01 2.29162000e-01 3.10535000e-01
  2.55856000e-01 2.64622000e-01 2.09179900e+00 1.69570800e+00
  3.52564000e-01 5.50882000e-01 4.69872000e-01 1.69570800e+00
  1.52968571e+04 4.29545000e-01 4.69872000e-01]][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - i want to chc folder: Models/TF_multi/Scalers/2888.HK_neg_vgood16_
root - [DEBUG]{MainThread} - scaler_min_max_array() - Scaler will be Saved Path: Models/TF_multi/Scalers/2888.HK_neg_vgood16_.scal
root - [INFO]{MainThread} - log_shapes_trains_val_data() - Training features shape SMOTE:(1316, 10, 15)	 Labels shape:(1316, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Validation features shape:(378, 10, 15)	 Labels shape:(378, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Test features shape:(238, 10, 15)		 Labels shape:(238, 1)
root - [DEBUG]{MainThread} - __init__() - [95mCreated object TF_multidimension Path from: d_price/2888.HK_PLAIN_stock_history_MONTH_3_AD.csv[0m
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1360, 1075) Path: d_price/2888.HK_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, mtum_MACD_signal, mtum_MACD_fix_signal, mtum_STCmacd_10_12_26_05, mtum_MACD_fix, mtum_MACD, olap_BBAND_dif, mtum_DMP_14, mtum_MACD_ext_signal, mtum_AO_5_34, mtum_APO, mtum_PLUS_DM, volu_PVT, mtum_PPO, mtum_MACD_ext, cycl_SINE_lead, vola_HWU, volu_EFI_13, ti_force_index_13, tend_VHF_28, ti_coppock_14_11_10, ma_TEMA_20, olap_HWMA_02_01_01, ma_DEMA_10, mtum_SMIs_5_20_5, ma_KAMA_10, sti_TSF, mtum_BIAS_SMA_26, vola_HWM, ma_DEMA_20, sti_ENTP_10, mtum_QQE_14_5_4236_RSIMA, sti_CORREL, ma_TEMA_10
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point  mtum_MACD_signal  mtum_MACD_fix_signal  ...  sti_ENTP_10  mtum_QQE_14_5_4236_RSIMA  sti_CORREL  ma_TEMA_10
0  2025-05-08 09:45:00               0               NaN                   NaN  ...          NaN                       NaN         NaN         NaN
1  2025-05-08 10:00:00               0               NaN                   NaN  ...          NaN                       NaN         NaN         NaN
2  2025-05-08 10:15:00               0               NaN                   NaN  ...          NaN                       NaN         NaN         NaN
3  2025-05-08 10:30:00               0               NaN                   NaN  ...          NaN                       NaN         NaN         NaN
4  2025-05-08 10:45:00               0               NaN                   NaN  ...          NaN                       NaN         NaN         NaN

[5 rows x 35 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point  mtum_MACD_signal  mtum_MACD_fix_signal  mtum_STCmacd_10_12_26_05  ...  sti_ENTP_10  mtum_QQE_14_5_4236_RSIMA   sti_CORREL   ma_TEMA_10
count     1360.000000       1327.000000           1327.000000               1335.000000  ...  1342.000000               1342.000000  1331.000000  1333.000000
mean        -0.220588          0.174011              0.165809                  0.173978  ...     3.323525                 53.389314     0.848391   128.491735
std         33.552632          0.434848              0.414170                  0.477982  ...     0.008766                 10.505371     0.146957     9.006836
min       -100.000000         -1.043109             -0.989506                 -1.477256  ...     3.294164                 23.552128    -0.033344   109.648014
25%          0.000000         -0.142982             -0.136294                 -0.158651  ...     3.319020                 45.496950     0.816877   121.718906
50%          0.000000          0.110965              0.105660                  0.123521  ...     3.322547                 53.441994     0.897806   125.521969
75%          0.000000          0.408720              0.390819                  0.408022  ...     3.327579                 61.121103     0.942007   137.646381
max        100.000000          1.747920              1.663759                  2.010547  ...     3.369570                 79.326048     0.983787   148.087661

[8 rows x 34 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() -  groupby(Y_TARGET).count()                 Date
buy_sell_point      
0               1282
100               78
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96mDataFrame head:
            Date  buy_sell_point  mtum_MACD_signal  mtum_MACD_fix_signal  ...  sti_ENTP_10  mtum_QQE_14_5_4236_RSIMA  sti_CORREL  ma_TEMA_10
63  1.747062e+09               0          0.359671              0.341596  ...     3.335848                 69.371987    0.686603  113.930150
64  1.747063e+09               0          0.513181              0.486191  ...     3.343552                 75.115050    0.821821  115.664956
65  1.747064e+09               0          0.668545              0.632899  ...     3.348231                 74.726653    0.876697  116.172493
66  1.747065e+09               0          0.815401              0.771921  ...     3.352379                 74.467722    0.894232  116.435451
67  1.747129e+09               0          0.985659              0.933177  ...     3.358430                 76.364018    0.924971  117.622615

[5 rows x 35 columns][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 34)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 34)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96marr_vali sample: [[ 1.74713310e+09  1.63132100e+00  1.54853300e+00  1.98088500e+00
   1.88418100e+00  1.98081700e+00  1.27846620e+01  5.99098500e+00
   1.84145200e+00  4.81911700e+00  2.99423000e+00  5.99098500e+00
   2.73734385e+06  2.64552900e+00  2.99423000e+00 -1.75841000e-01
   1.20667319e+02  1.08893385e+05  1.08893312e+05  4.84848000e-01
   1.20164890e+01  1.18462393e+02  1.19210027e+02  1.18293372e+02
   5.08515000e-01  1.16719800e+02  1.19813185e+02  3.72790000e-02
   1.19210027e+02  1.17378799e+02  3.36892100e+00  7.34080380e+01
   9.15902000e-01  1.18389569e+02]
 [ 1.74713220e+09  1.54394700e+00  1.46462100e+00  2.01054700e+00
   1.91033200e+00  2.01046600e+00  1.28177370e+01  6.45182900e+00
   1.56054100e+00  5.61352900e+00  2.74294800e+00  6.45182900e+00
   2.81307332e+06  2.42920700e+00  2.74294800e+00 -9.72350000e-02
   1.20365475e+02  1.41935744e+05  1.41935660e+05  5.00000000e-01
   1.18287090e+01  1.18304280e+02  1.18839680e+02  1.18296540e+02
   5.24136000e-01  1.16609565e+02  1.19898899e+02  4.50300000e-02
   1.18839680e+02  1.17108855e+02  3.36957000e+00  7.49908680e+01
   9.52848000e-01  1.18612640e+02]
 [ 1.74713130e+09  1.42731800e+00  1.35319400e+00  1.95807100e+00
   1.85902400e+00  1.95797600e+00  1.24569000e+01  6.94812400e+00
   1.27770600e+00  5.40029300e+00  2.46346100e+00  6.94812400e+00
   2.80903972e+06  2.18757400e+00  2.46346100e+00 -9.10626000e-01
   1.19841327e+02  1.64800444e+05  1.64800345e+05  5.06329000e-01
   1.13287640e+01  1.17883454e+02  1.18233418e+02  1.17990332e+02
   5.27585000e-01  1.16293961e+02  1.19494502e+02  4.51860000e-02
   1.18233418e+02  1.16656001e+02  3.36803900e+00  7.48268520e+01
   9.49812000e-01  1.18442574e+02]
 [ 1.74713040e+09  1.29465300e+00  1.22673600e+00  1.89315800e+00
   1.79578500e+00  1.89304600e+00  1.20092610e+01  7.48259500e+00
   1.02122400e+00  5.32970500e+00  2.12499900e+00  7.48259500e+00
   2.80903972e+06  1.89141000e+00  2.12499900e+00 -8.79652000e-01
   1.19280175e+02  1.92267184e+05  1.92267069e+05  4.90798000e-01
   1.05999210e+01  1.17427606e+02  1.17589707e+02  1.17666722e+02
   5.33008000e-01  1.15986501e+02  1.19026371e+02  4.76190000e-02
   1.17589707e+02  1.16180841e+02  3.36602200e+00  7.50092940e+01
   9.45445000e-01  1.18283981e+02]
 [ 1.74712950e+09  1.14505500e+00  1.08447400e+00  1.78276800e+00
   1.68966000e+00  1.78263600e+00  1.13229660e+01  8.05817900e+00
   8.00569000e-01  5.37911700e+00  1.82435900e+00  8.05817900e+00
   2.79626242e+06  1.62755000e+00  1.82435900e+00  5.06590000e-02
   1.18482779e+02  2.21815882e+05  2.21815747e+05  5.06329000e-01
   9.60682800e+00  1.16835307e+02  1.16833170e+02  1.17184948e+02
   5.36551000e-01  1.15602275e+02  1.18292306e+02  4.55670000e-02
   1.16833170e+02  1.15617215e+02  3.36275700e+00  7.52829570e+01
   9.38248000e-01  1.17931982e+02]
 [ 1.74712860e+09  9.85659000e-01  9.33177000e-01  1.66684900e+00
   1.57820100e+00  1.66669200e+00  1.05830040e+01  8.67803900e+00
   6.12464000e-01  4.92264700e+00  1.50833300e+00  8.67803900e+00
   2.81625525e+06  1.34853200e+00  1.50833300e+00  1.11674000e-01
   1.17800859e+02  2.62720452e+05  2.62720295e+05  5.16129000e-01
   8.62769100e+00  1.16236731e+02  1.16078624e+02  1.16712918e+02
   5.34125000e-01  1.15244010e+02  1.17501097e+02  5.58780000e-02
   1.16078624e+02  1.15057027e+02  3.35843000e+00  7.63640180e+01
   9.24971000e-01  1.17622615e+02]
 [ 1.74706470e+09  8.15401000e-01  7.71921000e-01  1.40301200e+00
   1.32800900e+00  1.40282700e+00  9.15213600e+00  6.00712100e+00
   4.59686000e-01  3.71264700e+00  1.18782000e+00  6.00712100e+00
   2.46906609e+06  1.06479500e+00  1.18782000e+00  1.65747000e-01
   1.16737302e+02  2.39557551e+05  2.39557368e+05  5.45454000e-01
   7.00620200e+00  1.15190539e+02  1.14980796e+02  1.15631839e+02
   5.07542000e-01  1.14460107e+02  1.16219779e+02  3.71670000e-02
   1.14980796e+02  1.14206969e+02  3.35237900e+00  7.44677220e+01
   8.94232000e-01  1.16435451e+02]
 [ 1.74706380e+09  6.68545000e-01  6.32899000e-01  1.29021700e+00
   1.21973400e+00  1.28999800e+00  8.49197300e+00  6.46920700e+00
   3.45940000e-01  2.97882400e+00  9.66666000e-01  6.46920700e+00
   2.46906609e+06  8.68133000e-01  9.66666000e-01  2.31024000e-01
   1.15780404e+02  2.79483810e+05  2.79483596e+05  5.48872000e-01
   5.96518900e+00  1.14646874e+02  1.14324090e+02  1.15205446e+02
   4.82834000e-01  1.14194035e+02  1.15509889e+02  3.90660000e-02
   1.14324090e+02  1.13716931e+02  3.34823100e+00  7.47266530e+01
   8.76697000e-01  1.16172493e+02]
 [ 1.74706290e+09  5.13181000e-01  4.86191000e-01  1.12748300e+00
   1.06456900e+00  1.12722400e+00  7.67739700e+00  6.96683800e+00
   2.53561000e-01  2.13852900e+00  7.60256000e-01  6.96683800e+00
   2.61012197e+06  6.84157000e-01  7.60256000e-01  2.77046000e-01
   1.13870350e+02  3.53570343e+05  3.53570093e+05  5.98361000e-01
   4.78945100e+00  1.13959359e+02  1.13569917e+02  1.14592911e+02
   4.27770000e-01  1.13908814e+02  1.14572527e+02  5.28870000e-02
   1.13569917e+02  1.13140271e+02  3.34355200e+00  7.51150500e+01
   8.21821000e-01  1.15664956e+02]
 [ 1.74706200e+09  3.59671000e-01  3.41596000e-01  7.71010000e-01
   7.27983000e-01  7.70705000e-01  5.61181000e+00  7.39505800e+00
   1.91666000e-01  1.18735200e+00  4.66025000e-01  7.39505800e+00
   2.58979790e+06  4.20440000e-01  4.66025000e-01  2.60592000e-01
   1.12664832e+02  4.08538927e+05  4.08538636e+05  5.90164000e-01
   2.93037600e+00  1.12689518e+02  1.12383790e+02  1.13154781e+02
   3.09123000e-01  1.12506857e+02  1.13060438e+02  5.46510000e-02
   1.12383790e+02  1.12190497e+02  3.33584800e+00  6.93719870e+01
   6.86603000e-01  1.13930150e+02]][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - i want to chc folder: Models/TF_multi/Scalers/2888.HK_neg_good9_
root - [DEBUG]{MainThread} - scaler_min_max_array() - Scaler will be Saved Path: Models/TF_multi/Scalers/2888.HK_neg_good9_.scal
root - [INFO]{MainThread} - log_shapes_trains_val_data() - Training features shape SMOTE:(1274, 10, 34)	 Labels shape:(1274, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Validation features shape:(370, 10, 34)	 Labels shape:(370, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Test features shape:(232, 10, 34)		 Labels shape:(232, 1)
root - [DEBUG]{MainThread} - __init__() - [95mCreated object TF_multidimension Path from: d_price/2888.HK_PLAIN_stock_history_MONTH_3_AD.csv[0m
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1360, 1075) Path: d_price/2888.HK_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, mtum_MACD_signal, mtum_MACD_fix_signal, mtum_STCmacd_10_12_26_05, mtum_MACD_fix, mtum_MACD, olap_BBAND_dif, mtum_DMP_14, mtum_MACD_ext_signal, mtum_AO_5_34, mtum_APO, mtum_PLUS_DM, volu_PVT, mtum_PPO, mtum_MACD_ext, cycl_SINE_lead, vola_HWU, volu_EFI_13, ti_force_index_13, tend_VHF_28, ti_coppock_14_11_10, ma_TEMA_20, olap_HWMA_02_01_01, ma_DEMA_10, mtum_SMIs_5_20_5, ma_KAMA_10, sti_TSF, mtum_BIAS_SMA_26, vola_HWM, ma_DEMA_20, sti_ENTP_10, mtum_QQE_14_5_4236_RSIMA, sti_CORREL, ma_TEMA_10, ti_donchian_upper_20, trad_r2, ti_konk_avg, trad_r3, ti_hma_20, mcrh_TEMA_20_DEMA_100, tend_lh_crash, sti_LINEARREG_SLOPE, sti_LINEARREG_ANGLE, sti_LINEARREG, olap_BBAND_UPPER, olap_VWMA_10, vola_HWL, olap_SSF_10_2, ma_DEMA_5, ma_T3_5, fibo_r3, volu_PVI_1, ma_SMA_5, wood_pp, cama_r3, ma_EMA_5, wood_r2, cama_r2, ichi_tenkan_sen, High, mtum_CTI_12, fibo_s1, olap_SWMA_10, fibo_r2, fibo_r1, fibo_pp, demark_r1, demark_pp, cycl_SINE_sine, olap_BBAND_LOWER, cycl_DCPHASE, clas_r3, clas_r2, ma_TRIMA_5, mtum_QQEs_14_5_4236, clas_pp, olap_JMA_7_0, cama_pp, wood_r1, mtum_td_seq, perf_ha, clas_r1, ma_WMA_10, wood_r3, mcrh_TRIMA_20_WMA_100, ma_KAMA_5, mcrh_TEMA_20_EMA_50, mcrh_TEMA_50_T3_100, ma_EMA_10, mcrh_TRIMA_10_SMA_20, mcrh_TRIMA_20_SMA_100, mcrh_EMA_5_T3_50, mcrh_TRIMA_20_SMA_50, ma_SMA_10, ma_T3_10, trad_pp, ma_KAMA_20, trad_r1, vola_THERMOma_20_2_05, mtum_ADX, ma_EMA_50
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point  mtum_MACD_signal  mtum_MACD_fix_signal  ...     trad_r1  vola_THERMOma_20_2_05  mtum_ADX  ma_EMA_50
0  2025-05-08 09:45:00               0               NaN                   NaN  ...         NaN                    NaN       NaN        NaN
1  2025-05-08 10:00:00               0               NaN                   NaN  ...  108.699997                    NaN       NaN        NaN
2  2025-05-08 10:15:00               0               NaN                   NaN  ...  108.800003                    NaN       NaN        NaN
3  2025-05-08 10:30:00               0               NaN                   NaN  ...  108.633331                    NaN       NaN        NaN
4  2025-05-08 10:45:00               0               NaN                   NaN  ...  109.066668                    NaN       NaN        NaN

[5 rows x 102 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point  mtum_MACD_signal  mtum_MACD_fix_signal  mtum_STCmacd_10_12_26_05  ...      trad_r1  vola_THERMOma_20_2_05     mtum_ADX    ma_EMA_50
count     1360.000000       1327.000000           1327.000000               1335.000000  ...  1359.000000            1340.000000  1333.000000  1311.000000
mean        -0.220588          0.174011              0.165809                  0.173978  ...   128.379446               0.445131    26.724387   128.190932
std         33.552632          0.434848              0.414170                  0.477982  ...     9.379198               0.213305    10.955539     8.789082
min       -100.000000         -1.043109             -0.989506                 -1.477256  ...   108.633331               0.135678     6.710081   109.612000
25%          0.000000         -0.142982             -0.136294                 -0.158651  ...   121.833336               0.301421    18.135106   121.665529
50%          0.000000          0.110965              0.105660                  0.123521  ...   125.599996               0.387181    25.181204   124.612670
75%          0.000000          0.408720              0.390819                  0.408022  ...   137.699999               0.521446    33.394088   135.992802
max        100.000000          1.747920              1.663759                  2.010547  ...   148.933324               1.718340    61.556598   143.589567

[8 rows x 101 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() -  groupby(Y_TARGET).count()                 Date
buy_sell_point      
0               1282
100               78
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96mDataFrame head:
            Date  buy_sell_point  mtum_MACD_signal  mtum_MACD_fix_signal  ...     trad_r1  vola_THERMOma_20_2_05   mtum_ADX   ma_EMA_50
63  1.747062e+09               0          0.359671              0.341596  ...  111.666667               0.794778  44.002982  110.354521
64  1.747063e+09               0          0.513181              0.486191  ...  118.766668               1.185752  47.146383  110.615128
65  1.747064e+09               0          0.668545              0.632899  ...  117.266665               1.168061  48.361404  110.814534
66  1.747065e+09               0          0.815401              0.771921  ...  116.733330               1.161579  49.177731  111.006121
67  1.747129e+09               0          0.985659              0.933177  ...  116.066666               1.346190  50.818897  111.284312

[5 rows x 102 columns][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 101)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 101)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96marr_vali sample: [[1.74713310e+09 1.63132100e+00 1.54853300e+00 ... 1.41651500e+00
  4.91461910e+01 1.12430249e+02]
 [1.74713220e+09 1.54394700e+00 1.46462100e+00 ... 1.01825400e+00
  5.24187030e+01 1.12227402e+02]
 [1.74713130e+09 1.42731800e+00 1.35319400e+00 ... 1.10438600e+00
  5.20620550e+01 1.11991786e+02]
 ...
 [1.74706380e+09 6.68545000e-01 6.32899000e-01 ... 1.16806100e+00
  4.83614040e+01 1.10814534e+02]
 [1.74706290e+09 5.13181000e-01 4.86191000e-01 ... 1.18575200e+00
  4.71463830e+01 1.10615128e+02]
 [1.74706200e+09 3.59671000e-01 3.41596000e-01 ... 7.94778000e-01
  4.40029820e+01 1.10354521e+02]][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - i want to chc folder: Models/TF_multi/Scalers/2888.HK_neg_reg4_
root - [DEBUG]{MainThread} - scaler_min_max_array() - Scaler will be Saved Path: Models/TF_multi/Scalers/2888.HK_neg_reg4_.scal
root - [INFO]{MainThread} - log_shapes_trains_val_data() - Training features shape SMOTE:(1286, 10, 101)	 Labels shape:(1286, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Validation features shape:(370, 10, 101)	 Labels shape:(370, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Test features shape:(232, 10, 101)		 Labels shape:(232, 1)
root - [DEBUG]{MainThread} - __init__() - [95mCreated object TF_multidimension Path from: d_price/2888.HK_PLAIN_stock_history_MONTH_3_AD.csv[0m
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1360, 1075) Path: d_price/2888.HK_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, mtum_MACD_signal, mtum_MACD_fix_signal, mtum_STCmacd_10_12_26_05, mtum_MACD_fix, mtum_MACD, olap_BBAND_dif, mtum_DMP_14, mtum_MACD_ext_signal, mtum_AO_5_34, mtum_APO, mtum_PLUS_DM, volu_PVT, mtum_PPO, mtum_MACD_ext, cycl_SINE_lead, vola_HWU, volu_EFI_13, ti_force_index_13, tend_VHF_28, ti_coppock_14_11_10, ma_TEMA_20, olap_HWMA_02_01_01, ma_DEMA_10, mtum_SMIs_5_20_5, ma_KAMA_10, sti_TSF, mtum_BIAS_SMA_26, vola_HWM, ma_DEMA_20, sti_ENTP_10, mtum_QQE_14_5_4236_RSIMA, sti_CORREL, ma_TEMA_10, ti_donchian_upper_20, trad_r2, ti_konk_avg, trad_r3, ti_hma_20, mcrh_TEMA_20_DEMA_100, tend_lh_crash, sti_LINEARREG_SLOPE, sti_LINEARREG_ANGLE, sti_LINEARREG, olap_BBAND_UPPER, olap_VWMA_10, vola_HWL, olap_SSF_10_2, ma_DEMA_5, ma_T3_5, fibo_r3, volu_PVI_1, ma_SMA_5, wood_pp, cama_r3, ma_EMA_5, wood_r2, cama_r2, ichi_tenkan_sen, High, mtum_CTI_12, fibo_s1, olap_SWMA_10, fibo_r2, fibo_r1, fibo_pp, demark_r1, demark_pp, cycl_SINE_sine, olap_BBAND_LOWER, cycl_DCPHASE, clas_r3, clas_r2, ma_TRIMA_5, mtum_QQEs_14_5_4236, clas_pp, olap_JMA_7_0, cama_pp, wood_r1, mtum_td_seq, perf_ha, clas_r1, ma_WMA_10, wood_r3, mcrh_TRIMA_20_WMA_100, ma_KAMA_5, mcrh_TEMA_20_EMA_50, mcrh_TEMA_50_T3_100, ma_EMA_10, mcrh_TRIMA_10_SMA_20, mcrh_TRIMA_20_SMA_100, mcrh_EMA_5_T3_50, mcrh_TRIMA_20_SMA_50, ma_SMA_10, ma_T3_10, trad_pp, ma_KAMA_20, trad_r1, vola_THERMOma_20_2_05, mtum_ADX, ma_EMA_50, volu_Chaikin_ADOSC, ti_kelt_20_lower, trad_s2, vola_ATR, olap_SINWMA_14, ti_vortex_neg_14, tend_LDECAY_5, ti_choppiness_14, ti_chaikin_10_3, tend_renko_ATR, sti_TOS_STDEVALL_LR, sti_TOS_STDEVALL_U_1, tend_ll, tend_hl, sti_TOS_STDEVALL_U_2, sti_TOS_STDEVALL_U_3, volu_NVI_1, tend_hh_crash, ti_acc_dist, HSI_Close, olap_PWMA_10, ma_WMA_5, mcrh_KAMA_10_DEMA_100, mcrh_EMA_5_WMA_100, mcrh_EMA_5_SMA_50, mcrh_EMA_5_KAMA_20, mcrh_EMA_50_TEMA_100, mcrh_DEMA_50_T3_100, mcrh_DEMA_20_DEMA_100, mcrh_DEMA_10_TRIMA_100, mcrh_DEMA_10_T3_50, mcrh_DEMA_10_EMA_20, ma_WMA_20, mcrh_SMA_10_DEMA_100, ma_TRIMA_20, ma_TRIMA_10, ma_TEMA_5, ma_KAMA_50, fibo_s2, cycl_PHASOR_inph, clas_s1, cama_s3, cama_r1, Low, mcrh_KAMA_20_TEMA_100, mcrh_SMA_10_TRIMA_20, olap_MIDPRICE, mtum_INERTIA_20_14, olap_MIDPOINT, olap_MCGD_10, mtum_td_seq_sig, mtum_SMI_5_20_5, mtum_PVOs_12_26_9, mtum_PVOh_12_26_9, mtum_PLUS_DI, mtum_MOM, mtum_MACD_list, mtum_MACD_fix_list, mtum_FISHERT_9_1, mcrh_TEMA_10_T3_50, mtum_BEARP_13, mtum_AROON_up, mtum_ADXR, mcrh_WMA_5_ti_h20, mcrh_WMA_5_WMA_100, mcrh_WMA_5_T3_50, mcrh_TRIMA_50_KAMA_100, mcrh_TRIMA_20_EMA_50, mcrh_TEMA_5_T3_50, mcrh_TEMA_10_WMA_50, mtum_BR_26
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point  mtum_MACD_signal  mtum_MACD_fix_signal  ...  mcrh_TRIMA_20_EMA_50  mcrh_TEMA_5_T3_50  mcrh_TEMA_10_WMA_50  mtum_BR_26
0  2025-05-08 09:45:00               0               NaN                   NaN  ...                     0                  0                    0         NaN
1  2025-05-08 10:00:00               0               NaN                   NaN  ...                     0                  0                    0         NaN
2  2025-05-08 10:15:00               0               NaN                   NaN  ...                     0                  0                    0         NaN
3  2025-05-08 10:30:00               0               NaN                   NaN  ...                     0                  0                    0         NaN
4  2025-05-08 10:45:00               0               NaN                   NaN  ...                     0                  0                    0         NaN

[5 rows x 173 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point  mtum_MACD_signal  mtum_MACD_fix_signal  ...  mcrh_TEMA_5_T3_50  mcrh_TEMA_10_WMA_50   mtum_BR_26
count     1360.000000       1327.000000           1327.000000  ...        1360.000000          1360.000000  1334.000000
mean        -0.220588          0.174011              0.165809  ...           0.005147             0.002206   101.658189
std         33.552632          0.434848              0.414170  ...           0.269854             0.295905    35.302372
min       -100.000000         -1.043109             -0.989506  ...          -1.000000            -1.000000    35.909321
25%          0.000000         -0.142982             -0.136294  ...           0.000000             0.000000    75.000264
50%          0.000000          0.110965              0.105660  ...           0.000000             0.000000    96.531732
75%          0.000000          0.408720              0.390819  ...           0.000000             0.000000   123.978607
max        100.000000          1.747920              1.663759  ...           1.000000             1.000000   293.477871

[8 rows x 172 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() -  groupby(Y_TARGET).count()                 Date
buy_sell_point      
0               1282
100               78
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96mDataFrame head:
            Date  buy_sell_point  mtum_MACD_signal  mtum_MACD_fix_signal  ...  mcrh_TRIMA_20_EMA_50  mcrh_TEMA_5_T3_50  mcrh_TEMA_10_WMA_50  mtum_BR_26
63  1.747062e+09               0          0.359671              0.341596  ...                     0                  0                    0  293.477871
64  1.747063e+09               0          0.513181              0.486191  ...                     0                  0                    0  263.265255
65  1.747064e+09               0          0.668545              0.632899  ...                     0                  0                    0  198.437405
66  1.747065e+09               0          0.815401              0.771921  ...                     0                  0                    0  182.353086
67  1.747129e+09               0          0.985659              0.933177  ...                     0                  0                    0  237.879187

[5 rows x 173 columns][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 172)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 172)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96marr_vali sample: [[1.74713310e+09 1.63132100e+00 1.54853300e+00 ... 0.00000000e+00
  0.00000000e+00 1.30328140e+02]
 [1.74713220e+09 1.54394700e+00 1.46462100e+00 ... 0.00000000e+00
  0.00000000e+00 2.44777039e+02]
 [1.74713130e+09 1.42731800e+00 1.35319400e+00 ... 0.00000000e+00
  0.00000000e+00 2.14667287e+02]
 ...
 [1.74706380e+09 6.68545000e-01 6.32899000e-01 ... 0.00000000e+00
  0.00000000e+00 1.98437405e+02]
 [1.74706290e+09 5.13181000e-01 4.86191000e-01 ... 0.00000000e+00
  0.00000000e+00 2.63265255e+02]
 [1.74706200e+09 3.59671000e-01 3.41596000e-01 ... 0.00000000e+00
  0.00000000e+00 2.93477871e+02]][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - i want to chc folder: Models/TF_multi/Scalers/2888.HK_neg_low1_
root - [DEBUG]{MainThread} - scaler_min_max_array() - Scaler will be Saved Path: Models/TF_multi/Scalers/2888.HK_neg_low1_.scal
root - [INFO]{MainThread} - log_shapes_trains_val_data() - Training features shape SMOTE:(1302, 10, 172)	 Labels shape:(1302, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Validation features shape:(370, 10, 172)	 Labels shape:(370, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Test features shape:(232, 10, 172)		 Labels shape:(232, 1)
root - [DEBUG]{MainThread} - __init__() - [95mCreated object TF_multidimension Path from: d_price/2888.HK_PLAIN_stock_history_MONTH_3_AD.csv[0m
root - [INFO]{MainThread} - <module>() - Processing stock: 2888.HK, Buy/Sell type: pos, Columns JSON: <Feature_selection_json_columns.JsonColumns object at 0x7b9779dc9300>
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1360, 1075) Path: d_price/2888.HK_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, ti_acc_dist, volu_Chaikin_AD, volu_OBV, mtum_PVOh_12_26_9, ma_TRIMA_50
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point   ti_acc_dist  volu_Chaikin_AD  volu_OBV  mtum_PVOh_12_26_9  ma_TRIMA_50
0  2025-05-08 09:45:00               0  53750.000000     53750.000000   53750.0                NaN          NaN
1  2025-05-08 10:00:00               0  38975.281810     38975.281810   34050.0                NaN          NaN
2  2025-05-08 10:15:00               0  34600.281810     34600.281810   42800.0                NaN          NaN
3  2025-05-08 10:30:00               0  31959.323619     31959.323619   56006.0                NaN          NaN
4  2025-05-08 10:45:00               0  29134.323619     29134.323619   61656.0                NaN          NaN
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point   ti_acc_dist  volu_Chaikin_AD      volu_OBV  mtum_PVOh_12_26_9  ma_TRIMA_50
count     1360.000000  1.360000e+03     1.360000e+03  1.360000e+03        1327.000000  1311.000000
mean        -0.220588  3.676548e+06     3.676548e+06  3.947916e+06           0.050281   128.202419
std         33.552632  2.475170e+06     2.475170e+06  2.307063e+06          11.260851     8.837810
min       -100.000000 -2.576334e+04    -2.576334e+04  8.045000e+03         -21.048368   109.598461
25%          0.000000  1.577083e+06     1.577083e+06  2.055130e+06          -7.687669   121.715154
50%          0.000000  2.768576e+06     2.768576e+06  3.235511e+06          -1.585268   124.942769
75%          0.000000  6.158745e+06     6.158745e+06  6.333976e+06           5.572493   135.781999
max        100.000000  7.945700e+06     7.945700e+06  8.130776e+06          60.130128   144.502615
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() -  groupby(Y_TARGET).count()                 Date
buy_sell_point      
0               1285
100               75
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96mDataFrame head:
            Date  buy_sell_point   ti_acc_dist  volu_Chaikin_AD  volu_OBV  mtum_PVOh_12_26_9  ma_TRIMA_50
49  1.747046e+09               0  21711.131293     21711.131293   75769.0          -7.208816   109.598461
50  1.747047e+09               0  10019.131293     10019.131293   64077.0          -5.059331   109.639231
51  1.747048e+09               0  11413.868896     11413.868896   68261.0          -7.929952   109.679231
52  1.747048e+09               0 -10686.131104    -10686.131104   46161.0           1.164325   109.717692
53  1.747049e+09               0   2463.868896      2463.868896   59311.0           1.602313   109.755538[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 6)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 6)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96marr_vali sample: [[ 1.74705750e+09 -2.57633420e+04 -2.57633420e+04  7.76610000e+04
   9.37786900e+00  1.09953846e+02]
 [ 1.74705660e+09  5.83665798e+03  5.83665798e+03  1.09261000e+05
   2.76153500e+00  1.09913385e+02]
 [ 1.74705570e+09 -6.76334202e+03 -6.76334202e+03  9.66610000e+04
   4.80808200e+00  1.09872154e+02]
 [ 1.74705480e+09 -8.91334202e+03 -8.91334202e+03  1.03111000e+05
   1.19392870e+01  1.09832461e+02]
 [ 1.74705030e+09  6.41386890e+03  6.41386890e+03  6.32610000e+04
  -3.29266500e+00  1.09793692e+02]
 [ 1.74704940e+09  2.46386890e+03  2.46386890e+03  5.93110000e+04
   1.60231300e+00  1.09755538e+02]
 [ 1.74704850e+09 -1.06861311e+04 -1.06861311e+04  4.61610000e+04
   1.16432500e+00  1.09717692e+02]
 [ 1.74704760e+09  1.14138689e+04  1.14138689e+04  6.82610000e+04
  -7.92995200e+00  1.09679231e+02]
 [ 1.74704670e+09  1.00191313e+04  1.00191313e+04  6.40770000e+04
  -5.05933100e+00  1.09639231e+02]
 [ 1.74704580e+09  2.17111313e+04  2.17111313e+04  7.57690000e+04
  -7.20881600e+00  1.09598461e+02]][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - i want to chc folder: Models/TF_multi/Scalers/2888.HK_pos_vgood16_
root - [DEBUG]{MainThread} - scaler_min_max_array() - Scaler will be Saved Path: Models/TF_multi/Scalers/2888.HK_pos_vgood16_.scal
root - [INFO]{MainThread} - log_shapes_trains_val_data() - Training features shape SMOTE:(1310, 10, 6)	 Labels shape:(1310, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Validation features shape:(374, 10, 6)	 Labels shape:(374, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Test features shape:(235, 10, 6)		 Labels shape:(235, 1)
root - [DEBUG]{MainThread} - __init__() - [95mCreated object TF_multidimension Path from: d_price/2888.HK_PLAIN_stock_history_MONTH_3_AD.csv[0m
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1360, 1075) Path: d_price/2888.HK_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, ti_acc_dist, volu_Chaikin_AD, volu_OBV, mtum_PVOh_12_26_9, ma_TRIMA_50, ma_EMA_50, olap_BBAND_LOWER, sti_TOS_STDEVALL_U_2, sti_TOS_STDEVALL_L_1, sti_TOS_STDEVALL_U_1, sti_TOS_STDEVALL_L_2, sti_TOS_STDEVALL_LR, ti_donchian_lower_20, sti_TOS_STDEVALL_U_3, ma_KAMA_50, ma_SMA_50, vola_KCLe_20_2, sti_TOS_STDEVALL_L_3, ti_force_index_13, mtum_MACD_fix, mtum_AO_5_34, mtum_MACD_ext_signal, mtum_MACD, vola_KCBe_20_2, mtum_MACD_fix_signal, mtum_MACD_signal, mcrh_EMA_50_WMA_100, ti_kelt_20_lower, olap_MCGD_10, ichi_kijun_sen, olap_BBAND_dif, mtum_STCmacd_10_12_26_05, volu_PVOL, ti_donchian_center_20, ma_WMA_20, mcrh_KAMA_20_WMA_100, mtum_APO, ma_TRIMA_20, olap_BBAND_MIDDLE, mtum_MACD_ext, ma_EMA_20, ichi_senkou_a, ichi_senkou_b, ma_TRIMA_10, mtum_PPO
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point   ti_acc_dist  volu_Chaikin_AD  volu_OBV  ...  ma_EMA_20  ichi_senkou_a  ichi_senkou_b  ma_TRIMA_10  mtum_PPO
0  2025-05-08 09:45:00               0  53750.000000     53750.000000   53750.0  ...        NaN            NaN            NaN          NaN       NaN
1  2025-05-08 10:00:00               0  38975.281810     38975.281810   34050.0  ...        NaN            NaN            NaN          NaN       NaN
2  2025-05-08 10:15:00               0  34600.281810     34600.281810   42800.0  ...        NaN            NaN            NaN          NaN       NaN
3  2025-05-08 10:30:00               0  31959.323619     31959.323619   56006.0  ...        NaN            NaN            NaN          NaN       NaN
4  2025-05-08 10:45:00               0  29134.323619     29134.323619   61656.0  ...        NaN            NaN            NaN          NaN       NaN

[5 rows x 47 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point   ti_acc_dist  volu_Chaikin_AD      volu_OBV  mtum_PVOh_12_26_9  ...    ma_EMA_20  ichi_senkou_a  ichi_senkou_b  ma_TRIMA_10     mtum_PPO
count     1360.000000  1.360000e+03     1.360000e+03  1.360000e+03        1327.000000  ...  1341.000000    1309.000000    1283.000000  1351.000000  1335.000000
mean        -0.220588  3.676548e+06     3.676548e+06  3.947916e+06           0.050281  ...   128.145714     127.928075     127.908301   128.121811     0.134056
std         33.552632  2.475170e+06     2.475170e+06  2.307063e+06          11.260851  ...     9.095460       8.928410       8.707423     9.211958     0.582038
min       -100.000000 -2.576334e+04    -2.576334e+04  8.045000e+03         -21.048368  ...   108.910000     109.449999     109.699997   108.799999    -1.580898
25%          0.000000  1.577083e+06     1.577083e+06  2.055130e+06          -7.687669  ...   121.703894     121.600002     121.700001   121.685000    -0.225125
50%          0.000000  2.768576e+06     2.768576e+06  3.235511e+06          -1.585268  ...   125.012654     124.475000     123.900002   125.399998     0.074868
75%          0.000000  6.158745e+06     6.158745e+06  6.333976e+06           5.572493  ...   136.983119     134.049995     135.050003   137.523333     0.440660
max        100.000000  7.945700e+06     7.945700e+06  8.130776e+06          60.130128  ...   144.850333     145.549999     144.250000   146.599998     3.052088

[8 rows x 46 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() -  groupby(Y_TARGET).count()                 Date
buy_sell_point      
0               1285
100               75
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96mDataFrame head:
            Date  buy_sell_point    ti_acc_dist  volu_Chaikin_AD  volu_OBV  ...   ma_EMA_20  ichi_senkou_a  ichi_senkou_b  ma_TRIMA_10  mtum_PPO
77  1.747141e+09               0  587356.683660    587356.683660  813540.0  ...  115.915248     110.499998     109.699997   117.540000  2.548862
78  1.747142e+09               0  591519.104267    591519.104267  796890.0  ...  116.075701     110.424999     109.699997   117.540000  2.429125
79  1.747143e+09               0  597219.104267    597219.104267  802590.0  ...  116.249444     110.424999     109.750000   117.560000  2.161371
80  1.747144e+09               0  597219.104267    597219.104267  822574.0  ...  116.416163     110.449999     109.849998   117.600000  1.967157
81  1.747145e+09               0  595141.094532    595141.094532  812183.0  ...  116.547957     110.724998     110.049999   117.643333  1.733618

[5 rows x 47 columns][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 46)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 46)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96marr_vali sample: [[ 1.74714930e+09  8.00520491e+05  8.00520491e+05  1.02868600e+06
   1.34014750e+01  1.13757076e+02  1.14850590e+02  1.16695875e+02
   1.33372598e+02  1.05429574e+02  1.24058257e+02  9.61152330e+01
   1.14743916e+02  1.12500000e+02  1.42686940e+02  1.17398107e+02
   1.13960000e+02  1.15771881e+02  8.68008910e+01  4.52069558e+04
   1.29327500e+00  2.91911900e+00  1.78212300e+00  1.35494700e+00
   1.17385786e+02  1.35925700e+00  1.42307600e+00  0.00000000e+00
   1.15894997e+02  1.17279452e+02  1.15400002e+02  2.39825000e+00
   1.35495400e+00  7.41948461e+06  1.16150002e+02  1.18096667e+02
   0.00000000e+00  9.58334000e-01  1.17738182e+02  1.17895000e+02
   9.58334000e-01  1.17385786e+02  1.10724998e+02  1.10049999e+02
   1.18053334e+02  8.18040000e-01]
 [ 1.74714840e+09  7.63331604e+05  7.63331604e+05  9.66702000e+05
   1.46419030e+01  1.13491538e+02  1.14652655e+02  1.16434085e+02
   1.33350077e+02  1.05407052e+02  1.24035735e+02  9.60927110e+01
   1.14721394e+02  1.12500000e+02  1.42664418e+02  1.17119070e+02
   1.13766000e+02  1.15463658e+02  8.67783690e+01  4.86092448e+04
   1.24748400e+00  2.85264700e+00  2.00000100e+00  1.30555500e+00
   1.17142185e+02  1.37575300e+00  1.44010800e+00  0.00000000e+00
   1.15664997e+02  1.17035987e+02  1.15150002e+02  2.52182900e+00
   1.30556300e+00  2.01997572e+07  1.15900002e+02  1.17905715e+02
   0.00000000e+00  1.08525800e+00  1.17667273e+02  1.17695000e+02
   1.08525800e+00  1.17142185e+02  1.10724998e+02  1.10049999e+02
   1.17916667e+02  9.28975000e-01]
 [ 1.74714750e+09  5.94012604e+05  5.94012604e+05  7.97383000e+05
  -1.27427920e+01  1.13237384e+02  1.14462968e+02  1.16195490e+02
   1.33327555e+02  1.05384531e+02  1.24013213e+02  9.60701890e+01
   1.14698872e+02  1.12500000e+02  1.42641896e+02  1.16872623e+02
   1.13582000e+02  1.15354569e+02  8.67558480e+01  1.72029759e+04
   1.20954900e+00  2.95823500e+00  2.21645300e+00  1.26425000e+00
   1.16915046e+02  1.40782000e+00  1.47374600e+00  0.00000000e+00
   1.15454997e+02  1.16806870e+02  1.14899998e+02  2.63901900e+00
   1.26425900e+00  3.07719004e+06  1.15799999e+02  1.17735714e+02
   0.00000000e+00  1.22948800e+00  1.17596363e+02  1.17514999e+02
   1.22948800e+00  1.16915046e+02  1.10724998e+02  1.10049999e+02
   1.17836667e+02  1.05532000e+00]
 [ 1.74714660e+09  5.97741095e+05  5.97741095e+05  8.23483000e+05
  -1.72846010e+01  1.12994307e+02  1.14322680e+02  1.16144705e+02
   1.33305033e+02  1.05362009e+02  1.23990692e+02  9.60476670e+01
   1.14676350e+02  1.12500000e+02  1.42619375e+02  1.16774875e+02
   1.13426000e+02  1.15233998e+02  8.67333260e+01  2.05051319e+04
   1.27754000e+00  3.13588200e+00  2.44252200e+00  1.33568500e+00
   1.16811367e+02  1.45738800e+00  1.52612000e+00  0.00000000e+00
   1.15409998e+02  1.16690839e+02  1.14799999e+02  2.65058800e+00
   1.33569600e+00  1.02660000e+06  1.15799999e+02  1.17694762e+02
   0.00000000e+00  1.47243700e+00  1.17536363e+02  1.17469999e+02
   1.47243700e+00  1.16811367e+02  1.10724998e+02  1.10049999e+02
   1.17780000e+02  1.26694800e+00]
 [ 1.74714570e+09  6.06441095e+05  6.06441095e+05  8.23483000e+05
  -1.77573270e+01  1.12761538e+02  1.14172586e+02  1.16090951e+02
   1.33282511e+02  1.05339487e+02  1.23968170e+02  9.60251450e+01
   1.14653828e+02  1.11500000e+02  1.42596853e+02  1.16661796e+02
   1.13272000e+02  1.14963892e+02  8.67108040e+01  2.39226539e+04
   1.33619700e+00  3.24352900e+00  2.66445900e+00  1.39725300e+00
   1.16686247e+02  1.50235000e+00  1.57372900e+00  0.00000000e+00
   1.14814998e+02  1.16553117e+02  1.14750000e+02  2.64809700e+00
   1.39726600e+00  1.33340000e+06  1.15299999e+02  1.17639047e+02
   0.00000000e+00  1.74166800e+00  1.17479090e+02  1.17414999e+02
   1.74166800e+00  1.16686247e+02  1.10724998e+02  1.10049999e+02
   1.17710000e+02  1.50208500e+00]
 [ 1.74714480e+09  5.95141095e+05  5.95141095e+05  8.12183000e+05
  -1.84617210e+01  1.12538307e+02  1.14016365e+02  1.14216047e+02
   1.33259990e+02  1.05316965e+02  1.23945648e+02  9.60026240e+01
   1.14631307e+02  1.11000000e+02  1.42574331e+02  1.16528103e+02
   1.13106000e+02  1.14749565e+02  8.66882820e+01  2.75331020e+04
   1.39168100e+00  3.44088200e+00  2.83141000e+00  1.45551300e+00
   1.16547957e+02  1.54388800e+00  1.61784700e+00  0.00000000e+00
   1.14489998e+02  1.16401780e+02  1.14700001e+02  5.74790500e+00
   1.45552800e+00  1.22405983e+06  1.15049999e+02  1.17552381e+02
   0.00000000e+00  2.00512900e+00  1.17375454e+02  1.17089999e+02
   2.00512900e+00  1.16547957e+02  1.10724998e+02  1.10049999e+02
   1.17643333e+02  1.73361800e+00]
 [ 1.74714390e+09  5.97219104e+05  5.97219104e+05  8.22574000e+05
  -1.85253720e+01  1.12324769e+02  1.13861931e+02  1.12930951e+02
   1.33237468e+02  1.05294443e+02  1.23923126e+02  9.59801020e+01
   1.14608785e+02  1.11000000e+02  1.42551809e+02  1.16407847e+02
   1.12946000e+02  1.14533730e+02  8.66657600e+01  3.24683137e+04
   1.46141400e+00  3.61117700e+00  2.94131000e+00  1.52906600e+00
   1.16416163e+02  1.58193900e+00  1.65843100e+00  0.00000000e+00
   1.14189998e+02  1.16255249e+02  1.14700001e+02  7.65809500e+00
   1.52908400e+00  2.35811200e+06  1.15049999e+02  1.17453333e+02
   0.00000000e+00  2.26987200e+00  1.17215453e+02  1.16759999e+02
   2.26987200e+00  1.16416163e+02  1.10449999e+02  1.09849998e+02
   1.17600000e+02  1.96715700e+00]
 [ 1.74714300e+09  5.97219104e+05  5.97219104e+05  8.02590000e+05
  -2.00964530e+01  1.12120769e+02  1.13693030e+02  1.11939551e+02
   1.33214946e+02  1.05271922e+02  1.23900605e+02  9.59575800e+01
   1.14586263e+02  1.11000000e+02  1.42529288e+02  1.16244102e+02
   1.12778000e+02  1.14210964e+02  8.66432390e+01  3.75466378e+04
   1.51011700e+00  3.74176600e+00  2.99387400e+00  1.58034200e+00
   1.16249444e+02  1.61207100e+00  1.69077200e+00  0.00000000e+00
   1.13849998e+02  1.16075007e+02  1.14649998e+02  8.96089500e+00
   1.58036300e+00  6.72030009e+05  1.15049999e+02  1.17302856e+02
   0.00000000e+00  2.48782100e+00  1.16994544e+02  1.16419999e+02
   2.48782100e+00  1.16249444e+02  1.10424999e+02  1.09750000e+02
   1.17560000e+02  2.16137100e+00]
 [ 1.74714210e+09  5.91519104e+05  5.91519104e+05  7.96890000e+05
  -1.85133140e+01  1.11926461e+02  1.13521317e+02  1.11071450e+02
   1.33192424e+02  1.05249400e+02  1.23878083e+02  9.59350580e+01
   1.14563741e+02  1.10699997e+02  1.42506766e+02  1.16075918e+02
   1.12612000e+02  1.13885803e+02  8.66207170e+01  4.35194078e+04
   1.55999100e+00  3.88500200e+00  2.99116800e+00  1.63298300e+00
   1.16075701e+02  1.63755900e+00  1.71838000e+00  0.00000000e+00
   1.13464998e+02  1.15887117e+02  1.14649998e+02  1.00070990e+01
   1.63300800e+00  1.95803997e+06  1.14899998e+02  1.17129047e+02
   0.00000000e+00  2.78910300e+00  1.16715453e+02  1.16074999e+02
   2.78910300e+00  1.16075701e+02  1.10424999e+02  1.09699997e+02
   1.17540000e+02  2.42912500e+00]
 [ 1.74714120e+09  5.87356684e+05  5.87356684e+05  8.13540000e+05
  -1.77673540e+01  1.11742000e+02  1.13354840e+02  1.10217054e+02
   1.33169902e+02  1.05226878e+02  1.23855561e+02  9.59125370e+01
   1.14541220e+02  1.10500000e+02  1.42484244e+02  1.15926989e+02
   1.12452000e+02  1.13663256e+02  8.65981950e+01  5.10501382e+04
   1.62972000e+00  4.02911900e+00  2.91737800e+00  1.70696600e+00
   1.15915248e+02  1.65695100e+00  1.73972900e+00  0.00000000e+00
   1.13129999e+02  1.15709975e+02  1.14599998e+02  1.10058900e+01
   1.70699600e+00  8.58856878e+05  1.14799999e+02  1.16949999e+02
   0.00000000e+00  2.91923100e+00  1.16377271e+02  1.15719999e+02
   2.91923100e+00  1.15915248e+02  1.10499998e+02  1.09699997e+02
   1.17540000e+02  2.54886200e+00]][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - i want to chc folder: Models/TF_multi/Scalers/2888.HK_pos_good9_
root - [DEBUG]{MainThread} - scaler_min_max_array() - Scaler will be Saved Path: Models/TF_multi/Scalers/2888.HK_pos_good9_.scal
root - [INFO]{MainThread} - log_shapes_trains_val_data() - Training features shape SMOTE:(1280, 10, 46)	 Labels shape:(1280, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Validation features shape:(366, 10, 46)	 Labels shape:(366, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Test features shape:(230, 10, 46)		 Labels shape:(230, 1)
root - [DEBUG]{MainThread} - __init__() - [95mCreated object TF_multidimension Path from: d_price/2888.HK_PLAIN_stock_history_MONTH_3_AD.csv[0m
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1360, 1075) Path: d_price/2888.HK_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, ti_acc_dist, volu_Chaikin_AD, volu_OBV, mtum_PVOh_12_26_9, ma_TRIMA_50, ma_EMA_50, olap_BBAND_LOWER, sti_TOS_STDEVALL_U_2, sti_TOS_STDEVALL_L_1, sti_TOS_STDEVALL_U_1, sti_TOS_STDEVALL_L_2, sti_TOS_STDEVALL_LR, ti_donchian_lower_20, sti_TOS_STDEVALL_U_3, ma_KAMA_50, ma_SMA_50, vola_KCLe_20_2, sti_TOS_STDEVALL_L_3, ti_force_index_13, mtum_MACD_fix, mtum_AO_5_34, mtum_MACD_ext_signal, mtum_MACD, vola_KCBe_20_2, mtum_MACD_fix_signal, mtum_MACD_signal, mcrh_EMA_50_WMA_100, ti_kelt_20_lower, olap_MCGD_10, ichi_kijun_sen, olap_BBAND_dif, mtum_STCmacd_10_12_26_05, volu_PVOL, ti_donchian_center_20, ma_WMA_20, mcrh_KAMA_20_WMA_100, mtum_APO, ma_TRIMA_20, olap_BBAND_MIDDLE, mtum_MACD_ext, ma_EMA_20, ichi_senkou_a, ichi_senkou_b, ma_TRIMA_10, mtum_PPO, tend_VHF_28, olap_ALMA_10_60_085, olap_SAR, olap_SINWMA_14, olap_MIDPRICE, mcrh_T3_50_T3_100, mcrh_TEMA_20_EMA_50, mtum_PLUS_DM, mcrh_TRIMA_20_TEMA_100, mcrh_TRIMA_5_DEMA_20, mcrh_TRIMA_5_TEMA_50, olap_VMAP, mtum_DMP_14, ti_choppiness_14, sti_LINEARREG_INTERCEPT, mcrh_KAMA_5_TEMA_10, olap_MIDPOINT, ma_T3_10, ichi_tenkan_sen, volu_EFI_13, vola_HWL, ti_supertrend_20, ma_KAMA_10, ma_KAMA_20, cycl_SINE_sine, cycl_SINE_lead, ma_SMA_20, cycl_DCPERIOD, ma_WMA_10, Volume, ma_KAMA_5, ma_SMA_10, ma_EMA_5, sti_LINEARREG, ma_SMA_5, olap_VWMA_10, ma_EMA_10, mtum_PVOs_12_26_9, mtum_PVO_12_26_9, HSI_SMA_100, mtum_QQE_14_5_4236_RSIMA, olap_SWMA_10, volu_NVI_1, mtum_SMIs_5_20_5, olap_PWMA_10, volu_PVI_1, cycl_DCPHASE, olap_BBAND_UPPER, olap_HT_TRENDLINE, olap_HWMA_02_01_01, mtum_BIAS_SMA_26, mcrh_KAMA_50_T3_100, ma_T3_5, mcrh_TRIMA_20_SMA_50, ti_coppock_14_11_10, ti_hma_20, tend_renko_ATR, tend_ll, mcrh_EMA_5_T3_50, mcrh_T3_20_TRIMA_50, ti_kelt_20_upper, tend_hl, mcrh_T3_5_T3_10, mcrh_TEMA_20_DEMA_100, mcrh_TEMA_50_T3_100, mcrh_TEMA_5_KAMA_100, mcrh_TRIMA_20_SMA_100, mcrh_TRIMA_10_SMA_20, mcrh_TRIMA_20_WMA_100, vola_KCUe_20_2, vola_THERMOma_20_2_05, mtum_ADX, ma_TRIMA_5, ma_WMA_5, tend_hl_crash, vola_HWM, mcrh_DEMA_20_SMA_50
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point   ti_acc_dist  volu_Chaikin_AD  volu_OBV  ...  ma_TRIMA_5    ma_WMA_5  tend_hl_crash    vola_HWM  mcrh_DEMA_20_SMA_50
0  2025-05-08 09:45:00               0  53750.000000     53750.000000   53750.0  ...         NaN         NaN              0  108.599998                    0
1  2025-05-08 10:00:00               0  38975.281810     38975.281810   34050.0  ...         NaN         NaN              0  108.533699                    0
2  2025-05-08 10:15:00               0  34600.281810     34600.281810   42800.0  ...         NaN         NaN              0  108.497284                    0
3  2025-05-08 10:30:00               0  31959.323619     31959.323619   56006.0  ...         NaN         NaN              0  108.553690                    0
4  2025-05-08 10:45:00               0  29134.323619     29134.323619   61656.0  ...  108.544446  108.673335              0  108.625845                    0

[5 rows x 124 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point   ti_acc_dist  volu_Chaikin_AD      volu_OBV  ...     ma_WMA_5  tend_hl_crash     vola_HWM  mcrh_DEMA_20_SMA_50
count     1360.000000  1.360000e+03     1.360000e+03  1.360000e+03  ...  1356.000000    1360.000000  1360.000000          1360.000000
mean        -0.220588  3.676548e+06     3.676548e+06  3.947916e+06  ...   128.133269       0.079412   128.122878            -0.001471
std         33.552632  2.475170e+06     2.475170e+06  2.307063e+06  ...     9.262948       0.346775     9.359058             0.233344
min       -100.000000 -2.576334e+04    -2.576334e+04  8.045000e+03  ...   108.673335      -1.000000   108.497284            -1.000000
25%          0.000000  1.577083e+06     1.577083e+06  2.055130e+06  ...   121.718333       0.000000   121.311779             0.000000
50%          0.000000  2.768576e+06     2.768576e+06  3.235511e+06  ...   125.366668       0.000000   125.462704             0.000000
75%          0.000000  6.158745e+06     6.158745e+06  6.333976e+06  ...   137.530000       0.000000   137.234327             0.000000
max        100.000000  7.945700e+06     7.945700e+06  8.130776e+06  ...   147.339996       1.000000   147.857739             1.000000

[8 rows x 123 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() -  groupby(Y_TARGET).count()                 Date
buy_sell_point      
0               1285
100               75
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96mDataFrame head:
            Date  buy_sell_point    ti_acc_dist  volu_Chaikin_AD  volu_OBV  ...  ma_TRIMA_5    ma_WMA_5  tend_hl_crash    vola_HWM  mcrh_DEMA_20_SMA_50
77  1.747141e+09               0  587356.683660    587356.683660  813540.0  ...  117.566667  117.606666              0  120.123738                    0
78  1.747142e+09               0  591519.104267    591519.104267  796890.0  ...  117.633333  117.633332              0  120.135231                    0
79  1.747143e+09               0  597219.104267    597219.104267  802590.0  ...  117.688888  117.733333              0  120.164491                    0
80  1.747144e+09               0  597219.104267    597219.104267  822574.0  ...  117.733332  117.826666              0  120.165179                    0
81  1.747145e+09               0  595141.094532    595141.094532  812183.0  ...  117.822222  117.840001              0  120.074681                    0

[5 rows x 124 columns][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 123)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 123)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96marr_vali sample: [[1.74714930e+09 8.00520491e+05 8.00520491e+05 ... 0.00000000e+00
  1.19981544e+02 0.00000000e+00]
 [1.74714840e+09 7.63331604e+05 7.63331604e+05 ... 0.00000000e+00
  1.19826545e+02 0.00000000e+00]
 [1.74714750e+09 5.94012604e+05 5.94012604e+05 ... 0.00000000e+00
  1.19707161e+02 0.00000000e+00]
 ...
 [1.74714300e+09 5.97219104e+05 5.97219104e+05 ... 0.00000000e+00
  1.20164491e+02 0.00000000e+00]
 [1.74714210e+09 5.91519104e+05 5.91519104e+05 ... 0.00000000e+00
  1.20135231e+02 0.00000000e+00]
 [1.74714120e+09 5.87356684e+05 5.87356684e+05 ... 0.00000000e+00
  1.20123738e+02 0.00000000e+00]][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - i want to chc folder: Models/TF_multi/Scalers/2888.HK_pos_reg4_
root - [DEBUG]{MainThread} - scaler_min_max_array() - Scaler will be Saved Path: Models/TF_multi/Scalers/2888.HK_pos_reg4_.scal
root - [INFO]{MainThread} - log_shapes_trains_val_data() - Training features shape SMOTE:(1282, 10, 123)	 Labels shape:(1282, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Validation features shape:(366, 10, 123)	 Labels shape:(366, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Test features shape:(230, 10, 123)		 Labels shape:(230, 1)
root - [DEBUG]{MainThread} - __init__() - [95mCreated object TF_multidimension Path from: d_price/2888.HK_PLAIN_stock_history_MONTH_3_AD.csv[0m
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1360, 1075) Path: d_price/2888.HK_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, ti_acc_dist, volu_Chaikin_AD, volu_OBV, mtum_PVOh_12_26_9, ma_TRIMA_50, ma_EMA_50, olap_BBAND_LOWER, sti_TOS_STDEVALL_U_2, sti_TOS_STDEVALL_L_1, sti_TOS_STDEVALL_U_1, sti_TOS_STDEVALL_L_2, sti_TOS_STDEVALL_LR, ti_donchian_lower_20, sti_TOS_STDEVALL_U_3, ma_KAMA_50, ma_SMA_50, vola_KCLe_20_2, sti_TOS_STDEVALL_L_3, ti_force_index_13, mtum_MACD_fix, mtum_AO_5_34, mtum_MACD_ext_signal, mtum_MACD, vola_KCBe_20_2, mtum_MACD_fix_signal, mtum_MACD_signal, mcrh_EMA_50_WMA_100, ti_kelt_20_lower, olap_MCGD_10, ichi_kijun_sen, olap_BBAND_dif, mtum_STCmacd_10_12_26_05, volu_PVOL, ti_donchian_center_20, ma_WMA_20, mcrh_KAMA_20_WMA_100, mtum_APO, ma_TRIMA_20, olap_BBAND_MIDDLE, mtum_MACD_ext, ma_EMA_20, ichi_senkou_a, ichi_senkou_b, ma_TRIMA_10, mtum_PPO, tend_VHF_28, olap_ALMA_10_60_085, olap_SAR, olap_SINWMA_14, olap_MIDPRICE, mcrh_T3_50_T3_100, mcrh_TEMA_20_EMA_50, mtum_PLUS_DM, mcrh_TRIMA_20_TEMA_100, mcrh_TRIMA_5_DEMA_20, mcrh_TRIMA_5_TEMA_50, olap_VMAP, mtum_DMP_14, ti_choppiness_14, sti_LINEARREG_INTERCEPT, mcrh_KAMA_5_TEMA_10, olap_MIDPOINT, ma_T3_10, ichi_tenkan_sen, volu_EFI_13, vola_HWL, ti_supertrend_20, ma_KAMA_10, ma_KAMA_20, cycl_SINE_sine, cycl_SINE_lead, ma_SMA_20, cycl_DCPERIOD, ma_WMA_10, Volume, ma_KAMA_5, ma_SMA_10, ma_EMA_5, sti_LINEARREG, ma_SMA_5, olap_VWMA_10, ma_EMA_10, mtum_PVOs_12_26_9, mtum_PVO_12_26_9, HSI_SMA_100, mtum_QQE_14_5_4236_RSIMA, olap_SWMA_10, volu_NVI_1, mtum_SMIs_5_20_5, olap_PWMA_10, volu_PVI_1, cycl_DCPHASE, olap_BBAND_UPPER, olap_HT_TRENDLINE, olap_HWMA_02_01_01, mtum_BIAS_SMA_26, mcrh_KAMA_50_T3_100, ma_T3_5, mcrh_TRIMA_20_SMA_50, ti_coppock_14_11_10, ti_hma_20, tend_renko_ATR, tend_ll, mcrh_EMA_5_T3_50, mcrh_T3_20_TRIMA_50, ti_kelt_20_upper, tend_hl, mcrh_T3_5_T3_10, mcrh_TEMA_20_DEMA_100, mcrh_TEMA_50_T3_100, mcrh_TEMA_5_KAMA_100, mcrh_TRIMA_20_SMA_100, mcrh_TRIMA_10_SMA_20, mcrh_TRIMA_20_WMA_100, vola_KCUe_20_2, vola_THERMOma_20_2_05, mtum_ADX, ma_TRIMA_5, ma_WMA_5, tend_hl_crash, vola_HWM, mcrh_DEMA_20_SMA_50, vola_HWU, olap_SSF_10_2, sti_VAR, ti_konk_avg, volu_Chaikin_ADOSC, per_Close, sti_ENTP_10, sti_TSF, sti_LINEARREG_SLOPE, volu_PVT, sti_LINEARREG_ANGLE, vola_ATR, ti_chaikin_10_3, tend_hh, HSI_Close, mtum_td_seq, mcrh_KAMA_5_T3_50, mcrh_KAMA_50_SMA_100, mcrh_KAMA_20_TEMA_50, mcrh_KAMA_20_TEMA_100, mcrh_KAMA_20_T3_50, mcrh_KAMA_10_DEMA_100, mcrh_EMA_5_WMA_100, mcrh_EMA_5_SMA_50, mcrh_EMA_5_KAMA_20, mcrh_EMA_50_TEMA_100, mcrh_DEMA_5_TEMA_50, mcrh_DEMA_50_T3_100, mcrh_DEMA_20_DEMA_100, mcrh_DEMA_10_TRIMA_100, mcrh_DEMA_10_TEMA_50, mcrh_DEMA_10_T3_50, mcrh_DEMA_10_EMA_20, ma_TEMA_20, ma_DEMA_20, ma_DEMA_10, ichi_isin_cloud, fibo_s1, cycl_PHASOR_inph, cycl_EBSW_40_10, cama_s3, cama_s2, mcrh_KAMA_5_SMA_50, mcrh_SMA_10_DEMA_100, mtum_murrey_math, mcrh_SMA_10_TRIMA_20, mtum_SMI_5_20_5, mtum_QQEs_14_5_4236, mtum_QQEl_14_5_4236, mtum_PLUS_DI, mtum_MINUS_DI, mtum_MACD_ext_crash, mtum_INERTIA_20_14, mtum_DX, mtum_BR_26, mtum_BEARP_13, mtum_AROON_up, mtum_ADXR, mcrh_WMA_5_WMA_100, mcrh_WMA_5_T3_50, mcrh_WMA_20_WMA_100, mcrh_WMA_10_TEMA_50, mcrh_WMA_10_EMA_50, mcrh_TRIMA_20_EMA_50, mcrh_TEMA_5_T3_50, mcrh_TEMA_10_WMA_50, mcrh_TEMA_10_T3_50, mcrh_T3_5_WMA_20, mcrh_T3_50_TEMA_100, mcrh_SMA_5_T3_10, mcrh_SMA_5_SMA_50, wood_r2
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point   ti_acc_dist  volu_Chaikin_AD  ...  mcrh_T3_50_TEMA_100  mcrh_SMA_5_T3_10  mcrh_SMA_5_SMA_50     wood_r2
0  2025-05-08 09:45:00               0  53750.000000     53750.000000  ...                    0                 0                  0         NaN
1  2025-05-08 10:00:00               0  38975.281810     38975.281810  ...                    0                 0                  0  108.824995
2  2025-05-08 10:15:00               0  34600.281810     34600.281810  ...                    0                 0                  0  109.250004
3  2025-05-08 10:30:00               0  31959.323619     31959.323619  ...                    0                 0                  0  108.949993
4  2025-05-08 10:45:00               0  29134.323619     29134.323619  ...                    0                 0                  0  109.375000

[5 rows x 196 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point   ti_acc_dist  volu_Chaikin_AD      volu_OBV  ...  mcrh_T3_50_TEMA_100  mcrh_SMA_5_T3_10  mcrh_SMA_5_SMA_50      wood_r2
count     1360.000000  1.360000e+03     1.360000e+03  1.360000e+03  ...          1360.000000       1360.000000        1360.000000  1359.000000
mean        -0.220588  3.676548e+06     3.676548e+06  3.947916e+06  ...            -0.000735          0.005882           0.001471   128.664735
std         33.552632  2.475170e+06     2.475170e+06  2.307063e+06  ...             0.169402          0.398630           0.268532     9.457560
min       -100.000000 -2.576334e+04    -2.576334e+04  8.045000e+03  ...            -1.000000         -1.000000          -1.000000   108.799995
25%          0.000000  1.577083e+06     1.577083e+06  2.055130e+06  ...             0.000000          0.000000           0.000000   122.012503
50%          0.000000  2.768576e+06     2.768576e+06  3.235511e+06  ...             0.000000          0.000000           0.000000   125.749996
75%          0.000000  6.158745e+06     6.158745e+06  6.333976e+06  ...             0.000000          0.000000           0.000000   137.912497
max        100.000000  7.945700e+06     7.945700e+06  8.130776e+06  ...             1.000000          1.000000           1.000000   150.375004

[8 rows x 195 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() -  groupby(Y_TARGET).count()                 Date
buy_sell_point      
0               1285
100               75
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96mDataFrame head:
            Date  buy_sell_point    ti_acc_dist  volu_Chaikin_AD  ...  mcrh_T3_50_TEMA_100  mcrh_SMA_5_T3_10  mcrh_SMA_5_SMA_50     wood_r2
77  1.747141e+09               0  587356.683660    587356.683660  ...                    0                 0                  0  117.925003
78  1.747142e+09               0  591519.104267    591519.104267  ...                    0                 0                  0  118.150003
79  1.747143e+09               0  597219.104267    597219.104267  ...                    0                 0                  0  118.350002
80  1.747144e+09               0  597219.104267    597219.104267  ...                    0                 0                  0  118.125004
81  1.747145e+09               0  595141.094532    595141.094532  ...                    0                 0                  0  118.199997

[5 rows x 196 columns][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 195)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 195)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96marr_vali sample: [[1.74714930e+09 8.00520491e+05 8.00520491e+05 ... 0.00000000e+00
  0.00000000e+00 1.20250006e+02]
 [1.74714840e+09 7.63331604e+05 7.63331604e+05 ... 0.00000000e+00
  0.00000000e+00 1.18725004e+02]
 [1.74714750e+09 5.94012604e+05 5.94012604e+05 ... 0.00000000e+00
  0.00000000e+00 1.18124998e+02]
 ...
 [1.74714300e+09 5.97219104e+05 5.97219104e+05 ... 0.00000000e+00
  0.00000000e+00 1.18350002e+02]
 [1.74714210e+09 5.91519104e+05 5.91519104e+05 ... 0.00000000e+00
  0.00000000e+00 1.18150003e+02]
 [1.74714120e+09 5.87356684e+05 5.87356684e+05 ... 0.00000000e+00
  0.00000000e+00 1.17925003e+02]][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - i want to chc folder: Models/TF_multi/Scalers/2888.HK_pos_low1_
root - [DEBUG]{MainThread} - scaler_min_max_array() - Scaler will be Saved Path: Models/TF_multi/Scalers/2888.HK_pos_low1_.scal
root - [INFO]{MainThread} - log_shapes_trains_val_data() - Training features shape SMOTE:(1288, 10, 195)	 Labels shape:(1288, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Validation features shape:(366, 10, 195)	 Labels shape:(366, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Test features shape:(230, 10, 195)		 Labels shape:(230, 1)
root - [DEBUG]{MainThread} - __init__() - [95mCreated object TF_multidimension Path from: d_price/2888.HK_PLAIN_stock_history_MONTH_3_AD.csv[0m
root - [INFO]{MainThread} - <module>() - Processing stock: 2318.HK, CSV path: d_price/2318.HK_PLAIN_stock_history_MONTH_3_AD.csv
root - [INFO]{MainThread} - <module>() - Processing stock: 2318.HK, Buy/Sell type: neg, Columns JSON: <Feature_selection_json_columns.JsonColumns object at 0x7b97d0619a50>
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1379, 1075) Path: d_price/2318.HK_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, volu_NVI_1, mtum_DMP_14, olap_BBAND_dif, volu_PVOL, Volume, volu_Chaikin_ADOSC, ti_chaikin_10_3, cdl_3WHITESOLDIERS, mtum_PLUS_DM, mtum_STCstoch_10_12_26_05, mtum_td_seq_sig, ti_coppock_14_11_10, sti_ENTP_10
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point   volu_NVI_1  mtum_DMP_14  ...  mtum_STCstoch_10_12_26_05  mtum_td_seq_sig  ti_coppock_14_11_10  sti_ENTP_10
0  2025-05-08 09:15:00               0  1000.000000          NaN  ...                        0.0                0                  NaN          NaN
1  2025-05-08 09:45:00               0  1000.000000          NaN  ...                        0.0                0                  NaN          NaN
2  2025-05-08 10:00:00               0   999.681863          NaN  ...                        0.0                0                  NaN          NaN
3  2025-05-08 10:15:00               0  1000.639312          NaN  ...                        0.0                0                  NaN          NaN
4  2025-05-08 10:30:00               0  1000.112441          NaN  ...                        0.0                0                  NaN          NaN

[5 rows x 15 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point   volu_NVI_1  mtum_DMP_14  olap_BBAND_dif  ...  mtum_STCstoch_10_12_26_05  mtum_td_seq_sig  ti_coppock_14_11_10  sti_ENTP_10
count     1379.000000  1379.000000  1366.000000     1360.000000  ...                1379.000000      1379.000000          1356.000000  1361.000000
mean        -0.580131   995.750013     0.832985        1.232859  ...                  19.300850        -1.551849             0.290989     3.322800
std         32.987836     1.736853     0.449350        0.787041  ...                  32.636064         3.825763             2.479982     0.009335
min       -100.000000   992.491504     0.136357        0.208810  ...                   0.000000       -16.000000            -8.682051     3.284283
25%          0.000000   994.651159     0.519776        0.678674  ...                   0.000000        -3.000000            -1.281422     3.317123
50%          0.000000   995.338678     0.745800        0.990707  ...                   0.024019        -1.000000             0.018076     3.321873
75%          0.000000   996.447630     1.053060        1.548088  ...                  23.164154         1.000000             1.739917     3.327554
max        100.000000  1001.525222     3.041026        4.510111  ...                  99.987793         7.000000             9.421815     3.360736

[8 rows x 14 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() -  groupby(Y_TARGET).count()                 Date
buy_sell_point      
0               1300
100               79
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96mDataFrame head:
            Date  buy_sell_point   volu_NVI_1  mtum_DMP_14  ...  mtum_STCstoch_10_12_26_05  mtum_td_seq_sig  ti_coppock_14_11_10  sti_ENTP_10
23  1.746782e+09               0   999.799138     0.907161  ...                        0.0               -3            -1.169499     3.318188
24  1.746783e+09               0   999.799138     0.992365  ...                        0.0               -4            -1.260018     3.317427
25  1.746784e+09               0   999.906088     0.921481  ...                        0.0               -3            -1.253030     3.317644
26  1.746785e+09               0   999.906088     0.855661  ...                        0.0               -4            -1.161599     3.317603
27  1.746786e+09               0  1000.012924     0.844542  ...                        0.0               -3            -1.139037     3.318042

[5 rows x 15 columns][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 14)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 14)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96marr_vali sample: [[ 1.74679020e+09  9.99478277e+02  6.66640000e-01  7.69157000e-01
   1.52101500e+08  3.27100000e+06 -4.73493969e+03 -4.95594386e+04
   0.00000000e+00  6.66640000e-01  0.00000000e+00 -8.00000000e+00
  -1.46607300e+00  3.31624200e+00]
 [ 1.74678930e+09  9.99478277e+02  7.17920000e-01  6.99931000e-01
   3.05532316e+07  6.56353000e+05 -5.37607912e+05 -5.91715422e+05
   0.00000000e+00  7.17920000e-01  0.00000000e+00 -7.00000000e+00
  -1.38386800e+00  3.31700800e+00]
 [ 1.74678840e+09  9.99585572e+02  7.19299000e-01  6.33958000e-01
   3.90507987e+07  8.38000000e+05 -4.48638045e+05 -5.13413469e+05
   0.00000000e+00  7.19299000e-01  0.00000000e+00 -6.00000000e+00
  -1.31518100e+00  3.31719300e+00]
 [ 1.74678750e+09  9.99585572e+02  7.74630000e-01  5.73064000e-01
   6.43519883e+07  1.38094400e+06 -3.86712062e+05 -4.63170070e+05
   0.00000000e+00  7.74630000e-01  0.00000000e+00 -5.00000000e+00
  -1.21012800e+00  3.31745700e+00]
 [ 1.74678660e+09  1.00001292e+03  8.34217000e-01  5.67364000e-01
   6.85257289e+07  1.46422500e+06  6.78357350e+04 -2.01890321e+04
   0.00000000e+00  8.34217000e-01  0.00000000e+00 -4.00000000e+00
  -1.13364200e+00  3.31822100e+00]
 [ 1.74678570e+09  1.00001292e+03  8.44542000e-01  6.07948000e-01
   5.88435981e+07  1.25600000e+06  3.96680164e+05  2.99942156e+05
   0.00000000e+00  8.44542000e-01  0.00000000e+00 -3.00000000e+00
  -1.13903700e+00  3.31804200e+00]
 [ 1.74678480e+09  9.99906088e+02  8.55661000e-01  6.80882000e-01
   9.18893649e+07  1.96344800e+06  4.29059003e+05  3.32519297e+05
   0.00000000e+00  8.55661000e-01  0.00000000e+00 -4.00000000e+00
  -1.16159900e+00  3.31760300e+00]
 [ 1.74678390e+09  9.99906088e+02  9.21481000e-01  7.62824000e-01
   5.09160592e+07  1.08795000e+06  4.12842199e+05  3.38240498e+05
   0.00000000e+00  9.21481000e-01  0.00000000e+00 -3.00000000e+00
  -1.25303000e+00  3.31764400e+00]
 [ 1.74678300e+09  9.99799138e+02  9.92365000e-01  7.56307000e-01
   1.30068458e+08  2.78221300e+06  2.81429283e+05  2.77031974e+05
   0.00000000e+00  9.92365000e-01  0.00000000e+00 -4.00000000e+00
  -1.26001800e+00  3.31742700e+00]
 [ 1.74678210e+09  9.99799138e+02  9.07161000e-01  7.14073000e-01
   1.22157750e+08  2.61300000e+06 -1.02358270e+05  6.58323369e+04
   0.00000000e+00  9.07161000e-01  0.00000000e+00 -3.00000000e+00
  -1.16949900e+00  3.31818800e+00]][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - i want to chc folder: Models/TF_multi/Scalers/2318.HK_neg_vgood16_
root - [DEBUG]{MainThread} - scaler_min_max_array() - Scaler will be Saved Path: Models/TF_multi/Scalers/2318.HK_neg_vgood16_.scal
root - [INFO]{MainThread} - log_shapes_trains_val_data() - Training features shape SMOTE:(1338, 10, 14)	 Labels shape:(1338, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Validation features shape:(387, 10, 14)	 Labels shape:(387, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Test features shape:(243, 10, 14)		 Labels shape:(243, 1)
root - [DEBUG]{MainThread} - __init__() - [95mCreated object TF_multidimension Path from: d_price/2318.HK_PLAIN_stock_history_MONTH_3_AD.csv[0m
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1379, 1075) Path: d_price/2318.HK_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, volu_NVI_1, mtum_DMP_14, olap_BBAND_dif, volu_PVOL, Volume, volu_Chaikin_ADOSC, ti_chaikin_10_3, cdl_3WHITESOLDIERS, mtum_PLUS_DM, mtum_STCstoch_10_12_26_05, mtum_td_seq_sig, ti_coppock_14_11_10, sti_ENTP_10, mtum_MACD, mcrh_DEMA_50_EMA_100, mtum_STCmacd_10_12_26_05, mtum_BR_26, mtum_PVOh_12_26_9, mtum_PVO_12_26_9, sti_LINEARREG_SLOPE, mtum_MACD_signal, mtum_MACD_fix, cdl_LONGLEGGEDDOJI, cdl_DOJI, cdl_RICKSHAWMAN, mtum_MACD_fix_signal, mtum_MACD_ext_list, mtum_PPO, mtum_MACD_ext, mtum_PSL_12, mtum_BULLP_13, mtum_INERTIA_20_14, mtum_PVOs_12_26_9, mtum_STC_10_12_26_05, mtum_APO, mtum_AO_5_34, sti_BETA, volu_EFI_13, vola_ATR, ti_force_index_13, tend_lh, sti_TOS_STDEVALL_L_3, sti_LINEARREG_ANGLE, sti_TOS_STDEVALL_U_1, perf_ha
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point   volu_NVI_1  mtum_DMP_14  ...  sti_TOS_STDEVALL_L_3  sti_LINEARREG_ANGLE  sti_TOS_STDEVALL_U_1    perf_ha
0  2025-05-08 09:15:00               0  1000.000000          NaN  ...             34.687815                  NaN             47.542812  46.062500
1  2025-05-08 09:45:00               0  1000.000000          NaN  ...             34.694887                  NaN             47.549885  47.037500
2  2025-05-08 10:00:00               0   999.681863          NaN  ...             34.701959                  NaN             47.556957  47.125000
3  2025-05-08 10:15:00               0  1000.639312          NaN  ...             34.709032                  NaN             47.564030  47.250000
4  2025-05-08 10:30:00               0  1000.112441          NaN  ...             34.716104                  NaN             47.571102  47.325001

[5 rows x 47 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point   volu_NVI_1  mtum_DMP_14  olap_BBAND_dif  ...  sti_TOS_STDEVALL_L_3  sti_LINEARREG_ANGLE  sti_TOS_STDEVALL_U_1      perf_ha
count     1379.000000  1379.000000  1366.000000     1360.000000  ...           1379.000000          1366.000000           1379.000000  1379.000000
mean        -0.580131   995.750013     0.832985        1.232859  ...             39.560710             0.295919             52.415707    49.198767
std         32.987836     1.736853     0.449350        0.787041  ...              2.816429             3.379396              2.816429     3.212848
min       -100.000000   992.491504     0.136357        0.208810  ...             34.687815           -12.437435             47.542812    44.612500
25%          0.000000   994.651159     0.519776        0.678674  ...             37.124262            -1.661748             49.979260    46.325001
50%          0.000000   995.338678     0.745800        0.990707  ...             39.560710             0.012590             52.415707    48.087501
75%          0.000000   996.447630     1.053060        1.548088  ...             41.997157             1.831579             54.852155    51.487499
max        100.000000  1001.525222     3.041026        4.510111  ...             44.433605            14.627284             57.288602    57.287500

[8 rows x 46 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() -  groupby(Y_TARGET).count()                 Date
buy_sell_point      
0               1300
100               79
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96mDataFrame head:
            Date  buy_sell_point   volu_NVI_1  mtum_DMP_14  ...  sti_TOS_STDEVALL_L_3  sti_LINEARREG_ANGLE  sti_TOS_STDEVALL_U_1    perf_ha
66  1.747062e+09               1  1001.316350     1.702490  ...             35.154594             4.167049             48.009592  48.187500
67  1.747063e+09               1  1001.110592     1.580884  ...             35.161667             5.186487             48.016664  48.500000
68  1.747064e+09               1  1001.110592     1.467963  ...             35.168739             5.205219             48.023737  48.387500
69  1.747065e+09               1  1001.214217     1.363109  ...             35.175811             5.298871             48.030809  48.262500
70  1.747129e+09               0  1000.075502     1.265744  ...             35.182884             4.423743             48.037882  47.849999

[5 rows x 47 columns][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 46)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 46)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96marr_vali sample: [[ 1.74713310e+09  9.99656213e+02  8.73821000e-01  1.47295600e+00
   6.92946139e+07  1.45730000e+06 -1.75291780e+04 -1.71458493e+04
   0.00000000e+00  8.73821000e-01  4.34653600e+00 -8.00000000e+00
   1.03533400e+00  3.32284700e+00  1.31801000e-01  0.00000000e+00
   1.31794000e-01  1.14754146e+02 -1.45703000e+01  5.92153800e+00
  -2.98900000e-02  2.17370000e-01  1.27370000e-01  1.00000000e+02
   1.00000000e+02  1.00000000e+02  2.07982000e-01 -8.93870000e-02
   5.34313000e-01  2.54487000e-01  2.50000000e+01 -1.10054000e-01
   3.91306140e+01  2.04918380e+01  1.56230900e+00  2.54487000e-01
   1.94853000e-01 -4.20953000e-01  7.46490763e+04  2.62195000e-01
   7.46463942e+04  4.85999980e+01  3.52182460e+01 -1.71207200e+00
   4.80732440e+01  4.75499990e+01]
 [ 1.74713220e+09  9.99656213e+02  9.41038000e-01  1.52459800e+00
   4.44178808e+07  9.34130000e+05  1.00995147e+05  1.01463660e+05
   0.00000000e+00  9.41038000e-01  8.69307100e+00 -7.00000000e+00
   1.48524000e+00  3.32497300e+00  1.58902000e-01  0.00000000e+00
   1.58895000e-01  1.17460306e+02 -1.30148300e+01  1.11195830e+01
  -9.12100000e-03  2.38763000e-01  1.53154000e-01  1.00000000e+02
   1.00000000e+02  1.00000000e+02  2.28135000e-01 -6.69870000e-02
   6.06489000e-01  2.88782000e-01  3.33333330e+01 -1.36730000e-01
   4.38516680e+01  2.41344130e+01  3.12461900e+00  2.88782000e-01
   2.82941000e-01  5.26663000e-01  8.70905890e+04  2.74671000e-01
   8.70874599e+04  4.85999980e+01  3.52111730e+01 -5.22577000e-01
   4.80661710e+01  4.75499990e+01]
 [ 1.74713130e+09  9.99656213e+02  1.01342500e+00  1.61155200e+00
   9.02261236e+07  1.89750000e+06  3.68277910e+05  3.68850537e+05
   0.00000000e+00  1.01342500e+00  1.73861430e+01 -6.00000000e+00
   2.02081100e+00  3.32713900e+00  1.91182000e-01  0.00000000e+00
   1.91173000e-01  1.13235278e+02 -8.55974900e+00  1.88283720e+01
   1.14290000e-02  2.58728000e-01  1.83757000e-01  1.00000000e+02
   1.00000000e+02  1.00000000e+02  2.46880000e-01 -4.46220000e-02
   6.61200000e-01  3.14744000e-01  4.16666670e+01 -6.78490000e-02
   4.98887710e+01  2.73881210e+01  6.24923700e+00  3.14744000e-01
   4.55294000e-01  1.88582000e-01  1.01605687e+05  2.88108000e-01
   1.01602037e+05  4.85999980e+01  3.52041010e+01  6.54778000e-01
   4.80590990e+01  4.75625000e+01]
 [ 1.74713040e+09  9.99656213e+02  1.09138100e+00  1.65345100e+00
   7.05071389e+07  1.48280000e+06  9.39796239e+05  9.40496116e+05
   0.00000000e+00  1.09138100e+00  3.47722850e+01 -5.00000000e+00
   2.54544900e+00  3.33015400e+00  2.29602000e-01  0.00000000e+00
   2.29592000e-01  1.30555450e+02 -4.53416100e+00  2.49938970e+01
   3.31870000e-02  2.75614000e-01  2.20049000e-01  0.00000000e+00
   0.00000000e+00  0.00000000e+00  2.62661000e-01 -4.10610000e-02
   6.72782000e-01  3.20192000e-01  4.16666670e+01 -1.04158000e-01
   5.52363240e+01  2.95280580e+01  1.24984740e+01  3.20192000e-01
   6.52647000e-01  1.49328000e-01  1.18539968e+05  2.91039000e-01
   1.18535709e+05  4.85999980e+01  3.51970290e+01  1.90076500e+00
   4.80520260e+01  4.76125000e+01]
 [ 1.74712950e+09  9.99866081e+02  1.17533400e+00  1.69218800e+00
   8.97077512e+07  1.88263900e+06  1.83281275e+06  1.83366816e+06
   0.00000000e+00  1.17533400e+00  6.63226850e+01 -4.00000000e+00
   2.97646600e+00  3.33309000e+00  2.75301000e-01  0.00000000e+00
   2.75289000e-01  1.34782580e+02  2.59233100e+00  3.32539290e+01
   5.73630000e-02  2.87117000e-01  2.63060000e-01  0.00000000e+00
   0.00000000e+00  0.00000000e+00  2.73314000e-01 -7.33600000e-03
   7.49518000e-01  3.56410000e-01  5.00000000e+01 -4.65190000e-02
   6.06012050e+01  3.06615980e+01  2.49969480e+01  3.56410000e-01
   8.52794000e-01  1.62139800e+00  1.63010529e+05  2.98042000e-01
   1.63005560e+05  4.85999980e+01  3.51899560e+01  3.28304100e+00
   4.80449540e+01  4.77125010e+01]
 [ 1.74712860e+09  1.00007550e+03  1.26574400e+00  1.70763000e+00
   2.56879577e+08  5.37967700e+06  3.03179484e+06  3.03284033e+06
   0.00000000e+00  1.26574400e+00  8.79402060e+01 -3.00000000e+00
   3.32123100e+00  3.33507900e+00  3.19442000e-01  0.00000000e+00
   3.19428000e-01  1.36764647e+02  1.18952460e+01  4.19087620e+01
   7.73630000e-02  2.90071000e-01  3.04460000e-01  0.00000000e+00
   0.00000000e+00  0.00000000e+00  2.75877000e-01  2.03350000e-02
   8.08237000e-01  3.83975000e-01  5.83333330e+01  2.20727000e-01
   6.40181560e+01  3.00135150e+01  4.99938960e+01  3.83975000e-01
   9.81618000e-01  3.30450000e-01  2.21555788e+05  3.09430000e-01
   2.21549991e+05  4.85999980e+01  3.51828840e+01  4.42374300e+00
   4.80378820e+01  4.78499990e+01]
 [ 1.74706470e+09  1.00121422e+03  1.36310900e+00  1.70982400e+00
   3.00230767e+08  6.21595800e+06  3.82463298e+06  3.82591080e+06
   0.00000000e+00  1.36310900e+00  9.99877930e+01 -2.00000000e+00
   3.59386300e+00  3.33665600e+00  3.60955000e-01  0.00000000e+00
   3.60938000e-01  1.74074031e+02  1.77818260e+01  4.48215300e+01
   9.27470000e-02  2.82729000e-01  3.43221000e-01  0.00000000e+00
   0.00000000e+00  0.00000000e+00  2.68732000e-01  3.51860000e-02
   8.40121000e-01  3.98718000e-01  5.83333330e+01  4.49182000e-01
   6.46550320e+01  2.70397040e+01  9.99877930e+01  3.98718000e-01
   9.89853000e-01  1.13359000e-01  7.51618127e+05  2.75540000e-01
   7.51611364e+05  4.85999980e+01  3.51758110e+01  5.29887100e+00
   4.80308090e+01  4.82625000e+01]
 [ 1.74706380e+09  1.00111059e+03  1.46796300e+00  1.63618400e+00
   3.10756055e+08  6.44054000e+06  3.77163555e+06  3.77319733e+06
   0.00000000e+00  1.46796300e+00  9.99755860e+01 -3.00000000e+00
   3.33610900e+00  3.33578400e+00  3.52690000e-01  0.00000000e+00
   3.52670000e-01  1.75471381e+02  2.32081350e+01  4.58023820e+01
   9.10990000e-02  2.63172000e-01  3.35143000e-01  0.00000000e+00
   0.00000000e+00  0.00000000e+00  2.50110000e-01  2.74220000e-02
   8.24473000e-01  3.90705000e-01  5.00000000e+01  7.65713000e-01
   6.50183090e+01  2.25942470e+01  9.99755860e+01  3.90705000e-01
   9.37794000e-01  8.68380000e-02  8.25088955e+05  2.81351000e-01
   8.25081065e+05  4.85999980e+01  3.51687390e+01  5.20521900e+00
   4.80237370e+01  4.83875000e+01]
 [ 1.74706290e+09  1.00111059e+03  1.58088400e+00  1.54712600e+00
   2.65001138e+08  5.46394100e+06  5.22126205e+06  5.22317088e+06
   0.00000000e+00  1.58088400e+00  9.99511720e+01 -2.00000000e+00
   3.01386900e+00  3.33447600e+00  3.42101000e-01  0.00000000e+00
   3.42078000e-01  1.89583029e+02  2.82190600e+01  4.50112730e+01
   9.07690000e-02  2.40793000e-01  3.24844000e-01  0.00000000e+00
   0.00000000e+00  0.00000000e+00  2.28851000e-01  2.10110000e-02
   8.17584000e-01  3.86859000e-01  5.83333330e+01  8.85001000e-01
   6.73957990e+01  1.67922140e+01  9.99511720e+01  3.86859000e-01
   8.67941000e-01  3.71190000e-02  1.23095961e+06  2.72225000e-01
   1.23095041e+06  4.85999980e+01  3.51616670e+01  5.18648700e+00
   4.80166640e+01  4.85000000e+01]
 [ 1.74706200e+09  1.00131635e+03  1.70249000e+00  1.27499000e+00
   5.63798862e+08  1.16008000e+07  3.84751943e+06  3.84985241e+06
   0.00000000e+00  1.70249000e+00  9.99023440e+01 -1.00000000e+00
   2.53476700e+00  3.33189900e+00  2.98156000e-01  0.00000000e+00
   2.98128000e-01  2.21950463e+02  3.50345260e+01  4.47719740e+01
   7.28570000e-02  2.15466000e-01  2.83249000e-01  0.00000000e+00
   0.00000000e+00  0.00000000e+00  2.04853000e-01 -9.54400000e-03
   7.65347000e-01  3.61538000e-01  6.66666670e+01  1.00750100e+00
   6.60585990e+01  9.73744900e+00  9.99023440e+01  3.61538000e-01
   7.53088000e-01  1.70062000e-01  1.52718384e+06  2.62396000e-01
   1.52717310e+06  4.85999980e+01  3.51545940e+01  4.16704900e+00
   4.80095920e+01  4.81875000e+01]][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - i want to chc folder: Models/TF_multi/Scalers/2318.HK_neg_good9_
root - [DEBUG]{MainThread} - scaler_min_max_array() - Scaler will be Saved Path: Models/TF_multi/Scalers/2318.HK_neg_good9_.scal
root - [INFO]{MainThread} - log_shapes_trains_val_data() - Training features shape SMOTE:(1302, 10, 46)	 Labels shape:(1302, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Validation features shape:(375, 10, 46)	 Labels shape:(375, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Test features shape:(235, 10, 46)		 Labels shape:(235, 1)
root - [DEBUG]{MainThread} - __init__() - [95mCreated object TF_multidimension Path from: d_price/2318.HK_PLAIN_stock_history_MONTH_3_AD.csv[0m
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1379, 1075) Path: d_price/2318.HK_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, volu_NVI_1, mtum_DMP_14, olap_BBAND_dif, volu_PVOL, Volume, volu_Chaikin_ADOSC, ti_chaikin_10_3, cdl_3WHITESOLDIERS, mtum_PLUS_DM, mtum_STCstoch_10_12_26_05, mtum_td_seq_sig, ti_coppock_14_11_10, sti_ENTP_10, mtum_MACD, mcrh_DEMA_50_EMA_100, mtum_STCmacd_10_12_26_05, mtum_BR_26, mtum_PVOh_12_26_9, mtum_PVO_12_26_9, sti_LINEARREG_SLOPE, mtum_MACD_signal, mtum_MACD_fix, cdl_LONGLEGGEDDOJI, cdl_DOJI, cdl_RICKSHAWMAN, mtum_MACD_fix_signal, mtum_MACD_ext_list, mtum_PPO, mtum_MACD_ext, mtum_PSL_12, mtum_BULLP_13, mtum_INERTIA_20_14, mtum_PVOs_12_26_9, mtum_STC_10_12_26_05, mtum_APO, mtum_AO_5_34, sti_BETA, volu_EFI_13, vola_ATR, ti_force_index_13, tend_lh, sti_TOS_STDEVALL_L_3, sti_LINEARREG_ANGLE, sti_TOS_STDEVALL_U_1, perf_ha, tend_renko_ATR, mtum_BEARP_13, mtum_BIAS_SMA_26, mtum_ROCR100, vola_NATR, mtum_ROCR, ti_vortex_neg_14, mtum_ROCP, ti_donchian_upper_20, mtum_ROC, sti_TOS_STDEVALL_LR, mtum_MACD_ext_signal, tend_VHF_28, tend_LDECAY_5, olap_JMA_7_0, mtum_MFI, mtum_MOM, mtum_PLUS_DI, perf_CUMPCTRET_1, Close, mtum_DX, ma_EMA_5, High, Low, ichi_kijun_sen, ma_TEMA_10, cycl_PHASOR_inph, ma_DEMA_10, ma_DEMA_5, ma_KAMA_50, mcrh_KAMA_5_DEMA_20, ma_KAMA_20, ma_TEMA_5, sti_TSF, ma_KAMA_5, olap_BBAND_UPPER, ma_KAMA_10, sti_TOS_STDEVALL_U_2, ma_WMA_5, ma_EMA_10, sti_TOS_STDEVALL_L_2, sti_TOS_STDEVALL_L_1, sti_LINEARREG, ma_WMA_10, perf_CUMLOGRET_1, cama_r3, mtum_FISHERTs_9_1, mtum_AROON_down, ti_hma_20, ti_vortex_pos_14, mtum_AROONOSC, ti_konk_rest
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point   volu_NVI_1  mtum_DMP_14  olap_BBAND_dif  ...  mtum_AROON_down  ti_hma_20  ti_vortex_pos_14  mtum_AROONOSC  ti_konk_rest
0  2025-05-08 09:15:00               0  1000.000000          NaN             NaN  ...              NaN        NaN               NaN            NaN           NaN
1  2025-05-08 09:45:00               0  1000.000000          NaN             NaN  ...              NaN        NaN               NaN            NaN           NaN
2  2025-05-08 10:00:00               0   999.681863          NaN             NaN  ...              NaN        NaN               NaN            NaN           NaN
3  2025-05-08 10:15:00               0  1000.639312          NaN             NaN  ...              NaN        NaN               NaN            NaN           NaN
4  2025-05-08 10:30:00               0  1000.112441          NaN             NaN  ...              NaN        NaN               NaN            NaN           NaN

[5 rows x 99 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point   volu_NVI_1  mtum_DMP_14  olap_BBAND_dif     volu_PVOL  ...  mtum_AROON_down    ti_hma_20  ti_vortex_pos_14  mtum_AROONOSC  ti_konk_rest
count     1379.000000  1379.000000  1366.000000     1360.000000  1.379000e+03  ...      1365.000000  1357.000000       1365.000000    1365.000000   1276.000000
mean        -0.580131   995.750013     0.832985        1.232859  1.108347e+08  ...        50.627943    49.233639          1.003348       1.093668    -59.838071
std         32.987836     1.736853     0.449350        0.787041  1.060026e+08  ...        36.533058     3.236961          0.178225      59.405797     37.562246
min       -100.000000   992.491504     0.136357        0.208810  1.248900e+03  ...         0.000000    44.417777          0.436780    -100.000000   -141.750844
25%          0.000000   994.651159     0.519776        0.678674  4.761170e+07  ...        14.285714    46.352160          0.870967     -42.857143    -92.182284
50%          0.000000   995.338678     0.745800        0.990707  7.832223e+07  ...        50.000000    48.237262          0.999999      -7.142857    -57.519264
75%          0.000000   996.447630     1.053060        1.548088  1.362409e+08  ...        85.714286    51.663866          1.125000      57.142857    -28.048767
max        100.000000  1001.525222     3.041026        4.510111  9.971169e+08  ...       100.000000    57.080668          1.809999     100.000000     21.646941

[8 rows x 98 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() -  groupby(Y_TARGET).count()                 Date
buy_sell_point      
0               1300
100               79
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96mDataFrame head:
             Date  buy_sell_point   volu_NVI_1  mtum_DMP_14  olap_BBAND_dif  ...  mtum_AROON_down  ti_hma_20  ti_vortex_pos_14  mtum_AROONOSC  ti_konk_rest
103  1.747228e+09               0  1000.287167     1.714679        1.695404  ...        28.571429  48.560740          1.265823      71.428571   -127.892103
104  1.747229e+09               0  1000.287167     2.042203        2.180343  ...        21.428571  48.812432          1.337079      78.571429   -136.368800
105  1.747230e+09               0   999.782626     1.896331        2.417021  ...        14.285714  49.056800          1.382979      78.571429   -128.553267
106  1.747231e+09               0   999.884044     1.760879        2.625260  ...         7.142857  49.269992          1.358696      78.571429   -114.811037
107  1.747232e+09               1   999.884044     1.835099        2.796336  ...         0.000000  49.445283          1.387097      78.571429   -117.247269

[5 rows x 99 columns][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 98)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 98)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96marr_vali sample: [[ 1.74723660e+09  9.99580706e+02  1.26688100e+00  2.62699300e+00
   1.85894125e+08  3.77450000e+06  4.00833414e+05  4.00833643e+05
   0.00000000e+00  1.26688100e+00  8.23093590e+01  5.00000000e+00
   5.44950600e+00  3.33882400e+00  4.14393000e-01  0.00000000e+00
   4.14393000e-01  1.80852062e+02 -5.63515700e+00  1.24763600e+01
   7.35170000e-02  3.96263000e-01  3.95086000e-01  0.00000000e+00
   0.00000000e+00  0.00000000e+00  3.76690000e-01  1.49679000e-01
   1.50552900e+00  7.29487000e-01  5.83333330e+01  2.57195000e-01
   6.54499740e+01  1.81115170e+01  1.08741500e+01  7.29487000e-01
   1.03558800e+00 -8.24780000e-02  2.68357769e+05  2.47321000e-01
   2.68357760e+05  4.95499990e+01  3.54799250e+01  4.20462200e+00
   4.83349230e+01  4.92250000e+01  2.53846000e-01  1.07197000e-01
   1.64310000e-02  1.01025641e+02  5.02175000e-01  1.01025600e+00
   7.97468000e-01  1.02560000e-02  4.96500020e+01  1.02564100e+00
   4.51211740e+01  5.79807000e-01  5.61644000e-01  4.92500000e+01
   4.92977090e+01  5.55159250e+01  5.00000000e-01  3.65909350e+01
   6.83300000e-02  4.92500000e+01  5.40224050e+01  4.92536090e+01
   4.92999990e+01  4.91500020e+01  4.85500010e+01  4.93578830e+01
   2.92622000e-01  4.94299730e+01  4.92787870e+01  4.84251860e+01
   0.00000000e+00  4.90757120e+01  4.92111650e+01  4.96192310e+01
   4.92037630e+01  5.00209960e+01  4.92164350e+01  5.15486720e+01
   4.92533330e+01  4.91429650e+01  3.86936750e+01  4.19074240e+01
   4.95457140e+01  4.92963630e+01  6.60960000e-02  4.92275000e+01
   2.08240400e+00  0.00000000e+00  4.96108000e+01  1.27848200e+00
   4.28571430e+01 -9.06880500e+01]
 [ 1.74723570e+09  9.99580706e+02  1.36433400e+00  2.76077800e+00
   1.62617220e+08  3.30522800e+06  5.70631941e+05  5.70632221e+05
   0.00000000e+00  1.36433400e+00  9.15235100e+01  4.00000000e+00
   5.82683100e+00  3.34155900e+00  4.29903000e-01  0.00000000e+00
   4.29903000e-01  1.80852062e+02 -6.45510800e+00  1.30651990e+01
   9.23080000e-02  3.91731000e-01  4.09515000e-01  0.00000000e+00
   0.00000000e+00  0.00000000e+00  3.72090000e-01  1.81232000e-01
   1.46349800e+00  7.08333000e-01  5.00000000e+01  2.91728000e-01
   6.80169030e+01  1.95203060e+01  2.17482990e+01  7.08333000e-01
   1.12926500e+00  3.84724000e-01  2.81630377e+05  2.54808000e-01
   2.81630366e+05  4.95499990e+01  3.54728530e+01  5.27389500e+00
   4.83278510e+01  4.92500000e+01  2.53846000e-01  1.91729000e-01
   1.65290000e-02  1.01758019e+02  5.17901000e-01  1.01758000e+00
   7.17647000e-01  1.75800000e-02  4.96500020e+01  1.75801900e+00
   4.51141010e+01  5.27101000e-01  5.54054000e-01  4.92000010e+01
   4.93322200e+01  5.80306130e+01  8.50002000e-01  3.82479650e+01
   6.72450000e-02  4.92000010e+01  5.88504320e+01  4.92554130e+01
   4.92999990e+01  4.92000010e+01  4.85500010e+01  4.93980660e+01
   4.56970000e-01  4.94461820e+01  4.92949840e+01  4.83905430e+01
   0.00000000e+00  4.90435440e+01  4.92079460e+01  4.96851640e+01
   4.91966290e+01  5.00028890e+01  4.92141460e+01  5.15416000e+01
   4.92733330e+01  4.91191800e+01  3.86866020e+01  4.19003520e+01
   4.95928570e+01  4.92981810e+01  6.50810000e-02  4.93274990e+01
   2.69225700e+00  0.00000000e+00  4.96515880e+01  1.36470600e+00
   5.00000000e+01 -9.43307890e+01]
 [ 1.74723480e+09  9.99580706e+02  1.46928300e+00  2.85769000e+00
   1.04269696e+08  2.11500400e+06  1.83746198e+06  1.83746232e+06
   0.00000000e+00  1.46928300e+00  9.68226710e+01  5.00000000e+00
   6.18700200e+00  3.34321400e+00  4.48538000e-01  0.00000000e+00
   4.48538000e-01  1.80852062e+02 -6.16165800e+00  1.49724250e+01
   1.10989000e-01  3.82188000e-01  4.26777000e-01  0.00000000e+00
   0.00000000e+00  0.00000000e+00  3.62734000e-01  2.27564000e-01
   1.44264500e+00  6.97436000e-01  5.83333330e+01  3.23683000e-01
   7.14871390e+01  2.11340830e+01  4.34965980e+01  6.97436000e-01
   1.18941200e+00  4.59217000e-01  3.83655065e+05  2.66716000e-01
   3.83655053e+05  4.95499990e+01  3.54657800e+01  6.33328000e+00
   4.83207780e+01  4.92625000e+01  2.53846000e-01  2.23684000e-01
   1.97700000e-02  1.01964841e+02  5.41006000e-01  1.01964800e+00
   6.73913000e-01  1.96480000e-02  4.96500020e+01  1.96484100e+00
   4.51070290e+01  4.69871000e-01  5.61644000e-01  4.92999990e+01
   4.93739960e+01  6.28446770e+01  9.50001000e-01  3.93511240e+01
   6.94140000e-02  4.92999990e+01  5.88504320e+01  4.92831190e+01
   4.92999990e+01  4.92000010e+01  4.85500010e+01  4.94788270e+01
   8.14476000e-01  4.94829280e+01  4.93701820e+01  4.83529180e+01
  -1.00000000e+00  4.90154320e+01  4.92871160e+01  4.97467030e+01
   4.91963740e+01  4.99688450e+01  4.92158400e+01  5.15345280e+01
   4.93199990e+01  4.91012190e+01  3.86795300e+01  4.18932790e+01
   4.96357140e+01  4.92936360e+01  6.71110000e-02  4.92912500e+01
   3.15327100e+00  7.14285700e+00  4.96646250e+01  1.33695600e+00
   5.00000000e+01 -9.89109530e+01]
 [ 1.74723390e+09  9.99479184e+02  1.58230400e+00  2.90516700e+00
   1.16653550e+08  2.36860000e+06  1.95509987e+06  1.95510029e+06
   0.00000000e+00  1.58230400e+00  9.87554250e+01  4.00000000e+00
   6.30720900e+00  3.34447600e+00  4.55616000e-01  0.00000000e+00
   4.55616000e-01  1.82979701e+02 -2.21187800e+00  2.04626190e+01
   1.31538000e-01  3.65600000e-01  4.33086000e-01  0.00000000e+00
   0.00000000e+00  0.00000000e+00  3.46724000e-01  2.55413000e-01
   1.37400900e+00  6.63461000e-01  5.83333330e+01  4.77632000e-01
   7.38501100e+01  2.26744980e+01  8.69931960e+01  6.63461000e-01
   1.27735300e+00  4.46814000e-01  4.29972812e+05  2.79540000e-01
   4.29972798e+05  4.95499990e+01  3.54587080e+01  7.49357500e+00
   4.83137060e+01  4.93125000e+01  2.55769000e-01  3.27630000e-01
   1.99530000e-02  1.01756195e+02  5.67595000e-01  1.01756200e+00
   6.66666000e-01  1.75620000e-02  4.96500020e+01  1.75619500e+00
   4.50999560e+01  4.08048000e-01  5.54054000e-01  4.92500000e+01
   4.94073400e+01  6.42700830e+01  8.49998000e-01  4.04340340e+01
   6.83300000e-02  4.92500000e+01  6.32631340e+01  4.92746790e+01
   4.94000020e+01  4.92500000e+01  4.85500010e+01  4.95150430e+01
   8.79808000e-01  4.94794060e+01  4.93968340e+01  4.83040090e+01
  -1.00000000e+00  4.89524110e+01  4.93073260e+01  4.97901090e+01
   4.91959410e+01  4.99025830e+01  4.92021760e+01  5.15274550e+01
   4.93333330e+01  4.90570460e+01  3.86724570e+01  4.18862070e+01
   4.96585710e+01  4.92536360e+01  6.60960000e-02  4.94049990e+01
   3.39454200e+00  1.42857140e+01  4.96346550e+01  1.33333300e+00
   5.00000000e+01 -1.03534656e+02]
 [ 1.74723300e+09  9.99681815e+02  1.70402000e+00  2.88748900e+00
   1.67390260e+08  3.39190000e+06  3.45319562e+06  3.45319613e+06
   0.00000000e+00  1.70402000e+00  9.99815010e+01  5.00000000e+00
   6.32155400e+00  3.34609500e+00  4.63115000e-01  0.00000000e+00
   4.63115000e-01  1.86957005e+02  3.07198000e+00  2.62994480e+01
   1.48352000e-01  3.43096000e-01  4.39683000e-01  0.00000000e+00
   0.00000000e+00  0.00000000e+00  3.25133000e-01  2.80306000e-01
   1.30060800e+00  6.27243000e-01  6.66666670e+01  6.32236000e-01
   7.69037760e+01  2.32274670e+01  9.99779180e+01  6.27243000e-01
   1.32955900e+00  4.43597000e-01  5.41111012e+05  2.89505000e-01
   5.41110995e+05  4.95499990e+01  3.54516360e+01  8.43837300e+00
   4.83066330e+01  4.94000000e+01  2.53846000e-01  4.32235000e-01
   2.32870000e-02  1.02385887e+02  5.86636000e-01  1.02385900e+00
   6.34408000e-01  2.38590000e-02  4.96500020e+01  2.38588700e+00
   4.50928840e+01  3.46937000e-01  5.69444000e-01  4.93499980e+01
   4.94386680e+01  6.85445520e+01  1.14999800e+00  4.20456970e+01
   7.04990000e-02  4.93499980e+01  6.75859740e+01  4.92870190e+01
   4.95000000e+01  4.92999990e+01  4.85500010e+01  4.95820420e+01
   6.35700000e-01  4.94875060e+01  4.94825900e+01  4.82551560e+01
   0.00000000e+00  4.89036230e+01  4.94217450e+01  4.98054930e+01
   4.91876010e+01  4.98137440e+01  4.91958760e+01  5.15203830e+01
   4.93833330e+01  4.90141670e+01  3.86653850e+01  4.18791350e+01
   4.96571420e+01  4.92072720e+01  6.81250000e-02  4.95462500e+01
   3.35158000e+00  0.00000000e+00  4.95665570e+01  1.36559200e+00
   7.14285710e+01 -1.11192299e+02]
 [ 1.74723210e+09  9.99884044e+02  1.83509900e+00  2.79633600e+00
   2.07675168e+08  4.19970000e+06  4.50558620e+06  4.50558682e+06
   0.00000000e+00  1.83509900e+00  9.99630020e+01  6.00000000e+00
   6.18877600e+00  3.34652100e+00  4.55768000e-01  0.00000000e+00
   4.55768000e-01  1.77083906e+02  8.35045100e+00  3.08099240e+01
   1.52198000e-01  3.13092000e-01  4.32243000e-01  0.00000000e+00
   0.00000000e+00  0.00000000e+00  2.96496000e-01  2.72044000e-01
   1.16128900e+00  5.59294000e-01  7.50000000e+01  8.12606000e-01
   7.74002700e+01  2.24594720e+01  9.99558370e+01  5.59294000e-01
   1.29397100e+00  5.77973000e-01  6.87829141e+05  2.96390000e-01
   6.87829121e+05  4.95499990e+01  3.54445630e+01  8.65387700e+00
   4.82995610e+01  4.94124990e+01  2.55769000e-01  4.62608000e-01
   2.67530000e-02  1.02806658e+02  5.99373000e-01  1.02806700e+00
   6.02150000e-01  2.80670000e-02  4.96500020e+01  2.80665800e+00
   4.50858120e+01  2.87251000e-01  5.46667000e-01  4.94500010e+01
   4.94476760e+01  7.41230860e+01  1.35000200e+00  4.42283210e+01
   7.26680000e-02  4.94500010e+01  6.75859740e+01  4.92555290e+01
   4.95999980e+01  4.92500000e+01  4.85500010e+01  4.95895360e+01
   3.93655000e-01  4.94434340e+01  4.95173960e+01  4.81887980e+01
   0.00000000e+00  4.88234200e+01  4.94924240e+01  4.97236260e+01
   4.91791050e+01  4.96856680e+01  4.91629370e+01  5.15133100e+01
   4.93833330e+01  4.89395380e+01  3.86583130e+01  4.18720620e+01
   4.95714280e+01  4.91218180e+01  7.01490000e-02  4.94187480e+01
   3.38723900e+00  0.00000000e+00  4.94452830e+01  1.38709700e+00
   7.85714290e+01 -1.17247269e+02]
 [ 1.74723120e+09  9.99884044e+02  1.76087900e+00  2.62526000e+00
   1.98362319e+08  4.01950000e+06  4.75775774e+06  4.75775851e+06
   0.00000000e+00  1.76087900e+00  9.99260040e+01  5.00000000e+00
   5.67527300e+00  3.34593000e+00  4.29580000e-01  0.00000000e+00
   4.29580000e-01  1.65306399e+02  1.39177020e+01  3.42895620e+01
   1.50220000e-01  2.77422000e-01  4.07057000e-01  0.00000000e+00
   0.00000000e+00  0.00000000e+00  2.62559000e-01  2.46581000e-01
   9.95601000e-01  4.78846000e-01  6.66666670e+01  7.23044000e-01
   7.48550320e+01  2.03718600e+01  9.99116730e+01  4.78846000e-01
   1.16338300e+00  4.28510000e-01  7.32470729e+05  2.92266000e-01
   7.32470706e+05  4.95499990e+01  3.54374910e+01  8.54307200e+00
   4.82924890e+01  4.93000000e+01  2.50000000e-01  4.73044000e-01
   2.60700000e-02  1.03350782e+02  5.92231000e-01  1.03350800e+00
   6.63042000e-01  3.35080000e-02  4.96500020e+01  3.35078200e+00
   4.50787390e+01  2.32265000e-01  5.61645000e-01  4.93499980e+01
   4.94432750e+01  6.85294930e+01  1.59999800e+00  4.30386210e+01
   7.04990000e-02  4.93499980e+01  6.43284000e+01  4.91582930e+01
   4.94000020e+01  4.91500020e+01  4.85500010e+01  4.95056480e+01
   2.81653000e-01  4.93285390e+01  4.94538580e+01  4.81043770e+01
   0.00000000e+00  4.86878750e+01  4.94500980e+01  4.95802180e+01
   4.91224890e+01  4.95126300e+01  4.90763490e+01  5.15062380e+01
   4.93033320e+01  4.88261020e+01  3.86512400e+01  4.18649900e+01
   4.94299990e+01  4.89936350e+01  6.81250000e-02  4.93962490e+01
   3.87707400e+00  7.14285700e+00  4.92699920e+01  1.35869600e+00
   7.85714290e+01 -1.14811037e+02]
 [ 1.74723030e+09  9.99782626e+02  1.89633100e+00  2.41702100e+00
   3.12773591e+08  6.34429200e+06  4.78356143e+06  4.78356236e+06
   0.00000000e+00  1.89633100e+00  9.98520090e+01  4.00000000e+00
   5.05080100e+00  3.34398300e+00  4.00087000e-01  0.00000000e+00
   4.00087000e-01  1.78723518e+02  2.17970610e+01  3.86894950e+01
   1.46483000e-01  2.39383000e-01  3.78738000e-01  0.00000000e+00
   0.00000000e+00  0.00000000e+00  2.26434000e-01  2.25463000e-01
   8.56086000e-01  4.11218000e-01  6.66666670e+01  1.03521500e+00
   7.26259270e+01  1.68924340e+01  9.98233470e+01  4.11218000e-01
   1.02764700e+00  3.88237000e-01  8.21053861e+05  2.95517000e-01
   8.21053835e+05  4.95499990e+01  3.54304180e+01  8.33361300e+00
   4.82854160e+01  4.94249990e+01  2.51923000e-01  6.85216000e-01
   2.63430000e-02  1.03354294e+02  5.99426000e-01  1.03354300e+00
   5.63829000e-01  3.35430000e-02  4.96500020e+01  3.35429400e+00
   4.50716670e+01  1.85755000e-01  5.46667000e-01  4.93499990e+01
   4.94385770e+01  7.63006570e+01  1.59999800e+00  4.58395990e+01
   6.94140000e-02  4.92999990e+01  7.23712780e+01  4.90624410e+01
   4.95999980e+01  4.92500000e+01  4.85500010e+01  4.94190470e+01
   4.24085000e-01  4.92073490e+01  4.94099350e+01  4.80253420e+01
   0.00000000e+00  4.85857250e+01  4.94562250e+01  4.94236250e+01
   4.90593970e+01  4.93335110e+01  4.89839370e+01  5.14991660e+01
   4.91899990e+01  4.87096800e+01  3.86441680e+01  4.18579170e+01
   4.92771420e+01  4.88545450e+01  6.71110000e-02  4.97287500e+01
   3.48421600e+00  1.42857140e+01  4.90568000e+01  1.38297900e+00
   7.85714290e+01 -1.28553267e+02]
 [ 1.74722940e+09  1.00028717e+03  2.04220300e+00  2.18034300e+00
   4.65036207e+08  9.38519100e+06  5.65931381e+06  5.65931494e+06
   0.00000000e+00  2.04220300e+00  9.97040180e+01  5.00000000e+00
   4.37414000e+00  3.34137100e+00  3.61715000e-01  0.00000000e+00
   3.61715000e-01  1.95349072e+02  2.69655260e+01  3.84086940e+01
   1.36483000e-01  1.99207000e-01  3.42071000e-01  0.00000000e+00
   0.00000000e+00  0.00000000e+00  1.88358000e-01  1.97507000e-01
   7.14992000e-01  3.42949000e-01  7.50000000e+01  1.20775400e+00
   7.21966000e+01  1.14431690e+01  9.96466930e+01  3.42949000e-01
   8.77647000e-01  4.34402000e-01  1.22224167e+06  2.91326000e-01
   1.22224164e+06  4.95499990e+01  3.54233460e+01  7.77190500e+00
   4.82783440e+01  4.93250000e+01  2.44230000e-01  5.57752000e-01
   3.30370000e-02  1.03661088e+02  5.87944000e-01  1.03661100e+00
   5.50561000e-01  3.66110000e-02  4.96500020e+01  3.66108800e+00
   4.50645940e+01  1.45442000e-01  6.19719000e-01  4.95499990e+01
   4.93350000e+01  8.33393590e+01  1.75000000e+00  5.00762700e+01
   7.48370000e-02  4.95499990e+01  7.23712780e+01  4.89436610e+01
   4.96500020e+01  4.90000000e+01  4.85250020e+01  4.92937310e+01
   4.54978000e-01  4.90555780e+01  4.93461240e+01  4.79422440e+01
   0.00000000e+00  4.84720560e+01  4.94705260e+01  4.92236260e+01
   4.89951660e+01  4.91376710e+01  4.88772030e+01  5.14920930e+01
   4.90299990e+01  4.85784980e+01  3.86370950e+01  4.18508450e+01
   4.90871420e+01  4.86954540e+01  7.21690000e-02  4.92374980e+01
   3.10588900e+00  2.14285710e+01  4.88124320e+01  1.33707900e+00
   7.85714290e+01 -1.36368800e+02]
 [ 1.74722850e+09  1.00028717e+03  1.71467900e+00  1.69540400e+00
   4.13010627e+08  8.41162200e+06  3.01779451e+06  3.01779590e+06
   0.00000000e+00  1.71467900e+00  9.94080360e+01  4.00000000e+00
   3.28226700e+00  3.33755600e+00  2.82023000e-01  0.00000000e+00
   2.82023000e-01  1.80952442e+02  2.25137910e+01  2.72155790e+01
   1.11978000e-01  1.58580000e-01  2.66694000e-01  0.00000000e+00
   0.00000000e+00  0.00000000e+00  1.49930000e-01  1.41951000e-01
   5.32776000e-01  2.55128000e-01  6.66666670e+01  9.42378000e-01
   6.70364970e+01  4.70178700e+00  9.92933860e+01  2.55128000e-01
   7.36765000e-01  3.85367000e-01  7.22058099e+05  2.63736000e-01
   7.22058063e+05  4.78499980e+01  3.54162740e+01  6.38924800e+00
   4.82712710e+01  4.89375000e+01  2.26923000e-01  4.42378000e-01
   2.53400000e-02  1.03043016e+02  5.37141000e-01  1.03043000e+00
   6.20253000e-01  3.04300000e-02  4.92000010e+01  3.04301600e+00
   4.50575220e+01  1.13177000e-01  5.38462000e-01  4.90999980e+01
   4.88708170e+01  7.34867120e+01  1.44999700e+00  4.64444850e+01
   6.50760000e-02  4.90999980e+01  6.58942280e+01  4.86404930e+01
   4.92000010e+01  4.87000010e+01  4.82500000e+01  4.89110220e+01
   4.20490000e-01  4.87298170e+01  4.89410170e+01  4.77986260e+01
   0.00000000e+00  4.82215340e+01  4.90256820e+01  4.88934060e+01
   4.86514380e+01  4.88077020e+01  4.85387080e+01  5.14850210e+01
   4.87099990e+01  4.83626090e+01  3.86300230e+01  4.18437720e+01
   4.87814280e+01  4.84590900e+01  6.30460000e-02  4.88875000e+01
   2.76011600e+00  2.85714290e+01  4.85607400e+01  1.26582300e+00
   7.14285710e+01 -1.27892103e+02]][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - i want to chc folder: Models/TF_multi/Scalers/2318.HK_neg_reg4_
root - [DEBUG]{MainThread} - scaler_min_max_array() - Scaler will be Saved Path: Models/TF_multi/Scalers/2318.HK_neg_reg4_.scal
root - [INFO]{MainThread} - log_shapes_trains_val_data() - Training features shape SMOTE:(1280, 10, 98)	 Labels shape:(1280, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Validation features shape:(364, 10, 98)	 Labels shape:(364, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Test features shape:(229, 10, 98)		 Labels shape:(229, 1)
root - [DEBUG]{MainThread} - __init__() - [95mCreated object TF_multidimension Path from: d_price/2318.HK_PLAIN_stock_history_MONTH_3_AD.csv[0m
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1379, 1075) Path: d_price/2318.HK_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, volu_NVI_1, mtum_DMP_14, olap_BBAND_dif, volu_PVOL, Volume, volu_Chaikin_ADOSC, ti_chaikin_10_3, cdl_3WHITESOLDIERS, mtum_PLUS_DM, mtum_STCstoch_10_12_26_05, mtum_td_seq_sig, ti_coppock_14_11_10, sti_ENTP_10, mtum_MACD, mcrh_DEMA_50_EMA_100, mtum_STCmacd_10_12_26_05, mtum_BR_26, mtum_PVOh_12_26_9, mtum_PVO_12_26_9, sti_LINEARREG_SLOPE, mtum_MACD_signal, mtum_MACD_fix, cdl_LONGLEGGEDDOJI, cdl_DOJI, cdl_RICKSHAWMAN, mtum_MACD_fix_signal, mtum_MACD_ext_list, mtum_PPO, mtum_MACD_ext, mtum_PSL_12, mtum_BULLP_13, mtum_INERTIA_20_14, mtum_PVOs_12_26_9, mtum_STC_10_12_26_05, mtum_APO, mtum_AO_5_34, sti_BETA, volu_EFI_13, vola_ATR, ti_force_index_13, tend_lh, sti_TOS_STDEVALL_L_3, sti_LINEARREG_ANGLE, sti_TOS_STDEVALL_U_1, perf_ha, tend_renko_ATR, mtum_BEARP_13, mtum_BIAS_SMA_26, mtum_ROCR100, vola_NATR, mtum_ROCR, ti_vortex_neg_14, mtum_ROCP, ti_donchian_upper_20, mtum_ROC, sti_TOS_STDEVALL_LR, mtum_MACD_ext_signal, tend_VHF_28, tend_LDECAY_5, olap_JMA_7_0, mtum_MFI, mtum_MOM, mtum_PLUS_DI, perf_CUMPCTRET_1, Close, mtum_DX, ma_EMA_5, High, Low, ichi_kijun_sen, ma_TEMA_10, cycl_PHASOR_inph, ma_DEMA_10, ma_DEMA_5, ma_KAMA_50, mcrh_KAMA_5_DEMA_20, ma_KAMA_20, ma_TEMA_5, sti_TSF, ma_KAMA_5, olap_BBAND_UPPER, ma_KAMA_10, sti_TOS_STDEVALL_U_2, ma_WMA_5, ma_EMA_10, sti_TOS_STDEVALL_L_2, sti_TOS_STDEVALL_L_1, sti_LINEARREG, ma_WMA_10, perf_CUMLOGRET_1, cama_r3, mtum_FISHERTs_9_1, mtum_AROON_down, ti_hma_20, ti_vortex_pos_14, mtum_AROONOSC, ti_konk_rest, HSI_SMA_100, fibo_pp, fibo_r1, demark_s1, cama_pp, vola_KCBe_20_2, sti_CORREL, demark_r1, vola_UI_14, vola_RVI_14, demark_pp, cama_r1, cycl_SINE_sine, fibo_r2, cama_s1, sti_TOS_STDEVALL_U_3, vola_HWL, cama_r2, trad_s1, trad_r2, trad_r1, trad_pp, clas_s1, clas_r1, clas_pp, fibo_s1, cama_s3, cama_s2, ti_ease_of_movement_14, cdl_MATCHINGLOW, mcrh_SMA_5_SMA_20, fibo_s2, mcrh_KAMA_20_SMA_50, mcrh_DEMA_10_TRIMA_20, mcrh_EMA_20_EMA_100, mtum_FISHERT_9_1, HSI_Close, mcrh_EMA_20_KAMA_100, mtum_CG_10, mcrh_EMA_5_SMA_20, mcrh_KAMA_10_DEMA_20, mtum_AR_26, ma_WMA_20, mcrh_KAMA_5_TRIMA_10, mcrh_SMA_10_DEMA_100, mtum_ADX, mcrh_WMA_50_DEMA_100, mcrh_TEMA_10_EMA_20, mcrh_T3_5_WMA_10, mcrh_T3_50_DEMA_100, mcrh_T3_20_T3_50, mcrh_DEMA_10_DEMA_20, mtum_MACD_fix_list, olap_VMAP, ichi_senkou_b, olap_SSF_10_2, olap_PWMA_10, olap_MIDPRICE, olap_MIDPOINT, ichi_isin_cloud, mcrh_T3_20_EMA_50, ichi_senkou_a, mtum_td_seq, ma_DEMA_20, ma_TRIMA_50, ma_EMA_50, mtum_QQE_14_5_4236_RSIMA, ma_SMA_5, ma_T3_5, ma_TEMA_20, mtum_MINUS_DI, ma_TRIMA_5, mtum_MACD_list, wood_pp
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point   volu_NVI_1  mtum_DMP_14  olap_BBAND_dif  ...  ma_TEMA_20  mtum_MINUS_DI  ma_TRIMA_5  mtum_MACD_list    wood_pp
0  2025-05-08 09:15:00               0  1000.000000          NaN             NaN  ...         NaN            NaN         NaN             NaN        NaN
1  2025-05-08 09:45:00               0  1000.000000          NaN             NaN  ...         NaN            NaN         NaN             NaN  46.500000
2  2025-05-08 10:00:00               0   999.681863          NaN             NaN  ...         NaN            NaN         NaN             NaN  47.075001
3  2025-05-08 10:15:00               0  1000.639312          NaN             NaN  ...         NaN            NaN         NaN             NaN  47.112499
4  2025-05-08 10:30:00               0  1000.112441          NaN             NaN  ...         NaN            NaN   47.055556             NaN  47.350000

[5 rows x 173 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point   volu_NVI_1  mtum_DMP_14  olap_BBAND_dif     volu_PVOL  ...   ma_TEMA_20  mtum_MINUS_DI   ma_TRIMA_5  mtum_MACD_list      wood_pp
count     1379.000000  1379.000000  1366.000000     1360.000000  1.379000e+03  ...  1322.000000    1365.000000  1375.000000     1346.000000  1378.000000
mean        -0.580131   995.750013     0.832985        1.232859  1.108347e+08  ...    49.303977      20.248042    49.198638       -0.001182    49.197297
std         32.987836     1.736853     0.449350        0.787041  1.060026e+08  ...     3.255481       8.416365     3.207893        0.068654     3.211870
min       -100.000000   992.491504     0.136357        0.208810  1.248900e+03  ...    44.576227       3.949649    44.683334       -0.303094    44.599999
25%          0.000000   994.651159     0.519776        0.678674  4.761170e+07  ...    46.305000      14.260285    46.313888       -0.040064    46.340625
50%          0.000000   995.338678     0.745800        0.990707  7.832223e+07  ...    48.622929      19.389360    48.105556       -0.001445    48.075000
75%          0.000000   996.447630     1.053060        1.548088  1.362409e+08  ...    51.769110      24.393249    51.511111        0.034536    51.481249
max        100.000000  1001.525222     3.041026        4.510111  9.971169e+08  ...    56.973300      61.127347    56.950000        0.307016    57.287500

[8 rows x 172 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() -  groupby(Y_TARGET).count()                 Date
buy_sell_point      
0               1300
100               79
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96mDataFrame head:
             Date  buy_sell_point   volu_NVI_1  mtum_DMP_14  olap_BBAND_dif  ...  ma_TEMA_20  mtum_MINUS_DI  ma_TRIMA_5  mtum_MACD_list    wood_pp
103  1.747228e+09               0  1000.287167     1.714679        1.695404  ...   48.616369       9.548403   48.527777        0.123443  48.625000
104  1.747229e+09               0  1000.287167     2.042203        2.180343  ...   48.914727       8.026531   48.783332        0.162508  49.025000
105  1.747230e+09               0   999.782626     1.896331        2.417021  ...   49.089103       7.347451   49.061110        0.160704  49.437500
106  1.747231e+09               0   999.884044     1.760879        2.625260  ...   49.238832       9.342612   49.283332        0.152157  49.362499
107  1.747232e+09               1   999.884044     1.835099        2.796336  ...   49.380831       8.554522   49.361110        0.142677  49.312500

[5 rows x 173 columns][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 172)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 172)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96marr_vali sample: [[1.74723660e+09 9.99580706e+02 1.26688100e+00 ... 4.92666660e+01
  1.81290000e-02 4.92250000e+01]
 [1.74723570e+09 9.99580706e+02 1.36433400e+00 ... 4.93000000e+01
  3.81720000e-02 4.92750000e+01]
 [1.74723480e+09 9.99580706e+02 1.46928300e+00 ... 4.93444440e+01
  6.63500000e-02 4.92875000e+01]
 ...
 [1.74723030e+09 9.99782626e+02 1.89633100e+00 ... 4.90611100e+01
  1.60704000e-01 4.94375000e+01]
 [1.74722940e+09 1.00028717e+03 2.04220300e+00 ... 4.87833320e+01
  1.62508000e-01 4.90250000e+01]
 [1.74722850e+09 1.00028717e+03 1.71467900e+00 ... 4.85277770e+01
  1.23443000e-01 4.86250000e+01]][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - i want to chc folder: Models/TF_multi/Scalers/2318.HK_neg_low1_
root - [DEBUG]{MainThread} - scaler_min_max_array() - Scaler will be Saved Path: Models/TF_multi/Scalers/2318.HK_neg_low1_.scal
root - [INFO]{MainThread} - log_shapes_trains_val_data() - Training features shape SMOTE:(1286, 10, 172)	 Labels shape:(1286, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Validation features shape:(364, 10, 172)	 Labels shape:(364, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Test features shape:(229, 10, 172)		 Labels shape:(229, 1)
root - [DEBUG]{MainThread} - __init__() - [95mCreated object TF_multidimension Path from: d_price/2318.HK_PLAIN_stock_history_MONTH_3_AD.csv[0m
root - [INFO]{MainThread} - <module>() - Processing stock: 2318.HK, Buy/Sell type: pos, Columns JSON: <Feature_selection_json_columns.JsonColumns object at 0x7b97b862e200>
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1379, 1075) Path: d_price/2318.HK_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, sti_BETA, mtum_BR_26, sti_TOS_STDEVALL_U_2, mtum_AR_26, mtum_td_seq, sti_TOS_STDEVALL_L_1, sti_TOS_STDEVALL_U_1, sti_TOS_STDEVALL_L_3, ti_ease_of_movement_14, sti_TOS_STDEVALL_LR, sti_TOS_STDEVALL_U_3
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point  sti_BETA  mtum_BR_26  ...  sti_TOS_STDEVALL_L_3  ti_ease_of_movement_14  sti_TOS_STDEVALL_LR  sti_TOS_STDEVALL_U_3
0  2025-05-08 09:15:00               0       NaN         NaN  ...             34.687815                     NaN            44.329063             53.970311
1  2025-05-08 09:45:00               0       NaN         NaN  ...             34.694887                     NaN            44.336135             53.977384
2  2025-05-08 10:00:00               0       NaN         NaN  ...             34.701959                     NaN            44.343208             53.984456
3  2025-05-08 10:15:00               0       NaN         NaN  ...             34.709032                     NaN            44.350280             53.991529
4  2025-05-08 10:30:00               0       NaN         NaN  ...             34.716104                     NaN            44.357353             53.998601

[5 rows x 13 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point     sti_BETA   mtum_BR_26  ...  ti_ease_of_movement_14  sti_TOS_STDEVALL_LR  sti_TOS_STDEVALL_U_3
count     1379.000000  1374.000000  1353.000000  ...             1365.000000          1379.000000           1379.000000
mean        -0.580131     0.447684   108.117616  ...             -117.589565            49.201958             58.843206
std         32.987836     0.812504    46.666551  ...             1350.934386             2.816429              2.816429
min       -100.000000    -2.391990    22.900795  ...           -10010.487088            44.329063             53.970311
25%          0.000000     0.083734    75.438625  ...               -0.083308            46.765511             56.406759
50%          0.000000     0.358882    98.647993  ...                0.014214            49.201958             58.843206
75%          0.000000     0.704962   132.307614  ...                0.134718            51.638406             61.279654
max        100.000000    11.412796   353.571617  ...             4529.394417            54.074853             63.716101

[8 rows x 12 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() -  groupby(Y_TARGET).count()                 Date
buy_sell_point      
0               1308
100               71
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96mDataFrame head:
            Date  buy_sell_point  sti_BETA  mtum_BR_26  ...  sti_TOS_STDEVALL_L_3  ti_ease_of_movement_14  sti_TOS_STDEVALL_LR  sti_TOS_STDEVALL_U_3
26  1.746785e+09               0  3.005011  115.151446  ...             34.871697               -0.016926            44.512946             54.154194
27  1.746786e+09               0  2.915517   85.074601  ...             34.878770               -0.098925            44.520018             54.161267
28  1.746787e+09               0  0.721681   84.848675  ...             34.885842               -0.108190            44.527091             54.168339
29  1.746788e+09               0  0.765015   67.605857  ...             34.892915               -0.154118            44.534163             54.175411
30  1.746788e+09               0  0.386221   72.059184  ...             34.899987               -0.177484            44.541235             54.182484

[5 rows x 13 columns][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 12)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 12)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96marr_vali sample: [[ 1.74679650e+09  6.54324000e-01  6.17652760e+01  5.10040960e+01
   7.16672050e+01  1.90000000e+01  4.13628480e+01  4.77903470e+01
   3.49353490e+01 -1.39895000e-01  4.45765980e+01  5.42178460e+01]
 [ 1.74679560e+09  5.05234000e-01  5.94208810e+01  5.09970240e+01
   7.16672050e+01  1.80000000e+01  4.13557760e+01  4.77832750e+01
   3.49282770e+01 -1.32555000e-01  4.45695250e+01  5.42107730e+01]
 [ 1.74679110e+09  6.37699000e-01  6.08701380e+01  5.09899520e+01
   7.62719020e+01  1.70000000e+01  4.13487030e+01  4.77762020e+01
   3.49212040e+01 -1.23308000e-01  4.45624530e+01  5.42037010e+01]
 [ 1.74679020e+09  3.40548000e-01  5.69448740e+01  5.09828790e+01
   7.37709950e+01  1.60000000e+01  4.13416310e+01  4.77691300e+01
   3.49141320e+01 -1.54650000e-01  4.45553800e+01  5.41966290e+01]
 [ 1.74678930e+09  3.76471000e-01  6.91181250e+01  5.09758070e+01
   8.77199010e+01  1.50000000e+01  4.13345580e+01  4.77620570e+01
   3.49070600e+01 -1.53709000e-01  4.45483080e+01  5.41895560e+01]
 [ 1.74678840e+09  3.86221000e-01  7.20591840e+01  5.09687340e+01
   9.46435220e+01  1.40000000e+01  4.13274860e+01  4.77549850e+01
   3.48999870e+01 -1.77484000e-01  4.45412350e+01  5.41824840e+01]
 [ 1.74678750e+09  7.65015000e-01  6.76058570e+01  5.09616620e+01
   8.81360570e+01  1.30000000e+01  4.13204140e+01  4.77479120e+01
   3.48929150e+01 -1.54118000e-01  4.45341630e+01  5.41754110e+01]
 [ 1.74678660e+09  7.21681000e-01  8.48486750e+01  5.09545900e+01
   1.11111591e+02  1.20000000e+01  4.13133410e+01  4.77408400e+01
   3.48858420e+01 -1.08190000e-01  4.45270910e+01  5.41683390e+01]
 [ 1.74678570e+09  2.91551700e+00  8.50746010e+01  5.09475170e+01
   1.10909273e+02  1.10000000e+01  4.13062690e+01  4.77337680e+01
   3.48787700e+01 -9.89250000e-02  4.45200180e+01  5.41612670e+01]
 [ 1.74678480e+09  3.00501100e+00  1.15151446e+02  5.09404450e+01
   1.06896636e+02  1.00000000e+01  4.12991960e+01  4.77266950e+01
   3.48716970e+01 -1.69260000e-02  4.45129460e+01  5.41541940e+01]][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - i want to chc folder: Models/TF_multi/Scalers/2318.HK_pos_vgood16_
root - [DEBUG]{MainThread} - scaler_min_max_array() - Scaler will be Saved Path: Models/TF_multi/Scalers/2318.HK_pos_vgood16_.scal
root - [INFO]{MainThread} - log_shapes_trains_val_data() - Training features shape SMOTE:(1366, 10, 12)	 Labels shape:(1366, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Validation features shape:(386, 10, 12)	 Labels shape:(386, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Test features shape:(242, 10, 12)		 Labels shape:(242, 1)
root - [DEBUG]{MainThread} - __init__() - [95mCreated object TF_multidimension Path from: d_price/2318.HK_PLAIN_stock_history_MONTH_3_AD.csv[0m
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1379, 1075) Path: d_price/2318.HK_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, sti_BETA, mtum_BR_26, sti_TOS_STDEVALL_U_2, mtum_AR_26, mtum_td_seq, sti_TOS_STDEVALL_L_1, sti_TOS_STDEVALL_U_1, sti_TOS_STDEVALL_L_3, ti_ease_of_movement_14, sti_TOS_STDEVALL_LR, sti_TOS_STDEVALL_U_3, sti_TOS_STDEVALL_L_2, cdl_INVERTEDHAMMER, mtum_MINUS_DM, ti_acc_dist, cycl_HT_TRENDMODE, ti_chaikin_10_3, mcrh_WMA_50_DEMA_100, mtum_PVO_12_26_9, mtum_DX, has_preMarket, mtum_DMP_14, Volume, volu_PVOL, mtum_PLUS_DM, mcrh_T3_5_WMA_10, mtum_AROONOSC, mtum_DMN_14, volu_Chaikin_ADOSC, volu_Chaikin_AD, mtum_MINUS_DI, vola_ATR, mcrh_EMA_5_WMA_10, volu_OBV, mcrh_WMA_50_KAMA_100, olap_BBAND_dif, mtum_td_seq_sig, ti_konk_avg, vola_THERMOma_20_2_05, vola_NATR
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point  sti_BETA  mtum_BR_26  ...  mtum_td_seq_sig  ti_konk_avg  vola_THERMOma_20_2_05  vola_NATR
0  2025-05-08 09:15:00               0       NaN         NaN  ...                0          NaN                    NaN        NaN
1  2025-05-08 09:45:00               0       NaN         NaN  ...                0          NaN                    NaN        NaN
2  2025-05-08 10:00:00               0       NaN         NaN  ...                0          NaN                    NaN        NaN
3  2025-05-08 10:15:00               0       NaN         NaN  ...                0          NaN                    NaN        NaN
4  2025-05-08 10:30:00               0       NaN         NaN  ...                0          NaN                    NaN        NaN

[5 rows x 42 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point     sti_BETA   mtum_BR_26  sti_TOS_STDEVALL_U_2  ...  mtum_td_seq_sig  ti_konk_avg  vola_THERMOma_20_2_05    vola_NATR
count     1379.000000  1374.000000  1353.000000           1379.000000  ...      1379.000000  1341.000000            1359.000000  1365.000000
mean        -0.580131     0.447684   108.117616             55.629457  ...        -1.551849    60.655269               0.165152     0.489315
std         32.987836     0.812504    46.666551              2.816429  ...         3.825763    28.409086               0.067042     0.103609
min       -100.000000    -2.391990    22.900795             50.756562  ...       -16.000000     0.966843               0.052987     0.291677
25%          0.000000     0.083734    75.438625             53.193010  ...        -3.000000    36.589136               0.115541     0.409955
50%          0.000000     0.358882    98.647993             55.629457  ...        -1.000000    58.788984               0.149967     0.474746
75%          0.000000     0.704962   132.307614             58.065904  ...         1.000000    84.477181               0.196790     0.554378
max        100.000000    11.412796   353.571617             60.502352  ...         7.000000   121.971713               0.486646     0.793837

[8 rows x 40 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() -  groupby(Y_TARGET).count()                 Date
buy_sell_point      
0               1308
100               71
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96mDataFrame head:
            Date  buy_sell_point  sti_BETA  mtum_BR_26  sti_TOS_STDEVALL_U_2  ...  olap_BBAND_dif  mtum_td_seq_sig  ti_konk_avg  vola_THERMOma_20_2_05  vola_NATR
38  1.746799e+09               0  0.215468   68.750833             51.025314  ...        0.689638               -6    37.679192               0.131982   0.472859
39  1.746800e+09               0  0.408305   60.606849             51.032386  ...        0.661135               -7    36.315446               0.128937   0.462622
40  1.746801e+09               0  0.701281   64.063347             51.039459  ...        0.664152               -8    34.573874               0.121419   0.445434
41  1.746802e+09               0  0.847964   70.000923             51.046531  ...        0.655666               -7    32.615194               0.114617   0.420861
42  1.746803e+09               1  0.858463   68.334274             51.053603  ...        0.584035               -8    30.784692               0.103701   0.398917

[5 rows x 42 columns][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 41)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 41)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96marr_vali sample: [[1747041300.0 -0.3247 98.361749 51.088965 185.001783 2 41.447717
  47.875216 35.020218 916.68984 44.661467 54.302715 38.233968 0 0.461179
  1073548.241655 0 599267.300846 0 2.591763 50.601644 True 1.406006 766
  36231.8 1.406006 0 0.0 0.461179 525120.871661 1073548.241655 13.961164
  0.23783 0 -3165313.0 0 0.772721 0 37.025371 0.173034 0.502811]
 [1746806400.0 0.216074 73.215239 51.081893 114.286903 1 41.440645
  47.868144 35.013146 0.058606 44.654394 54.295642 38.226895 0 0.496655
  1073017.933962 0 543468.448776 0 12.258472 6.362354 False 0.437237
  3144000 146196000.0 0.437237 0 -35.714286 0.496655 567946.314137
  1073017.933962 23.020961 0.156124 0 -3166079.0 0 0.465185 -1 31.447709
  0.085985 0.335751]
 [1746805500.0 0.644491 72.414722 51.074821 111.364801 29 41.433572
  47.861071 35.006073 0.044451 44.647322 54.28857 38.219823 0 0.534859
  1073017.933962 0 543468.448776 0 0.96257 6.362354 False 0.470871
  2082786 96849549.0 0.470871 0 -85.714286 0.534859 546832.898586
  1073017.933962 23.020961 0.168134 1 -3166079.0 0 0.517684 -7 29.835433
  0.089773 0.361578]
 [1746804600.0 0.358678 75.439509 51.067748 111.364801 28 41.4265
  47.853999 34.999001 0.052503 44.640249 54.281498 38.21275 0 0.576002
  1073017.933962 0 369591.882771 0 -6.74136 11.92672 False 0.453246
  1135670 52808655.0 0.453246 0 -85.714286 0.576002 373703.905333
  1073017.933962 24.056359 0.173375 1 -3166079.0 0 0.558924 -6 28.931596
  0.09396 0.372849]
 [1746803700.0 0.571037 72.414627 51.060676 102.174949 27 41.419427
  47.846926 34.991929 0.004271 44.633177 54.274425 38.205678 0 0.62031
  -62652.066038 0 -137571.252523 0 -8.02193 17.641558 False 0.434266
  1296000 60199200.98877 0.434266 0 -100.0 0.62031 -132545.612695
  -62652.066038 25.10483 0.179019 0 -4301749.0 0 0.577838 -7 29.207099
  0.098587 0.385402]
 [1746802800.0 0.858463 68.334274 51.053603 91.837664 26 41.412355
  47.839854 34.984856 -0.051424 44.626104 54.267353 38.198606 0 0.614177
  -1358652.066038 0 -463433.082682 0 -11.112599 13.542132 False 0.467671
  1195122 55453662.623611 0.467671 0 -28.571429 0.614177 -457290.965053
  -1358652.066038 24.054685 0.185098 0 -5597749.0 0 0.584035 -8 30.784692
  0.103701 0.398917]
 [1746801900.0 0.847964 70.000923 51.046531 86.275461 25 41.405283
  47.832781 34.977784 -0.044836 44.619032 54.26028 38.191533 0 0.661421
  -163530.066038 0 -148999.093586 0 -13.932199 13.542132 False 0.503646
  675759 31389006.065563 0.503646 0 -28.571429 0.661421 -141492.723026
  -163530.066038 24.535146 0.19549 0 -4402627.0 0 0.655666 -7 32.615194
  0.114617 0.420861]
 [1746801000.0 0.701281 64.063347 51.039459 78.182671 24 41.39821
  47.825709 34.970711 -0.029694 44.61196 54.253208 38.184461 100 0.7123
  -839289.066038 0 -276811.099443 0 -12.104238 13.542132 False 0.542388
  630010 29232464.961319 0.542388 0 -28.571429 0.7123 -267637.970733
  -839289.066038 24.998799 0.206681 -1 -5078386.0 0 0.664152 -8 34.573874
  0.121419 0.445434]
 [1746800100.0 0.408305 60.606849 51.032386 70.690449 23 41.391138
  47.818637 34.963639 -0.023571 44.604887 54.246136 38.177388 0 0.767092
  -209279.066038 0 -2136.536106 0 -9.389883 13.542132 False 0.58411
  1224564 56880998.734268 0.58411 0 -28.571429 0.767092 9072.417258
  -209279.066038 25.908052 0.214888 -1 -4448376.0 0 0.661135 -7 36.315446
  0.128937 0.462622]
 [1746799200.0 0.215468 68.750833 51.025314 80.357983 22 41.384065
  47.811564 34.956566 0.016611 44.597815 54.239063 38.170316 0 0.718408
  198908.933962 0 179757.182297 0 -11.460553 6.632261 False 0.629042
  347000 16135500.0 0.629042 0 -28.571429 0.718408 193451.7174
  198908.933962 23.732998 0.219879 1 -3223812.0 0 0.689638 -6 37.679192
  0.131982 0.472859]][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - i want to chc folder: Models/TF_multi/Scalers/2318.HK_pos_good9_
root - [DEBUG]{MainThread} - scaler_min_max_array() - Scaler will be Saved Path: Models/TF_multi/Scalers/2318.HK_pos_good9_.scal
root - [INFO]{MainThread} - log_shapes_trains_val_data() - Training features shape SMOTE:(1348, 10, 41)	 Labels shape:(1348, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Validation features shape:(383, 10, 41)	 Labels shape:(383, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Test features shape:(240, 10, 41)		 Labels shape:(240, 1)
root - [DEBUG]{MainThread} - __init__() - [95mCreated object TF_multidimension Path from: d_price/2318.HK_PLAIN_stock_history_MONTH_3_AD.csv[0m
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1379, 1075) Path: d_price/2318.HK_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, sti_BETA, mtum_BR_26, sti_TOS_STDEVALL_U_2, mtum_AR_26, mtum_td_seq, sti_TOS_STDEVALL_L_1, sti_TOS_STDEVALL_U_1, sti_TOS_STDEVALL_L_3, ti_ease_of_movement_14, sti_TOS_STDEVALL_LR, sti_TOS_STDEVALL_U_3, sti_TOS_STDEVALL_L_2, cdl_INVERTEDHAMMER, mtum_MINUS_DM, ti_acc_dist, cycl_HT_TRENDMODE, ti_chaikin_10_3, mcrh_WMA_50_DEMA_100, mtum_PVO_12_26_9, mtum_DX, has_preMarket, mtum_DMP_14, Volume, volu_PVOL, mtum_PLUS_DM, mcrh_T3_5_WMA_10, mtum_AROONOSC, mtum_DMN_14, volu_Chaikin_ADOSC, volu_Chaikin_AD, mtum_MINUS_DI, vola_ATR, mcrh_EMA_5_WMA_10, volu_OBV, mcrh_WMA_50_KAMA_100, olap_BBAND_dif, mtum_td_seq_sig, ti_konk_avg, vola_THERMOma_20_2_05, vola_NATR, sti_ENTP_10, mcrh_WMA_50_SMA_100, mcrh_SMA_20_KAMA_50, mcrh_T3_20_T3_50, mcrh_KAMA_5_DEMA_20, mcrh_T3_50_DEMA_100, mtum_ADX, mcrh_TRIMA_20_TEMA_100, ti_force_index_13, mtum_PVOs_12_26_9, mcrh_KAMA_20_SMA_50, tend_lh, volu_EFI_13, mcrh_EMA_50_KAMA_100, mtum_AROON_down, olap_VMAP, mtum_STOCH_RSI_k, mtum_PLUS_DI, mtum_PSL_12, mtum_PVOh_12_26_9, mtum_AO_5_34, olap_MIDPRICE, mtum_MACD_fix, mcrh_TRIMA_5_TEMA_10, mcrh_TRIMA_50_T3_100, mtum_MFI, mtum_INERTIA_20_14, mcrh_WMA_50_EMA_100, mtum_MACD, mtum_ADXR, mcrh_WMA_5_SMA_10, mtum_STCmacd_10_12_26_05, mtum_BULLP_13, mtum_AROON_up, olap_BBAND_LOWER, HSI_SMA_100, sti_LINEARREG_ANGLE, mtum_QQEl_14_5_4236, mcrh_KAMA_5_TRIMA_10, vola_KCUe_20_2, vola_HWU, trad_r2, cdl_TRISTAR, mcrh_TRIMA_20_DEMA_50, ti_vortex_neg_14, mcrh_DEMA_50_EMA_100, ti_konk_gre_avg_crash, cdl_LONGLEGGEDDOJI, mcrh_DEMA_5_TRIMA_10, ti_coppock_14_11_10, mcrh_EMA_50_DEMA_100, tend_PSARr_002_02, tend_renko_ATR, cdl_HAMMER, mcrh_T3_20_SMA_100, mcrh_TEMA_5_WMA_10, cdl_DOJI, mcrh_TEMA_5_TEMA_20, sti_LINEARREG_SLOPE, mtum_QQEs_14_5_4236, mcrh_T3_20_KAMA_100, cdl_GRAVESTONEDOJI, mcrh_SMA_5_SMA_10, ichi_senkou_b
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point  sti_BETA  mtum_BR_26  ...  mcrh_T3_20_KAMA_100  cdl_GRAVESTONEDOJI  mcrh_SMA_5_SMA_10  ichi_senkou_b
0  2025-05-08 09:15:00               0       NaN         NaN  ...                    0                -100                  0            NaN
1  2025-05-08 09:45:00               0       NaN         NaN  ...                    0                 100                  0            NaN
2  2025-05-08 10:00:00               0       NaN         NaN  ...                    0                   0                  0            NaN
3  2025-05-08 10:15:00               0       NaN         NaN  ...                    0                   0                  0            NaN
4  2025-05-08 10:30:00               0       NaN         NaN  ...                    0                   0                  0            NaN

[5 rows x 106 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point     sti_BETA   mtum_BR_26  sti_TOS_STDEVALL_U_2  ...  mcrh_T3_20_KAMA_100  cdl_GRAVESTONEDOJI  mcrh_SMA_5_SMA_10  ichi_senkou_b
count     1379.000000  1374.000000  1353.000000           1379.000000  ...          1379.000000         1379.000000        1379.000000    1302.000000
mean        -0.580131     0.447684   108.117616             55.629457  ...             0.000000            1.667875           0.003626      49.037289
std         32.987836     0.812504    46.666551              2.816429  ...             0.170375           13.365572           0.454762       2.968040
min       -100.000000    -2.391990    22.900795             50.756562  ...            -1.000000         -100.000000          -1.000000      45.325001
25%          0.000000     0.083734    75.438625             53.193010  ...             0.000000            0.000000           0.000000      46.349998
50%          0.000000     0.358882    98.647993             55.629457  ...             0.000000            0.000000           0.000000      48.175002
75%          0.000000     0.704962   132.307614             58.065904  ...             0.000000            0.000000           0.000000      50.725000
max        100.000000    11.412796   353.571617             60.502352  ...             1.000000          100.000000           1.000000      56.600000

[8 rows x 104 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() -  groupby(Y_TARGET).count()                 Date
buy_sell_point      
0               1308
100               71
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96mDataFrame head:
            Date  buy_sell_point  sti_BETA  mtum_BR_26  ...  mcrh_T3_20_KAMA_100  cdl_GRAVESTONEDOJI  mcrh_SMA_5_SMA_10  ichi_senkou_b
77  1.747135e+09               0 -0.248281   95.312567  ...                    0                   0                  0      46.699999
78  1.747136e+09               0  0.090086  100.000246  ...                    0                   0                  0      46.899999
79  1.747137e+09               0  0.973215   98.412962  ...                    0                   0                  0      46.899999
80  1.747141e+09               0  0.548643  108.197119  ...                    0                   0                  0      46.899999
81  1.747142e+09               0  0.334031   98.437759  ...                    0                   0                  1      46.899999

[5 rows x 106 columns][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 105)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 105)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96marr_vali sample: [[1747146600.0 0.235102 85.507123 ... 0 0 46.899999]
 [1747145700.0 0.589613 85.507123 ... 0 0 46.899999]
 [1747144800.0 0.221736 92.537196 ... 0 0 46.899999]
 ...
 [1747136700.0 0.973215 98.412962 ... 0 0 46.899999]
 [1747135800.0 0.090086 100.000246 ... 0 0 46.899999]
 [1747134900.0 -0.248281 95.312567 ... 0 0 46.699999]][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - i want to chc folder: Models/TF_multi/Scalers/2318.HK_pos_reg4_
root - [DEBUG]{MainThread} - scaler_min_max_array() - Scaler will be Saved Path: Models/TF_multi/Scalers/2318.HK_pos_reg4_.scal
root - [INFO]{MainThread} - log_shapes_trains_val_data() - Training features shape SMOTE:(1296, 10, 105)	 Labels shape:(1296, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Validation features shape:(371, 10, 105)	 Labels shape:(371, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Test features shape:(233, 10, 105)		 Labels shape:(233, 1)
root - [DEBUG]{MainThread} - __init__() - [95mCreated object TF_multidimension Path from: d_price/2318.HK_PLAIN_stock_history_MONTH_3_AD.csv[0m
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1379, 1075) Path: d_price/2318.HK_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, sti_BETA, mtum_BR_26, sti_TOS_STDEVALL_U_2, mtum_AR_26, mtum_td_seq, sti_TOS_STDEVALL_L_1, sti_TOS_STDEVALL_U_1, sti_TOS_STDEVALL_L_3, ti_ease_of_movement_14, sti_TOS_STDEVALL_LR, sti_TOS_STDEVALL_U_3, sti_TOS_STDEVALL_L_2, cdl_INVERTEDHAMMER, mtum_MINUS_DM, ti_acc_dist, cycl_HT_TRENDMODE, ti_chaikin_10_3, mcrh_WMA_50_DEMA_100, mtum_PVO_12_26_9, mtum_DX, has_preMarket, mtum_DMP_14, Volume, volu_PVOL, mtum_PLUS_DM, mcrh_T3_5_WMA_10, mtum_AROONOSC, mtum_DMN_14, volu_Chaikin_ADOSC, volu_Chaikin_AD, mtum_MINUS_DI, vola_ATR, mcrh_EMA_5_WMA_10, volu_OBV, mcrh_WMA_50_KAMA_100, olap_BBAND_dif, mtum_td_seq_sig, ti_konk_avg, vola_THERMOma_20_2_05, vola_NATR, sti_ENTP_10, mcrh_WMA_50_SMA_100, mcrh_SMA_20_KAMA_50, mcrh_T3_20_T3_50, mcrh_KAMA_5_DEMA_20, mcrh_T3_50_DEMA_100, mtum_ADX, mcrh_TRIMA_20_TEMA_100, ti_force_index_13, mtum_PVOs_12_26_9, mcrh_KAMA_20_SMA_50, tend_lh, volu_EFI_13, mcrh_EMA_50_KAMA_100, mtum_AROON_down, olap_VMAP, mtum_STOCH_RSI_k, mtum_PLUS_DI, mtum_PSL_12, mtum_PVOh_12_26_9, mtum_AO_5_34, olap_MIDPRICE, mtum_MACD_fix, mcrh_TRIMA_5_TEMA_10, mcrh_TRIMA_50_T3_100, mtum_MFI, mtum_INERTIA_20_14, mcrh_WMA_50_EMA_100, mtum_MACD, mtum_ADXR, mcrh_WMA_5_SMA_10, mtum_STCmacd_10_12_26_05, mtum_BULLP_13, mtum_AROON_up, olap_BBAND_LOWER, HSI_SMA_100, sti_LINEARREG_ANGLE, mtum_QQEl_14_5_4236, mcrh_KAMA_5_TRIMA_10, vola_KCUe_20_2, vola_HWU, trad_r2, cdl_TRISTAR, mcrh_TRIMA_20_DEMA_50, ti_vortex_neg_14, mcrh_DEMA_50_EMA_100, ti_konk_gre_avg_crash, cdl_LONGLEGGEDDOJI, mcrh_DEMA_5_TRIMA_10, ti_coppock_14_11_10, mcrh_EMA_50_DEMA_100, tend_PSARr_002_02, tend_renko_ATR, cdl_HAMMER, mcrh_T3_20_SMA_100, mcrh_TEMA_5_WMA_10, cdl_DOJI, mcrh_TEMA_5_TEMA_20, sti_LINEARREG_SLOPE, mtum_QQEs_14_5_4236, mcrh_T3_20_KAMA_100, cdl_GRAVESTONEDOJI, mcrh_SMA_5_SMA_10, ichi_senkou_b, volu_PVI_1, volu_PVR, mtum_ROC, mtum_ROCP, volu_NVI_1, mtum_ROCR, mtum_ROCR100, mtum_RSX_14, volu_PVT, wood_pp, olap_PWMA_10, mtum_SMIs_5_20_5, mtum_STCstoch_10_12_26_05, vola_HWL, trad_s2, mtum_STOCH_Fa_k, mtum_STOCH_RSI_d, ti_konk_rest, ti_kelt_20_lower, tend_hh, tend_PSARaf_002_02, olap_HWMA_02_01_01, olap_JMA_7_0, olap_MIDPOINT, perf_z_30_1, olap_VWMA_10, ti_vortex_pos_14, mtum_BIAS_SMA_26, mtum_MOM, mcrh_DEMA_5_TEMA_20, ma_TRIMA_5, ma_WMA_5, mcrh_DEMA_20_T3_100, mcrh_DEMA_50_T3_100, mcrh_DEMA_5_DEMA_10, mcrh_DEMA_5_SMA_10, mcrh_DEMA_5_ti_h20, mcrh_KAMA_50_KAMA_100, mcrh_EMA_10_T3_100, mcrh_EMA_20_KAMA_100, mcrh_EMA_20_T3_100, mcrh_EMA_5_TRIMA_10, mcrh_KAMA_10_T3_100, mcrh_KAMA_20_SMA_100, ma_T3_5, ma_SMA_5, ma_KAMA_5, ma_KAMA_10, ma_EMA_50, ma_EMA_5, ma_EMA_20, ichi_isin_cloud, demark_pp, cycl_SINE_sine, cycl_SINE_lead, cycl_PHASOR_inph, cdl_TAKURI, cdl_EVENINGDOJISTAR, cdl_DRAGONFLYDOJI, cdl_3WHITESOLDIERS, cama_s2, mcrh_KAMA_20_T3_100, mcrh_SMA_10_T3_100, mtum_MACD_signal, mtum_CG_10, mcrh_WMA_5_TRIMA_10, mcrh_WMA_5_WMA_10, mcrh_WMA_5_ti_h20, mtum_BEARP_13, mtum_BOP, mtum_CFO_9, mtum_CTI_12, mcrh_SMA_20_KAMA_100, mtum_FISHERT_9_1, mtum_FISHERTs_9_1, mtum_MACD_ext_list, mtum_MACD_fix_list, mtum_MACD_fix_signal, mtum_MACD_list, mcrh_WMA_5_T3_10, mcrh_WMA_20_T3_100, mcrh_WMA_10_T3_100, mcrh_TRIMA_20_T3_100, mcrh_TRIMA_20_SMA_50, mcrh_TRIMA_10_T3_100, mcrh_TEMA_5_ti_h20, mcrh_TEMA_50_T3_100, mcrh_TEMA_10_ti_h20, mcrh_T3_20_T3_100, mcrh_T3_20_SMA_50, mcrh_T3_20_KAMA_50, mcrh_T3_20_EMA_50, mcrh_T3_20_DEMA_100, mcrh_T3_10_T3_100, mcrh_SMA_20_TEMA_100, mcrh_SMA_20_T3_100, wood_r2
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point  sti_BETA  mtum_BR_26  ...  mcrh_T3_10_T3_100  mcrh_SMA_20_TEMA_100  mcrh_SMA_20_T3_100    wood_r2
0  2025-05-08 09:15:00               0       NaN         NaN  ...                  0                     0                   0        NaN
1  2025-05-08 09:45:00               0       NaN         NaN  ...                  0                     0                   0  46.900000
2  2025-05-08 10:00:00               0       NaN         NaN  ...                  0                     0                   0  47.475002
3  2025-05-08 10:15:00               0       NaN         NaN  ...                  0                     0                   0  47.462498
4  2025-05-08 10:30:00               0       NaN         NaN  ...                  0                     0                   0  47.850000

[5 rows x 203 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point     sti_BETA   mtum_BR_26  sti_TOS_STDEVALL_U_2  ...  mcrh_T3_10_T3_100  mcrh_SMA_20_TEMA_100  mcrh_SMA_20_T3_100      wood_r2
count     1379.000000  1374.000000  1353.000000           1379.000000  ...        1379.000000           1379.000000         1379.000000  1378.000000
mean        -0.580131     0.447684   108.117616             55.629457  ...          -0.001450             -0.001450           -0.001450    49.432565
std         32.987836     0.812504    46.666551              2.816429  ...           0.114282              0.190479            0.114282     3.266762
min       -100.000000    -2.391990    22.900795             50.756562  ...          -1.000000             -1.000000           -1.000000    44.800000
25%          0.000000     0.083734    75.438625             53.193010  ...           0.000000              0.000000            0.000000    46.549999
50%          0.000000     0.358882    98.647993             55.629457  ...           0.000000              0.000000            0.000000    48.368749
75%          0.000000     0.704962   132.307614             58.065904  ...           0.000000              0.000000            0.000000    51.737499
max        100.000000    11.412796   353.571617             60.502352  ...           1.000000              1.000000            1.000000    58.137499

[8 rows x 201 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() -  groupby(Y_TARGET).count()                 Date
buy_sell_point      
0               1308
100               71
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96mDataFrame head:
             Date  buy_sell_point  sti_BETA  mtum_BR_26  ...  mcrh_T3_10_T3_100  mcrh_SMA_20_TEMA_100  mcrh_SMA_20_T3_100    wood_r2
103  1.747228e+09               0  0.385367  180.952442  ...                  0                     0                   0  49.125000
104  1.747229e+09               0  0.434402  195.349072  ...                  0                     0                   0  49.525000
105  1.747230e+09               0  0.388237  178.723518  ...                  0                     0                   0  50.087502
106  1.747231e+09               0  0.428510  165.306399  ...                  0                     0                   0  49.712498
107  1.747232e+09               0  0.577973  177.083906  ...                  0                     0                   0  49.562500

[5 rows x 203 columns][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 202)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 202)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96marr_vali sample: [[1747236600.0 -0.082478 180.852062 ... 0 0 49.324999]
 [1747235700.0 0.384724 180.852062 ... 0 0 49.374998]
 [1747234800.0 0.459217 180.852062 ... 0 0 49.437502]
 ...
 [1747230300.0 0.388237 178.723518 ... 0 0 50.087502]
 [1747229400.0 0.434402 195.349072 ... 0 0 49.525]
 [1747228500.0 0.385367 180.952442 ... 0 0 49.125]][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - i want to chc folder: Models/TF_multi/Scalers/2318.HK_pos_low1_
root - [DEBUG]{MainThread} - scaler_min_max_array() - Scaler will be Saved Path: Models/TF_multi/Scalers/2318.HK_pos_low1_.scal
root - [INFO]{MainThread} - log_shapes_trains_val_data() - Training features shape SMOTE:(1288, 10, 202)	 Labels shape:(1288, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Validation features shape:(364, 10, 202)	 Labels shape:(364, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Test features shape:(229, 10, 202)		 Labels shape:(229, 1)
root - [DEBUG]{MainThread} - __init__() - [95mCreated object TF_multidimension Path from: d_price/2318.HK_PLAIN_stock_history_MONTH_3_AD.csv[0m
matplotlib - [DEBUG]{MainThread} - wrapper() - matplotlib data path: /opt/conda/lib/python3.10/site-packages/matplotlib/mpl-data
matplotlib - [DEBUG]{MainThread} - wrapper() - CONFIGDIR=/root/.config/matplotlib
matplotlib - [DEBUG]{MainThread} - <module>() - interactive is False
matplotlib - [DEBUG]{MainThread} - <module>() - platform is linux
matplotlib - [DEBUG]{MainThread} - wrapper() - CACHEDIR=/root/.cache/matplotlib
matplotlib.font_manager - [DEBUG]{MainThread} - _load_fontmanager() - Using fontManager instance from /root/.cache/matplotlib/fontlist-v390.json
tensorflow - [DEBUG]{MainThread} - <module>() - Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
WDM - [INFO]{MainThread} - log() - ====== WebDriver manager ======
WDM - [INFO]{MainThread} - log() - Get LATEST chromedriver version for google-chrome
urllib3.connectionpool - [DEBUG]{MainThread} - _new_conn() - Starting new HTTPS connection (1): googlechromelabs.github.io:443
urllib3.connectionpool - [DEBUG]{MainThread} - _make_request() - https://googlechromelabs.github.io:443 "GET /chrome-for-testing/latest-patch-versions-per-build.json HTTP/1.1" 200 12471
WDM - [INFO]{MainThread} - log() - Get LATEST chromedriver version for google-chrome
urllib3.connectionpool - [DEBUG]{MainThread} - _new_conn() - Starting new HTTPS connection (1): googlechromelabs.github.io:443
urllib3.connectionpool - [DEBUG]{MainThread} - _make_request() - https://googlechromelabs.github.io:443 "GET /chrome-for-testing/latest-patch-versions-per-build.json HTTP/1.1" 200 12471
WDM - [INFO]{MainThread} - log() - Get LATEST chromedriver version for google-chrome
urllib3.connectionpool - [DEBUG]{MainThread} - _new_conn() - Starting new HTTPS connection (1): googlechromelabs.github.io:443
urllib3.connectionpool - [DEBUG]{MainThread} - _make_request() - https://googlechromelabs.github.io:443 "GET /chrome-for-testing/latest-patch-versions-per-build.json HTTP/1.1" 200 12471
urllib3.connectionpool - [DEBUG]{MainThread} - _new_conn() - Starting new HTTPS connection (1): googlechromelabs.github.io:443
urllib3.connectionpool - [DEBUG]{MainThread} - _make_request() - https://googlechromelabs.github.io:443 "GET /chrome-for-testing/known-good-versions-with-downloads.json HTTP/1.1" 200 103775
WDM - [INFO]{MainThread} - log() - WebDriver version 138.0.7204.183 selected
WDM - [INFO]{MainThread} - log() - Modern chrome version https://storage.googleapis.com/chrome-for-testing-public/138.0.7204.183/linux64/chromedriver-linux64.zip
WDM - [INFO]{MainThread} - log() - About to download new driver from https://storage.googleapis.com/chrome-for-testing-public/138.0.7204.183/linux64/chromedriver-linux64.zip
urllib3.connectionpool - [DEBUG]{MainThread} - _new_conn() - Starting new HTTPS connection (1): storage.googleapis.com:443
urllib3.connectionpool - [DEBUG]{MainThread} - _make_request() - https://storage.googleapis.com:443 "GET /chrome-for-testing-public/138.0.7204.183/linux64/chromedriver-linux64.zip HTTP/1.1" 200 9792806
WDM - [INFO]{MainThread} - log() - Driver downloading response is 200
WDM - [INFO]{MainThread} - log() - Get LATEST chromedriver version for google-chrome
urllib3.connectionpool - [DEBUG]{MainThread} - _new_conn() - Starting new HTTPS connection (1): googlechromelabs.github.io:443
urllib3.connectionpool - [DEBUG]{MainThread} - _make_request() - https://googlechromelabs.github.io:443 "GET /chrome-for-testing/latest-patch-versions-per-build.json HTTP/1.1" 200 12471
WDM - [INFO]{MainThread} - log() - Driver has been saved in cache [/root/.wdm/drivers/chromedriver/linux64/138.0.7204.183]
selenium.webdriver.common.driver_finder - [DEBUG]{MainThread} - _binary_paths() - Skipping Selenium Manager; path to chrome driver specified in Service class: /root/.wdm/drivers/chromedriver/linux64/138.0.7204.183/chromedriver-linux64/chromedriver
selenium.webdriver.common.service - [DEBUG]{MainThread} - _start_process() - Started executable: `/root/.wdm/drivers/chromedriver/linux64/138.0.7204.183/chromedriver-linux64/chromedriver` in a child process with pid: 10971 using 0 to output -3
selenium.webdriver.remote.remote_connection - [DEBUG]{MainThread} - execute() - POST http://localhost:58553/session {'capabilities': {'firstMatch': [{}], 'alwaysMatch': {'browserName': 'chrome', 'pageLoadStrategy': <PageLoadStrategy.normal: 'normal'>, 'goog:chromeOptions': {'extensions': [], 'args': ['--headless', '--no-sandbox', '--disable-dev-shm-usage', '--user-data-dir=/tmp/tmpmqhg0tey']}}}}
urllib3.connectionpool - [DEBUG]{MainThread} - _new_conn() - Starting new HTTP connection (1): localhost:58553
urllib3.connectionpool - [DEBUG]{MainThread} - _make_request() - http://localhost:58553 "POST /session HTTP/1.1" 200 0
selenium.webdriver.remote.remote_connection - [DEBUG]{MainThread} - _request() - Remote response: status=200 | data={"value":{"capabilities":{"acceptInsecureCerts":false,"browserName":"chrome","browserVersion":"138.0.7204.92","chrome":{"chromedriverVersion":"138.0.7204.183 (e90faf484ddbc033fc9bf337621761d3dd5c5289-refs/branch-heads/7204@{#2435})","userDataDir":"/tmp/tmpmqhg0tey"},"fedcm:accounts":true,"goog:chromeOptions":{"debuggerAddress":"localhost:41597"},"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platformName":"linux","proxy":{},"setWindowRect":true,"strictFileInteractability":false,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unhandledPromptBehavior":"dismiss and notify","webauthn:extension:credBlob":true,"webauthn:extension:largeBlob":true,"webauthn:extension:minPinLength":true,"webauthn:extension:prf":true,"webauthn:virtualAuthenticators":true},"sessionId":"d93ab19a0869f9e22695bd1ad981bd65"}} | headers=HTTPHeaderDict({'Content-Length': '831', 'Content-Type': 'application/json; charset=utf-8', 'cache-control': 'no-cache'})
selenium.webdriver.remote.remote_connection - [DEBUG]{MainThread} - _request() - Finished Request
root - [INFO]{MainThread} - send_mesage_all_people() - Send alert everybody
root - [DEBUG]{MainThread} - send_mesage_all_people() - Will send messege for LIST_PEOPLE_IDS_CHAT url: https://api.telegram.org/bot7543747510:AAGsgP2nQqu6dh-Ue95E_xTmc3Zi3JuZtGQ/sendMessage?chat_id=7164061667&text=<pre> START: 2025-08-07 06:17:25 </pre>
Stocks to be monitored: 
2318.HK 2888.HK &parse_mode=HTML
root - [INFO]{PROD} - producer() -  Producer: Running Start 2025-08-07 06:17:26
root - [DEBUG]{PROD} - producer() -  Producer: Running Start 2025-08-07 06:17:26
root - [INFO]{CONS_1} - consumer() -  Consumer: Running Start 2025-08-07 06:17:28 Thread: 1
root - [DEBUG]{CONS_1} - consumer() -   Consumer: Running
yfinance - [DEBUG]{CONS_1} - wrapper() - Entering history()
yfinance - [DEBUG]{CONS_1} - wrapper() -  Entering history()
yfinance - [DEBUG]{CONS_1} - history() - ^HSI: Yahoo GET parameters: {'range': '6d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{CONS_1} - wrapper() -   Entering get()
yfinance - [DEBUG]{CONS_1} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{CONS_1} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/^HSI
yfinance - [DEBUG]{CONS_1} - _make_request() - params={'range': '6d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{CONS_1} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{CONS_1} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{CONS_1} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{CONS_1} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{CONS_1} - wrapper() -        Entering _load_cookie_curlCffi()
yfinance - [DEBUG]{CONS_1} - wrapper() -        Exiting _load_cookie_curlCffi()
yfinance - [DEBUG]{CONS_1} - _get_cookie_basic() - reusing persistent cookie
yfinance - [DEBUG]{CONS_1} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{CONS_1} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{CONS_1} - wrapper() -        Entering _get_cookie_basic()
yfinance - [DEBUG]{CONS_1} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{CONS_1} - wrapper() -        Exiting _get_cookie_basic()
yfinance - [DEBUG]{CONS_1} - _get_crumb_basic() - crumb = 'dK3IG/1ev6r'
yfinance - [DEBUG]{CONS_1} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{CONS_1} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{CONS_1} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{CONS_1} - _make_request() - response code=200
yfinance - [DEBUG]{CONS_1} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{CONS_1} - wrapper() -   Exiting get()
yfinance - [DEBUG]{CONS_1} - history() - ^HSI: yfinance received OHLC data: 2025-07-31 01:30:00 -> 2025-08-07 06:02:28
yfinance - [DEBUG]{CONS_1} - history() - ^HSI: OHLC after cleaning: 2025-07-31 09:30:00+08:00 -> 2025-08-07 14:02:28+08:00
yfinance - [DEBUG]{CONS_1} - history() - ^HSI: OHLC after combining events: 2025-07-31 09:30:00+08:00 -> 2025-08-07 14:02:28+08:00
yfinance - [DEBUG]{CONS_1} - history() - ^HSI: yfinance returning OHLC: 2025-07-31 09:30:00+08:00 -> 2025-08-07 14:00:00+08:00
yfinance - [DEBUG]{CONS_1} - wrapper() -  Exiting history()
yfinance - [DEBUG]{CONS_1} - wrapper() - Exiting history()
root - [INFO]{CONS_1} - consumer() -  completed cycle    Date: 2025-08-07 06:17:29 stoks: 2318.HK 2888.HK
yfinance - [DEBUG]{PROD} - wrapper() - Entering download()
yfinance - [DEBUG]{PROD} - download() - Disabling multithreading because DEBUG logging enabled
yfinance - [DEBUG]{PROD} - wrapper() -  Entering history()
yfinance - [DEBUG]{PROD} - wrapper() -   Entering _fetch_ticker_tz()
yfinance - [DEBUG]{PROD} - wrapper() -    Entering get()
yfinance - [DEBUG]{PROD} - wrapper() -     Entering _make_request()
yfinance - [DEBUG]{PROD} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/2318.HK
yfinance - [DEBUG]{PROD} - _make_request() - params=frozendict.frozendict({'range': '1d', 'interval': '1d'})
yfinance - [DEBUG]{PROD} - wrapper() -      Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{PROD} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{PROD} - wrapper() -       Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{PROD} - wrapper() -        Entering _get_cookie_basic()
yfinance - [DEBUG]{PROD} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{PROD} - wrapper() -        Exiting _get_cookie_basic()
yfinance - [DEBUG]{PROD} - wrapper() -        Entering _get_crumb_basic()
yfinance - [DEBUG]{PROD} - _get_crumb_basic() - reusing crumb
yfinance - [DEBUG]{PROD} - wrapper() -        Exiting _get_crumb_basic()
yfinance - [DEBUG]{PROD} - wrapper() -       Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{PROD} - wrapper() -      Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{PROD} - _make_request() - response code=200
yfinance - [DEBUG]{PROD} - wrapper() -     Exiting _make_request()
yfinance - [DEBUG]{PROD} - wrapper() -    Exiting get()
yfinance - [DEBUG]{PROD} - wrapper() -   Exiting _fetch_ticker_tz()
yfinance - [DEBUG]{PROD} - wrapper() -   Entering history()
yfinance - [DEBUG]{PROD} - history() - 2318.HK: Yahoo GET parameters: {'range': '6d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{PROD} - wrapper() -    Entering get()
yfinance - [DEBUG]{PROD} - wrapper() -     Entering _make_request()
yfinance - [DEBUG]{PROD} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/2318.HK
yfinance - [DEBUG]{PROD} - _make_request() - params={'range': '6d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{PROD} - wrapper() -      Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{PROD} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{PROD} - wrapper() -       Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{PROD} - wrapper() -        Entering _get_cookie_basic()
yfinance - [DEBUG]{PROD} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{PROD} - wrapper() -        Exiting _get_cookie_basic()
yfinance - [DEBUG]{PROD} - wrapper() -        Entering _get_crumb_basic()
yfinance - [DEBUG]{PROD} - _get_crumb_basic() - reusing crumb
yfinance - [DEBUG]{PROD} - wrapper() -        Exiting _get_crumb_basic()
yfinance - [DEBUG]{PROD} - wrapper() -       Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{PROD} - wrapper() -      Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{PROD} - _make_request() - response code=200
yfinance - [DEBUG]{PROD} - wrapper() -     Exiting _make_request()
yfinance - [DEBUG]{PROD} - wrapper() -    Exiting get()
yfinance - [DEBUG]{PROD} - history() - 2318.HK: yfinance received OHLC data: 2025-07-31 01:30:00 -> 2025-08-07 06:02:24
yfinance - [DEBUG]{PROD} - history() - 2318.HK: OHLC after cleaning: 2025-07-31 09:30:00+08:00 -> 2025-08-07 14:02:24+08:00
yfinance - [DEBUG]{PROD} - history() - 2318.HK: OHLC after combining events: 2025-07-31 09:30:00+08:00 -> 2025-08-07 14:02:24+08:00
yfinance - [DEBUG]{PROD} - history() - 2318.HK: yfinance returning OHLC: 2025-07-31 09:30:00+08:00 -> 2025-08-07 14:00:00+08:00
yfinance - [DEBUG]{PROD} - wrapper() -   Exiting history()
yfinance - [DEBUG]{PROD} - wrapper() -  Exiting history()
yfinance - [DEBUG]{PROD} - wrapper() - Exiting download()
root - [INFO]{PROD} - producer() -  DF yhoo Stock: 2318.HK Shape_DF: (129, 6) RealTime: Ticker
    2025-07-31 09:30:00
Name: 0, dtype: object Volume: Ticker
2318.HK    845025
Name: 127, dtype: object
root - [INFO]{PROD} - producer() - Price                  Date    Open   Close    High     Low  Volume
Ticker                      2318.HK 2318.HK 2318.HK 2318.HK 2318.HK
128     2025-08-07 13:45:00   54.55   54.65    54.7    54.5  870600
127     2025-08-07 13:30:00   54.55   54.55    54.6    54.4  845025
root - [INFO]{PROD} - producer() -  DF encolado Stock: 2318.HK Shape_DF: (129, 6) RealTime: Ticker
    2025-07-31 09:30:00
Name: 0, dtype: object Volume: Ticker
2318.HK    845025
Name: 127, dtype: object
yfinance - [DEBUG]{PROD} - wrapper() - Entering download()
yfinance - [DEBUG]{PROD} - download() - Disabling multithreading because DEBUG logging enabled
yfinance - [DEBUG]{PROD} - wrapper() -  Entering history()
yfinance - [DEBUG]{PROD} - wrapper() -   Entering _fetch_ticker_tz()
yfinance - [DEBUG]{PROD} - wrapper() -    Entering get()
yfinance - [DEBUG]{PROD} - wrapper() -     Entering _make_request()
yfinance - [DEBUG]{PROD} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/2888.HK
yfinance - [DEBUG]{PROD} - _make_request() - params=frozendict.frozendict({'range': '1d', 'interval': '1d'})
yfinance - [DEBUG]{PROD} - wrapper() -      Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{PROD} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{PROD} - wrapper() -       Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{PROD} - wrapper() -        Entering _get_cookie_basic()
yfinance - [DEBUG]{PROD} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{PROD} - wrapper() -        Exiting _get_cookie_basic()
yfinance - [DEBUG]{PROD} - wrapper() -        Entering _get_crumb_basic()
yfinance - [DEBUG]{PROD} - _get_crumb_basic() - reusing crumb
yfinance - [DEBUG]{PROD} - wrapper() -        Exiting _get_crumb_basic()
yfinance - [DEBUG]{PROD} - wrapper() -       Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{PROD} - wrapper() -      Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{PROD} - _make_request() - response code=200
yfinance - [DEBUG]{PROD} - wrapper() -     Exiting _make_request()
yfinance - [DEBUG]{PROD} - wrapper() -    Exiting get()
yfinance - [DEBUG]{PROD} - wrapper() -   Exiting _fetch_ticker_tz()
yfinance - [DEBUG]{PROD} - wrapper() -   Entering history()
yfinance - [DEBUG]{PROD} - history() - 2888.HK: Yahoo GET parameters: {'range': '6d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{PROD} - wrapper() -    Entering get()
yfinance - [DEBUG]{PROD} - wrapper() -     Entering _make_request()
yfinance - [DEBUG]{PROD} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/2888.HK
yfinance - [DEBUG]{PROD} - _make_request() - params={'range': '6d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{PROD} - wrapper() -      Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{PROD} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{PROD} - wrapper() -       Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{PROD} - wrapper() -        Entering _get_cookie_basic()
yfinance - [DEBUG]{PROD} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{PROD} - wrapper() -        Exiting _get_cookie_basic()
yfinance - [DEBUG]{PROD} - wrapper() -        Entering _get_crumb_basic()
yfinance - [DEBUG]{PROD} - _get_crumb_basic() - reusing crumb
yfinance - [DEBUG]{PROD} - wrapper() -        Exiting _get_crumb_basic()
yfinance - [DEBUG]{PROD} - wrapper() -       Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{PROD} - wrapper() -      Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{PROD} - _make_request() - response code=200
yfinance - [DEBUG]{PROD} - wrapper() -     Exiting _make_request()
yfinance - [DEBUG]{PROD} - wrapper() -    Exiting get()
yfinance - [DEBUG]{PROD} - history() - 2888.HK: yfinance received OHLC data: 2025-07-31 01:30:00 -> 2025-08-07 06:02:26
yfinance - [DEBUG]{PROD} - history() - 2888.HK: OHLC after cleaning: 2025-07-31 09:30:00+08:00 -> 2025-08-07 14:02:26+08:00
yfinance - [DEBUG]{PROD} - history() - 2888.HK: OHLC after combining events: 2025-07-31 09:30:00+08:00 -> 2025-08-07 14:02:26+08:00
yfinance - [DEBUG]{PROD} - history() - 2888.HK: yfinance returning OHLC: 2025-07-31 09:30:00+08:00 -> 2025-08-07 14:00:00+08:00
yfinance - [DEBUG]{PROD} - wrapper() -   Exiting history()
yfinance - [DEBUG]{PROD} - wrapper() -  Exiting history()
yfinance - [DEBUG]{PROD} - wrapper() - Exiting download()
root - [INFO]{PROD} - producer() -  DF yhoo Stock: 2888.HK Shape_DF: (129, 6) RealTime: Ticker
    2025-07-31 09:30:00
Name: 0, dtype: object Volume: Ticker
2888.HK    84642
Name: 127, dtype: object
root - [INFO]{PROD} - producer() - Price                  Date    Open   Close    High     Low  Volume
Ticker                      2888.HK 2888.HK 2888.HK 2888.HK 2888.HK
128     2025-08-07 13:45:00   145.3   145.6   146.0   145.2  161303
127     2025-08-07 13:30:00   145.2   145.3   145.5   145.1   84642
root - [INFO]{PROD} - producer() -  DF encolado Stock: 2888.HK Shape_DF: (129, 6) RealTime: Ticker
    2025-07-31 09:30:00
Name: 0, dtype: object Volume: Ticker
2888.HK    84642
Name: 127, dtype: object
root - [INFO]{PROD} - producer() -  sleep(60 * 2) List all stock download empty
yfinance - [DEBUG]{CONS_1} - wrapper() - Entering history()
yfinance - [DEBUG]{CONS_1} - wrapper() -  Entering history()
yfinance - [DEBUG]{CONS_1} - history() - ^HSI: Yahoo GET parameters: {'range': '6d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{CONS_1} - wrapper() -   Entering get()
yfinance - [DEBUG]{CONS_1} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{CONS_1} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/^HSI
yfinance - [DEBUG]{CONS_1} - _make_request() - params={'range': '6d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{CONS_1} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{CONS_1} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{CONS_1} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{CONS_1} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{CONS_1} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{CONS_1} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{CONS_1} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{CONS_1} - _get_crumb_basic() - reusing crumb
yfinance - [DEBUG]{CONS_1} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{CONS_1} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{CONS_1} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{CONS_1} - _make_request() - response code=200
yfinance - [DEBUG]{CONS_1} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{CONS_1} - wrapper() -   Exiting get()
yfinance - [DEBUG]{CONS_1} - history() - ^HSI: yfinance received OHLC data: 2025-07-31 01:30:00 -> 2025-08-07 06:02:44
yfinance - [DEBUG]{CONS_1} - history() - ^HSI: OHLC after cleaning: 2025-07-31 09:30:00+08:00 -> 2025-08-07 14:02:44+08:00
yfinance - [DEBUG]{CONS_1} - history() - ^HSI: OHLC after combining events: 2025-07-31 09:30:00+08:00 -> 2025-08-07 14:02:44+08:00
yfinance - [DEBUG]{CONS_1} - history() - ^HSI: yfinance returning OHLC: 2025-07-31 09:30:00+08:00 -> 2025-08-07 14:00:00+08:00
yfinance - [DEBUG]{CONS_1} - wrapper() -  Exiting history()
yfinance - [DEBUG]{CONS_1} - wrapper() - Exiting history()
root - [INFO]{CONS_1} - consumer() - Stock: 2318.HK  Volume unlast: Ticker
2318.HK    8211949
Name: 1, dtype: object Volume last: Ticker
2318.HK    11374165
Name: 0, dtype: object Date: 2025-08-07 06:17:44
root - [INFO]{CONS_1} - get_buy_sell_points_Roll() - get_buy_sell_points_Roll df.shape: (129, 8) delete_aux_rows: True
                    Date   Open  Close   High    Low   Volume  sell_value_POS  sell_value_NEG
128  2025-08-07 13:45:00  54.55  54.65  54.70  54.50   870600           53.90           53.90
127  2025-08-07 13:30:00  54.55  54.55  54.60  54.40   845025           54.05           53.90
126  2025-08-07 13:15:00  54.35  54.50  54.60  54.30  1473204           54.05           53.85
125  2025-08-07 13:00:00  54.35  54.40  54.60  54.35  1650000           54.05           53.85
124  2025-08-07 11:45:00  54.35  54.35  54.40  54.30   415500           54.05           53.85
123  2025-08-07 11:30:00  54.20  54.35  54.50  54.15  1536500           54.05           53.85
122  2025-08-07 11:15:00  54.00  54.15  54.25  53.95   947500           54.05           53.85
121  2025-08-07 11:00:00  53.95  54.00  54.00  53.80   744514           53.85           53.85
120  2025-08-07 10:45:00  53.75  53.95  54.00  53.75   668500           53.85           53.85
119  2025-08-07 10:30:00  53.65  53.75  53.90  53.60   891744           53.85           53.85
root - [INFO]{CONS_1} - get_buy_sell_points_Roll() - Parameters of acquisition "buy_sell_points" for this stock is set to POSITIVE (units) 	92%: 0.669 	98%: 0.8 NEGATIVE (units) 	93%: 0.55 	98%: 0.7
root - [INFO]{CONS_1} - get_ALL_tech_data_local() - Andy - 1
root - [INFO]{CONS_1} - get_ALL_tech_data_local() - Andy - 2
root - [INFO]{CONS_1} - get_ALL_tech_data_local() - Andy - 3
root - [INFO]{CONS_1} - get_ALL_tech_data_local() - Andy - 4
root - [INFO]{CONS_1} - get_ALL_tech_data_local() - Andy - 5
root - [INFO]{CONS_1} - get_all_pandas_TU_tecnical() - Andy - 5.1
root - [INFO]{CONS_1} - get_all_pandas_TU_tecnical() - Andy - 5.2
root - [INFO]{CONS_1} - get_all_pandas_TU_tecnical() - Andy - 5.3
root - [INFO]{CONS_1} - get_all_pandas_TU_tecnical() - Andy - 5.4
root - [INFO]{CONS_1} - get_LowerHighs_LowerHighs() - Andy - 5.4.1
root - [INFO]{CONS_1} - get_LowerHighs_LowerHighs() - Andy - 5.4.2
root - [INFO]{CONS_1} - get_LowerHighs_LowerHighs() - Andy - 5.4.3
root - [INFO]{CONS_1} - get_LowerHighs_LowerHighs() - getLowerLows parameters - order: 5, k: 2
root - [INFO]{CONS_1} - get_LowerHighs_LowerHighs() - getLowerLows result: [deque([25, 34], maxlen=2), deque([34, 54], maxlen=2), deque([54, 80], maxlen=2)]
root - [INFO]{CONS_1} - get_LowerHighs_LowerHighs() - Andy - 5.4.4
root - [INFO]{CONS_1} - get_LowerHighs_LowerHighs() - getLowerLows result: [deque([36, 42], maxlen=2), deque([42, 58], maxlen=2), deque([58, 66], maxlen=2)]
root - [INFO]{CONS_1} - get_LowerHighs_LowerHighs() - Andy - 5.4.5
root - [INFO]{CONS_1} - get_LowerHighs_LowerHighs() - Andy - 5.4.5.1
root - [INFO]{CONS_1} - get_LowerHighs_LowerHighs() - Andy - 5.4.5.2
root - [INFO]{CONS_1} - get_LowerHighs_LowerHighs() - Index(['Date - (126, 263) -                     Date  buy_sell_point   Open  Close   High   Low  ...  volu_PVR      volu_PVT  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  55.05  54.60  55.25  54.5  ...       4.0  9.146237e+06           39                1     54.1     53.8\n125  2025-07-31 09:30:00               0  56.00  55.05  56.00  54.9  ...       1.0  1.591433e+07           40                2     54.1     53.8\n\n[2 rows x 263 columns][deque([25, 34], maxlen=2), deque([34, 54], maxlen=2), deque([54, 80], maxlen=2)]',
       'buy_sell_point - (126, 263) -                     Date  buy_sell_point   Open  Close   High   Low  ...  volu_PVR      volu_PVT  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  55.05  54.60  55.25  54.5  ...       4.0  9.146237e+06           39                1     54.1     53.8\n125  2025-07-31 09:30:00               0  56.00  55.05  56.00  54.9  ...       1.0  1.591433e+07           40                2     54.1     53.8\n\n[2 rows x 263 columns][deque([25, 34], maxlen=2), deque([34, 54], maxlen=2), deque([54, 80], maxlen=2)]',
       'Open - (126, 263) -                     Date  buy_sell_point   Open  Close   High   Low  ...  volu_PVR      volu_PVT  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  55.05  54.60  55.25  54.5  ...       4.0  9.146237e+06           39                1     54.1     53.8\n125  2025-07-31 09:30:00               0  56.00  55.05  56.00  54.9  ...       1.0  1.591433e+07           40                2     54.1     53.8\n\n[2 rows x 263 columns][deque([25, 34], maxlen=2), deque([34, 54], maxlen=2), deque([54, 80], maxlen=2)]',
       'Close - (126, 263) -                     Date  buy_sell_point   Open  Close   High   Low  ...  volu_PVR      volu_PVT  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  55.05  54.60  55.25  54.5  ...       4.0  9.146237e+06           39                1     54.1     53.8\n125  2025-07-31 09:30:00               0  56.00  55.05  56.00  54.9  ...       1.0  1.591433e+07           40                2     54.1     53.8\n\n[2 rows x 263 columns][deque([25, 34], maxlen=2), deque([34, 54], maxlen=2), deque([54, 80], maxlen=2)]',
       'High - (126, 263) -                     Date  buy_sell_point   Open  Close   High   Low  ...  volu_PVR      volu_PVT  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  55.05  54.60  55.25  54.5  ...       4.0  9.146237e+06           39                1     54.1     53.8\n125  2025-07-31 09:30:00               0  56.00  55.05  56.00  54.9  ...       1.0  1.591433e+07           40                2     54.1     53.8\n\n[2 rows x 263 columns][deque([25, 34], maxlen=2), deque([34, 54], maxlen=2), deque([54, 80], maxlen=2)]',
       'Low - (126, 263) -                     Date  buy_sell_point   Open  Close   High   Low  ...  volu_PVR      volu_PVT  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  55.05  54.60  55.25  54.5  ...       4.0  9.146237e+06           39                1     54.1     53.8\n125  2025-07-31 09:30:00               0  56.00  55.05  56.00  54.9  ...       1.0  1.591433e+07           40                2     54.1     53.8\n\n[2 rows x 263 columns][deque([25, 34], maxlen=2), deque([34, 54], maxlen=2), deque([54, 80], maxlen=2)]',
       'Volume - (126, 263) -                     Date  buy_sell_point   Open  Close   High   Low  ...  volu_PVR      volu_PVT  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  55.05  54.60  55.25  54.5  ...       4.0  9.146237e+06           39                1     54.1     53.8\n125  2025-07-31 09:30:00               0  56.00  55.05  56.00  54.9  ...       1.0  1.591433e+07           40                2     54.1     53.8\n\n[2 rows x 263 columns][deque([25, 34], maxlen=2), deque([34, 54], maxlen=2), deque([54, 80], maxlen=2)]',
       'per_Close - (126, 263) -                     Date  buy_sell_point   Open  Close   High   Low  ...  volu_PVR      volu_PVT  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  55.05  54.60  55.25  54.5  ...       4.0  9.146237e+06           39                1     54.1     53.8\n125  2025-07-31 09:30:00               0  56.00  55.05  56.00  54.9  ...       1.0  1.591433e+07           40                2     54.1     53.8\n\n[2 rows x 263 columns][deque([25, 34], maxlen=2), deque([34, 54], maxlen=2), deque([54, 80], maxlen=2)]',
       'per_Volume - (126, 263) -                     Date  buy_sell_point   Open  Close   High   Low  ...  volu_PVR      volu_PVT  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  55.05  54.60  55.25  54.5  ...       4.0  9.146237e+06           39                1     54.1     53.8\n125  2025-07-31 09:30:00               0  56.00  55.05  56.00  54.9  ...       1.0  1.591433e+07           40                2     54.1     53.8\n\n[2 rows x 263 columns][deque([25, 34], maxlen=2), deque([34, 54], maxlen=2), deque([54, 80], maxlen=2)]',
       'has_preMarket - (126, 263) -                     Date  buy_sell_point   Open  Close   High   Low  ...  volu_PVR      volu_PVT  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  55.05  54.60  55.25  54.5  ...       4.0  9.146237e+06           39                1     54.1     53.8\n125  2025-07-31 09:30:00               0  56.00  55.05  56.00  54.9  ...       1.0  1.591433e+07           40                2     54.1     53.8\n\n[2 rows x 263 columns][deque([25, 34], maxlen=2), deque([34, 54], maxlen=2), deque([54, 80], maxlen=2)]',
       ...
       'volu_EFI_13 - (126, 263) -                     Date  buy_sell_point   Open  Close   High   Low  ...  volu_PVR      volu_PVT  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  55.05  54.60  55.25  54.5  ...       4.0  9.146237e+06           39                1     54.1     53.8\n125  2025-07-31 09:30:00               0  56.00  55.05  56.00  54.9  ...       1.0  1.591433e+07           40                2     54.1     53.8\n\n[2 rows x 263 columns][deque([25, 34], maxlen=2), deque([34, 54], maxlen=2), deque([54, 80], maxlen=2)]',
       'volu_NVI_1 - (126, 263) -                     Date  buy_sell_point   Open  Close   High   Low  ...  volu_PVR      volu_PVT  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  55.05  54.60  55.25  54.5  ...       4.0  9.146237e+06           39                1     54.1     53.8\n125  2025-07-31 09:30:00               0  56.00  55.05  56.00  54.9  ...       1.0  1.591433e+07           40                2     54.1     53.8\n\n[2 rows x 263 columns][deque([25, 34], maxlen=2), deque([34, 54], maxlen=2), deque([54, 80], maxlen=2)]',
       'volu_PVI_1 - (126, 263) -                     Date  buy_sell_point   Open  Close   High   Low  ...  volu_PVR      volu_PVT  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  55.05  54.60  55.25  54.5  ...       4.0  9.146237e+06           39                1     54.1     53.8\n125  2025-07-31 09:30:00               0  56.00  55.05  56.00  54.9  ...       1.0  1.591433e+07           40                2     54.1     53.8\n\n[2 rows x 263 columns][deque([25, 34], maxlen=2), deque([34, 54], maxlen=2), deque([54, 80], maxlen=2)]',
       'volu_PVOL - (126, 263) -                     Date  buy_sell_point   Open  Close   High   Low  ...  volu_PVR      volu_PVT  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  55.05  54.60  55.25  54.5  ...       4.0  9.146237e+06           39                1     54.1     53.8\n125  2025-07-31 09:30:00               0  56.00  55.05  56.00  54.9  ...       1.0  1.591433e+07           40                2     54.1     53.8\n\n[2 rows x 263 columns][deque([25, 34], maxlen=2), deque([34, 54], maxlen=2), deque([54, 80], maxlen=2)]',
       'volu_PVR - (126, 263) -                     Date  buy_sell_point   Open  Close   High   Low  ...  volu_PVR      volu_PVT  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  55.05  54.60  55.25  54.5  ...       4.0  9.146237e+06           39                1     54.1     53.8\n125  2025-07-31 09:30:00               0  56.00  55.05  56.00  54.9  ...       1.0  1.591433e+07           40                2     54.1     53.8\n\n[2 rows x 263 columns][deque([25, 34], maxlen=2), deque([34, 54], maxlen=2), deque([54, 80], maxlen=2)]',
       'volu_PVT - (126, 263) -                     Date  buy_sell_point   Open  Close   High   Low  ...  volu_PVR      volu_PVT  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  55.05  54.60  55.25  54.5  ...       4.0  9.146237e+06           39                1     54.1     53.8\n125  2025-07-31 09:30:00               0  56.00  55.05  56.00  54.9  ...       1.0  1.591433e+07           40                2     54.1     53.8\n\n[2 rows x 263 columns][deque([25, 34], maxlen=2), deque([34, 54], maxlen=2), deque([54, 80], maxlen=2)]',
       'mtum_td_seq - (126, 263) -                     Date  buy_sell_point   Open  Close   High   Low  ...  volu_PVR      volu_PVT  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  55.05  54.60  55.25  54.5  ...       4.0  9.146237e+06           39                1     54.1     53.8\n125  2025-07-31 09:30:00               0  56.00  55.05  56.00  54.9  ...       1.0  1.591433e+07           40                2     54.1     53.8\n\n[2 rows x 263 columns][deque([25, 34], maxlen=2), deque([34, 54], maxlen=2), deque([54, 80], maxlen=2)]',
       'mtum_td_seq_sig - (126, 263) -                     Date  buy_sell_point   Open  Close   High   Low  ...  volu_PVR      volu_PVT  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  55.05  54.60  55.25  54.5  ...       4.0  9.146237e+06           39                1     54.1     53.8\n125  2025-07-31 09:30:00               0  56.00  55.05  56.00  54.9  ...       1.0  1.591433e+07           40                2     54.1     53.8\n\n[2 rows x 263 columns][deque([25, 34], maxlen=2), deque([34, 54], maxlen=2), deque([54, 80], maxlen=2)]',
       'tend_hh - (126, 263) -                     Date  buy_sell_point   Open  Close   High   Low  ...  volu_PVR      volu_PVT  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  55.05  54.60  55.25  54.5  ...       4.0  9.146237e+06           39                1     54.1     53.8\n125  2025-07-31 09:30:00               0  56.00  55.05  56.00  54.9  ...       1.0  1.591433e+07           40                2     54.1     53.8\n\n[2 rows x 263 columns][deque([25, 34], maxlen=2), deque([34, 54], maxlen=2), deque([54, 80], maxlen=2)]',
       'tend_hl - (126, 263) -                     Date  buy_sell_point   Open  Close   High   Low  ...  volu_PVR      volu_PVT  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  55.05  54.60  55.25  54.5  ...       4.0  9.146237e+06           39                1     54.1     53.8\n125  2025-07-31 09:30:00               0  56.00  55.05  56.00  54.9  ...       1.0  1.591433e+07           40                2     54.1     53.8\n\n[2 rows x 263 columns][deque([25, 34], maxlen=2), deque([34, 54], maxlen=2), deque([54, 80], maxlen=2)]'],
      dtype='object', length=263)
root - [INFO]{CONS_1} - get_LowerHighs_LowerHighs() - Andy - 5.4.5.3
root - [INFO]{CONS_1} - get_LowerHighs_LowerHighs() - Andy - 5.4.5.4
root - [INFO]{CONS_1} - get_LowerHighs_LowerHighs() - Andy - 5.4.6
root - [INFO]{CONS_1} - get_LowerHighs_LowerHighs() - Andy - 5.4.7
root - [INFO]{CONS_1} - get_all_pandas_TU_tecnical() - Andy - 5.5
root - [INFO]{CONS_1} - get_all_pandas_TU_tecnical() - Andy - 5.6
root - [INFO]{CONS_1} - get_all_pandas_TU_tecnical() - Andy - 5.7
root - [INFO]{CONS_1} - get_all_pandas_TU_tecnical() - Andy - 5.7.1
root - [INFO]{CONS_1} - get_all_pandas_TU_tecnical() - Andy - 5.8
root - [INFO]{CONS_1} - get_all_pandas_TU_tecnical() - Andy - 5.9
root - [INFO]{CONS_1} - get_ALL_tech_data_local() - Andy - 6
root - [INFO]{CONS_1} - get_ALL_tech_data_local() - Andy - 7
root - [INFO]{CONS_1} - get_df_Multi_comprar_vender_predictions() - Stock: 2318.HK uses the following models for MULTI prediction: 2318.HK:
		POS: TFm_2318.HK_pos_reg4_mult_64, TFm_2318.HK_pos_reg4__mult_gru
		NEG: TFm_2318.HK_neg_low1_mult_lstm, TFm_2318.HK_neg_low1__mult_gru
root - [INFO]{CONS_1} - create_df_eval_prediction() - Columns selected for model: ['sti_BETA', 'mtum_BR_26', 'sti_TOS_STDEVALL_U_2', 'mtum_AR_26', 'mtum_td_seq', 'sti_TOS_STDEVALL_L_1', 'sti_TOS_STDEVALL_U_1', 'sti_TOS_STDEVALL_L_3', 'ti_ease_of_movement_14', 'sti_TOS_STDEVALL_LR', 'sti_TOS_STDEVALL_U_3', 'sti_TOS_STDEVALL_L_2', 'cdl_INVERTEDHAMMER', 'mtum_MINUS_DM', 'ti_acc_dist', 'cycl_HT_TRENDMODE', 'ti_chaikin_10_3', 'mcrh_WMA_50_DEMA_100', 'mtum_PVO_12_26_9', 'mtum_DX', 'has_preMarket', 'mtum_DMP_14', 'Volume', 'volu_PVOL', 'mtum_PLUS_DM', 'mcrh_T3_5_WMA_10', 'mtum_AROONOSC', 'mtum_DMN_14', 'volu_Chaikin_ADOSC', 'volu_Chaikin_AD', 'mtum_MINUS_DI', 'vola_ATR', 'mcrh_EMA_5_WMA_10', 'volu_OBV', 'mcrh_WMA_50_KAMA_100', 'olap_BBAND_dif', 'mtum_td_seq_sig', 'ti_konk_avg', 'vola_THERMOma_20_2_05', 'vola_NATR', 'sti_ENTP_10', 'mcrh_WMA_50_SMA_100', 'mcrh_SMA_20_KAMA_50', 'mcrh_T3_20_T3_50', 'mcrh_KAMA_5_DEMA_20', 'mcrh_T3_50_DEMA_100', 'mtum_ADX', 'mcrh_TRIMA_20_TEMA_100', 'ti_force_index_13', 'mtum_PVOs_12_26_9', 'mcrh_KAMA_20_SMA_50', 'tend_lh', 'volu_EFI_13', 'mcrh_EMA_50_KAMA_100', 'mtum_AROON_down', 'olap_VMAP', 'mtum_STOCH_RSI_k', 'mtum_PLUS_DI', 'mtum_PSL_12', 'mtum_PVOh_12_26_9', 'mtum_AO_5_34', 'olap_MIDPRICE', 'mtum_MACD_fix', 'mcrh_TRIMA_5_TEMA_10', 'mcrh_TRIMA_50_T3_100', 'mtum_MFI', 'mtum_INERTIA_20_14', 'mcrh_WMA_50_EMA_100', 'mtum_MACD', 'mtum_ADXR', 'mcrh_WMA_5_SMA_10', 'mtum_STCmacd_10_12_26_05', 'mtum_BULLP_13', 'mtum_AROON_up', 'olap_BBAND_LOWER', 'HSI_SMA_100', 'sti_LINEARREG_ANGLE', 'mtum_QQEl_14_5_4236', 'mcrh_KAMA_5_TRIMA_10', 'vola_KCUe_20_2', 'vola_HWU', 'trad_r2', 'cdl_TRISTAR', 'mcrh_TRIMA_20_DEMA_50', 'ti_vortex_neg_14', 'mcrh_DEMA_50_EMA_100', 'ti_konk_gre_avg_crash', 'cdl_LONGLEGGEDDOJI', 'mcrh_DEMA_5_TRIMA_10', 'ti_coppock_14_11_10', 'mcrh_EMA_50_DEMA_100', 'tend_PSARr_002_02', 'tend_renko_ATR', 'cdl_HAMMER', 'mcrh_T3_20_SMA_100', 'mcrh_TEMA_5_WMA_10', 'cdl_DOJI', 'mcrh_TEMA_5_TEMA_20', 'sti_LINEARREG_SLOPE', 'mtum_QQEs_14_5_4236', 'mcrh_T3_20_KAMA_100', 'cdl_GRAVESTONEDOJI', 'mcrh_SMA_5_SMA_10', 'ichi_senkou_b']col_select: reg4 pos_neg: pos model_name: TFm_2318.HK_pos_reg4_mult_64
root - [INFO]{CONS_1} - create_df_eval_prediction() - Load model NameModel: TFm_2318.HK_pos_reg4_mult_64 Neg/Pos: pos df.shape: (64, 108) Columns: reg4
root - [INFO]{CONS_1} - create_df_eval_prediction() - df_in_pure record:
   Close   Volume                 Date  buy_sell_point  sti_BETA  mtum_BR_26  sti_TOS_STDEVALL_U_2  mtum_AR_26  mtum_td_seq  sti_TOS_STDEVALL_L_1  sti_TOS_STDEVALL_U_1  sti_TOS_STDEVALL_L_3  ti_ease_of_movement_14  sti_TOS_STDEVALL_LR  sti_TOS_STDEVALL_U_3  sti_TOS_STDEVALL_L_2  cdl_INVERTEDHAMMER  mtum_MINUS_DM   ti_acc_dist  cycl_HT_TRENDMODE  ti_chaikin_10_3  mcrh_WMA_50_DEMA_100  mtum_PVO_12_26_9    mtum_DX  has_preMarket  mtum_DMP_14   Volume    volu_PVOL  mtum_PLUS_DM  mcrh_T3_5_WMA_10  mtum_AROONOSC  mtum_DMN_14  volu_Chaikin_ADOSC  volu_Chaikin_AD  mtum_MINUS_DI  vola_ATR  mcrh_EMA_5_WMA_10   volu_OBV  mcrh_WMA_50_KAMA_100  olap_BBAND_dif  mtum_td_seq_sig  ti_konk_avg  vola_THERMOma_20_2_05  vola_NATR  sti_ENTP_10  mcrh_WMA_50_SMA_100  mcrh_SMA_20_KAMA_50  mcrh_T3_20_T3_50  mcrh_KAMA_5_DEMA_20  mcrh_T3_50_DEMA_100   mtum_ADX  mcrh_TRIMA_20_TEMA_100  ti_force_index_13  mtum_PVOs_12_26_9  mcrh_KAMA_20_SMA_50  tend_lh    volu_EFI_13  mcrh_EMA_50_KAMA_100  mtum_AROON_down  olap_VMAP  mtum_STOCH_RSI_k  mtum_PLUS_DI  mtum_PSL_12  mtum_PVOh_12_26_9  mtum_AO_5_34  olap_MIDPRICE  mtum_MACD_fix  mcrh_TRIMA_5_TEMA_10  mcrh_TRIMA_50_T3_100   mtum_MFI  mtum_INERTIA_20_14  mcrh_WMA_50_EMA_100  mtum_MACD  mtum_ADXR  mcrh_WMA_5_SMA_10  mtum_STCmacd_10_12_26_05  mtum_BULLP_13  mtum_AROON_up  olap_BBAND_LOWER   HSI_SMA_100  sti_LINEARREG_ANGLE  mtum_QQEl_14_5_4236  mcrh_KAMA_5_TRIMA_10  vola_KCUe_20_2   vola_HWU    trad_r2  cdl_TRISTAR  mcrh_TRIMA_20_DEMA_50  ti_vortex_neg_14  mcrh_DEMA_50_EMA_100  ti_konk_gre_avg_crash  cdl_LONGLEGGEDDOJI  mcrh_DEMA_5_TRIMA_10  ti_coppock_14_11_10  mcrh_EMA_50_DEMA_100  tend_PSARr_002_02  tend_renko_ATR  cdl_HAMMER  mcrh_T3_20_SMA_100  mcrh_TEMA_5_WMA_10  cdl_DOJI  mcrh_TEMA_5_TEMA_20  sti_LINEARREG_SLOPE  mtum_QQEs_14_5_4236  mcrh_T3_20_KAMA_100  cdl_GRAVESTONEDOJI  mcrh_SMA_5_SMA_10  ichi_senkou_b
0  53.40  1290000  2025-08-04 15:00:00               0  0.312228   69.411765             54.731600   73.846154            4             53.189086             54.217428             52.160743                0.017106            53.703257             55.245771             52.674914                   0       0.571367  2.960687e+06                  0    722366.421977                     0          7.304018  25.743167          False     0.967528  1290000  68886000.00      0.967528                 0      35.714286     0.571367       722384.642674     2.960687e+06      13.819053  0.295964                  0 -1049136.0                     0        1.068223               -4    41.463326               0.163776   0.554240     3.323822                    0                    0                 0                    1                    0  20.189534                       0      184981.886808           9.024486                    0     53.8  184961.564887                     0        35.714286  53.828640               0.0     23.400561    33.333333          -1.720468     -0.096912           53.5      -0.089477                     0                     0  65.144536           35.444732                    0  -0.093047  18.079574                  0                 -0.093006       0.250324      71.428571         52.923389  24749.095195             1.781262                  0.0                    -1       54.095605  53.537853  53.516667            0                      0          0.746988                     0                      0                   0                     0            -0.624855                     0                  0        0.276923           0                   0                  -1         0                    0             0.031099                  0.0                    0                   0                  0            NaN
1  53.65  1576397  2025-08-04 14:45:00               0  0.282750   85.897436             54.730641   79.687500            1             53.188127             54.216470             52.159784                0.062513            53.702299             55.244813             52.673956                   0       0.530555  2.172489e+06                  1    269183.430659                     0          5.561899  30.599812          False     0.998418  1576397  84573699.05      0.998418                 0      35.714286     0.530555       269198.338502     2.172489e+06      12.515155  0.303395                  0   527261.0                     0        0.964572                1    45.633825               0.167226   0.565508     3.325475                    0                    0                 0                   -1                    0  20.933125                       0      214855.795835           8.331968                    0     53.8  214838.377046                     0        28.571429  53.826401             100.0     23.551476    41.666667          -2.770069     -0.098824           53.5      -0.067533                    -1                     0  68.030650           37.392644                    0  -0.069859  19.067276                  0                 -0.069824       0.321706      64.285714         52.957714  24749.095195             2.146014                  0.0                     0       54.129357  53.582408  53.800000            0                      0          0.678571                     0                      0                 100                     0            -0.067664                     0                  0        0.278846           0                   0                  -1       100                    0             0.037473                  0.0                    0                   0                  0            NaN
root - [INFO]{CONS_1} - create_df_eval_prediction() - df_eval:
                  Date  buy_sell_point  Close  Volume
0  2025-08-04 11:45:00               0  53.05  827000
1  2025-08-04 11:30:00               0  53.05  835200
root - [INFO]{CONS_1} - create_df_eval_prediction() - df_S record:
           Date  buy_sell_point  sti_BETA  mtum_BR_26  sti_TOS_STDEVALL_U_2  mtum_AR_26  mtum_td_seq  sti_TOS_STDEVALL_L_1  sti_TOS_STDEVALL_U_1  sti_TOS_STDEVALL_L_3  ti_ease_of_movement_14  sti_TOS_STDEVALL_LR  sti_TOS_STDEVALL_U_3  sti_TOS_STDEVALL_L_2  cdl_INVERTEDHAMMER  mtum_MINUS_DM   ti_acc_dist  cycl_HT_TRENDMODE  ti_chaikin_10_3  mcrh_WMA_50_DEMA_100  mtum_PVO_12_26_9    mtum_DX  has_preMarket  mtum_DMP_14   Volume    volu_PVOL  mtum_PLUS_DM  mcrh_T3_5_WMA_10  mtum_AROONOSC  mtum_DMN_14  volu_Chaikin_ADOSC  volu_Chaikin_AD  mtum_MINUS_DI  vola_ATR  mcrh_EMA_5_WMA_10   volu_OBV  mcrh_WMA_50_KAMA_100  olap_BBAND_dif  mtum_td_seq_sig  ti_konk_avg  vola_THERMOma_20_2_05  vola_NATR  sti_ENTP_10  mcrh_WMA_50_SMA_100  mcrh_SMA_20_KAMA_50  mcrh_T3_20_T3_50  mcrh_KAMA_5_DEMA_20  mcrh_T3_50_DEMA_100   mtum_ADX  mcrh_TRIMA_20_TEMA_100  ti_force_index_13  mtum_PVOs_12_26_9  mcrh_KAMA_20_SMA_50  tend_lh    volu_EFI_13  mcrh_EMA_50_KAMA_100  mtum_AROON_down  olap_VMAP  mtum_STOCH_RSI_k  mtum_PLUS_DI  mtum_PSL_12  mtum_PVOh_12_26_9  mtum_AO_5_34  olap_MIDPRICE  mtum_MACD_fix  mcrh_TRIMA_5_TEMA_10  mcrh_TRIMA_50_T3_100   mtum_MFI  mtum_INERTIA_20_14  mcrh_WMA_50_EMA_100  mtum_MACD  mtum_ADXR  mcrh_WMA_5_SMA_10  mtum_STCmacd_10_12_26_05  mtum_BULLP_13  mtum_AROON_up  olap_BBAND_LOWER   HSI_SMA_100  sti_LINEARREG_ANGLE  mtum_QQEl_14_5_4236  mcrh_KAMA_5_TRIMA_10  vola_KCUe_20_2   vola_HWU    trad_r2  cdl_TRISTAR  mcrh_TRIMA_20_DEMA_50  ti_vortex_neg_14  mcrh_DEMA_50_EMA_100  ti_konk_gre_avg_crash  cdl_LONGLEGGEDDOJI  mcrh_DEMA_5_TRIMA_10  ti_coppock_14_11_10  mcrh_EMA_50_DEMA_100  tend_PSARr_002_02  tend_renko_ATR  cdl_HAMMER  mcrh_T3_20_SMA_100  mcrh_TEMA_5_WMA_10  cdl_DOJI  mcrh_TEMA_5_TEMA_20  sti_LINEARREG_SLOPE  mtum_QQEs_14_5_4236  mcrh_T3_20_KAMA_100  cdl_GRAVESTONEDOJI  mcrh_SMA_5_SMA_10  ichi_senkou_b
0  1.754320e+09               0  0.312228   69.411765             54.731600   73.846154            4             53.189086             54.217428             52.160743                0.017106            53.703257             55.245771             52.674914                   0       0.571367  2.960687e+06                  0    722366.421977                     0          7.304018  25.743167          False     0.967528  1290000  68886000.00      0.967528                 0      35.714286     0.571367       722384.642674     2.960687e+06      13.819053  0.295964                  0 -1049136.0                     0        1.068223               -4    41.463326               0.163776   0.554240     3.323822                    0                    0                 0                    1                    0  20.189534                       0      184981.886808           9.024486                    0     53.8  184961.564887                     0        35.714286  53.828640               0.0     23.400561    33.333333          -1.720468     -0.096912           53.5      -0.089477                     0                     0  65.144536           35.444732                    0  -0.093047  18.079574                  0                 -0.093006       0.250324      71.428571         52.923389  24749.095195             1.781262                  0.0                    -1       54.095605  53.537853  53.516667            0                      0          0.746988                     0                      0                   0                     0            -0.624855                     0                  0        0.276923           0                   0                  -1         0                    0             0.031099                  0.0                    0                   0                  0            NaN
1  1.754319e+09               0  0.282750   85.897436             54.730641   79.687500            1             53.188127             54.216470             52.159784                0.062513            53.702299             55.244813             52.673956                   0       0.530555  2.172489e+06                  1    269183.430659                     0          5.561899  30.599812          False     0.998418  1576397  84573699.05      0.998418                 0      35.714286     0.530555       269198.338502     2.172489e+06      12.515155  0.303395                  0   527261.0                     0        0.964572                1    45.633825               0.167226   0.565508     3.325475                    0                    0                 0                   -1                    0  20.933125                       0      214855.795835           8.331968                    0     53.8  214838.377046                     0        28.571429  53.826401             100.0     23.551476    41.666667          -2.770069     -0.098824           53.5      -0.067533                    -1                     0  68.030650           37.392644                    0  -0.069859  19.067276                  0                 -0.069824       0.321706      64.285714         52.957714  24749.095195             2.146014                  0.0                     0       54.129357  53.582408  53.800000            0                      0          0.678571                     0                      0                 100                     0            -0.067664                     0                  0        0.278846           0                   0                  -1       100                    0             0.037473                  0.0                    0                   0                  0            NaN
root - [INFO]{CONS_1} - create_df_eval_prediction() - Index(['Date', 'buy_sell_point', 'sti_BETA', 'mtum_BR_26',
       'sti_TOS_STDEVALL_U_2', 'mtum_AR_26', 'mtum_td_seq',
       'sti_TOS_STDEVALL_L_1', 'sti_TOS_STDEVALL_U_1', 'sti_TOS_STDEVALL_L_3',
       ...
       'mcrh_T3_20_SMA_100', 'mcrh_TEMA_5_WMA_10', 'cdl_DOJI',
       'mcrh_TEMA_5_TEMA_20', 'sti_LINEARREG_SLOPE', 'mtum_QQEs_14_5_4236',
       'mcrh_T3_20_KAMA_100', 'cdl_GRAVESTONEDOJI', 'mcrh_SMA_5_SMA_10',
       'ichi_senkou_b'],
      dtype='object', length=106)
root - [INFO]{CONS_1} - check_columns_selections_Raise() - Checking columns selected for prediction: loss	accuracy	val_loss	val_accuracy
0.658	0.68	0.446	0.916
0.567	0.708	0.358	0.935
0.473	0.794	0.479	0.784
0.382	0.853	0.159	0.957
0.325	0.867	0.16	0.954
0.253	0.906	0.435	0.784
0.213	0.925	0.69	0.679
0.18	0.935	0.136	0.951
0.148	0.951	0.218	0.908
0.124	0.962	0.189	0.925
0.11	0.961	0.119	0.951
0.088	0.975	0.896	0.679
0.095	0.965	0.143	0.946
0.089	0.971	0.109	0.949
0.063	0.986	0.107	0.949
0.061	0.981	0.138	0.938
0.054	0.982	0.111	0.943
0.053	0.985	0.107	0.951
0.046	0.99	0.109	0.954
0.052	0.985	0.098	0.965

Columns TFm_2318.HK_pos_reg4_mult_64.h5:
Date, buy_sell_point, sti_BETA, mtum_BR_26, sti_TOS_STDEVALL_U_2, mtum_AR_26, mtum_td_seq, sti_TOS_STDEVALL_L_1, sti_TOS_STDEVALL_U_1, sti_TOS_STDEVALL_L_3, ti_ease_of_movement_14, sti_TOS_STDEVALL_LR, sti_TOS_STDEVALL_U_3, sti_TOS_STDEVALL_L_2, cdl_INVERTEDHAMMER, mtum_MINUS_DM, ti_acc_dist, cycl_HT_TRENDMODE, ti_chaikin_10_3, mcrh_WMA_50_DEMA_100, mtum_PVO_12_26_9, mtum_DX, has_preMarket, mtum_DMP_14, Volume, volu_PVOL, mtum_PLUS_DM, mcrh_T3_5_WMA_10, mtum_AROONOSC, mtum_DMN_14, volu_Chaikin_ADOSC, volu_Chaikin_AD, mtum_MINUS_DI, vola_ATR, mcrh_EMA_5_WMA_10, volu_OBV, mcrh_WMA_50_KAMA_100, olap_BBAND_dif, mtum_td_seq_sig, ti_konk_avg, vola_THERMOma_20_2_05, vola_NATR, sti_ENTP_10, mcrh_WMA_50_SMA_100, mcrh_SMA_20_KAMA_50, mcrh_T3_20_T3_50, mcrh_KAMA_5_DEMA_20, mcrh_T3_50_DEMA_100, mtum_ADX, mcrh_TRIMA_20_TEMA_100, ti_force_index_13, mtum_PVOs_12_26_9, mcrh_KAMA_20_SMA_50, tend_lh, volu_EFI_13, mcrh_EMA_50_KAMA_100, mtum_AROON_down, olap_VMAP, mtum_STOCH_RSI_k, mtum_PLUS_DI, mtum_PSL_12, mtum_PVOh_12_26_9, mtum_AO_5_34, olap_MIDPRICE, mtum_MACD_fix, mcrh_TRIMA_5_TEMA_10, mcrh_TRIMA_50_T3_100, mtum_MFI, mtum_INERTIA_20_14, mcrh_WMA_50_EMA_100, mtum_MACD, mtum_ADXR, mcrh_WMA_5_SMA_10, mtum_STCmacd_10_12_26_05, mtum_BULLP_13, mtum_AROON_up, olap_BBAND_LOWER, HSI_SMA_100, sti_LINEARREG_ANGLE, mtum_QQEl_14_5_4236, mcrh_KAMA_5_TRIMA_10, vola_KCUe_20_2, vola_HWU, trad_r2, cdl_TRISTAR, mcrh_TRIMA_20_DEMA_50, ti_vortex_neg_14, mcrh_DEMA_50_EMA_100, ti_konk_gre_avg_crash, cdl_LONGLEGGEDDOJI, mcrh_DEMA_5_TRIMA_10, ti_coppock_14_11_10, mcrh_EMA_50_DEMA_100, tend_PSARr_002_02, tend_renko_ATR, cdl_HAMMER, mcrh_T3_20_SMA_100, mcrh_TEMA_5_WMA_10, cdl_DOJI, mcrh_TEMA_5_TEMA_20, sti_LINEARREG_SLOPE, mtum_QQEs_14_5_4236, mcrh_T3_20_KAMA_100, cdl_GRAVESTONEDOJI, mcrh_SMA_5_SMA_10, ichi_senkou_b
root - [INFO]{CONS_1} - check_columns_selections_Raise() - match columns: ['Date', 'buy_sell_point', 'sti_BETA', 'mtum_BR_26', 'sti_TOS_STDEVALL_U_2', 'mtum_AR_26', 'mtum_td_seq', 'sti_TOS_STDEVALL_L_1', 'sti_TOS_STDEVALL_U_1', 'sti_TOS_STDEVALL_L_3', 'ti_ease_of_movement_14', 'sti_TOS_STDEVALL_LR', 'sti_TOS_STDEVALL_U_3', 'sti_TOS_STDEVALL_L_2', 'cdl_INVERTEDHAMMER', 'mtum_MINUS_DM', 'ti_acc_dist', 'cycl_HT_TRENDMODE', 'ti_chaikin_10_3', 'mcrh_WMA_50_DEMA_100', 'mtum_PVO_12_26_9', 'mtum_DX', 'has_preMarket', 'mtum_DMP_14', 'Volume', 'volu_PVOL', 'mtum_PLUS_DM', 'mcrh_T3_5_WMA_10', 'mtum_AROONOSC', 'mtum_DMN_14', 'volu_Chaikin_ADOSC', 'volu_Chaikin_AD', 'mtum_MINUS_DI', 'vola_ATR', 'mcrh_EMA_5_WMA_10', 'volu_OBV', 'mcrh_WMA_50_KAMA_100', 'olap_BBAND_dif', 'mtum_td_seq_sig', 'ti_konk_avg', 'vola_THERMOma_20_2_05', 'vola_NATR', 'sti_ENTP_10', 'mcrh_WMA_50_SMA_100', 'mcrh_SMA_20_KAMA_50', 'mcrh_T3_20_T3_50', 'mcrh_KAMA_5_DEMA_20', 'mcrh_T3_50_DEMA_100', 'mtum_ADX', 'mcrh_TRIMA_20_TEMA_100', 'ti_force_index_13', 'mtum_PVOs_12_26_9', 'mcrh_KAMA_20_SMA_50', 'tend_lh', 'volu_EFI_13', 'mcrh_EMA_50_KAMA_100', 'mtum_AROON_down', 'olap_VMAP', 'mtum_STOCH_RSI_k', 'mtum_PLUS_DI', 'mtum_PSL_12', 'mtum_PVOh_12_26_9', 'mtum_AO_5_34', 'olap_MIDPRICE', 'mtum_MACD_fix', 'mcrh_TRIMA_5_TEMA_10', 'mcrh_TRIMA_50_T3_100', 'mtum_MFI', 'mtum_INERTIA_20_14', 'mcrh_WMA_50_EMA_100', 'mtum_MACD', 'mtum_ADXR', 'mcrh_WMA_5_SMA_10', 'mtum_STCmacd_10_12_26_05', 'mtum_BULLP_13', 'mtum_AROON_up', 'olap_BBAND_LOWER', 'HSI_SMA_100', 'sti_LINEARREG_ANGLE', 'mtum_QQEl_14_5_4236', 'mcrh_KAMA_5_TRIMA_10', 'vola_KCUe_20_2', 'vola_HWU', 'trad_r2', 'cdl_TRISTAR', 'mcrh_TRIMA_20_DEMA_50', 'ti_vortex_neg_14', 'mcrh_DEMA_50_EMA_100', 'ti_konk_gre_avg_crash', 'cdl_LONGLEGGEDDOJI', 'mcrh_DEMA_5_TRIMA_10', 'ti_coppock_14_11_10', 'mcrh_EMA_50_DEMA_100', 'tend_PSARr_002_02', 'tend_renko_ATR', 'cdl_HAMMER', 'mcrh_T3_20_SMA_100', 'mcrh_TEMA_5_WMA_10', 'cdl_DOJI', 'mcrh_TEMA_5_TEMA_20', 'sti_LINEARREG_SLOPE', 'mtum_QQEs_14_5_4236', 'mcrh_T3_20_KAMA_100', 'cdl_GRAVESTONEDOJI', 'mcrh_SMA_5_SMA_10', 'ichi_senkou_b']
root - [INFO]{CONS_1} - check_columns_selections_Raise() - cols model columns: Index(['Date', 'buy_sell_point', 'sti_BETA', 'mtum_BR_26',
       'sti_TOS_STDEVALL_U_2', 'mtum_AR_26', 'mtum_td_seq',
       'sti_TOS_STDEVALL_L_1', 'sti_TOS_STDEVALL_U_1', 'sti_TOS_STDEVALL_L_3',
       ...
       'mcrh_T3_20_SMA_100', 'mcrh_TEMA_5_WMA_10', 'cdl_DOJI',
       'mcrh_TEMA_5_TEMA_20', 'sti_LINEARREG_SLOPE', 'mtum_QQEs_14_5_4236',
       'mcrh_T3_20_KAMA_100', 'cdl_GRAVESTONEDOJI', 'mcrh_SMA_5_SMA_10',
       'ichi_senkou_b'],
      dtype='object', length=106)
root - [INFO]{CONS_1} - check_columns_selections_Raise() - Columns required by the Model: Models/TF_multi/TFm_2318.HK_pos_reg4_mult_64.h5__TEST_45.8%_accuracy_98.46%__loss_0.05__epochs_19[90].csv are: Date, buy_sell_point, sti_BETA, mtum_BR_26, sti_TOS_STDEVALL_U_2, mtum_AR_26, mtum_td_seq, sti_TOS_STDEVALL_L_1, sti_TOS_STDEVALL_U_1, sti_TOS_STDEVALL_L_3, ti_ease_of_movement_14, sti_TOS_STDEVALL_LR, sti_TOS_STDEVALL_U_3, sti_TOS_STDEVALL_L_2, cdl_INVERTEDHAMMER, mtum_MINUS_DM, ti_acc_dist, cycl_HT_TRENDMODE, ti_chaikin_10_3, mcrh_WMA_50_DEMA_100, mtum_PVO_12_26_9, mtum_DX, has_preMarket, mtum_DMP_14, Volume, volu_PVOL, mtum_PLUS_DM, mcrh_T3_5_WMA_10, mtum_AROONOSC, mtum_DMN_14, volu_Chaikin_ADOSC, volu_Chaikin_AD, mtum_MINUS_DI, vola_ATR, mcrh_EMA_5_WMA_10, volu_OBV, mcrh_WMA_50_KAMA_100, olap_BBAND_dif, mtum_td_seq_sig, ti_konk_avg, vola_THERMOma_20_2_05, vola_NATR, sti_ENTP_10, mcrh_WMA_50_SMA_100, mcrh_SMA_20_KAMA_50, mcrh_T3_20_T3_50, mcrh_KAMA_5_DEMA_20, mcrh_T3_50_DEMA_100, mtum_ADX, mcrh_TRIMA_20_TEMA_100, ti_force_index_13, mtum_PVOs_12_26_9, mcrh_KAMA_20_SMA_50, tend_lh, volu_EFI_13, mcrh_EMA_50_KAMA_100, mtum_AROON_down, olap_VMAP, mtum_STOCH_RSI_k, mtum_PLUS_DI, mtum_PSL_12, mtum_PVOh_12_26_9, mtum_AO_5_34, olap_MIDPRICE, mtum_MACD_fix, mcrh_TRIMA_5_TEMA_10, mcrh_TRIMA_50_T3_100, mtum_MFI, mtum_INERTIA_20_14, mcrh_WMA_50_EMA_100, mtum_MACD, mtum_ADXR, mcrh_WMA_5_SMA_10, mtum_STCmacd_10_12_26_05, mtum_BULLP_13, mtum_AROON_up, olap_BBAND_LOWER, HSI_SMA_100, sti_LINEARREG_ANGLE, mtum_QQEl_14_5_4236, mcrh_KAMA_5_TRIMA_10, vola_KCUe_20_2, vola_HWU, trad_r2, cdl_TRISTAR, mcrh_TRIMA_20_DEMA_50, ti_vortex_neg_14, mcrh_DEMA_50_EMA_100, ti_konk_gre_avg_crash, cdl_LONGLEGGEDDOJI, mcrh_DEMA_5_TRIMA_10, ti_coppock_14_11_10, mcrh_EMA_50_DEMA_100, tend_PSARr_002_02, tend_renko_ATR, cdl_HAMMER, mcrh_T3_20_SMA_100, mcrh_TEMA_5_WMA_10, cdl_DOJI, mcrh_TEMA_5_TEMA_20, sti_LINEARREG_SLOPE, mtum_QQEs_14_5_4236, mcrh_T3_20_KAMA_100, cdl_GRAVESTONEDOJI, mcrh_SMA_5_SMA_10, ichi_senkou_b
root - [INFO]{CONS_1} - predict_Multi_models() -  Load model Type MULTI TF:   Path:  Models/TF_multi/[94mTFm_2318.HK_pos_reg4_mult_64[0m.h5   Shape df to predict: (-1, 10, 105)
root - [DEBUG]{CONS_1} - scaler_min_max_array() - Scaler will be Loaded Path: Models/TF_multi/Scalers/2318.HK_pos_reg4_.scal
root - [INFO]{CONS_1} - create_df_eval_prediction() - Columns selected for model: ['sti_BETA', 'mtum_BR_26', 'sti_TOS_STDEVALL_U_2', 'mtum_AR_26', 'mtum_td_seq', 'sti_TOS_STDEVALL_L_1', 'sti_TOS_STDEVALL_U_1', 'sti_TOS_STDEVALL_L_3', 'ti_ease_of_movement_14', 'sti_TOS_STDEVALL_LR', 'sti_TOS_STDEVALL_U_3', 'sti_TOS_STDEVALL_L_2', 'cdl_INVERTEDHAMMER', 'mtum_MINUS_DM', 'ti_acc_dist', 'cycl_HT_TRENDMODE', 'ti_chaikin_10_3', 'mcrh_WMA_50_DEMA_100', 'mtum_PVO_12_26_9', 'mtum_DX', 'has_preMarket', 'mtum_DMP_14', 'Volume', 'volu_PVOL', 'mtum_PLUS_DM', 'mcrh_T3_5_WMA_10', 'mtum_AROONOSC', 'mtum_DMN_14', 'volu_Chaikin_ADOSC', 'volu_Chaikin_AD', 'mtum_MINUS_DI', 'vola_ATR', 'mcrh_EMA_5_WMA_10', 'volu_OBV', 'mcrh_WMA_50_KAMA_100', 'olap_BBAND_dif', 'mtum_td_seq_sig', 'ti_konk_avg', 'vola_THERMOma_20_2_05', 'vola_NATR', 'sti_ENTP_10', 'mcrh_WMA_50_SMA_100', 'mcrh_SMA_20_KAMA_50', 'mcrh_T3_20_T3_50', 'mcrh_KAMA_5_DEMA_20', 'mcrh_T3_50_DEMA_100', 'mtum_ADX', 'mcrh_TRIMA_20_TEMA_100', 'ti_force_index_13', 'mtum_PVOs_12_26_9', 'mcrh_KAMA_20_SMA_50', 'tend_lh', 'volu_EFI_13', 'mcrh_EMA_50_KAMA_100', 'mtum_AROON_down', 'olap_VMAP', 'mtum_STOCH_RSI_k', 'mtum_PLUS_DI', 'mtum_PSL_12', 'mtum_PVOh_12_26_9', 'mtum_AO_5_34', 'olap_MIDPRICE', 'mtum_MACD_fix', 'mcrh_TRIMA_5_TEMA_10', 'mcrh_TRIMA_50_T3_100', 'mtum_MFI', 'mtum_INERTIA_20_14', 'mcrh_WMA_50_EMA_100', 'mtum_MACD', 'mtum_ADXR', 'mcrh_WMA_5_SMA_10', 'mtum_STCmacd_10_12_26_05', 'mtum_BULLP_13', 'mtum_AROON_up', 'olap_BBAND_LOWER', 'HSI_SMA_100', 'sti_LINEARREG_ANGLE', 'mtum_QQEl_14_5_4236', 'mcrh_KAMA_5_TRIMA_10', 'vola_KCUe_20_2', 'vola_HWU', 'trad_r2', 'cdl_TRISTAR', 'mcrh_TRIMA_20_DEMA_50', 'ti_vortex_neg_14', 'mcrh_DEMA_50_EMA_100', 'ti_konk_gre_avg_crash', 'cdl_LONGLEGGEDDOJI', 'mcrh_DEMA_5_TRIMA_10', 'ti_coppock_14_11_10', 'mcrh_EMA_50_DEMA_100', 'tend_PSARr_002_02', 'tend_renko_ATR', 'cdl_HAMMER', 'mcrh_T3_20_SMA_100', 'mcrh_TEMA_5_WMA_10', 'cdl_DOJI', 'mcrh_TEMA_5_TEMA_20', 'sti_LINEARREG_SLOPE', 'mtum_QQEs_14_5_4236', 'mcrh_T3_20_KAMA_100', 'cdl_GRAVESTONEDOJI', 'mcrh_SMA_5_SMA_10', 'ichi_senkou_b']col_select: reg4 pos_neg: pos model_name: TFm_2318.HK_pos_reg4__mult_gru
root - [INFO]{CONS_1} - create_df_eval_prediction() - Load model NameModel: TFm_2318.HK_pos_reg4__mult_gru Neg/Pos: pos df.shape: (64, 108) Columns: reg4
root - [INFO]{CONS_1} - create_df_eval_prediction() - df_in_pure record:
   Close   Volume                 Date  buy_sell_point  sti_BETA  mtum_BR_26  sti_TOS_STDEVALL_U_2  mtum_AR_26  mtum_td_seq  sti_TOS_STDEVALL_L_1  sti_TOS_STDEVALL_U_1  sti_TOS_STDEVALL_L_3  ti_ease_of_movement_14  sti_TOS_STDEVALL_LR  sti_TOS_STDEVALL_U_3  sti_TOS_STDEVALL_L_2  cdl_INVERTEDHAMMER  mtum_MINUS_DM   ti_acc_dist  cycl_HT_TRENDMODE  ti_chaikin_10_3  mcrh_WMA_50_DEMA_100  mtum_PVO_12_26_9    mtum_DX  has_preMarket  mtum_DMP_14   Volume    volu_PVOL  mtum_PLUS_DM  mcrh_T3_5_WMA_10  mtum_AROONOSC  mtum_DMN_14  volu_Chaikin_ADOSC  volu_Chaikin_AD  mtum_MINUS_DI  vola_ATR  mcrh_EMA_5_WMA_10   volu_OBV  mcrh_WMA_50_KAMA_100  olap_BBAND_dif  mtum_td_seq_sig  ti_konk_avg  vola_THERMOma_20_2_05  vola_NATR  sti_ENTP_10  mcrh_WMA_50_SMA_100  mcrh_SMA_20_KAMA_50  mcrh_T3_20_T3_50  mcrh_KAMA_5_DEMA_20  mcrh_T3_50_DEMA_100   mtum_ADX  mcrh_TRIMA_20_TEMA_100  ti_force_index_13  mtum_PVOs_12_26_9  mcrh_KAMA_20_SMA_50  tend_lh    volu_EFI_13  mcrh_EMA_50_KAMA_100  mtum_AROON_down  olap_VMAP  mtum_STOCH_RSI_k  mtum_PLUS_DI  mtum_PSL_12  mtum_PVOh_12_26_9  mtum_AO_5_34  olap_MIDPRICE  mtum_MACD_fix  mcrh_TRIMA_5_TEMA_10  mcrh_TRIMA_50_T3_100   mtum_MFI  mtum_INERTIA_20_14  mcrh_WMA_50_EMA_100  mtum_MACD  mtum_ADXR  mcrh_WMA_5_SMA_10  mtum_STCmacd_10_12_26_05  mtum_BULLP_13  mtum_AROON_up  olap_BBAND_LOWER   HSI_SMA_100  sti_LINEARREG_ANGLE  mtum_QQEl_14_5_4236  mcrh_KAMA_5_TRIMA_10  vola_KCUe_20_2   vola_HWU    trad_r2  cdl_TRISTAR  mcrh_TRIMA_20_DEMA_50  ti_vortex_neg_14  mcrh_DEMA_50_EMA_100  ti_konk_gre_avg_crash  cdl_LONGLEGGEDDOJI  mcrh_DEMA_5_TRIMA_10  ti_coppock_14_11_10  mcrh_EMA_50_DEMA_100  tend_PSARr_002_02  tend_renko_ATR  cdl_HAMMER  mcrh_T3_20_SMA_100  mcrh_TEMA_5_WMA_10  cdl_DOJI  mcrh_TEMA_5_TEMA_20  sti_LINEARREG_SLOPE  mtum_QQEs_14_5_4236  mcrh_T3_20_KAMA_100  cdl_GRAVESTONEDOJI  mcrh_SMA_5_SMA_10  ichi_senkou_b
0  53.40  1290000  2025-08-04 15:00:00               0  0.312228   69.411765             54.731600   73.846154            4             53.189086             54.217428             52.160743                0.017106            53.703257             55.245771             52.674914                   0       0.571367  2.960687e+06                  0    722366.421977                     0          7.304018  25.743167          False     0.967528  1290000  68886000.00      0.967528                 0      35.714286     0.571367       722384.642674     2.960687e+06      13.819053  0.295964                  0 -1049136.0                     0        1.068223               -4    41.463326               0.163776   0.554240     3.323822                    0                    0                 0                    1                    0  20.189534                       0      184981.886808           9.024486                    0     53.8  184961.564887                     0        35.714286  53.828640               0.0     23.400561    33.333333          -1.720468     -0.096912           53.5      -0.089477                     0                     0  65.144536           35.444732                    0  -0.093047  18.079574                  0                 -0.093006       0.250324      71.428571         52.923389  24749.095195             1.781262                  0.0                    -1       54.095605  53.537853  53.516667            0                      0          0.746988                     0                      0                   0                     0            -0.624855                     0                  0        0.276923           0                   0                  -1         0                    0             0.031099                  0.0                    0                   0                  0            NaN
1  53.65  1576397  2025-08-04 14:45:00               0  0.282750   85.897436             54.730641   79.687500            1             53.188127             54.216470             52.159784                0.062513            53.702299             55.244813             52.673956                   0       0.530555  2.172489e+06                  1    269183.430659                     0          5.561899  30.599812          False     0.998418  1576397  84573699.05      0.998418                 0      35.714286     0.530555       269198.338502     2.172489e+06      12.515155  0.303395                  0   527261.0                     0        0.964572                1    45.633825               0.167226   0.565508     3.325475                    0                    0                 0                   -1                    0  20.933125                       0      214855.795835           8.331968                    0     53.8  214838.377046                     0        28.571429  53.826401             100.0     23.551476    41.666667          -2.770069     -0.098824           53.5      -0.067533                    -1                     0  68.030650           37.392644                    0  -0.069859  19.067276                  0                 -0.069824       0.321706      64.285714         52.957714  24749.095195             2.146014                  0.0                     0       54.129357  53.582408  53.800000            0                      0          0.678571                     0                      0                 100                     0            -0.067664                     0                  0        0.278846           0                   0                  -1       100                    0             0.037473                  0.0                    0                   0                  0            NaN
root - [INFO]{CONS_1} - create_df_eval_prediction() - df_eval:
                  Date  buy_sell_point  Close  Volume
0  2025-08-04 11:45:00               0  53.05  827000
1  2025-08-04 11:30:00               0  53.05  835200
root - [INFO]{CONS_1} - create_df_eval_prediction() - df_S record:
           Date  buy_sell_point  sti_BETA  mtum_BR_26  sti_TOS_STDEVALL_U_2  mtum_AR_26  mtum_td_seq  sti_TOS_STDEVALL_L_1  sti_TOS_STDEVALL_U_1  sti_TOS_STDEVALL_L_3  ti_ease_of_movement_14  sti_TOS_STDEVALL_LR  sti_TOS_STDEVALL_U_3  sti_TOS_STDEVALL_L_2  cdl_INVERTEDHAMMER  mtum_MINUS_DM   ti_acc_dist  cycl_HT_TRENDMODE  ti_chaikin_10_3  mcrh_WMA_50_DEMA_100  mtum_PVO_12_26_9    mtum_DX  has_preMarket  mtum_DMP_14   Volume    volu_PVOL  mtum_PLUS_DM  mcrh_T3_5_WMA_10  mtum_AROONOSC  mtum_DMN_14  volu_Chaikin_ADOSC  volu_Chaikin_AD  mtum_MINUS_DI  vola_ATR  mcrh_EMA_5_WMA_10   volu_OBV  mcrh_WMA_50_KAMA_100  olap_BBAND_dif  mtum_td_seq_sig  ti_konk_avg  vola_THERMOma_20_2_05  vola_NATR  sti_ENTP_10  mcrh_WMA_50_SMA_100  mcrh_SMA_20_KAMA_50  mcrh_T3_20_T3_50  mcrh_KAMA_5_DEMA_20  mcrh_T3_50_DEMA_100   mtum_ADX  mcrh_TRIMA_20_TEMA_100  ti_force_index_13  mtum_PVOs_12_26_9  mcrh_KAMA_20_SMA_50  tend_lh    volu_EFI_13  mcrh_EMA_50_KAMA_100  mtum_AROON_down  olap_VMAP  mtum_STOCH_RSI_k  mtum_PLUS_DI  mtum_PSL_12  mtum_PVOh_12_26_9  mtum_AO_5_34  olap_MIDPRICE  mtum_MACD_fix  mcrh_TRIMA_5_TEMA_10  mcrh_TRIMA_50_T3_100   mtum_MFI  mtum_INERTIA_20_14  mcrh_WMA_50_EMA_100  mtum_MACD  mtum_ADXR  mcrh_WMA_5_SMA_10  mtum_STCmacd_10_12_26_05  mtum_BULLP_13  mtum_AROON_up  olap_BBAND_LOWER   HSI_SMA_100  sti_LINEARREG_ANGLE  mtum_QQEl_14_5_4236  mcrh_KAMA_5_TRIMA_10  vola_KCUe_20_2   vola_HWU    trad_r2  cdl_TRISTAR  mcrh_TRIMA_20_DEMA_50  ti_vortex_neg_14  mcrh_DEMA_50_EMA_100  ti_konk_gre_avg_crash  cdl_LONGLEGGEDDOJI  mcrh_DEMA_5_TRIMA_10  ti_coppock_14_11_10  mcrh_EMA_50_DEMA_100  tend_PSARr_002_02  tend_renko_ATR  cdl_HAMMER  mcrh_T3_20_SMA_100  mcrh_TEMA_5_WMA_10  cdl_DOJI  mcrh_TEMA_5_TEMA_20  sti_LINEARREG_SLOPE  mtum_QQEs_14_5_4236  mcrh_T3_20_KAMA_100  cdl_GRAVESTONEDOJI  mcrh_SMA_5_SMA_10  ichi_senkou_b
0  1.754320e+09               0  0.312228   69.411765             54.731600   73.846154            4             53.189086             54.217428             52.160743                0.017106            53.703257             55.245771             52.674914                   0       0.571367  2.960687e+06                  0    722366.421977                     0          7.304018  25.743167          False     0.967528  1290000  68886000.00      0.967528                 0      35.714286     0.571367       722384.642674     2.960687e+06      13.819053  0.295964                  0 -1049136.0                     0        1.068223               -4    41.463326               0.163776   0.554240     3.323822                    0                    0                 0                    1                    0  20.189534                       0      184981.886808           9.024486                    0     53.8  184961.564887                     0        35.714286  53.828640               0.0     23.400561    33.333333          -1.720468     -0.096912           53.5      -0.089477                     0                     0  65.144536           35.444732                    0  -0.093047  18.079574                  0                 -0.093006       0.250324      71.428571         52.923389  24749.095195             1.781262                  0.0                    -1       54.095605  53.537853  53.516667            0                      0          0.746988                     0                      0                   0                     0            -0.624855                     0                  0        0.276923           0                   0                  -1         0                    0             0.031099                  0.0                    0                   0                  0            NaN
1  1.754319e+09               0  0.282750   85.897436             54.730641   79.687500            1             53.188127             54.216470             52.159784                0.062513            53.702299             55.244813             52.673956                   0       0.530555  2.172489e+06                  1    269183.430659                     0          5.561899  30.599812          False     0.998418  1576397  84573699.05      0.998418                 0      35.714286     0.530555       269198.338502     2.172489e+06      12.515155  0.303395                  0   527261.0                     0        0.964572                1    45.633825               0.167226   0.565508     3.325475                    0                    0                 0                   -1                    0  20.933125                       0      214855.795835           8.331968                    0     53.8  214838.377046                     0        28.571429  53.826401             100.0     23.551476    41.666667          -2.770069     -0.098824           53.5      -0.067533                    -1                     0  68.030650           37.392644                    0  -0.069859  19.067276                  0                 -0.069824       0.321706      64.285714         52.957714  24749.095195             2.146014                  0.0                     0       54.129357  53.582408  53.800000            0                      0          0.678571                     0                      0                 100                     0            -0.067664                     0                  0        0.278846           0                   0                  -1       100                    0             0.037473                  0.0                    0                   0                  0            NaN
root - [INFO]{CONS_1} - create_df_eval_prediction() - Index(['Date', 'buy_sell_point', 'sti_BETA', 'mtum_BR_26',
       'sti_TOS_STDEVALL_U_2', 'mtum_AR_26', 'mtum_td_seq',
       'sti_TOS_STDEVALL_L_1', 'sti_TOS_STDEVALL_U_1', 'sti_TOS_STDEVALL_L_3',
       ...
       'mcrh_T3_20_SMA_100', 'mcrh_TEMA_5_WMA_10', 'cdl_DOJI',
       'mcrh_TEMA_5_TEMA_20', 'sti_LINEARREG_SLOPE', 'mtum_QQEs_14_5_4236',
       'mcrh_T3_20_KAMA_100', 'cdl_GRAVESTONEDOJI', 'mcrh_SMA_5_SMA_10',
       'ichi_senkou_b'],
      dtype='object', length=106)
root - [INFO]{CONS_1} - check_columns_selections_Raise() - Checking columns selected for prediction: loss	accuracy	val_loss	val_accuracy
0.652	0.683	0.297	0.957
0.496	0.772	0.162	0.954
0.343	0.862	0.57	0.725
0.275	0.886	0.27	0.887
0.228	0.911	0.222	0.916
0.147	0.943	0.113	0.957
0.157	0.944	0.918	0.668
0.133	0.955	0.292	0.887
0.133	0.952	0.11	0.968
0.111	0.96	0.369	0.86
0.103	0.964	0.114	0.965
0.111	0.958	0.129	0.957
0.079	0.982	0.148	0.957
0.076	0.971	0.25	0.922
0.059	0.978	0.163	0.957

Columns TFm_2318.HK_pos_reg4__mult_gru.h5:
Date, buy_sell_point, sti_BETA, mtum_BR_26, sti_TOS_STDEVALL_U_2, mtum_AR_26, mtum_td_seq, sti_TOS_STDEVALL_L_1, sti_TOS_STDEVALL_U_1, sti_TOS_STDEVALL_L_3, ti_ease_of_movement_14, sti_TOS_STDEVALL_LR, sti_TOS_STDEVALL_U_3, sti_TOS_STDEVALL_L_2, cdl_INVERTEDHAMMER, mtum_MINUS_DM, ti_acc_dist, cycl_HT_TRENDMODE, ti_chaikin_10_3, mcrh_WMA_50_DEMA_100, mtum_PVO_12_26_9, mtum_DX, has_preMarket, mtum_DMP_14, Volume, volu_PVOL, mtum_PLUS_DM, mcrh_T3_5_WMA_10, mtum_AROONOSC, mtum_DMN_14, volu_Chaikin_ADOSC, volu_Chaikin_AD, mtum_MINUS_DI, vola_ATR, mcrh_EMA_5_WMA_10, volu_OBV, mcrh_WMA_50_KAMA_100, olap_BBAND_dif, mtum_td_seq_sig, ti_konk_avg, vola_THERMOma_20_2_05, vola_NATR, sti_ENTP_10, mcrh_WMA_50_SMA_100, mcrh_SMA_20_KAMA_50, mcrh_T3_20_T3_50, mcrh_KAMA_5_DEMA_20, mcrh_T3_50_DEMA_100, mtum_ADX, mcrh_TRIMA_20_TEMA_100, ti_force_index_13, mtum_PVOs_12_26_9, mcrh_KAMA_20_SMA_50, tend_lh, volu_EFI_13, mcrh_EMA_50_KAMA_100, mtum_AROON_down, olap_VMAP, mtum_STOCH_RSI_k, mtum_PLUS_DI, mtum_PSL_12, mtum_PVOh_12_26_9, mtum_AO_5_34, olap_MIDPRICE, mtum_MACD_fix, mcrh_TRIMA_5_TEMA_10, mcrh_TRIMA_50_T3_100, mtum_MFI, mtum_INERTIA_20_14, mcrh_WMA_50_EMA_100, mtum_MACD, mtum_ADXR, mcrh_WMA_5_SMA_10, mtum_STCmacd_10_12_26_05, mtum_BULLP_13, mtum_AROON_up, olap_BBAND_LOWER, HSI_SMA_100, sti_LINEARREG_ANGLE, mtum_QQEl_14_5_4236, mcrh_KAMA_5_TRIMA_10, vola_KCUe_20_2, vola_HWU, trad_r2, cdl_TRISTAR, mcrh_TRIMA_20_DEMA_50, ti_vortex_neg_14, mcrh_DEMA_50_EMA_100, ti_konk_gre_avg_crash, cdl_LONGLEGGEDDOJI, mcrh_DEMA_5_TRIMA_10, ti_coppock_14_11_10, mcrh_EMA_50_DEMA_100, tend_PSARr_002_02, tend_renko_ATR, cdl_HAMMER, mcrh_T3_20_SMA_100, mcrh_TEMA_5_WMA_10, cdl_DOJI, mcrh_TEMA_5_TEMA_20, sti_LINEARREG_SLOPE, mtum_QQEs_14_5_4236, mcrh_T3_20_KAMA_100, cdl_GRAVESTONEDOJI, mcrh_SMA_5_SMA_10, ichi_senkou_b
root - [INFO]{CONS_1} - check_columns_selections_Raise() - match columns: ['Date', 'buy_sell_point', 'sti_BETA', 'mtum_BR_26', 'sti_TOS_STDEVALL_U_2', 'mtum_AR_26', 'mtum_td_seq', 'sti_TOS_STDEVALL_L_1', 'sti_TOS_STDEVALL_U_1', 'sti_TOS_STDEVALL_L_3', 'ti_ease_of_movement_14', 'sti_TOS_STDEVALL_LR', 'sti_TOS_STDEVALL_U_3', 'sti_TOS_STDEVALL_L_2', 'cdl_INVERTEDHAMMER', 'mtum_MINUS_DM', 'ti_acc_dist', 'cycl_HT_TRENDMODE', 'ti_chaikin_10_3', 'mcrh_WMA_50_DEMA_100', 'mtum_PVO_12_26_9', 'mtum_DX', 'has_preMarket', 'mtum_DMP_14', 'Volume', 'volu_PVOL', 'mtum_PLUS_DM', 'mcrh_T3_5_WMA_10', 'mtum_AROONOSC', 'mtum_DMN_14', 'volu_Chaikin_ADOSC', 'volu_Chaikin_AD', 'mtum_MINUS_DI', 'vola_ATR', 'mcrh_EMA_5_WMA_10', 'volu_OBV', 'mcrh_WMA_50_KAMA_100', 'olap_BBAND_dif', 'mtum_td_seq_sig', 'ti_konk_avg', 'vola_THERMOma_20_2_05', 'vola_NATR', 'sti_ENTP_10', 'mcrh_WMA_50_SMA_100', 'mcrh_SMA_20_KAMA_50', 'mcrh_T3_20_T3_50', 'mcrh_KAMA_5_DEMA_20', 'mcrh_T3_50_DEMA_100', 'mtum_ADX', 'mcrh_TRIMA_20_TEMA_100', 'ti_force_index_13', 'mtum_PVOs_12_26_9', 'mcrh_KAMA_20_SMA_50', 'tend_lh', 'volu_EFI_13', 'mcrh_EMA_50_KAMA_100', 'mtum_AROON_down', 'olap_VMAP', 'mtum_STOCH_RSI_k', 'mtum_PLUS_DI', 'mtum_PSL_12', 'mtum_PVOh_12_26_9', 'mtum_AO_5_34', 'olap_MIDPRICE', 'mtum_MACD_fix', 'mcrh_TRIMA_5_TEMA_10', 'mcrh_TRIMA_50_T3_100', 'mtum_MFI', 'mtum_INERTIA_20_14', 'mcrh_WMA_50_EMA_100', 'mtum_MACD', 'mtum_ADXR', 'mcrh_WMA_5_SMA_10', 'mtum_STCmacd_10_12_26_05', 'mtum_BULLP_13', 'mtum_AROON_up', 'olap_BBAND_LOWER', 'HSI_SMA_100', 'sti_LINEARREG_ANGLE', 'mtum_QQEl_14_5_4236', 'mcrh_KAMA_5_TRIMA_10', 'vola_KCUe_20_2', 'vola_HWU', 'trad_r2', 'cdl_TRISTAR', 'mcrh_TRIMA_20_DEMA_50', 'ti_vortex_neg_14', 'mcrh_DEMA_50_EMA_100', 'ti_konk_gre_avg_crash', 'cdl_LONGLEGGEDDOJI', 'mcrh_DEMA_5_TRIMA_10', 'ti_coppock_14_11_10', 'mcrh_EMA_50_DEMA_100', 'tend_PSARr_002_02', 'tend_renko_ATR', 'cdl_HAMMER', 'mcrh_T3_20_SMA_100', 'mcrh_TEMA_5_WMA_10', 'cdl_DOJI', 'mcrh_TEMA_5_TEMA_20', 'sti_LINEARREG_SLOPE', 'mtum_QQEs_14_5_4236', 'mcrh_T3_20_KAMA_100', 'cdl_GRAVESTONEDOJI', 'mcrh_SMA_5_SMA_10', 'ichi_senkou_b']
root - [INFO]{CONS_1} - check_columns_selections_Raise() - cols model columns: Index(['Date', 'buy_sell_point', 'sti_BETA', 'mtum_BR_26',
       'sti_TOS_STDEVALL_U_2', 'mtum_AR_26', 'mtum_td_seq',
       'sti_TOS_STDEVALL_L_1', 'sti_TOS_STDEVALL_U_1', 'sti_TOS_STDEVALL_L_3',
       ...
       'mcrh_T3_20_SMA_100', 'mcrh_TEMA_5_WMA_10', 'cdl_DOJI',
       'mcrh_TEMA_5_TEMA_20', 'sti_LINEARREG_SLOPE', 'mtum_QQEs_14_5_4236',
       'mcrh_T3_20_KAMA_100', 'cdl_GRAVESTONEDOJI', 'mcrh_SMA_5_SMA_10',
       'ichi_senkou_b'],
      dtype='object', length=106)
root - [INFO]{CONS_1} - check_columns_selections_Raise() - Columns required by the Model: Models/TF_multi/TFm_2318.HK_pos_reg4__mult_gru.h5__TEST_42.1%_accuracy_97.84%__loss_0.06__epochs_14[90].csv are: Date, buy_sell_point, sti_BETA, mtum_BR_26, sti_TOS_STDEVALL_U_2, mtum_AR_26, mtum_td_seq, sti_TOS_STDEVALL_L_1, sti_TOS_STDEVALL_U_1, sti_TOS_STDEVALL_L_3, ti_ease_of_movement_14, sti_TOS_STDEVALL_LR, sti_TOS_STDEVALL_U_3, sti_TOS_STDEVALL_L_2, cdl_INVERTEDHAMMER, mtum_MINUS_DM, ti_acc_dist, cycl_HT_TRENDMODE, ti_chaikin_10_3, mcrh_WMA_50_DEMA_100, mtum_PVO_12_26_9, mtum_DX, has_preMarket, mtum_DMP_14, Volume, volu_PVOL, mtum_PLUS_DM, mcrh_T3_5_WMA_10, mtum_AROONOSC, mtum_DMN_14, volu_Chaikin_ADOSC, volu_Chaikin_AD, mtum_MINUS_DI, vola_ATR, mcrh_EMA_5_WMA_10, volu_OBV, mcrh_WMA_50_KAMA_100, olap_BBAND_dif, mtum_td_seq_sig, ti_konk_avg, vola_THERMOma_20_2_05, vola_NATR, sti_ENTP_10, mcrh_WMA_50_SMA_100, mcrh_SMA_20_KAMA_50, mcrh_T3_20_T3_50, mcrh_KAMA_5_DEMA_20, mcrh_T3_50_DEMA_100, mtum_ADX, mcrh_TRIMA_20_TEMA_100, ti_force_index_13, mtum_PVOs_12_26_9, mcrh_KAMA_20_SMA_50, tend_lh, volu_EFI_13, mcrh_EMA_50_KAMA_100, mtum_AROON_down, olap_VMAP, mtum_STOCH_RSI_k, mtum_PLUS_DI, mtum_PSL_12, mtum_PVOh_12_26_9, mtum_AO_5_34, olap_MIDPRICE, mtum_MACD_fix, mcrh_TRIMA_5_TEMA_10, mcrh_TRIMA_50_T3_100, mtum_MFI, mtum_INERTIA_20_14, mcrh_WMA_50_EMA_100, mtum_MACD, mtum_ADXR, mcrh_WMA_5_SMA_10, mtum_STCmacd_10_12_26_05, mtum_BULLP_13, mtum_AROON_up, olap_BBAND_LOWER, HSI_SMA_100, sti_LINEARREG_ANGLE, mtum_QQEl_14_5_4236, mcrh_KAMA_5_TRIMA_10, vola_KCUe_20_2, vola_HWU, trad_r2, cdl_TRISTAR, mcrh_TRIMA_20_DEMA_50, ti_vortex_neg_14, mcrh_DEMA_50_EMA_100, ti_konk_gre_avg_crash, cdl_LONGLEGGEDDOJI, mcrh_DEMA_5_TRIMA_10, ti_coppock_14_11_10, mcrh_EMA_50_DEMA_100, tend_PSARr_002_02, tend_renko_ATR, cdl_HAMMER, mcrh_T3_20_SMA_100, mcrh_TEMA_5_WMA_10, cdl_DOJI, mcrh_TEMA_5_TEMA_20, sti_LINEARREG_SLOPE, mtum_QQEs_14_5_4236, mcrh_T3_20_KAMA_100, cdl_GRAVESTONEDOJI, mcrh_SMA_5_SMA_10, ichi_senkou_b
root - [INFO]{CONS_1} - predict_Multi_models() -  Load model Type MULTI TF:   Path:  Models/TF_multi/[94mTFm_2318.HK_pos_reg4__mult_gru[0m.h5   Shape df to predict: (-1, 10, 105)
root - [DEBUG]{CONS_1} - scaler_min_max_array() - Scaler will be Loaded Path: Models/TF_multi/Scalers/2318.HK_pos_reg4_.scal
root - [INFO]{CONS_1} - create_df_eval_prediction() - Columns selected for model: ['volu_NVI_1', 'mtum_DMP_14', 'olap_BBAND_dif', 'volu_PVOL', 'Volume', 'volu_Chaikin_ADOSC', 'ti_chaikin_10_3', 'cdl_3WHITESOLDIERS', 'mtum_PLUS_DM', 'mtum_STCstoch_10_12_26_05', 'mtum_td_seq_sig', 'ti_coppock_14_11_10', 'sti_ENTP_10', 'mtum_MACD', 'mcrh_DEMA_50_EMA_100', 'mtum_STCmacd_10_12_26_05', 'mtum_BR_26', 'mtum_PVOh_12_26_9', 'mtum_PVO_12_26_9', 'sti_LINEARREG_SLOPE', 'mtum_MACD_signal', 'mtum_MACD_fix', 'cdl_LONGLEGGEDDOJI', 'cdl_DOJI', 'cdl_RICKSHAWMAN', 'mtum_MACD_fix_signal', 'mtum_MACD_ext_list', 'mtum_PPO', 'mtum_MACD_ext', 'mtum_PSL_12', 'mtum_BULLP_13', 'mtum_INERTIA_20_14', 'mtum_PVOs_12_26_9', 'mtum_STC_10_12_26_05', 'mtum_APO', 'mtum_AO_5_34', 'sti_BETA', 'volu_EFI_13', 'vola_ATR', 'ti_force_index_13', 'tend_lh', 'sti_TOS_STDEVALL_L_3', 'sti_LINEARREG_ANGLE', 'sti_TOS_STDEVALL_U_1', 'perf_ha', 'tend_renko_ATR', 'mtum_BEARP_13', 'mtum_BIAS_SMA_26', 'mtum_ROCR100', 'vola_NATR', 'mtum_ROCR', 'ti_vortex_neg_14', 'mtum_ROCP', 'ti_donchian_upper_20', 'mtum_ROC', 'sti_TOS_STDEVALL_LR', 'mtum_MACD_ext_signal', 'tend_VHF_28', 'tend_LDECAY_5', 'olap_JMA_7_0', 'mtum_MFI', 'mtum_MOM', 'mtum_PLUS_DI', 'perf_CUMPCTRET_1', 'Close', 'mtum_DX', 'ma_EMA_5', 'High', 'Low', 'ichi_kijun_sen', 'ma_TEMA_10', 'cycl_PHASOR_inph', 'ma_DEMA_10', 'ma_DEMA_5', 'ma_KAMA_50', 'mcrh_KAMA_5_DEMA_20', 'ma_KAMA_20', 'ma_TEMA_5', 'sti_TSF', 'ma_KAMA_5', 'olap_BBAND_UPPER', 'ma_KAMA_10', 'sti_TOS_STDEVALL_U_2', 'ma_WMA_5', 'ma_EMA_10', 'sti_TOS_STDEVALL_L_2', 'sti_TOS_STDEVALL_L_1', 'sti_LINEARREG', 'ma_WMA_10', 'perf_CUMLOGRET_1', 'cama_r3', 'mtum_FISHERTs_9_1', 'mtum_AROON_down', 'ti_hma_20', 'ti_vortex_pos_14', 'mtum_AROONOSC', 'ti_konk_rest', 'HSI_SMA_100', 'fibo_pp', 'fibo_r1', 'demark_s1', 'cama_pp', 'vola_KCBe_20_2', 'sti_CORREL', 'demark_r1', 'vola_UI_14', 'vola_RVI_14', 'demark_pp', 'cama_r1', 'cycl_SINE_sine', 'fibo_r2', 'cama_s1', 'sti_TOS_STDEVALL_U_3', 'vola_HWL', 'cama_r2', 'trad_s1', 'trad_r2', 'trad_r1', 'trad_pp', 'clas_s1', 'clas_r1', 'clas_pp', 'fibo_s1', 'cama_s3', 'cama_s2', 'ti_ease_of_movement_14', 'cdl_MATCHINGLOW', 'mcrh_SMA_5_SMA_20', 'fibo_s2', 'mcrh_KAMA_20_SMA_50', 'mcrh_DEMA_10_TRIMA_20', 'mcrh_EMA_20_EMA_100', 'mtum_FISHERT_9_1', 'HSI_Close', 'mcrh_EMA_20_KAMA_100', 'mtum_CG_10', 'mcrh_EMA_5_SMA_20', 'mcrh_KAMA_10_DEMA_20', 'mtum_AR_26', 'ma_WMA_20', 'mcrh_KAMA_5_TRIMA_10', 'mcrh_SMA_10_DEMA_100', 'mtum_ADX', 'mcrh_WMA_50_DEMA_100', 'mcrh_TEMA_10_EMA_20', 'mcrh_T3_5_WMA_10', 'mcrh_T3_50_DEMA_100', 'mcrh_T3_20_T3_50', 'mcrh_DEMA_10_DEMA_20', 'mtum_MACD_fix_list', 'olap_VMAP', 'ichi_senkou_b', 'olap_SSF_10_2', 'olap_PWMA_10', 'olap_MIDPRICE', 'olap_MIDPOINT', 'ichi_isin_cloud', 'mcrh_T3_20_EMA_50', 'ichi_senkou_a', 'mtum_td_seq', 'ma_DEMA_20', 'ma_TRIMA_50', 'ma_EMA_50', 'mtum_QQE_14_5_4236_RSIMA', 'ma_SMA_5', 'ma_T3_5', 'ma_TEMA_20', 'mtum_MINUS_DI', 'ma_TRIMA_5', 'mtum_MACD_list', 'wood_pp']col_select: low1 pos_neg: neg model_name: TFm_2318.HK_neg_low1_mult_lstm
root - [INFO]{CONS_1} - create_df_eval_prediction() - Load model NameModel: TFm_2318.HK_neg_low1_mult_lstm Neg/Pos: neg df.shape: (64, 175) Columns: low1
root - [INFO]{CONS_1} - create_df_eval_prediction() - df_in_pure record:
   Close   Volume                 Date  buy_sell_point  volu_NVI_1  mtum_DMP_14  olap_BBAND_dif    volu_PVOL   Volume  volu_Chaikin_ADOSC  ti_chaikin_10_3  cdl_3WHITESOLDIERS  mtum_PLUS_DM  mtum_STCstoch_10_12_26_05  mtum_td_seq_sig  ti_coppock_14_11_10  sti_ENTP_10  mtum_MACD  mcrh_DEMA_50_EMA_100  mtum_STCmacd_10_12_26_05  mtum_BR_26  mtum_PVOh_12_26_9  mtum_PVO_12_26_9  sti_LINEARREG_SLOPE  mtum_MACD_signal  mtum_MACD_fix  cdl_LONGLEGGEDDOJI  cdl_DOJI  cdl_RICKSHAWMAN  mtum_MACD_fix_signal  mtum_MACD_ext_list  mtum_PPO  mtum_MACD_ext  mtum_PSL_12  mtum_BULLP_13  mtum_INERTIA_20_14  mtum_PVOs_12_26_9  mtum_STC_10_12_26_05  mtum_APO  mtum_AO_5_34  sti_BETA    volu_EFI_13  vola_ATR  ti_force_index_13  tend_lh  sti_TOS_STDEVALL_L_3  sti_LINEARREG_ANGLE  sti_TOS_STDEVALL_U_1  perf_ha  tend_renko_ATR  mtum_BEARP_13  mtum_BIAS_SMA_26  mtum_ROCR100  vola_NATR  mtum_ROCR  ti_vortex_neg_14  mtum_ROCP  ti_donchian_upper_20  mtum_ROC  sti_TOS_STDEVALL_LR  mtum_MACD_ext_signal  tend_VHF_28  tend_LDECAY_5  olap_JMA_7_0   mtum_MFI  mtum_MOM  mtum_PLUS_DI  perf_CUMPCTRET_1  Close    mtum_DX   ma_EMA_5  High   Low  ichi_kijun_sen  ma_TEMA_10  cycl_PHASOR_inph  ma_DEMA_10  ma_DEMA_5  ma_KAMA_50  mcrh_KAMA_5_DEMA_20  ma_KAMA_20  ma_TEMA_5    sti_TSF  ma_KAMA_5  olap_BBAND_UPPER  ma_KAMA_10  sti_TOS_STDEVALL_U_2   ma_WMA_5  ma_EMA_10  sti_TOS_STDEVALL_L_2  sti_TOS_STDEVALL_L_1  sti_LINEARREG  ma_WMA_10  perf_CUMLOGRET_1  cama_r3  mtum_FISHERTs_9_1  mtum_AROON_down  ti_hma_20  ti_vortex_pos_14  mtum_AROONOSC  ti_konk_rest   HSI_SMA_100    fibo_pp    fibo_r1  demark_s1    cama_pp  vola_KCBe_20_2  sti_CORREL  demark_r1  vola_UI_14  vola_RVI_14  demark_pp    cama_r1  cycl_SINE_sine    fibo_r2    cama_s1  sti_TOS_STDEVALL_U_3   vola_HWL    cama_r2    trad_s1    trad_r2    trad_r1    trad_pp    clas_s1    clas_r1    clas_pp    fibo_s1  cama_s3    cama_s2  ti_ease_of_movement_14  cdl_MATCHINGLOW  mcrh_SMA_5_SMA_20    fibo_s2  mcrh_KAMA_20_SMA_50  mcrh_DEMA_10_TRIMA_20  mcrh_EMA_20_EMA_100  mtum_FISHERT_9_1     HSI_Close  mcrh_EMA_20_KAMA_100  mtum_CG_10  mcrh_EMA_5_SMA_20  mcrh_KAMA_10_DEMA_20  mtum_AR_26  ma_WMA_20  mcrh_KAMA_5_TRIMA_10  mcrh_SMA_10_DEMA_100   mtum_ADX  mcrh_WMA_50_DEMA_100  mcrh_TEMA_10_EMA_20  mcrh_T3_5_WMA_10  mcrh_T3_50_DEMA_100  mcrh_T3_20_T3_50  mcrh_DEMA_10_DEMA_20  mtum_MACD_fix_list  olap_VMAP  ichi_senkou_b  olap_SSF_10_2  olap_PWMA_10  olap_MIDPRICE  olap_MIDPOINT  ichi_isin_cloud  mcrh_T3_20_EMA_50  ichi_senkou_a  mtum_td_seq  ma_DEMA_20  ma_TRIMA_50  ma_EMA_50  mtum_QQE_14_5_4236_RSIMA  ma_SMA_5    ma_T3_5  ma_TEMA_20  mtum_MINUS_DI  ma_TRIMA_5  mtum_MACD_list  wood_pp
0  53.40  1290000  2025-08-04 15:00:00               0  997.137153     0.967528        1.068223  68886000.00  1290000       722384.642674    722366.421977                   0      0.967528                        0.0               -4            -0.624855     3.323822  -0.093047                     0                 -0.093006   69.411765          -1.720468          7.304018             0.031099         -0.127168      -0.089477                   0         0                0             -0.121706            0.055449 -0.420600      -0.225321    33.333333       0.250324           35.444732           9.024486                   0.0 -0.225321     -0.096912  0.312228  184961.564887  0.295964      184981.886808     53.8             52.160743             1.781262             54.217428  53.5375        0.276923      -0.049676         -0.003195    100.564972   0.554240   1.005650          0.746988   0.005650                  54.1  0.564972            53.703257             -0.280769     0.298701          53.40     53.531028  65.144536      0.30     23.400561         -0.022873  53.40  25.743167  53.453569  53.7  53.4           53.55   53.494684          0.211937   53.433920  53.463729   53.244406                    1   53.585778  53.438511  53.565385  53.362676         53.991611   53.318997             54.731600  53.486667  53.441367             52.674914             53.189086      53.534286  53.450909         -0.023138  53.4775           0.521584        35.714286  53.463771          0.819277      35.714286           NaN  24749.095195  53.416667  53.454867      53.35  53.416667       53.493556    0.922556      53.45    1.287714    30.978717     53.400  53.459167             NaN  53.478467  53.440833             55.245771  52.903921  53.468333  53.383333  53.516667  53.483333  53.416667  53.383333  53.483333  53.416667  53.378467  53.4225  53.431667                0.017106                0                  1  53.354867                    0                      0                    0          0.493022  24686.509766                     0   -5.493210                  0                     0   73.846154  53.400714                    -1                     0  20.189534                     0                    0                 0                    0                 0                     0            0.032229  53.828640            NaN      53.509718     53.480469           53.5         53.425                0                  0         54.025            4   53.356395    53.769385  53.699337                 46.220409     53.55  53.500534   53.383891      13.819053   53.533333        0.034121   53.525
1  53.65  1576397  2025-08-04 14:45:00               0  997.137153     0.998418        0.964572  84573699.05  1576397       269198.338502    269183.430659                   0      0.998418                        0.0                1            -0.067664     3.325475  -0.069859                     0                 -0.069824   85.897436          -2.770069          5.561899             0.037473         -0.115706      -0.067533                 100       100                0             -0.110871            0.095976 -0.332711      -0.178205    41.666667       0.321706           37.392644           8.331968                   0.0 -0.178205     -0.098824  0.282750  214838.377046  0.303395      214855.795835     53.8             52.159784             2.146014             54.216470  53.6750        0.278846       0.121706          0.001652    100.845865   0.565508   1.008459          0.678571   0.008459                  54.0  0.845865            53.702299             -0.274181     0.291139          53.65     53.526787  68.030650      0.45     23.551476         -0.018298  53.65  30.599812  53.519046  53.8  53.6           53.55   53.580460          0.527373   53.504244  53.569470   53.249236                   -1   53.586965  53.579502  53.641758  53.374572         53.922286   53.334924             54.730641  53.520000  53.479300             52.673956             53.188127      53.604286  53.499091         -0.018468  53.4825           0.493022        28.571429  53.519853          0.892857      35.714286           NaN  24749.095195  53.500000  53.614600      53.25  53.500000       53.508456    0.922433      53.55    1.201798    39.704520     53.475  53.427500         0.80146  53.685400  53.372500             55.244813  52.964747  53.455000  53.300000  53.800000  53.600000  53.500000  53.300000  53.600000  53.500000  53.385400  53.3175  53.345000                0.062513                0                  0  53.314600                    0                      0                    0          0.681549  24740.099609                     0   -5.492888                  1                     0   79.687500  53.419048                     0                     0  20.933125                     0                    0                 0                    0                 0                     0            0.043338  53.826401            NaN      53.527808     53.543359           53.5         53.425                0                  0         54.025            1   53.397838    53.756692  53.697402                 48.282360     53.52  53.523048   53.446731      12.515155   53.488889        0.045848   53.600
root - [INFO]{CONS_1} - create_df_eval_prediction() - df_eval:
                  Date  buy_sell_point  Close  Volume
0  2025-08-04 11:45:00               0  53.05  827000
1  2025-08-04 11:30:00               0  53.05  835200
root - [INFO]{CONS_1} - create_df_eval_prediction() - df_S record:
           Date  buy_sell_point  volu_NVI_1  mtum_DMP_14  olap_BBAND_dif    volu_PVOL   Volume  volu_Chaikin_ADOSC  ti_chaikin_10_3  cdl_3WHITESOLDIERS  mtum_PLUS_DM  mtum_STCstoch_10_12_26_05  mtum_td_seq_sig  ti_coppock_14_11_10  sti_ENTP_10  mtum_MACD  mcrh_DEMA_50_EMA_100  mtum_STCmacd_10_12_26_05  mtum_BR_26  mtum_PVOh_12_26_9  mtum_PVO_12_26_9  sti_LINEARREG_SLOPE  mtum_MACD_signal  mtum_MACD_fix  cdl_LONGLEGGEDDOJI  cdl_DOJI  cdl_RICKSHAWMAN  mtum_MACD_fix_signal  mtum_MACD_ext_list  mtum_PPO  mtum_MACD_ext  mtum_PSL_12  mtum_BULLP_13  mtum_INERTIA_20_14  mtum_PVOs_12_26_9  mtum_STC_10_12_26_05  mtum_APO  mtum_AO_5_34  sti_BETA    volu_EFI_13  vola_ATR  ti_force_index_13  tend_lh  sti_TOS_STDEVALL_L_3  sti_LINEARREG_ANGLE  sti_TOS_STDEVALL_U_1  perf_ha  tend_renko_ATR  mtum_BEARP_13  mtum_BIAS_SMA_26  mtum_ROCR100  vola_NATR  mtum_ROCR  ti_vortex_neg_14  mtum_ROCP  ti_donchian_upper_20  mtum_ROC  sti_TOS_STDEVALL_LR  mtum_MACD_ext_signal  tend_VHF_28  tend_LDECAY_5  olap_JMA_7_0   mtum_MFI  mtum_MOM  mtum_PLUS_DI  perf_CUMPCTRET_1  Close    mtum_DX   ma_EMA_5  High   Low  ichi_kijun_sen  ma_TEMA_10  cycl_PHASOR_inph  ma_DEMA_10  ma_DEMA_5  ma_KAMA_50  mcrh_KAMA_5_DEMA_20  ma_KAMA_20  ma_TEMA_5    sti_TSF  ma_KAMA_5  olap_BBAND_UPPER  ma_KAMA_10  sti_TOS_STDEVALL_U_2   ma_WMA_5  ma_EMA_10  sti_TOS_STDEVALL_L_2  sti_TOS_STDEVALL_L_1  sti_LINEARREG  ma_WMA_10  perf_CUMLOGRET_1  cama_r3  mtum_FISHERTs_9_1  mtum_AROON_down  ti_hma_20  ti_vortex_pos_14  mtum_AROONOSC  ti_konk_rest   HSI_SMA_100    fibo_pp    fibo_r1  demark_s1    cama_pp  vola_KCBe_20_2  sti_CORREL  demark_r1  vola_UI_14  vola_RVI_14  demark_pp    cama_r1  cycl_SINE_sine    fibo_r2    cama_s1  sti_TOS_STDEVALL_U_3   vola_HWL    cama_r2    trad_s1    trad_r2    trad_r1    trad_pp    clas_s1    clas_r1    clas_pp    fibo_s1  cama_s3    cama_s2  ti_ease_of_movement_14  cdl_MATCHINGLOW  mcrh_SMA_5_SMA_20    fibo_s2  mcrh_KAMA_20_SMA_50  mcrh_DEMA_10_TRIMA_20  mcrh_EMA_20_EMA_100  mtum_FISHERT_9_1     HSI_Close  mcrh_EMA_20_KAMA_100  mtum_CG_10  mcrh_EMA_5_SMA_20  mcrh_KAMA_10_DEMA_20  mtum_AR_26  ma_WMA_20  mcrh_KAMA_5_TRIMA_10  mcrh_SMA_10_DEMA_100   mtum_ADX  mcrh_WMA_50_DEMA_100  mcrh_TEMA_10_EMA_20  mcrh_T3_5_WMA_10  mcrh_T3_50_DEMA_100  mcrh_T3_20_T3_50  mcrh_DEMA_10_DEMA_20  mtum_MACD_fix_list  olap_VMAP  ichi_senkou_b  olap_SSF_10_2  olap_PWMA_10  olap_MIDPRICE  olap_MIDPOINT  ichi_isin_cloud  mcrh_T3_20_EMA_50  ichi_senkou_a  mtum_td_seq  ma_DEMA_20  ma_TRIMA_50  ma_EMA_50  mtum_QQE_14_5_4236_RSIMA  ma_SMA_5    ma_T3_5  ma_TEMA_20  mtum_MINUS_DI  ma_TRIMA_5  mtum_MACD_list  wood_pp
0  1.754320e+09               0  997.137153     0.967528        1.068223  68886000.00  1290000       722384.642674    722366.421977                   0      0.967528                        0.0               -4            -0.624855     3.323822  -0.093047                     0                 -0.093006   69.411765          -1.720468          7.304018             0.031099         -0.127168      -0.089477                   0         0                0             -0.121706            0.055449 -0.420600      -0.225321    33.333333       0.250324           35.444732           9.024486                   0.0 -0.225321     -0.096912  0.312228  184961.564887  0.295964      184981.886808     53.8             52.160743             1.781262             54.217428  53.5375        0.276923      -0.049676         -0.003195    100.564972   0.554240   1.005650          0.746988   0.005650                  54.1  0.564972            53.703257             -0.280769     0.298701          53.40     53.531028  65.144536      0.30     23.400561         -0.022873  53.40  25.743167  53.453569  53.7  53.4           53.55   53.494684          0.211937   53.433920  53.463729   53.244406                    1   53.585778  53.438511  53.565385  53.362676         53.991611   53.318997             54.731600  53.486667  53.441367             52.674914             53.189086      53.534286  53.450909         -0.023138  53.4775           0.521584        35.714286  53.463771          0.819277      35.714286           NaN  24749.095195  53.416667  53.454867      53.35  53.416667       53.493556    0.922556      53.45    1.287714    30.978717     53.400  53.459167             NaN  53.478467  53.440833             55.245771  52.903921  53.468333  53.383333  53.516667  53.483333  53.416667  53.383333  53.483333  53.416667  53.378467  53.4225  53.431667                0.017106                0                  1  53.354867                    0                      0                    0          0.493022  24686.509766                     0   -5.493210                  0                     0   73.846154  53.400714                    -1                     0  20.189534                     0                    0                 0                    0                 0                     0            0.032229  53.828640            NaN      53.509718     53.480469           53.5         53.425                0                  0         54.025            4   53.356395    53.769385  53.699337                 46.220409     53.55  53.500534   53.383891      13.819053   53.533333        0.034121   53.525
1  1.754319e+09               0  997.137153     0.998418        0.964572  84573699.05  1576397       269198.338502    269183.430659                   0      0.998418                        0.0                1            -0.067664     3.325475  -0.069859                     0                 -0.069824   85.897436          -2.770069          5.561899             0.037473         -0.115706      -0.067533                 100       100                0             -0.110871            0.095976 -0.332711      -0.178205    41.666667       0.321706           37.392644           8.331968                   0.0 -0.178205     -0.098824  0.282750  214838.377046  0.303395      214855.795835     53.8             52.159784             2.146014             54.216470  53.6750        0.278846       0.121706          0.001652    100.845865   0.565508   1.008459          0.678571   0.008459                  54.0  0.845865            53.702299             -0.274181     0.291139          53.65     53.526787  68.030650      0.45     23.551476         -0.018298  53.65  30.599812  53.519046  53.8  53.6           53.55   53.580460          0.527373   53.504244  53.569470   53.249236                   -1   53.586965  53.579502  53.641758  53.374572         53.922286   53.334924             54.730641  53.520000  53.479300             52.673956             53.188127      53.604286  53.499091         -0.018468  53.4825           0.493022        28.571429  53.519853          0.892857      35.714286           NaN  24749.095195  53.500000  53.614600      53.25  53.500000       53.508456    0.922433      53.55    1.201798    39.704520     53.475  53.427500         0.80146  53.685400  53.372500             55.244813  52.964747  53.455000  53.300000  53.800000  53.600000  53.500000  53.300000  53.600000  53.500000  53.385400  53.3175  53.345000                0.062513                0                  0  53.314600                    0                      0                    0          0.681549  24740.099609                     0   -5.492888                  1                     0   79.687500  53.419048                     0                     0  20.933125                     0                    0                 0                    0                 0                     0            0.043338  53.826401            NaN      53.527808     53.543359           53.5         53.425                0                  0         54.025            1   53.397838    53.756692  53.697402                 48.282360     53.52  53.523048   53.446731      12.515155   53.488889        0.045848   53.600
root - [INFO]{CONS_1} - create_df_eval_prediction() - Index(['Date', 'buy_sell_point', 'volu_NVI_1', 'mtum_DMP_14', 'olap_BBAND_dif',
       'volu_PVOL', 'Volume', 'volu_Chaikin_ADOSC', 'ti_chaikin_10_3',
       'cdl_3WHITESOLDIERS',
       ...
       'ma_TRIMA_50', 'ma_EMA_50', 'mtum_QQE_14_5_4236_RSIMA', 'ma_SMA_5',
       'ma_T3_5', 'ma_TEMA_20', 'mtum_MINUS_DI', 'ma_TRIMA_5',
       'mtum_MACD_list', 'wood_pp'],
      dtype='object', length=173)
root - [INFO]{CONS_1} - check_columns_selections_Raise() - Checking columns selected for prediction: loss	accuracy	val_loss	val_accuracy
0.714	0.612	0.563	0.805
0.61	0.663	0.725	0.442
0.502	0.747	0.678	0.588
0.37	0.82	0.297	0.849
0.334	0.83	0.615	0.681
0.328	0.848	0.21	0.904
0.288	0.872	0.929	0.538
0.259	0.89	0.296	0.852
0.22	0.911	0.198	0.937
0.174	0.926	0.308	0.915
0.205	0.922	0.283	0.934
0.172	0.943	0.398	0.865
0.154	0.943	0.747	0.701
0.115	0.957	0.325	0.934
0.097	0.963	0.396	0.923

Columns TFm_2318.HK_neg_low1_mult_lstm.h5:
Date, buy_sell_point, volu_NVI_1, mtum_DMP_14, olap_BBAND_dif, volu_PVOL, Volume, volu_Chaikin_ADOSC, ti_chaikin_10_3, cdl_3WHITESOLDIERS, mtum_PLUS_DM, mtum_STCstoch_10_12_26_05, mtum_td_seq_sig, ti_coppock_14_11_10, sti_ENTP_10, mtum_MACD, mcrh_DEMA_50_EMA_100, mtum_STCmacd_10_12_26_05, mtum_BR_26, mtum_PVOh_12_26_9, mtum_PVO_12_26_9, sti_LINEARREG_SLOPE, mtum_MACD_signal, mtum_MACD_fix, cdl_LONGLEGGEDDOJI, cdl_DOJI, cdl_RICKSHAWMAN, mtum_MACD_fix_signal, mtum_MACD_ext_list, mtum_PPO, mtum_MACD_ext, mtum_PSL_12, mtum_BULLP_13, mtum_INERTIA_20_14, mtum_PVOs_12_26_9, mtum_STC_10_12_26_05, mtum_APO, mtum_AO_5_34, sti_BETA, volu_EFI_13, vola_ATR, ti_force_index_13, tend_lh, sti_TOS_STDEVALL_L_3, sti_LINEARREG_ANGLE, sti_TOS_STDEVALL_U_1, perf_ha, tend_renko_ATR, mtum_BEARP_13, mtum_BIAS_SMA_26, mtum_ROCR100, vola_NATR, mtum_ROCR, ti_vortex_neg_14, mtum_ROCP, ti_donchian_upper_20, mtum_ROC, sti_TOS_STDEVALL_LR, mtum_MACD_ext_signal, tend_VHF_28, tend_LDECAY_5, olap_JMA_7_0, mtum_MFI, mtum_MOM, mtum_PLUS_DI, perf_CUMPCTRET_1, Close, mtum_DX, ma_EMA_5, High, Low, ichi_kijun_sen, ma_TEMA_10, cycl_PHASOR_inph, ma_DEMA_10, ma_DEMA_5, ma_KAMA_50, mcrh_KAMA_5_DEMA_20, ma_KAMA_20, ma_TEMA_5, sti_TSF, ma_KAMA_5, olap_BBAND_UPPER, ma_KAMA_10, sti_TOS_STDEVALL_U_2, ma_WMA_5, ma_EMA_10, sti_TOS_STDEVALL_L_2, sti_TOS_STDEVALL_L_1, sti_LINEARREG, ma_WMA_10, perf_CUMLOGRET_1, cama_r3, mtum_FISHERTs_9_1, mtum_AROON_down, ti_hma_20, ti_vortex_pos_14, mtum_AROONOSC, ti_konk_rest, HSI_SMA_100, fibo_pp, fibo_r1, demark_s1, cama_pp, vola_KCBe_20_2, sti_CORREL, demark_r1, vola_UI_14, vola_RVI_14, demark_pp, cama_r1, cycl_SINE_sine, fibo_r2, cama_s1, sti_TOS_STDEVALL_U_3, vola_HWL, cama_r2, trad_s1, trad_r2, trad_r1, trad_pp, clas_s1, clas_r1, clas_pp, fibo_s1, cama_s3, cama_s2, ti_ease_of_movement_14, cdl_MATCHINGLOW, mcrh_SMA_5_SMA_20, fibo_s2, mcrh_KAMA_20_SMA_50, mcrh_DEMA_10_TRIMA_20, mcrh_EMA_20_EMA_100, mtum_FISHERT_9_1, HSI_Close, mcrh_EMA_20_KAMA_100, mtum_CG_10, mcrh_EMA_5_SMA_20, mcrh_KAMA_10_DEMA_20, mtum_AR_26, ma_WMA_20, mcrh_KAMA_5_TRIMA_10, mcrh_SMA_10_DEMA_100, mtum_ADX, mcrh_WMA_50_DEMA_100, mcrh_TEMA_10_EMA_20, mcrh_T3_5_WMA_10, mcrh_T3_50_DEMA_100, mcrh_T3_20_T3_50, mcrh_DEMA_10_DEMA_20, mtum_MACD_fix_list, olap_VMAP, ichi_senkou_b, olap_SSF_10_2, olap_PWMA_10, olap_MIDPRICE, olap_MIDPOINT, ichi_isin_cloud, mcrh_T3_20_EMA_50, ichi_senkou_a, mtum_td_seq, ma_DEMA_20, ma_TRIMA_50, ma_EMA_50, mtum_QQE_14_5_4236_RSIMA, ma_SMA_5, ma_T3_5, ma_TEMA_20, mtum_MINUS_DI, ma_TRIMA_5, mtum_MACD_list, wood_pp
root - [INFO]{CONS_1} - check_columns_selections_Raise() - match columns: ['Date', 'buy_sell_point', 'volu_NVI_1', 'mtum_DMP_14', 'olap_BBAND_dif', 'volu_PVOL', 'Volume', 'volu_Chaikin_ADOSC', 'ti_chaikin_10_3', 'cdl_3WHITESOLDIERS', 'mtum_PLUS_DM', 'mtum_STCstoch_10_12_26_05', 'mtum_td_seq_sig', 'ti_coppock_14_11_10', 'sti_ENTP_10', 'mtum_MACD', 'mcrh_DEMA_50_EMA_100', 'mtum_STCmacd_10_12_26_05', 'mtum_BR_26', 'mtum_PVOh_12_26_9', 'mtum_PVO_12_26_9', 'sti_LINEARREG_SLOPE', 'mtum_MACD_signal', 'mtum_MACD_fix', 'cdl_LONGLEGGEDDOJI', 'cdl_DOJI', 'cdl_RICKSHAWMAN', 'mtum_MACD_fix_signal', 'mtum_MACD_ext_list', 'mtum_PPO', 'mtum_MACD_ext', 'mtum_PSL_12', 'mtum_BULLP_13', 'mtum_INERTIA_20_14', 'mtum_PVOs_12_26_9', 'mtum_STC_10_12_26_05', 'mtum_APO', 'mtum_AO_5_34', 'sti_BETA', 'volu_EFI_13', 'vola_ATR', 'ti_force_index_13', 'tend_lh', 'sti_TOS_STDEVALL_L_3', 'sti_LINEARREG_ANGLE', 'sti_TOS_STDEVALL_U_1', 'perf_ha', 'tend_renko_ATR', 'mtum_BEARP_13', 'mtum_BIAS_SMA_26', 'mtum_ROCR100', 'vola_NATR', 'mtum_ROCR', 'ti_vortex_neg_14', 'mtum_ROCP', 'ti_donchian_upper_20', 'mtum_ROC', 'sti_TOS_STDEVALL_LR', 'mtum_MACD_ext_signal', 'tend_VHF_28', 'tend_LDECAY_5', 'olap_JMA_7_0', 'mtum_MFI', 'mtum_MOM', 'mtum_PLUS_DI', 'perf_CUMPCTRET_1', 'Close', 'mtum_DX', 'ma_EMA_5', 'High', 'Low', 'ichi_kijun_sen', 'ma_TEMA_10', 'cycl_PHASOR_inph', 'ma_DEMA_10', 'ma_DEMA_5', 'ma_KAMA_50', 'mcrh_KAMA_5_DEMA_20', 'ma_KAMA_20', 'ma_TEMA_5', 'sti_TSF', 'ma_KAMA_5', 'olap_BBAND_UPPER', 'ma_KAMA_10', 'sti_TOS_STDEVALL_U_2', 'ma_WMA_5', 'ma_EMA_10', 'sti_TOS_STDEVALL_L_2', 'sti_TOS_STDEVALL_L_1', 'sti_LINEARREG', 'ma_WMA_10', 'perf_CUMLOGRET_1', 'cama_r3', 'mtum_FISHERTs_9_1', 'mtum_AROON_down', 'ti_hma_20', 'ti_vortex_pos_14', 'mtum_AROONOSC', 'ti_konk_rest', 'HSI_SMA_100', 'fibo_pp', 'fibo_r1', 'demark_s1', 'cama_pp', 'vola_KCBe_20_2', 'sti_CORREL', 'demark_r1', 'vola_UI_14', 'vola_RVI_14', 'demark_pp', 'cama_r1', 'cycl_SINE_sine', 'fibo_r2', 'cama_s1', 'sti_TOS_STDEVALL_U_3', 'vola_HWL', 'cama_r2', 'trad_s1', 'trad_r2', 'trad_r1', 'trad_pp', 'clas_s1', 'clas_r1', 'clas_pp', 'fibo_s1', 'cama_s3', 'cama_s2', 'ti_ease_of_movement_14', 'cdl_MATCHINGLOW', 'mcrh_SMA_5_SMA_20', 'fibo_s2', 'mcrh_KAMA_20_SMA_50', 'mcrh_DEMA_10_TRIMA_20', 'mcrh_EMA_20_EMA_100', 'mtum_FISHERT_9_1', 'HSI_Close', 'mcrh_EMA_20_KAMA_100', 'mtum_CG_10', 'mcrh_EMA_5_SMA_20', 'mcrh_KAMA_10_DEMA_20', 'mtum_AR_26', 'ma_WMA_20', 'mcrh_KAMA_5_TRIMA_10', 'mcrh_SMA_10_DEMA_100', 'mtum_ADX', 'mcrh_WMA_50_DEMA_100', 'mcrh_TEMA_10_EMA_20', 'mcrh_T3_5_WMA_10', 'mcrh_T3_50_DEMA_100', 'mcrh_T3_20_T3_50', 'mcrh_DEMA_10_DEMA_20', 'mtum_MACD_fix_list', 'olap_VMAP', 'ichi_senkou_b', 'olap_SSF_10_2', 'olap_PWMA_10', 'olap_MIDPRICE', 'olap_MIDPOINT', 'ichi_isin_cloud', 'mcrh_T3_20_EMA_50', 'ichi_senkou_a', 'mtum_td_seq', 'ma_DEMA_20', 'ma_TRIMA_50', 'ma_EMA_50', 'mtum_QQE_14_5_4236_RSIMA', 'ma_SMA_5', 'ma_T3_5', 'ma_TEMA_20', 'mtum_MINUS_DI', 'ma_TRIMA_5', 'mtum_MACD_list', 'wood_pp']
root - [INFO]{CONS_1} - check_columns_selections_Raise() - cols model columns: Index(['Date', 'buy_sell_point', 'volu_NVI_1', 'mtum_DMP_14', 'olap_BBAND_dif',
       'volu_PVOL', 'Volume', 'volu_Chaikin_ADOSC', 'ti_chaikin_10_3',
       'cdl_3WHITESOLDIERS',
       ...
       'ma_TRIMA_50', 'ma_EMA_50', 'mtum_QQE_14_5_4236_RSIMA', 'ma_SMA_5',
       'ma_T3_5', 'ma_TEMA_20', 'mtum_MINUS_DI', 'ma_TRIMA_5',
       'mtum_MACD_list', 'wood_pp'],
      dtype='object', length=173)
root - [INFO]{CONS_1} - check_columns_selections_Raise() - Columns required by the Model: Models/TF_multi/TFm_2318.HK_neg_low1_mult_lstm.h5__TEST_29.3%_accuracy_96.35%__loss_0.10__epochs_14[90].csv are: Date, buy_sell_point, volu_NVI_1, mtum_DMP_14, olap_BBAND_dif, volu_PVOL, Volume, volu_Chaikin_ADOSC, ti_chaikin_10_3, cdl_3WHITESOLDIERS, mtum_PLUS_DM, mtum_STCstoch_10_12_26_05, mtum_td_seq_sig, ti_coppock_14_11_10, sti_ENTP_10, mtum_MACD, mcrh_DEMA_50_EMA_100, mtum_STCmacd_10_12_26_05, mtum_BR_26, mtum_PVOh_12_26_9, mtum_PVO_12_26_9, sti_LINEARREG_SLOPE, mtum_MACD_signal, mtum_MACD_fix, cdl_LONGLEGGEDDOJI, cdl_DOJI, cdl_RICKSHAWMAN, mtum_MACD_fix_signal, mtum_MACD_ext_list, mtum_PPO, mtum_MACD_ext, mtum_PSL_12, mtum_BULLP_13, mtum_INERTIA_20_14, mtum_PVOs_12_26_9, mtum_STC_10_12_26_05, mtum_APO, mtum_AO_5_34, sti_BETA, volu_EFI_13, vola_ATR, ti_force_index_13, tend_lh, sti_TOS_STDEVALL_L_3, sti_LINEARREG_ANGLE, sti_TOS_STDEVALL_U_1, perf_ha, tend_renko_ATR, mtum_BEARP_13, mtum_BIAS_SMA_26, mtum_ROCR100, vola_NATR, mtum_ROCR, ti_vortex_neg_14, mtum_ROCP, ti_donchian_upper_20, mtum_ROC, sti_TOS_STDEVALL_LR, mtum_MACD_ext_signal, tend_VHF_28, tend_LDECAY_5, olap_JMA_7_0, mtum_MFI, mtum_MOM, mtum_PLUS_DI, perf_CUMPCTRET_1, Close, mtum_DX, ma_EMA_5, High, Low, ichi_kijun_sen, ma_TEMA_10, cycl_PHASOR_inph, ma_DEMA_10, ma_DEMA_5, ma_KAMA_50, mcrh_KAMA_5_DEMA_20, ma_KAMA_20, ma_TEMA_5, sti_TSF, ma_KAMA_5, olap_BBAND_UPPER, ma_KAMA_10, sti_TOS_STDEVALL_U_2, ma_WMA_5, ma_EMA_10, sti_TOS_STDEVALL_L_2, sti_TOS_STDEVALL_L_1, sti_LINEARREG, ma_WMA_10, perf_CUMLOGRET_1, cama_r3, mtum_FISHERTs_9_1, mtum_AROON_down, ti_hma_20, ti_vortex_pos_14, mtum_AROONOSC, ti_konk_rest, HSI_SMA_100, fibo_pp, fibo_r1, demark_s1, cama_pp, vola_KCBe_20_2, sti_CORREL, demark_r1, vola_UI_14, vola_RVI_14, demark_pp, cama_r1, cycl_SINE_sine, fibo_r2, cama_s1, sti_TOS_STDEVALL_U_3, vola_HWL, cama_r2, trad_s1, trad_r2, trad_r1, trad_pp, clas_s1, clas_r1, clas_pp, fibo_s1, cama_s3, cama_s2, ti_ease_of_movement_14, cdl_MATCHINGLOW, mcrh_SMA_5_SMA_20, fibo_s2, mcrh_KAMA_20_SMA_50, mcrh_DEMA_10_TRIMA_20, mcrh_EMA_20_EMA_100, mtum_FISHERT_9_1, HSI_Close, mcrh_EMA_20_KAMA_100, mtum_CG_10, mcrh_EMA_5_SMA_20, mcrh_KAMA_10_DEMA_20, mtum_AR_26, ma_WMA_20, mcrh_KAMA_5_TRIMA_10, mcrh_SMA_10_DEMA_100, mtum_ADX, mcrh_WMA_50_DEMA_100, mcrh_TEMA_10_EMA_20, mcrh_T3_5_WMA_10, mcrh_T3_50_DEMA_100, mcrh_T3_20_T3_50, mcrh_DEMA_10_DEMA_20, mtum_MACD_fix_list, olap_VMAP, ichi_senkou_b, olap_SSF_10_2, olap_PWMA_10, olap_MIDPRICE, olap_MIDPOINT, ichi_isin_cloud, mcrh_T3_20_EMA_50, ichi_senkou_a, mtum_td_seq, ma_DEMA_20, ma_TRIMA_50, ma_EMA_50, mtum_QQE_14_5_4236_RSIMA, ma_SMA_5, ma_T3_5, ma_TEMA_20, mtum_MINUS_DI, ma_TRIMA_5, mtum_MACD_list, wood_pp
root - [INFO]{CONS_1} - predict_Multi_models() -  Load model Type MULTI TF:   Path:  Models/TF_multi/[94mTFm_2318.HK_neg_low1_mult_lstm[0m.h5   Shape df to predict: (-1, 10, 172)
root - [DEBUG]{CONS_1} - scaler_min_max_array() - Scaler will be Loaded Path: Models/TF_multi/Scalers/2318.HK_neg_low1_.scal
root - [INFO]{CONS_1} - create_df_eval_prediction() - Columns selected for model: ['volu_NVI_1', 'mtum_DMP_14', 'olap_BBAND_dif', 'volu_PVOL', 'Volume', 'volu_Chaikin_ADOSC', 'ti_chaikin_10_3', 'cdl_3WHITESOLDIERS', 'mtum_PLUS_DM', 'mtum_STCstoch_10_12_26_05', 'mtum_td_seq_sig', 'ti_coppock_14_11_10', 'sti_ENTP_10', 'mtum_MACD', 'mcrh_DEMA_50_EMA_100', 'mtum_STCmacd_10_12_26_05', 'mtum_BR_26', 'mtum_PVOh_12_26_9', 'mtum_PVO_12_26_9', 'sti_LINEARREG_SLOPE', 'mtum_MACD_signal', 'mtum_MACD_fix', 'cdl_LONGLEGGEDDOJI', 'cdl_DOJI', 'cdl_RICKSHAWMAN', 'mtum_MACD_fix_signal', 'mtum_MACD_ext_list', 'mtum_PPO', 'mtum_MACD_ext', 'mtum_PSL_12', 'mtum_BULLP_13', 'mtum_INERTIA_20_14', 'mtum_PVOs_12_26_9', 'mtum_STC_10_12_26_05', 'mtum_APO', 'mtum_AO_5_34', 'sti_BETA', 'volu_EFI_13', 'vola_ATR', 'ti_force_index_13', 'tend_lh', 'sti_TOS_STDEVALL_L_3', 'sti_LINEARREG_ANGLE', 'sti_TOS_STDEVALL_U_1', 'perf_ha', 'tend_renko_ATR', 'mtum_BEARP_13', 'mtum_BIAS_SMA_26', 'mtum_ROCR100', 'vola_NATR', 'mtum_ROCR', 'ti_vortex_neg_14', 'mtum_ROCP', 'ti_donchian_upper_20', 'mtum_ROC', 'sti_TOS_STDEVALL_LR', 'mtum_MACD_ext_signal', 'tend_VHF_28', 'tend_LDECAY_5', 'olap_JMA_7_0', 'mtum_MFI', 'mtum_MOM', 'mtum_PLUS_DI', 'perf_CUMPCTRET_1', 'Close', 'mtum_DX', 'ma_EMA_5', 'High', 'Low', 'ichi_kijun_sen', 'ma_TEMA_10', 'cycl_PHASOR_inph', 'ma_DEMA_10', 'ma_DEMA_5', 'ma_KAMA_50', 'mcrh_KAMA_5_DEMA_20', 'ma_KAMA_20', 'ma_TEMA_5', 'sti_TSF', 'ma_KAMA_5', 'olap_BBAND_UPPER', 'ma_KAMA_10', 'sti_TOS_STDEVALL_U_2', 'ma_WMA_5', 'ma_EMA_10', 'sti_TOS_STDEVALL_L_2', 'sti_TOS_STDEVALL_L_1', 'sti_LINEARREG', 'ma_WMA_10', 'perf_CUMLOGRET_1', 'cama_r3', 'mtum_FISHERTs_9_1', 'mtum_AROON_down', 'ti_hma_20', 'ti_vortex_pos_14', 'mtum_AROONOSC', 'ti_konk_rest', 'HSI_SMA_100', 'fibo_pp', 'fibo_r1', 'demark_s1', 'cama_pp', 'vola_KCBe_20_2', 'sti_CORREL', 'demark_r1', 'vola_UI_14', 'vola_RVI_14', 'demark_pp', 'cama_r1', 'cycl_SINE_sine', 'fibo_r2', 'cama_s1', 'sti_TOS_STDEVALL_U_3', 'vola_HWL', 'cama_r2', 'trad_s1', 'trad_r2', 'trad_r1', 'trad_pp', 'clas_s1', 'clas_r1', 'clas_pp', 'fibo_s1', 'cama_s3', 'cama_s2', 'ti_ease_of_movement_14', 'cdl_MATCHINGLOW', 'mcrh_SMA_5_SMA_20', 'fibo_s2', 'mcrh_KAMA_20_SMA_50', 'mcrh_DEMA_10_TRIMA_20', 'mcrh_EMA_20_EMA_100', 'mtum_FISHERT_9_1', 'HSI_Close', 'mcrh_EMA_20_KAMA_100', 'mtum_CG_10', 'mcrh_EMA_5_SMA_20', 'mcrh_KAMA_10_DEMA_20', 'mtum_AR_26', 'ma_WMA_20', 'mcrh_KAMA_5_TRIMA_10', 'mcrh_SMA_10_DEMA_100', 'mtum_ADX', 'mcrh_WMA_50_DEMA_100', 'mcrh_TEMA_10_EMA_20', 'mcrh_T3_5_WMA_10', 'mcrh_T3_50_DEMA_100', 'mcrh_T3_20_T3_50', 'mcrh_DEMA_10_DEMA_20', 'mtum_MACD_fix_list', 'olap_VMAP', 'ichi_senkou_b', 'olap_SSF_10_2', 'olap_PWMA_10', 'olap_MIDPRICE', 'olap_MIDPOINT', 'ichi_isin_cloud', 'mcrh_T3_20_EMA_50', 'ichi_senkou_a', 'mtum_td_seq', 'ma_DEMA_20', 'ma_TRIMA_50', 'ma_EMA_50', 'mtum_QQE_14_5_4236_RSIMA', 'ma_SMA_5', 'ma_T3_5', 'ma_TEMA_20', 'mtum_MINUS_DI', 'ma_TRIMA_5', 'mtum_MACD_list', 'wood_pp']col_select: low1 pos_neg: neg model_name: TFm_2318.HK_neg_low1__mult_gru
root - [INFO]{CONS_1} - create_df_eval_prediction() - Load model NameModel: TFm_2318.HK_neg_low1__mult_gru Neg/Pos: neg df.shape: (64, 175) Columns: low1
root - [INFO]{CONS_1} - create_df_eval_prediction() - df_in_pure record:
   Close   Volume                 Date  buy_sell_point  volu_NVI_1  mtum_DMP_14  olap_BBAND_dif    volu_PVOL   Volume  volu_Chaikin_ADOSC  ti_chaikin_10_3  cdl_3WHITESOLDIERS  mtum_PLUS_DM  mtum_STCstoch_10_12_26_05  mtum_td_seq_sig  ti_coppock_14_11_10  sti_ENTP_10  mtum_MACD  mcrh_DEMA_50_EMA_100  mtum_STCmacd_10_12_26_05  mtum_BR_26  mtum_PVOh_12_26_9  mtum_PVO_12_26_9  sti_LINEARREG_SLOPE  mtum_MACD_signal  mtum_MACD_fix  cdl_LONGLEGGEDDOJI  cdl_DOJI  cdl_RICKSHAWMAN  mtum_MACD_fix_signal  mtum_MACD_ext_list  mtum_PPO  mtum_MACD_ext  mtum_PSL_12  mtum_BULLP_13  mtum_INERTIA_20_14  mtum_PVOs_12_26_9  mtum_STC_10_12_26_05  mtum_APO  mtum_AO_5_34  sti_BETA    volu_EFI_13  vola_ATR  ti_force_index_13  tend_lh  sti_TOS_STDEVALL_L_3  sti_LINEARREG_ANGLE  sti_TOS_STDEVALL_U_1  perf_ha  tend_renko_ATR  mtum_BEARP_13  mtum_BIAS_SMA_26  mtum_ROCR100  vola_NATR  mtum_ROCR  ti_vortex_neg_14  mtum_ROCP  ti_donchian_upper_20  mtum_ROC  sti_TOS_STDEVALL_LR  mtum_MACD_ext_signal  tend_VHF_28  tend_LDECAY_5  olap_JMA_7_0   mtum_MFI  mtum_MOM  mtum_PLUS_DI  perf_CUMPCTRET_1  Close    mtum_DX   ma_EMA_5  High   Low  ichi_kijun_sen  ma_TEMA_10  cycl_PHASOR_inph  ma_DEMA_10  ma_DEMA_5  ma_KAMA_50  mcrh_KAMA_5_DEMA_20  ma_KAMA_20  ma_TEMA_5    sti_TSF  ma_KAMA_5  olap_BBAND_UPPER  ma_KAMA_10  sti_TOS_STDEVALL_U_2   ma_WMA_5  ma_EMA_10  sti_TOS_STDEVALL_L_2  sti_TOS_STDEVALL_L_1  sti_LINEARREG  ma_WMA_10  perf_CUMLOGRET_1  cama_r3  mtum_FISHERTs_9_1  mtum_AROON_down  ti_hma_20  ti_vortex_pos_14  mtum_AROONOSC  ti_konk_rest   HSI_SMA_100    fibo_pp    fibo_r1  demark_s1    cama_pp  vola_KCBe_20_2  sti_CORREL  demark_r1  vola_UI_14  vola_RVI_14  demark_pp    cama_r1  cycl_SINE_sine    fibo_r2    cama_s1  sti_TOS_STDEVALL_U_3   vola_HWL    cama_r2    trad_s1    trad_r2    trad_r1    trad_pp    clas_s1    clas_r1    clas_pp    fibo_s1  cama_s3    cama_s2  ti_ease_of_movement_14  cdl_MATCHINGLOW  mcrh_SMA_5_SMA_20    fibo_s2  mcrh_KAMA_20_SMA_50  mcrh_DEMA_10_TRIMA_20  mcrh_EMA_20_EMA_100  mtum_FISHERT_9_1     HSI_Close  mcrh_EMA_20_KAMA_100  mtum_CG_10  mcrh_EMA_5_SMA_20  mcrh_KAMA_10_DEMA_20  mtum_AR_26  ma_WMA_20  mcrh_KAMA_5_TRIMA_10  mcrh_SMA_10_DEMA_100   mtum_ADX  mcrh_WMA_50_DEMA_100  mcrh_TEMA_10_EMA_20  mcrh_T3_5_WMA_10  mcrh_T3_50_DEMA_100  mcrh_T3_20_T3_50  mcrh_DEMA_10_DEMA_20  mtum_MACD_fix_list  olap_VMAP  ichi_senkou_b  olap_SSF_10_2  olap_PWMA_10  olap_MIDPRICE  olap_MIDPOINT  ichi_isin_cloud  mcrh_T3_20_EMA_50  ichi_senkou_a  mtum_td_seq  ma_DEMA_20  ma_TRIMA_50  ma_EMA_50  mtum_QQE_14_5_4236_RSIMA  ma_SMA_5    ma_T3_5  ma_TEMA_20  mtum_MINUS_DI  ma_TRIMA_5  mtum_MACD_list  wood_pp
0  53.40  1290000  2025-08-04 15:00:00               0  997.137153     0.967528        1.068223  68886000.00  1290000       722384.642674    722366.421977                   0      0.967528                        0.0               -4            -0.624855     3.323822  -0.093047                     0                 -0.093006   69.411765          -1.720468          7.304018             0.031099         -0.127168      -0.089477                   0         0                0             -0.121706            0.055449 -0.420600      -0.225321    33.333333       0.250324           35.444732           9.024486                   0.0 -0.225321     -0.096912  0.312228  184961.564887  0.295964      184981.886808     53.8             52.160743             1.781262             54.217428  53.5375        0.276923      -0.049676         -0.003195    100.564972   0.554240   1.005650          0.746988   0.005650                  54.1  0.564972            53.703257             -0.280769     0.298701          53.40     53.531028  65.144536      0.30     23.400561         -0.022873  53.40  25.743167  53.453569  53.7  53.4           53.55   53.494684          0.211937   53.433920  53.463729   53.244406                    1   53.585778  53.438511  53.565385  53.362676         53.991611   53.318997             54.731600  53.486667  53.441367             52.674914             53.189086      53.534286  53.450909         -0.023138  53.4775           0.521584        35.714286  53.463771          0.819277      35.714286           NaN  24749.095195  53.416667  53.454867      53.35  53.416667       53.493556    0.922556      53.45    1.287714    30.978717     53.400  53.459167             NaN  53.478467  53.440833             55.245771  52.903921  53.468333  53.383333  53.516667  53.483333  53.416667  53.383333  53.483333  53.416667  53.378467  53.4225  53.431667                0.017106                0                  1  53.354867                    0                      0                    0          0.493022  24686.509766                     0   -5.493210                  0                     0   73.846154  53.400714                    -1                     0  20.189534                     0                    0                 0                    0                 0                     0            0.032229  53.828640            NaN      53.509718     53.480469           53.5         53.425                0                  0         54.025            4   53.356395    53.769385  53.699337                 46.220409     53.55  53.500534   53.383891      13.819053   53.533333        0.034121   53.525
1  53.65  1576397  2025-08-04 14:45:00               0  997.137153     0.998418        0.964572  84573699.05  1576397       269198.338502    269183.430659                   0      0.998418                        0.0                1            -0.067664     3.325475  -0.069859                     0                 -0.069824   85.897436          -2.770069          5.561899             0.037473         -0.115706      -0.067533                 100       100                0             -0.110871            0.095976 -0.332711      -0.178205    41.666667       0.321706           37.392644           8.331968                   0.0 -0.178205     -0.098824  0.282750  214838.377046  0.303395      214855.795835     53.8             52.159784             2.146014             54.216470  53.6750        0.278846       0.121706          0.001652    100.845865   0.565508   1.008459          0.678571   0.008459                  54.0  0.845865            53.702299             -0.274181     0.291139          53.65     53.526787  68.030650      0.45     23.551476         -0.018298  53.65  30.599812  53.519046  53.8  53.6           53.55   53.580460          0.527373   53.504244  53.569470   53.249236                   -1   53.586965  53.579502  53.641758  53.374572         53.922286   53.334924             54.730641  53.520000  53.479300             52.673956             53.188127      53.604286  53.499091         -0.018468  53.4825           0.493022        28.571429  53.519853          0.892857      35.714286           NaN  24749.095195  53.500000  53.614600      53.25  53.500000       53.508456    0.922433      53.55    1.201798    39.704520     53.475  53.427500         0.80146  53.685400  53.372500             55.244813  52.964747  53.455000  53.300000  53.800000  53.600000  53.500000  53.300000  53.600000  53.500000  53.385400  53.3175  53.345000                0.062513                0                  0  53.314600                    0                      0                    0          0.681549  24740.099609                     0   -5.492888                  1                     0   79.687500  53.419048                     0                     0  20.933125                     0                    0                 0                    0                 0                     0            0.043338  53.826401            NaN      53.527808     53.543359           53.5         53.425                0                  0         54.025            1   53.397838    53.756692  53.697402                 48.282360     53.52  53.523048   53.446731      12.515155   53.488889        0.045848   53.600
root - [INFO]{CONS_1} - create_df_eval_prediction() - df_eval:
                  Date  buy_sell_point  Close  Volume
0  2025-08-04 11:45:00               0  53.05  827000
1  2025-08-04 11:30:00               0  53.05  835200
root - [INFO]{CONS_1} - create_df_eval_prediction() - df_S record:
           Date  buy_sell_point  volu_NVI_1  mtum_DMP_14  olap_BBAND_dif    volu_PVOL   Volume  volu_Chaikin_ADOSC  ti_chaikin_10_3  cdl_3WHITESOLDIERS  mtum_PLUS_DM  mtum_STCstoch_10_12_26_05  mtum_td_seq_sig  ti_coppock_14_11_10  sti_ENTP_10  mtum_MACD  mcrh_DEMA_50_EMA_100  mtum_STCmacd_10_12_26_05  mtum_BR_26  mtum_PVOh_12_26_9  mtum_PVO_12_26_9  sti_LINEARREG_SLOPE  mtum_MACD_signal  mtum_MACD_fix  cdl_LONGLEGGEDDOJI  cdl_DOJI  cdl_RICKSHAWMAN  mtum_MACD_fix_signal  mtum_MACD_ext_list  mtum_PPO  mtum_MACD_ext  mtum_PSL_12  mtum_BULLP_13  mtum_INERTIA_20_14  mtum_PVOs_12_26_9  mtum_STC_10_12_26_05  mtum_APO  mtum_AO_5_34  sti_BETA    volu_EFI_13  vola_ATR  ti_force_index_13  tend_lh  sti_TOS_STDEVALL_L_3  sti_LINEARREG_ANGLE  sti_TOS_STDEVALL_U_1  perf_ha  tend_renko_ATR  mtum_BEARP_13  mtum_BIAS_SMA_26  mtum_ROCR100  vola_NATR  mtum_ROCR  ti_vortex_neg_14  mtum_ROCP  ti_donchian_upper_20  mtum_ROC  sti_TOS_STDEVALL_LR  mtum_MACD_ext_signal  tend_VHF_28  tend_LDECAY_5  olap_JMA_7_0   mtum_MFI  mtum_MOM  mtum_PLUS_DI  perf_CUMPCTRET_1  Close    mtum_DX   ma_EMA_5  High   Low  ichi_kijun_sen  ma_TEMA_10  cycl_PHASOR_inph  ma_DEMA_10  ma_DEMA_5  ma_KAMA_50  mcrh_KAMA_5_DEMA_20  ma_KAMA_20  ma_TEMA_5    sti_TSF  ma_KAMA_5  olap_BBAND_UPPER  ma_KAMA_10  sti_TOS_STDEVALL_U_2   ma_WMA_5  ma_EMA_10  sti_TOS_STDEVALL_L_2  sti_TOS_STDEVALL_L_1  sti_LINEARREG  ma_WMA_10  perf_CUMLOGRET_1  cama_r3  mtum_FISHERTs_9_1  mtum_AROON_down  ti_hma_20  ti_vortex_pos_14  mtum_AROONOSC  ti_konk_rest   HSI_SMA_100    fibo_pp    fibo_r1  demark_s1    cama_pp  vola_KCBe_20_2  sti_CORREL  demark_r1  vola_UI_14  vola_RVI_14  demark_pp    cama_r1  cycl_SINE_sine    fibo_r2    cama_s1  sti_TOS_STDEVALL_U_3   vola_HWL    cama_r2    trad_s1    trad_r2    trad_r1    trad_pp    clas_s1    clas_r1    clas_pp    fibo_s1  cama_s3    cama_s2  ti_ease_of_movement_14  cdl_MATCHINGLOW  mcrh_SMA_5_SMA_20    fibo_s2  mcrh_KAMA_20_SMA_50  mcrh_DEMA_10_TRIMA_20  mcrh_EMA_20_EMA_100  mtum_FISHERT_9_1     HSI_Close  mcrh_EMA_20_KAMA_100  mtum_CG_10  mcrh_EMA_5_SMA_20  mcrh_KAMA_10_DEMA_20  mtum_AR_26  ma_WMA_20  mcrh_KAMA_5_TRIMA_10  mcrh_SMA_10_DEMA_100   mtum_ADX  mcrh_WMA_50_DEMA_100  mcrh_TEMA_10_EMA_20  mcrh_T3_5_WMA_10  mcrh_T3_50_DEMA_100  mcrh_T3_20_T3_50  mcrh_DEMA_10_DEMA_20  mtum_MACD_fix_list  olap_VMAP  ichi_senkou_b  olap_SSF_10_2  olap_PWMA_10  olap_MIDPRICE  olap_MIDPOINT  ichi_isin_cloud  mcrh_T3_20_EMA_50  ichi_senkou_a  mtum_td_seq  ma_DEMA_20  ma_TRIMA_50  ma_EMA_50  mtum_QQE_14_5_4236_RSIMA  ma_SMA_5    ma_T3_5  ma_TEMA_20  mtum_MINUS_DI  ma_TRIMA_5  mtum_MACD_list  wood_pp
0  1.754320e+09               0  997.137153     0.967528        1.068223  68886000.00  1290000       722384.642674    722366.421977                   0      0.967528                        0.0               -4            -0.624855     3.323822  -0.093047                     0                 -0.093006   69.411765          -1.720468          7.304018             0.031099         -0.127168      -0.089477                   0         0                0             -0.121706            0.055449 -0.420600      -0.225321    33.333333       0.250324           35.444732           9.024486                   0.0 -0.225321     -0.096912  0.312228  184961.564887  0.295964      184981.886808     53.8             52.160743             1.781262             54.217428  53.5375        0.276923      -0.049676         -0.003195    100.564972   0.554240   1.005650          0.746988   0.005650                  54.1  0.564972            53.703257             -0.280769     0.298701          53.40     53.531028  65.144536      0.30     23.400561         -0.022873  53.40  25.743167  53.453569  53.7  53.4           53.55   53.494684          0.211937   53.433920  53.463729   53.244406                    1   53.585778  53.438511  53.565385  53.362676         53.991611   53.318997             54.731600  53.486667  53.441367             52.674914             53.189086      53.534286  53.450909         -0.023138  53.4775           0.521584        35.714286  53.463771          0.819277      35.714286           NaN  24749.095195  53.416667  53.454867      53.35  53.416667       53.493556    0.922556      53.45    1.287714    30.978717     53.400  53.459167             NaN  53.478467  53.440833             55.245771  52.903921  53.468333  53.383333  53.516667  53.483333  53.416667  53.383333  53.483333  53.416667  53.378467  53.4225  53.431667                0.017106                0                  1  53.354867                    0                      0                    0          0.493022  24686.509766                     0   -5.493210                  0                     0   73.846154  53.400714                    -1                     0  20.189534                     0                    0                 0                    0                 0                     0            0.032229  53.828640            NaN      53.509718     53.480469           53.5         53.425                0                  0         54.025            4   53.356395    53.769385  53.699337                 46.220409     53.55  53.500534   53.383891      13.819053   53.533333        0.034121   53.525
1  1.754319e+09               0  997.137153     0.998418        0.964572  84573699.05  1576397       269198.338502    269183.430659                   0      0.998418                        0.0                1            -0.067664     3.325475  -0.069859                     0                 -0.069824   85.897436          -2.770069          5.561899             0.037473         -0.115706      -0.067533                 100       100                0             -0.110871            0.095976 -0.332711      -0.178205    41.666667       0.321706           37.392644           8.331968                   0.0 -0.178205     -0.098824  0.282750  214838.377046  0.303395      214855.795835     53.8             52.159784             2.146014             54.216470  53.6750        0.278846       0.121706          0.001652    100.845865   0.565508   1.008459          0.678571   0.008459                  54.0  0.845865            53.702299             -0.274181     0.291139          53.65     53.526787  68.030650      0.45     23.551476         -0.018298  53.65  30.599812  53.519046  53.8  53.6           53.55   53.580460          0.527373   53.504244  53.569470   53.249236                   -1   53.586965  53.579502  53.641758  53.374572         53.922286   53.334924             54.730641  53.520000  53.479300             52.673956             53.188127      53.604286  53.499091         -0.018468  53.4825           0.493022        28.571429  53.519853          0.892857      35.714286           NaN  24749.095195  53.500000  53.614600      53.25  53.500000       53.508456    0.922433      53.55    1.201798    39.704520     53.475  53.427500         0.80146  53.685400  53.372500             55.244813  52.964747  53.455000  53.300000  53.800000  53.600000  53.500000  53.300000  53.600000  53.500000  53.385400  53.3175  53.345000                0.062513                0                  0  53.314600                    0                      0                    0          0.681549  24740.099609                     0   -5.492888                  1                     0   79.687500  53.419048                     0                     0  20.933125                     0                    0                 0                    0                 0                     0            0.043338  53.826401            NaN      53.527808     53.543359           53.5         53.425                0                  0         54.025            1   53.397838    53.756692  53.697402                 48.282360     53.52  53.523048   53.446731      12.515155   53.488889        0.045848   53.600
root - [INFO]{CONS_1} - create_df_eval_prediction() - Index(['Date', 'buy_sell_point', 'volu_NVI_1', 'mtum_DMP_14', 'olap_BBAND_dif',
       'volu_PVOL', 'Volume', 'volu_Chaikin_ADOSC', 'ti_chaikin_10_3',
       'cdl_3WHITESOLDIERS',
       ...
       'ma_TRIMA_50', 'ma_EMA_50', 'mtum_QQE_14_5_4236_RSIMA', 'ma_SMA_5',
       'ma_T3_5', 'ma_TEMA_20', 'mtum_MINUS_DI', 'ma_TRIMA_5',
       'mtum_MACD_list', 'wood_pp'],
      dtype='object', length=173)
root - [INFO]{CONS_1} - check_columns_selections_Raise() - Checking columns selected for prediction: loss	accuracy	val_loss	val_accuracy
0.706	0.622	0.39	0.945
0.618	0.653	0.461	0.816
0.474	0.765	0.218	0.929
0.425	0.799	0.147	0.951
0.393	0.825	0.58	0.695
0.332	0.845	0.696	0.659
0.316	0.859	0.225	0.907
0.278	0.876	0.221	0.907
0.279	0.884	0.3	0.857
0.268	0.89	0.29	0.887
0.22	0.904	0.921	0.651
0.211	0.906	0.221	0.898
0.195	0.918	0.457	0.794
0.204	0.921	0.282	0.896
0.16	0.933	0.257	0.893
0.18	0.939	0.324	0.868
0.142	0.941	0.278	0.898
0.171	0.935	0.246	0.898
0.146	0.945	0.214	0.929

Columns TFm_2318.HK_neg_low1__mult_gru.h5:
Date, buy_sell_point, volu_NVI_1, mtum_DMP_14, olap_BBAND_dif, volu_PVOL, Volume, volu_Chaikin_ADOSC, ti_chaikin_10_3, cdl_3WHITESOLDIERS, mtum_PLUS_DM, mtum_STCstoch_10_12_26_05, mtum_td_seq_sig, ti_coppock_14_11_10, sti_ENTP_10, mtum_MACD, mcrh_DEMA_50_EMA_100, mtum_STCmacd_10_12_26_05, mtum_BR_26, mtum_PVOh_12_26_9, mtum_PVO_12_26_9, sti_LINEARREG_SLOPE, mtum_MACD_signal, mtum_MACD_fix, cdl_LONGLEGGEDDOJI, cdl_DOJI, cdl_RICKSHAWMAN, mtum_MACD_fix_signal, mtum_MACD_ext_list, mtum_PPO, mtum_MACD_ext, mtum_PSL_12, mtum_BULLP_13, mtum_INERTIA_20_14, mtum_PVOs_12_26_9, mtum_STC_10_12_26_05, mtum_APO, mtum_AO_5_34, sti_BETA, volu_EFI_13, vola_ATR, ti_force_index_13, tend_lh, sti_TOS_STDEVALL_L_3, sti_LINEARREG_ANGLE, sti_TOS_STDEVALL_U_1, perf_ha, tend_renko_ATR, mtum_BEARP_13, mtum_BIAS_SMA_26, mtum_ROCR100, vola_NATR, mtum_ROCR, ti_vortex_neg_14, mtum_ROCP, ti_donchian_upper_20, mtum_ROC, sti_TOS_STDEVALL_LR, mtum_MACD_ext_signal, tend_VHF_28, tend_LDECAY_5, olap_JMA_7_0, mtum_MFI, mtum_MOM, mtum_PLUS_DI, perf_CUMPCTRET_1, Close, mtum_DX, ma_EMA_5, High, Low, ichi_kijun_sen, ma_TEMA_10, cycl_PHASOR_inph, ma_DEMA_10, ma_DEMA_5, ma_KAMA_50, mcrh_KAMA_5_DEMA_20, ma_KAMA_20, ma_TEMA_5, sti_TSF, ma_KAMA_5, olap_BBAND_UPPER, ma_KAMA_10, sti_TOS_STDEVALL_U_2, ma_WMA_5, ma_EMA_10, sti_TOS_STDEVALL_L_2, sti_TOS_STDEVALL_L_1, sti_LINEARREG, ma_WMA_10, perf_CUMLOGRET_1, cama_r3, mtum_FISHERTs_9_1, mtum_AROON_down, ti_hma_20, ti_vortex_pos_14, mtum_AROONOSC, ti_konk_rest, HSI_SMA_100, fibo_pp, fibo_r1, demark_s1, cama_pp, vola_KCBe_20_2, sti_CORREL, demark_r1, vola_UI_14, vola_RVI_14, demark_pp, cama_r1, cycl_SINE_sine, fibo_r2, cama_s1, sti_TOS_STDEVALL_U_3, vola_HWL, cama_r2, trad_s1, trad_r2, trad_r1, trad_pp, clas_s1, clas_r1, clas_pp, fibo_s1, cama_s3, cama_s2, ti_ease_of_movement_14, cdl_MATCHINGLOW, mcrh_SMA_5_SMA_20, fibo_s2, mcrh_KAMA_20_SMA_50, mcrh_DEMA_10_TRIMA_20, mcrh_EMA_20_EMA_100, mtum_FISHERT_9_1, HSI_Close, mcrh_EMA_20_KAMA_100, mtum_CG_10, mcrh_EMA_5_SMA_20, mcrh_KAMA_10_DEMA_20, mtum_AR_26, ma_WMA_20, mcrh_KAMA_5_TRIMA_10, mcrh_SMA_10_DEMA_100, mtum_ADX, mcrh_WMA_50_DEMA_100, mcrh_TEMA_10_EMA_20, mcrh_T3_5_WMA_10, mcrh_T3_50_DEMA_100, mcrh_T3_20_T3_50, mcrh_DEMA_10_DEMA_20, mtum_MACD_fix_list, olap_VMAP, ichi_senkou_b, olap_SSF_10_2, olap_PWMA_10, olap_MIDPRICE, olap_MIDPOINT, ichi_isin_cloud, mcrh_T3_20_EMA_50, ichi_senkou_a, mtum_td_seq, ma_DEMA_20, ma_TRIMA_50, ma_EMA_50, mtum_QQE_14_5_4236_RSIMA, ma_SMA_5, ma_T3_5, ma_TEMA_20, mtum_MINUS_DI, ma_TRIMA_5, mtum_MACD_list, wood_pp
root - [INFO]{CONS_1} - check_columns_selections_Raise() - match columns: ['Date', 'buy_sell_point', 'volu_NVI_1', 'mtum_DMP_14', 'olap_BBAND_dif', 'volu_PVOL', 'Volume', 'volu_Chaikin_ADOSC', 'ti_chaikin_10_3', 'cdl_3WHITESOLDIERS', 'mtum_PLUS_DM', 'mtum_STCstoch_10_12_26_05', 'mtum_td_seq_sig', 'ti_coppock_14_11_10', 'sti_ENTP_10', 'mtum_MACD', 'mcrh_DEMA_50_EMA_100', 'mtum_STCmacd_10_12_26_05', 'mtum_BR_26', 'mtum_PVOh_12_26_9', 'mtum_PVO_12_26_9', 'sti_LINEARREG_SLOPE', 'mtum_MACD_signal', 'mtum_MACD_fix', 'cdl_LONGLEGGEDDOJI', 'cdl_DOJI', 'cdl_RICKSHAWMAN', 'mtum_MACD_fix_signal', 'mtum_MACD_ext_list', 'mtum_PPO', 'mtum_MACD_ext', 'mtum_PSL_12', 'mtum_BULLP_13', 'mtum_INERTIA_20_14', 'mtum_PVOs_12_26_9', 'mtum_STC_10_12_26_05', 'mtum_APO', 'mtum_AO_5_34', 'sti_BETA', 'volu_EFI_13', 'vola_ATR', 'ti_force_index_13', 'tend_lh', 'sti_TOS_STDEVALL_L_3', 'sti_LINEARREG_ANGLE', 'sti_TOS_STDEVALL_U_1', 'perf_ha', 'tend_renko_ATR', 'mtum_BEARP_13', 'mtum_BIAS_SMA_26', 'mtum_ROCR100', 'vola_NATR', 'mtum_ROCR', 'ti_vortex_neg_14', 'mtum_ROCP', 'ti_donchian_upper_20', 'mtum_ROC', 'sti_TOS_STDEVALL_LR', 'mtum_MACD_ext_signal', 'tend_VHF_28', 'tend_LDECAY_5', 'olap_JMA_7_0', 'mtum_MFI', 'mtum_MOM', 'mtum_PLUS_DI', 'perf_CUMPCTRET_1', 'Close', 'mtum_DX', 'ma_EMA_5', 'High', 'Low', 'ichi_kijun_sen', 'ma_TEMA_10', 'cycl_PHASOR_inph', 'ma_DEMA_10', 'ma_DEMA_5', 'ma_KAMA_50', 'mcrh_KAMA_5_DEMA_20', 'ma_KAMA_20', 'ma_TEMA_5', 'sti_TSF', 'ma_KAMA_5', 'olap_BBAND_UPPER', 'ma_KAMA_10', 'sti_TOS_STDEVALL_U_2', 'ma_WMA_5', 'ma_EMA_10', 'sti_TOS_STDEVALL_L_2', 'sti_TOS_STDEVALL_L_1', 'sti_LINEARREG', 'ma_WMA_10', 'perf_CUMLOGRET_1', 'cama_r3', 'mtum_FISHERTs_9_1', 'mtum_AROON_down', 'ti_hma_20', 'ti_vortex_pos_14', 'mtum_AROONOSC', 'ti_konk_rest', 'HSI_SMA_100', 'fibo_pp', 'fibo_r1', 'demark_s1', 'cama_pp', 'vola_KCBe_20_2', 'sti_CORREL', 'demark_r1', 'vola_UI_14', 'vola_RVI_14', 'demark_pp', 'cama_r1', 'cycl_SINE_sine', 'fibo_r2', 'cama_s1', 'sti_TOS_STDEVALL_U_3', 'vola_HWL', 'cama_r2', 'trad_s1', 'trad_r2', 'trad_r1', 'trad_pp', 'clas_s1', 'clas_r1', 'clas_pp', 'fibo_s1', 'cama_s3', 'cama_s2', 'ti_ease_of_movement_14', 'cdl_MATCHINGLOW', 'mcrh_SMA_5_SMA_20', 'fibo_s2', 'mcrh_KAMA_20_SMA_50', 'mcrh_DEMA_10_TRIMA_20', 'mcrh_EMA_20_EMA_100', 'mtum_FISHERT_9_1', 'HSI_Close', 'mcrh_EMA_20_KAMA_100', 'mtum_CG_10', 'mcrh_EMA_5_SMA_20', 'mcrh_KAMA_10_DEMA_20', 'mtum_AR_26', 'ma_WMA_20', 'mcrh_KAMA_5_TRIMA_10', 'mcrh_SMA_10_DEMA_100', 'mtum_ADX', 'mcrh_WMA_50_DEMA_100', 'mcrh_TEMA_10_EMA_20', 'mcrh_T3_5_WMA_10', 'mcrh_T3_50_DEMA_100', 'mcrh_T3_20_T3_50', 'mcrh_DEMA_10_DEMA_20', 'mtum_MACD_fix_list', 'olap_VMAP', 'ichi_senkou_b', 'olap_SSF_10_2', 'olap_PWMA_10', 'olap_MIDPRICE', 'olap_MIDPOINT', 'ichi_isin_cloud', 'mcrh_T3_20_EMA_50', 'ichi_senkou_a', 'mtum_td_seq', 'ma_DEMA_20', 'ma_TRIMA_50', 'ma_EMA_50', 'mtum_QQE_14_5_4236_RSIMA', 'ma_SMA_5', 'ma_T3_5', 'ma_TEMA_20', 'mtum_MINUS_DI', 'ma_TRIMA_5', 'mtum_MACD_list', 'wood_pp']
root - [INFO]{CONS_1} - check_columns_selections_Raise() - cols model columns: Index(['Date', 'buy_sell_point', 'volu_NVI_1', 'mtum_DMP_14', 'olap_BBAND_dif',
       'volu_PVOL', 'Volume', 'volu_Chaikin_ADOSC', 'ti_chaikin_10_3',
       'cdl_3WHITESOLDIERS',
       ...
       'ma_TRIMA_50', 'ma_EMA_50', 'mtum_QQE_14_5_4236_RSIMA', 'ma_SMA_5',
       'ma_T3_5', 'ma_TEMA_20', 'mtum_MINUS_DI', 'ma_TRIMA_5',
       'mtum_MACD_list', 'wood_pp'],
      dtype='object', length=173)
root - [INFO]{CONS_1} - check_columns_selections_Raise() - Columns required by the Model: Models/TF_multi/TFm_2318.HK_neg_low1__mult_gru.h5__TEST_35.5%_accuracy_94.48%__loss_0.15__epochs_18[90].csv are: Date, buy_sell_point, volu_NVI_1, mtum_DMP_14, olap_BBAND_dif, volu_PVOL, Volume, volu_Chaikin_ADOSC, ti_chaikin_10_3, cdl_3WHITESOLDIERS, mtum_PLUS_DM, mtum_STCstoch_10_12_26_05, mtum_td_seq_sig, ti_coppock_14_11_10, sti_ENTP_10, mtum_MACD, mcrh_DEMA_50_EMA_100, mtum_STCmacd_10_12_26_05, mtum_BR_26, mtum_PVOh_12_26_9, mtum_PVO_12_26_9, sti_LINEARREG_SLOPE, mtum_MACD_signal, mtum_MACD_fix, cdl_LONGLEGGEDDOJI, cdl_DOJI, cdl_RICKSHAWMAN, mtum_MACD_fix_signal, mtum_MACD_ext_list, mtum_PPO, mtum_MACD_ext, mtum_PSL_12, mtum_BULLP_13, mtum_INERTIA_20_14, mtum_PVOs_12_26_9, mtum_STC_10_12_26_05, mtum_APO, mtum_AO_5_34, sti_BETA, volu_EFI_13, vola_ATR, ti_force_index_13, tend_lh, sti_TOS_STDEVALL_L_3, sti_LINEARREG_ANGLE, sti_TOS_STDEVALL_U_1, perf_ha, tend_renko_ATR, mtum_BEARP_13, mtum_BIAS_SMA_26, mtum_ROCR100, vola_NATR, mtum_ROCR, ti_vortex_neg_14, mtum_ROCP, ti_donchian_upper_20, mtum_ROC, sti_TOS_STDEVALL_LR, mtum_MACD_ext_signal, tend_VHF_28, tend_LDECAY_5, olap_JMA_7_0, mtum_MFI, mtum_MOM, mtum_PLUS_DI, perf_CUMPCTRET_1, Close, mtum_DX, ma_EMA_5, High, Low, ichi_kijun_sen, ma_TEMA_10, cycl_PHASOR_inph, ma_DEMA_10, ma_DEMA_5, ma_KAMA_50, mcrh_KAMA_5_DEMA_20, ma_KAMA_20, ma_TEMA_5, sti_TSF, ma_KAMA_5, olap_BBAND_UPPER, ma_KAMA_10, sti_TOS_STDEVALL_U_2, ma_WMA_5, ma_EMA_10, sti_TOS_STDEVALL_L_2, sti_TOS_STDEVALL_L_1, sti_LINEARREG, ma_WMA_10, perf_CUMLOGRET_1, cama_r3, mtum_FISHERTs_9_1, mtum_AROON_down, ti_hma_20, ti_vortex_pos_14, mtum_AROONOSC, ti_konk_rest, HSI_SMA_100, fibo_pp, fibo_r1, demark_s1, cama_pp, vola_KCBe_20_2, sti_CORREL, demark_r1, vola_UI_14, vola_RVI_14, demark_pp, cama_r1, cycl_SINE_sine, fibo_r2, cama_s1, sti_TOS_STDEVALL_U_3, vola_HWL, cama_r2, trad_s1, trad_r2, trad_r1, trad_pp, clas_s1, clas_r1, clas_pp, fibo_s1, cama_s3, cama_s2, ti_ease_of_movement_14, cdl_MATCHINGLOW, mcrh_SMA_5_SMA_20, fibo_s2, mcrh_KAMA_20_SMA_50, mcrh_DEMA_10_TRIMA_20, mcrh_EMA_20_EMA_100, mtum_FISHERT_9_1, HSI_Close, mcrh_EMA_20_KAMA_100, mtum_CG_10, mcrh_EMA_5_SMA_20, mcrh_KAMA_10_DEMA_20, mtum_AR_26, ma_WMA_20, mcrh_KAMA_5_TRIMA_10, mcrh_SMA_10_DEMA_100, mtum_ADX, mcrh_WMA_50_DEMA_100, mcrh_TEMA_10_EMA_20, mcrh_T3_5_WMA_10, mcrh_T3_50_DEMA_100, mcrh_T3_20_T3_50, mcrh_DEMA_10_DEMA_20, mtum_MACD_fix_list, olap_VMAP, ichi_senkou_b, olap_SSF_10_2, olap_PWMA_10, olap_MIDPRICE, olap_MIDPOINT, ichi_isin_cloud, mcrh_T3_20_EMA_50, ichi_senkou_a, mtum_td_seq, ma_DEMA_20, ma_TRIMA_50, ma_EMA_50, mtum_QQE_14_5_4236_RSIMA, ma_SMA_5, ma_T3_5, ma_TEMA_20, mtum_MINUS_DI, ma_TRIMA_5, mtum_MACD_list, wood_pp
root - [INFO]{CONS_1} - predict_Multi_models() -  Load model Type MULTI TF:   Path:  Models/TF_multi/[94mTFm_2318.HK_neg_low1__mult_gru[0m.h5   Shape df to predict: (-1, 10, 172)
root - [DEBUG]{CONS_1} - scaler_min_max_array() - Scaler will be Loaded Path: Models/TF_multi/Scalers/2318.HK_neg_low1_.scal
root - [INFO]{CONS_1} - send_MULTI_alert_and_register() - Score POS: 180 for stock: 2318.HK with models: ['Acert_TFm_2318.HK_pos_reg4_mult_64', 'Acert_TFm_2318.HK_pos_reg4__mult_gru']
root - [INFO]{CONS_1} - consumer() - Stock: 2888.HK  Volume unlast: Ticker
2888.HK    71000
Name: 1, dtype: object Volume last: Ticker
2888.HK    100589
Name: 0, dtype: object Date: 2025-08-07 06:17:55
root - [INFO]{CONS_1} - get_buy_sell_points_Roll() - get_buy_sell_points_Roll df.shape: (129, 8) delete_aux_rows: True
                    Date   Open  Close   High    Low  Volume  sell_value_POS  sell_value_NEG
128  2025-08-07 13:45:00  145.3  145.6  146.0  145.2  161303           143.8           143.8
127  2025-08-07 13:30:00  145.2  145.3  145.5  145.1   84642           144.2           143.8
126  2025-08-07 13:15:00  145.0  145.1  145.2  144.8   47800           141.9           141.9
125  2025-08-07 13:00:00  144.8  145.0  145.0  144.7   48150           141.9           141.9
124  2025-08-07 11:45:00  144.4  144.9  145.0  144.3  109300           141.9           141.9
123  2025-08-07 11:30:00  144.5  144.4  144.5  144.2   31950           141.9           141.9
122  2025-08-07 11:15:00  144.4  144.5  144.5  143.9   38850           141.9           142.7
121  2025-08-07 11:00:00  144.0  144.4  144.4  143.9   36237           141.9           142.7
120  2025-08-07 10:45:00  143.8  144.0  144.0  143.6   20550           141.9           142.7
119  2025-08-07 10:30:00  143.5  143.8  143.8  143.4   26537           141.9           142.7
root - [INFO]{CONS_1} - get_buy_sell_points_Roll() - Parameters of acquisition "buy_sell_points" for this stock is set to POSITIVE (units) 	92%: 3.038 	98%: 5.706 NEGATIVE (units) 	93%: 2.976 	98%: 3.73
root - [INFO]{CONS_1} - get_ALL_tech_data_local() - Andy - 1
root - [INFO]{CONS_1} - get_ALL_tech_data_local() - Andy - 2
root - [INFO]{CONS_1} - get_ALL_tech_data_local() - Andy - 3
root - [INFO]{CONS_1} - get_ALL_tech_data_local() - Andy - 4
root - [INFO]{CONS_1} - get_ALL_tech_data_local() - Andy - 5
root - [INFO]{CONS_1} - get_all_pandas_TU_tecnical() - Andy - 5.1
root - [INFO]{CONS_1} - get_all_pandas_TU_tecnical() - Andy - 5.2
root - [INFO]{CONS_1} - get_all_pandas_TU_tecnical() - Andy - 5.3
root - [INFO]{CONS_1} - get_all_pandas_TU_tecnical() - Andy - 5.4
root - [INFO]{CONS_1} - get_LowerHighs_LowerHighs() - Andy - 5.4.1
root - [INFO]{CONS_1} - get_LowerHighs_LowerHighs() - Andy - 5.4.2
root - [INFO]{CONS_1} - get_LowerHighs_LowerHighs() - Andy - 5.4.3
root - [INFO]{CONS_1} - get_LowerHighs_LowerHighs() - getLowerLows parameters - order: 5, k: 2
root - [INFO]{CONS_1} - get_LowerHighs_LowerHighs() - getLowerLows result: [deque([14, 73], maxlen=2), deque([73, 80], maxlen=2), deque([102, 117], maxlen=2)]
root - [INFO]{CONS_1} - get_LowerHighs_LowerHighs() - Andy - 5.4.4
root - [INFO]{CONS_1} - get_LowerHighs_LowerHighs() - getLowerLows result: [deque([39, 82], maxlen=2)]
root - [INFO]{CONS_1} - get_LowerHighs_LowerHighs() - Andy - 5.4.5
root - [INFO]{CONS_1} - get_LowerHighs_LowerHighs() - Andy - 5.4.5.1
root - [INFO]{CONS_1} - get_LowerHighs_LowerHighs() - Andy - 5.4.5.2
root - [INFO]{CONS_1} - get_LowerHighs_LowerHighs() - Index(['Date - (126, 239) -                     Date  buy_sell_point   Open  Close   High    Low  ...       volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  141.8  141.0  141.8  140.5  ...  483020.120076         -0.045455            9                3    145.8    140.7\n125  2025-07-31 09:30:00               0  143.3  141.8  143.3  141.3  ...  523303.808019          0.045455           10                4    145.8    140.7\n\n[2 rows x 239 columns][deque([14, 73], maxlen=2), deque([73, 80], maxlen=2), deque([102, 117], maxlen=2)]',
       'buy_sell_point - (126, 239) -                     Date  buy_sell_point   Open  Close   High    Low  ...       volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  141.8  141.0  141.8  140.5  ...  483020.120076         -0.045455            9                3    145.8    140.7\n125  2025-07-31 09:30:00               0  143.3  141.8  143.3  141.3  ...  523303.808019          0.045455           10                4    145.8    140.7\n\n[2 rows x 239 columns][deque([14, 73], maxlen=2), deque([73, 80], maxlen=2), deque([102, 117], maxlen=2)]',
       'Open - (126, 239) -                     Date  buy_sell_point   Open  Close   High    Low  ...       volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  141.8  141.0  141.8  140.5  ...  483020.120076         -0.045455            9                3    145.8    140.7\n125  2025-07-31 09:30:00               0  143.3  141.8  143.3  141.3  ...  523303.808019          0.045455           10                4    145.8    140.7\n\n[2 rows x 239 columns][deque([14, 73], maxlen=2), deque([73, 80], maxlen=2), deque([102, 117], maxlen=2)]',
       'Close - (126, 239) -                     Date  buy_sell_point   Open  Close   High    Low  ...       volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  141.8  141.0  141.8  140.5  ...  483020.120076         -0.045455            9                3    145.8    140.7\n125  2025-07-31 09:30:00               0  143.3  141.8  143.3  141.3  ...  523303.808019          0.045455           10                4    145.8    140.7\n\n[2 rows x 239 columns][deque([14, 73], maxlen=2), deque([73, 80], maxlen=2), deque([102, 117], maxlen=2)]',
       'High - (126, 239) -                     Date  buy_sell_point   Open  Close   High    Low  ...       volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  141.8  141.0  141.8  140.5  ...  483020.120076         -0.045455            9                3    145.8    140.7\n125  2025-07-31 09:30:00               0  143.3  141.8  143.3  141.3  ...  523303.808019          0.045455           10                4    145.8    140.7\n\n[2 rows x 239 columns][deque([14, 73], maxlen=2), deque([73, 80], maxlen=2), deque([102, 117], maxlen=2)]',
       'Low - (126, 239) -                     Date  buy_sell_point   Open  Close   High    Low  ...       volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  141.8  141.0  141.8  140.5  ...  483020.120076         -0.045455            9                3    145.8    140.7\n125  2025-07-31 09:30:00               0  143.3  141.8  143.3  141.3  ...  523303.808019          0.045455           10                4    145.8    140.7\n\n[2 rows x 239 columns][deque([14, 73], maxlen=2), deque([73, 80], maxlen=2), deque([102, 117], maxlen=2)]',
       'Volume - (126, 239) -                     Date  buy_sell_point   Open  Close   High    Low  ...       volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  141.8  141.0  141.8  140.5  ...  483020.120076         -0.045455            9                3    145.8    140.7\n125  2025-07-31 09:30:00               0  143.3  141.8  143.3  141.3  ...  523303.808019          0.045455           10                4    145.8    140.7\n\n[2 rows x 239 columns][deque([14, 73], maxlen=2), deque([73, 80], maxlen=2), deque([102, 117], maxlen=2)]',
       'per_Close - (126, 239) -                     Date  buy_sell_point   Open  Close   High    Low  ...       volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  141.8  141.0  141.8  140.5  ...  483020.120076         -0.045455            9                3    145.8    140.7\n125  2025-07-31 09:30:00               0  143.3  141.8  143.3  141.3  ...  523303.808019          0.045455           10                4    145.8    140.7\n\n[2 rows x 239 columns][deque([14, 73], maxlen=2), deque([73, 80], maxlen=2), deque([102, 117], maxlen=2)]',
       'per_Volume - (126, 239) -                     Date  buy_sell_point   Open  Close   High    Low  ...       volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  141.8  141.0  141.8  140.5  ...  483020.120076         -0.045455            9                3    145.8    140.7\n125  2025-07-31 09:30:00               0  143.3  141.8  143.3  141.3  ...  523303.808019          0.045455           10                4    145.8    140.7\n\n[2 rows x 239 columns][deque([14, 73], maxlen=2), deque([73, 80], maxlen=2), deque([102, 117], maxlen=2)]',
       'has_preMarket - (126, 239) -                     Date  buy_sell_point   Open  Close   High    Low  ...       volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  141.8  141.0  141.8  140.5  ...  483020.120076         -0.045455            9                3    145.8    140.7\n125  2025-07-31 09:30:00               0  143.3  141.8  143.3  141.3  ...  523303.808019          0.045455           10                4    145.8    140.7\n\n[2 rows x 239 columns][deque([14, 73], maxlen=2), deque([73, 80], maxlen=2), deque([102, 117], maxlen=2)]',
       ...
       'volu_EFI_13 - (126, 239) -                     Date  buy_sell_point   Open  Close   High    Low  ...       volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  141.8  141.0  141.8  140.5  ...  483020.120076         -0.045455            9                3    145.8    140.7\n125  2025-07-31 09:30:00               0  143.3  141.8  143.3  141.3  ...  523303.808019          0.045455           10                4    145.8    140.7\n\n[2 rows x 239 columns][deque([14, 73], maxlen=2), deque([73, 80], maxlen=2), deque([102, 117], maxlen=2)]',
       'volu_NVI_1 - (126, 239) -                     Date  buy_sell_point   Open  Close   High    Low  ...       volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  141.8  141.0  141.8  140.5  ...  483020.120076         -0.045455            9                3    145.8    140.7\n125  2025-07-31 09:30:00               0  143.3  141.8  143.3  141.3  ...  523303.808019          0.045455           10                4    145.8    140.7\n\n[2 rows x 239 columns][deque([14, 73], maxlen=2), deque([73, 80], maxlen=2), deque([102, 117], maxlen=2)]',
       'volu_PVI_1 - (126, 239) -                     Date  buy_sell_point   Open  Close   High    Low  ...       volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  141.8  141.0  141.8  140.5  ...  483020.120076         -0.045455            9                3    145.8    140.7\n125  2025-07-31 09:30:00               0  143.3  141.8  143.3  141.3  ...  523303.808019          0.045455           10                4    145.8    140.7\n\n[2 rows x 239 columns][deque([14, 73], maxlen=2), deque([73, 80], maxlen=2), deque([102, 117], maxlen=2)]',
       'volu_PVOL - (126, 239) -                     Date  buy_sell_point   Open  Close   High    Low  ...       volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  141.8  141.0  141.8  140.5  ...  483020.120076         -0.045455            9                3    145.8    140.7\n125  2025-07-31 09:30:00               0  143.3  141.8  143.3  141.3  ...  523303.808019          0.045455           10                4    145.8    140.7\n\n[2 rows x 239 columns][deque([14, 73], maxlen=2), deque([73, 80], maxlen=2), deque([102, 117], maxlen=2)]',
       'volu_PVT - (126, 239) -                     Date  buy_sell_point   Open  Close   High    Low  ...       volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  141.8  141.0  141.8  140.5  ...  483020.120076         -0.045455            9                3    145.8    140.7\n125  2025-07-31 09:30:00               0  143.3  141.8  143.3  141.3  ...  523303.808019          0.045455           10                4    145.8    140.7\n\n[2 rows x 239 columns][deque([14, 73], maxlen=2), deque([73, 80], maxlen=2), deque([102, 117], maxlen=2)]',
       'mtum_murrey_math - (126, 239) -                     Date  buy_sell_point   Open  Close   High    Low  ...       volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  141.8  141.0  141.8  140.5  ...  483020.120076         -0.045455            9                3    145.8    140.7\n125  2025-07-31 09:30:00               0  143.3  141.8  143.3  141.3  ...  523303.808019          0.045455           10                4    145.8    140.7\n\n[2 rows x 239 columns][deque([14, 73], maxlen=2), deque([73, 80], maxlen=2), deque([102, 117], maxlen=2)]',
       'mtum_td_seq - (126, 239) -                     Date  buy_sell_point   Open  Close   High    Low  ...       volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  141.8  141.0  141.8  140.5  ...  483020.120076         -0.045455            9                3    145.8    140.7\n125  2025-07-31 09:30:00               0  143.3  141.8  143.3  141.3  ...  523303.808019          0.045455           10                4    145.8    140.7\n\n[2 rows x 239 columns][deque([14, 73], maxlen=2), deque([73, 80], maxlen=2), deque([102, 117], maxlen=2)]',
       'mtum_td_seq_sig - (126, 239) -                     Date  buy_sell_point   Open  Close   High    Low  ...       volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  141.8  141.0  141.8  140.5  ...  483020.120076         -0.045455            9                3    145.8    140.7\n125  2025-07-31 09:30:00               0  143.3  141.8  143.3  141.3  ...  523303.808019          0.045455           10                4    145.8    140.7\n\n[2 rows x 239 columns][deque([14, 73], maxlen=2), deque([73, 80], maxlen=2), deque([102, 117], maxlen=2)]',
       'tend_hh - (126, 239) -                     Date  buy_sell_point   Open  Close   High    Low  ...       volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  141.8  141.0  141.8  140.5  ...  483020.120076         -0.045455            9                3    145.8    140.7\n125  2025-07-31 09:30:00               0  143.3  141.8  143.3  141.3  ...  523303.808019          0.045455           10                4    145.8    140.7\n\n[2 rows x 239 columns][deque([14, 73], maxlen=2), deque([73, 80], maxlen=2), deque([102, 117], maxlen=2)]',
       'tend_hl - (126, 239) -                     Date  buy_sell_point   Open  Close   High    Low  ...       volu_PVT  mtum_murrey_math  mtum_td_seq  mtum_td_seq_sig  tend_hh  tend_hl\n124  2025-07-31 09:45:00               0  141.8  141.0  141.8  140.5  ...  483020.120076         -0.045455            9                3    145.8    140.7\n125  2025-07-31 09:30:00               0  143.3  141.8  143.3  141.3  ...  523303.808019          0.045455           10                4    145.8    140.7\n\n[2 rows x 239 columns][deque([14, 73], maxlen=2), deque([73, 80], maxlen=2), deque([102, 117], maxlen=2)]'],
      dtype='object', length=239)
root - [INFO]{CONS_1} - get_LowerHighs_LowerHighs() - Andy - 5.4.5.3
root - [INFO]{CONS_1} - get_LowerHighs_LowerHighs() - Andy - 5.4.5.4
root - [INFO]{CONS_1} - get_LowerHighs_LowerHighs() - Andy - 5.4.6
root - [INFO]{CONS_1} - get_LowerHighs_LowerHighs() - Andy - 5.4.7
root - [INFO]{CONS_1} - get_all_pandas_TU_tecnical() - Andy - 5.5
root - [INFO]{CONS_1} - get_all_pandas_TU_tecnical() - Andy - 5.6
root - [INFO]{CONS_1} - get_all_pandas_TU_tecnical() - Andy - 5.7
root - [INFO]{CONS_1} - get_all_pandas_TU_tecnical() - Andy - 5.7.1
root - [INFO]{CONS_1} - get_all_pandas_TU_tecnical() - Andy - 5.8
root - [INFO]{CONS_1} - get_all_pandas_TU_tecnical() - Andy - 5.9
root - [INFO]{CONS_1} - get_ALL_tech_data_local() - Andy - 6
root - [INFO]{CONS_1} - get_ALL_tech_data_local() - Andy - 7
root - [INFO]{CONS_1} - get_df_Multi_comprar_vender_predictions() - Stock: 2888.HK uses the following models for MULTI prediction: 2888.HK:
		POS: TFm_2888.HK_pos_vgood16__mult_gru, TFm_2888.HK_pos_reg4_mult_128
		NEG: TFm_2888.HK_neg_good9_mult_128, TFm_2888.HK_neg_reg4_mult_lstm
root - [INFO]{CONS_1} - create_df_eval_prediction() - Columns selected for model: ['ti_acc_dist', 'volu_Chaikin_AD', 'volu_OBV', 'mtum_PVOh_12_26_9', 'ma_TRIMA_50']col_select: vgood16 pos_neg: pos model_name: TFm_2888.HK_pos_vgood16__mult_gru
root - [INFO]{CONS_1} - create_df_eval_prediction() - Load model NameModel: TFm_2888.HK_pos_vgood16__mult_gru Neg/Pos: pos df.shape: (64, 9) Columns: vgood16
root - [INFO]{CONS_1} - create_df_eval_prediction() - df_in_pure record:
   Close  Volume                 Date  buy_sell_point    ti_acc_dist  volu_Chaikin_AD  volu_OBV  mtum_PVOh_12_26_9  ma_TRIMA_50
0  141.0   56250  2025-08-04 15:00:00               0  558338.982684    558338.982684   44546.0           6.889869   142.971385
1  140.6   46550  2025-08-04 14:45:00               0  590565.905761    590565.905761   -2004.0           3.882636   142.995846
root - [INFO]{CONS_1} - create_df_eval_prediction() - df_eval:
                  Date  buy_sell_point  Close  Volume
0  2025-08-04 11:45:00               0  139.8   31050
1  2025-08-04 11:30:00               0  139.6   35700
root - [INFO]{CONS_1} - create_df_eval_prediction() - df_S record:
           Date  buy_sell_point    ti_acc_dist  volu_Chaikin_AD  volu_OBV  mtum_PVOh_12_26_9  ma_TRIMA_50
0  1.754320e+09               0  558338.982684    558338.982684   44546.0           6.889869   142.971385
1  1.754319e+09               0  590565.905761    590565.905761   -2004.0           3.882636   142.995846
root - [INFO]{CONS_1} - create_df_eval_prediction() - Index(['Date', 'buy_sell_point', 'ti_acc_dist', 'volu_Chaikin_AD', 'volu_OBV',
       'mtum_PVOh_12_26_9', 'ma_TRIMA_50'],
      dtype='object')
root - [INFO]{CONS_1} - check_columns_selections_Raise() - Checking columns selected for prediction: loss	accuracy	val_loss	val_accuracy
0.672	0.631	0.771	0.492
0.651	0.617	0.742	0.479
0.619	0.666	0.535	0.733
0.582	0.705	0.565	0.679
0.574	0.698	0.478	0.725
0.55	0.718	0.336	0.824
0.566	0.711	0.335	0.829
0.545	0.719	0.724	0.505
0.545	0.722	0.829	0.436
0.541	0.729	0.579	0.626
0.546	0.712	0.6	0.58
0.538	0.73	0.678	0.524
0.534	0.732	0.639	0.57
0.532	0.734	0.472	0.714
0.534	0.734	0.736	0.527
0.528	0.74	0.849	0.444
0.516	0.754	0.699	0.497
0.531	0.734	0.503	0.684
0.527	0.738	0.593	0.596
0.52	0.745	0.355	0.813
0.508	0.753	0.623	0.66
0.511	0.739	0.608	0.626
0.5	0.756	0.529	0.693
0.494	0.765	0.867	0.543
0.487	0.77	0.619	0.634
0.471	0.783	0.629	0.687
0.458	0.789	0.651	0.642
0.45	0.783	0.571	0.733
0.44	0.79	0.708	0.658
0.449	0.774	0.783	0.548
0.437	0.789	0.408	0.759
0.438	0.788	0.46	0.733

Columns TFm_2888.HK_pos_vgood16__mult_gru.h5:
Date, buy_sell_point, ti_acc_dist, volu_Chaikin_AD, volu_OBV, mtum_PVOh_12_26_9, ma_TRIMA_50
root - [INFO]{CONS_1} - check_columns_selections_Raise() - match columns: ['Date', 'buy_sell_point', 'ti_acc_dist', 'volu_Chaikin_AD', 'volu_OBV', 'mtum_PVOh_12_26_9', 'ma_TRIMA_50']
root - [INFO]{CONS_1} - check_columns_selections_Raise() - cols model columns: Index(['Date', 'buy_sell_point', 'ti_acc_dist', 'volu_Chaikin_AD', 'volu_OBV',
       'mtum_PVOh_12_26_9', 'ma_TRIMA_50'],
      dtype='object')
root - [INFO]{CONS_1} - check_columns_selections_Raise() - Columns required by the Model: Models/TF_multi/TFm_2888.HK_pos_vgood16__mult_gru.h5__TEST_32.3%_accuracy_78.78%__loss_0.44__epochs_31[90].csv are: Date, buy_sell_point, ti_acc_dist, volu_Chaikin_AD, volu_OBV, mtum_PVOh_12_26_9, ma_TRIMA_50
root - [INFO]{CONS_1} - predict_Multi_models() -  Load model Type MULTI TF:   Path:  Models/TF_multi/[94mTFm_2888.HK_pos_vgood16__mult_gru[0m.h5   Shape df to predict: (-1, 10, 6)
root - [DEBUG]{CONS_1} - scaler_min_max_array() - Scaler will be Loaded Path: Models/TF_multi/Scalers/2888.HK_pos_vgood16_.scal
root - [INFO]{CONS_1} - create_df_eval_prediction() - Columns selected for model: ['ti_acc_dist', 'volu_Chaikin_AD', 'volu_OBV', 'mtum_PVOh_12_26_9', 'ma_TRIMA_50', 'ma_EMA_50', 'olap_BBAND_LOWER', 'sti_TOS_STDEVALL_U_2', 'sti_TOS_STDEVALL_L_1', 'sti_TOS_STDEVALL_U_1', 'sti_TOS_STDEVALL_L_2', 'sti_TOS_STDEVALL_LR', 'ti_donchian_lower_20', 'sti_TOS_STDEVALL_U_3', 'ma_KAMA_50', 'ma_SMA_50', 'vola_KCLe_20_2', 'sti_TOS_STDEVALL_L_3', 'ti_force_index_13', 'mtum_MACD_fix', 'mtum_AO_5_34', 'mtum_MACD_ext_signal', 'mtum_MACD', 'vola_KCBe_20_2', 'mtum_MACD_fix_signal', 'mtum_MACD_signal', 'mcrh_EMA_50_WMA_100', 'ti_kelt_20_lower', 'olap_MCGD_10', 'ichi_kijun_sen', 'olap_BBAND_dif', 'mtum_STCmacd_10_12_26_05', 'volu_PVOL', 'ti_donchian_center_20', 'ma_WMA_20', 'mcrh_KAMA_20_WMA_100', 'mtum_APO', 'ma_TRIMA_20', 'olap_BBAND_MIDDLE', 'mtum_MACD_ext', 'ma_EMA_20', 'ichi_senkou_a', 'ichi_senkou_b', 'ma_TRIMA_10', 'mtum_PPO', 'tend_VHF_28', 'olap_ALMA_10_60_085', 'olap_SAR', 'olap_SINWMA_14', 'olap_MIDPRICE', 'mcrh_T3_50_T3_100', 'mcrh_TEMA_20_EMA_50', 'mtum_PLUS_DM', 'mcrh_TRIMA_20_TEMA_100', 'mcrh_TRIMA_5_DEMA_20', 'mcrh_TRIMA_5_TEMA_50', 'olap_VMAP', 'mtum_DMP_14', 'ti_choppiness_14', 'sti_LINEARREG_INTERCEPT', 'mcrh_KAMA_5_TEMA_10', 'olap_MIDPOINT', 'ma_T3_10', 'ichi_tenkan_sen', 'volu_EFI_13', 'vola_HWL', 'ti_supertrend_20', 'ma_KAMA_10', 'ma_KAMA_20', 'cycl_SINE_sine', 'cycl_SINE_lead', 'ma_SMA_20', 'cycl_DCPERIOD', 'ma_WMA_10', 'Volume', 'ma_KAMA_5', 'ma_SMA_10', 'ma_EMA_5', 'sti_LINEARREG', 'ma_SMA_5', 'olap_VWMA_10', 'ma_EMA_10', 'mtum_PVOs_12_26_9', 'mtum_PVO_12_26_9', 'HSI_SMA_100', 'mtum_QQE_14_5_4236_RSIMA', 'olap_SWMA_10', 'volu_NVI_1', 'mtum_SMIs_5_20_5', 'olap_PWMA_10', 'volu_PVI_1', 'cycl_DCPHASE', 'olap_BBAND_UPPER', 'olap_HT_TRENDLINE', 'olap_HWMA_02_01_01', 'mtum_BIAS_SMA_26', 'mcrh_KAMA_50_T3_100', 'ma_T3_5', 'mcrh_TRIMA_20_SMA_50', 'ti_coppock_14_11_10', 'ti_hma_20', 'tend_renko_ATR', 'tend_ll', 'mcrh_EMA_5_T3_50', 'mcrh_T3_20_TRIMA_50', 'ti_kelt_20_upper', 'tend_hl', 'mcrh_T3_5_T3_10', 'mcrh_TEMA_20_DEMA_100', 'mcrh_TEMA_50_T3_100', 'mcrh_TEMA_5_KAMA_100', 'mcrh_TRIMA_20_SMA_100', 'mcrh_TRIMA_10_SMA_20', 'mcrh_TRIMA_20_WMA_100', 'vola_KCUe_20_2', 'vola_THERMOma_20_2_05', 'mtum_ADX', 'ma_TRIMA_5', 'ma_WMA_5', 'tend_hl_crash', 'vola_HWM', 'mcrh_DEMA_20_SMA_50']col_select: reg4 pos_neg: pos model_name: TFm_2888.HK_pos_reg4_mult_128
root - [INFO]{CONS_1} - create_df_eval_prediction() - Load model NameModel: TFm_2888.HK_pos_reg4_mult_128 Neg/Pos: pos df.shape: (64, 126) Columns: reg4
root - [INFO]{CONS_1} - create_df_eval_prediction() - df_in_pure record:
   Close  Volume                 Date  buy_sell_point    ti_acc_dist  volu_Chaikin_AD  volu_OBV  mtum_PVOh_12_26_9  ma_TRIMA_50   ma_EMA_50  olap_BBAND_LOWER  sti_TOS_STDEVALL_U_2  sti_TOS_STDEVALL_L_1  sti_TOS_STDEVALL_U_1  sti_TOS_STDEVALL_L_2  sti_TOS_STDEVALL_LR  ti_donchian_lower_20  sti_TOS_STDEVALL_U_3  ma_KAMA_50  ma_SMA_50  vola_KCLe_20_2  sti_TOS_STDEVALL_L_3  ti_force_index_13  mtum_MACD_fix  mtum_AO_5_34  mtum_MACD_ext_signal  mtum_MACD  vola_KCBe_20_2  mtum_MACD_fix_signal  mtum_MACD_signal  mcrh_EMA_50_WMA_100  ti_kelt_20_lower  olap_MCGD_10  ichi_kijun_sen  olap_BBAND_dif  mtum_STCmacd_10_12_26_05  volu_PVOL  ti_donchian_center_20   ma_WMA_20  mcrh_KAMA_20_WMA_100  mtum_APO  ma_TRIMA_20  olap_BBAND_MIDDLE  mtum_MACD_ext   ma_EMA_20  ichi_senkou_a  ichi_senkou_b  ma_TRIMA_10  mtum_PPO  tend_VHF_28  olap_ALMA_10_60_085    olap_SAR  olap_SINWMA_14  olap_MIDPRICE  mcrh_T3_50_T3_100  mcrh_TEMA_20_EMA_50  mtum_PLUS_DM  mcrh_TRIMA_20_TEMA_100  mcrh_TRIMA_5_DEMA_20  mcrh_TRIMA_5_TEMA_50   olap_VMAP  mtum_DMP_14  ti_choppiness_14  sti_LINEARREG_INTERCEPT  mcrh_KAMA_5_TEMA_10  olap_MIDPOINT    ma_T3_10  ichi_tenkan_sen   volu_EFI_13    vola_HWL  ti_supertrend_20  ma_KAMA_10  ma_KAMA_20  cycl_SINE_sine  cycl_SINE_lead  ma_SMA_20  cycl_DCPERIOD   ma_WMA_10  Volume   ma_KAMA_5  ma_SMA_10    ma_EMA_5  sti_LINEARREG  ma_SMA_5  olap_VWMA_10   ma_EMA_10  mtum_PVOs_12_26_9  mtum_PVO_12_26_9   HSI_SMA_100  mtum_QQE_14_5_4236_RSIMA  olap_SWMA_10  volu_NVI_1  mtum_SMIs_5_20_5  olap_PWMA_10   volu_PVI_1  cycl_DCPHASE  olap_BBAND_UPPER  olap_HT_TRENDLINE  olap_HWMA_02_01_01  mtum_BIAS_SMA_26  mcrh_KAMA_50_T3_100     ma_T3_5  mcrh_TRIMA_20_SMA_50  ti_coppock_14_11_10   ti_hma_20  tend_renko_ATR  tend_ll  mcrh_EMA_5_T3_50  mcrh_T3_20_TRIMA_50  ti_kelt_20_upper  tend_hl  mcrh_T3_5_T3_10  mcrh_TEMA_20_DEMA_100  mcrh_TEMA_50_T3_100  mcrh_TEMA_5_KAMA_100  mcrh_TRIMA_20_SMA_100  mcrh_TRIMA_10_SMA_20  mcrh_TRIMA_20_WMA_100  vola_KCUe_20_2  vola_THERMOma_20_2_05   mtum_ADX  ma_TRIMA_5  ma_WMA_5  tend_hl_crash    vola_HWM  mcrh_DEMA_20_SMA_50
0  141.0   56250  2025-08-04 15:00:00               0  558338.982684    558338.982684   44546.0           6.889869   142.971385  142.964706        141.353224            145.683341            140.204177            143.856953            138.377789           142.030565                 140.8            147.509729  143.187179    142.774      140.859883            136.551401      -12623.829737      -0.417381     -1.078824             -0.109117  -0.441773      142.641236             -0.172465         -0.182081                    0            141.55    142.582756          142.60        3.253552                 -0.441247  7931250.0                 142.60  142.609524                     0 -0.576282   143.153636             142.98      -0.576282  142.641236        142.650            NaN   142.580000 -0.402475     0.383721           143.074684  144.065920      142.853580         142.60                  0                    0      1.914524                       0                     0                     0  143.293470     1.914524         45.304228               143.891429                    0         142.25  142.826839           142.60 -12625.058966  140.928271            142.55  142.292448  142.375548             NaN             NaN     142.98      22.082147  142.050909   56250  142.199264     142.45  141.665985     141.551429    141.80    142.371139  142.198858           6.093069         12.982937  24749.095195                 34.356740    142.580000  996.326985         -0.289034    142.719922  1000.495439           NaN        144.606776                NaN          141.973791         -0.015257                    0  141.928077                     0            -2.071222  141.907381        0.726923    141.9                 0                    0            144.41      NaN                0                      0                    0                     0                      0                     0                      0      144.422589               0.536009   9.551140  141.800000    141.48              0  141.973791                    0
1  140.6   46550  2025-08-04 14:45:00               0  590565.905761    590565.905761   -2004.0           3.882636   142.995846  142.871972        140.937874            145.657131            140.177968            143.830743            138.351580           142.004356                 139.5            147.483519  143.083692    142.702      140.549418            136.525192      -13480.425489      -0.517356     -1.638235             -0.214672  -0.547167      142.446833             -0.241443         -0.255098                    0            141.26    142.373057          141.95        3.764253                 -0.546722  6544930.0                 141.95  142.382857                     0 -0.690385   143.030909             142.82      -0.690385  142.446833        142.825            NaN   142.283333 -0.482566     0.425287           142.939160  143.804646      142.655496         141.95                  0                    0      1.777772                       0                     0                     0  143.240556     1.777772         36.972071               143.940000                    0         142.05  142.582652           141.95 -13481.479113  140.368814            141.71  141.945804  142.079110       -0.463852        0.298442     142.82      22.352973  141.714545   46550  141.773237     142.16  141.310656     141.102857    141.32    142.114075  141.908156           7.063728         10.946364  24749.095195                 31.908617    142.283333  996.043297         -0.342061    142.410156  1000.495439    -27.635929        144.702126         143.088264          141.461443         -0.017233                    0  141.518186                     0            -2.488720  141.486844        0.730769    141.9                 0                    0            144.38      NaN                0                      0                    0                     0                      0                     0                      0      144.344247               0.608770  10.862416  141.311111    141.08              0  141.461443                    0
root - [INFO]{CONS_1} - create_df_eval_prediction() - df_eval:
                  Date  buy_sell_point  Close  Volume
0  2025-08-04 11:45:00               0  139.8   31050
1  2025-08-04 11:30:00               0  139.6   35700
root - [INFO]{CONS_1} - create_df_eval_prediction() - df_S record:
           Date  buy_sell_point    ti_acc_dist  volu_Chaikin_AD  volu_OBV  mtum_PVOh_12_26_9  ma_TRIMA_50   ma_EMA_50  olap_BBAND_LOWER  sti_TOS_STDEVALL_U_2  sti_TOS_STDEVALL_L_1  sti_TOS_STDEVALL_U_1  sti_TOS_STDEVALL_L_2  sti_TOS_STDEVALL_LR  ti_donchian_lower_20  sti_TOS_STDEVALL_U_3  ma_KAMA_50  ma_SMA_50  vola_KCLe_20_2  sti_TOS_STDEVALL_L_3  ti_force_index_13  mtum_MACD_fix  mtum_AO_5_34  mtum_MACD_ext_signal  mtum_MACD  vola_KCBe_20_2  mtum_MACD_fix_signal  mtum_MACD_signal  mcrh_EMA_50_WMA_100  ti_kelt_20_lower  olap_MCGD_10  ichi_kijun_sen  olap_BBAND_dif  mtum_STCmacd_10_12_26_05  volu_PVOL  ti_donchian_center_20   ma_WMA_20  mcrh_KAMA_20_WMA_100  mtum_APO  ma_TRIMA_20  olap_BBAND_MIDDLE  mtum_MACD_ext   ma_EMA_20  ichi_senkou_a  ichi_senkou_b  ma_TRIMA_10  mtum_PPO  tend_VHF_28  olap_ALMA_10_60_085    olap_SAR  olap_SINWMA_14  olap_MIDPRICE  mcrh_T3_50_T3_100  mcrh_TEMA_20_EMA_50  mtum_PLUS_DM  mcrh_TRIMA_20_TEMA_100  mcrh_TRIMA_5_DEMA_20  mcrh_TRIMA_5_TEMA_50   olap_VMAP  mtum_DMP_14  ti_choppiness_14  sti_LINEARREG_INTERCEPT  mcrh_KAMA_5_TEMA_10  olap_MIDPOINT    ma_T3_10  ichi_tenkan_sen   volu_EFI_13    vola_HWL  ti_supertrend_20  ma_KAMA_10  ma_KAMA_20  cycl_SINE_sine  cycl_SINE_lead  ma_SMA_20  cycl_DCPERIOD   ma_WMA_10  Volume   ma_KAMA_5  ma_SMA_10    ma_EMA_5  sti_LINEARREG  ma_SMA_5  olap_VWMA_10   ma_EMA_10  mtum_PVOs_12_26_9  mtum_PVO_12_26_9   HSI_SMA_100  mtum_QQE_14_5_4236_RSIMA  olap_SWMA_10  volu_NVI_1  mtum_SMIs_5_20_5  olap_PWMA_10   volu_PVI_1  cycl_DCPHASE  olap_BBAND_UPPER  olap_HT_TRENDLINE  olap_HWMA_02_01_01  mtum_BIAS_SMA_26  mcrh_KAMA_50_T3_100     ma_T3_5  mcrh_TRIMA_20_SMA_50  ti_coppock_14_11_10   ti_hma_20  tend_renko_ATR  tend_ll  mcrh_EMA_5_T3_50  mcrh_T3_20_TRIMA_50  ti_kelt_20_upper  tend_hl  mcrh_T3_5_T3_10  mcrh_TEMA_20_DEMA_100  mcrh_TEMA_50_T3_100  mcrh_TEMA_5_KAMA_100  mcrh_TRIMA_20_SMA_100  mcrh_TRIMA_10_SMA_20  mcrh_TRIMA_20_WMA_100  vola_KCUe_20_2  vola_THERMOma_20_2_05   mtum_ADX  ma_TRIMA_5  ma_WMA_5  tend_hl_crash    vola_HWM  mcrh_DEMA_20_SMA_50
0  1.754320e+09               0  558338.982684    558338.982684   44546.0           6.889869   142.971385  142.964706        141.353224            145.683341            140.204177            143.856953            138.377789           142.030565                 140.8            147.509729  143.187179    142.774      140.859883            136.551401      -12623.829737      -0.417381     -1.078824             -0.109117  -0.441773      142.641236             -0.172465         -0.182081                    0            141.55    142.582756          142.60        3.253552                 -0.441247  7931250.0                 142.60  142.609524                     0 -0.576282   143.153636             142.98      -0.576282  142.641236        142.650            NaN   142.580000 -0.402475     0.383721           143.074684  144.065920      142.853580         142.60                  0                    0      1.914524                       0                     0                     0  143.293470     1.914524         45.304228               143.891429                    0         142.25  142.826839           142.60 -12625.058966  140.928271            142.55  142.292448  142.375548             NaN             NaN     142.98      22.082147  142.050909   56250  142.199264     142.45  141.665985     141.551429    141.80    142.371139  142.198858           6.093069         12.982937  24749.095195                 34.356740    142.580000  996.326985         -0.289034    142.719922  1000.495439           NaN        144.606776                NaN          141.973791         -0.015257                    0  141.928077                     0            -2.071222  141.907381        0.726923    141.9                 0                    0            144.41      NaN                0                      0                    0                     0                      0                     0                      0      144.422589               0.536009   9.551140  141.800000    141.48              0  141.973791                    0
1  1.754319e+09               0  590565.905761    590565.905761   -2004.0           3.882636   142.995846  142.871972        140.937874            145.657131            140.177968            143.830743            138.351580           142.004356                 139.5            147.483519  143.083692    142.702      140.549418            136.525192      -13480.425489      -0.517356     -1.638235             -0.214672  -0.547167      142.446833             -0.241443         -0.255098                    0            141.26    142.373057          141.95        3.764253                 -0.546722  6544930.0                 141.95  142.382857                     0 -0.690385   143.030909             142.82      -0.690385  142.446833        142.825            NaN   142.283333 -0.482566     0.425287           142.939160  143.804646      142.655496         141.95                  0                    0      1.777772                       0                     0                     0  143.240556     1.777772         36.972071               143.940000                    0         142.05  142.582652           141.95 -13481.479113  140.368814            141.71  141.945804  142.079110       -0.463852        0.298442     142.82      22.352973  141.714545   46550  141.773237     142.16  141.310656     141.102857    141.32    142.114075  141.908156           7.063728         10.946364  24749.095195                 31.908617    142.283333  996.043297         -0.342061    142.410156  1000.495439    -27.635929        144.702126         143.088264          141.461443         -0.017233                    0  141.518186                     0            -2.488720  141.486844        0.730769    141.9                 0                    0            144.38      NaN                0                      0                    0                     0                      0                     0                      0      144.344247               0.608770  10.862416  141.311111    141.08              0  141.461443                    0
root - [INFO]{CONS_1} - create_df_eval_prediction() - Index(['Date', 'buy_sell_point', 'ti_acc_dist', 'volu_Chaikin_AD', 'volu_OBV',
       'mtum_PVOh_12_26_9', 'ma_TRIMA_50', 'ma_EMA_50', 'olap_BBAND_LOWER',
       'sti_TOS_STDEVALL_U_2',
       ...
       'mcrh_TRIMA_10_SMA_20', 'mcrh_TRIMA_20_WMA_100', 'vola_KCUe_20_2',
       'vola_THERMOma_20_2_05', 'mtum_ADX', 'ma_TRIMA_5', 'ma_WMA_5',
       'tend_hl_crash', 'vola_HWM', 'mcrh_DEMA_20_SMA_50'],
      dtype='object', length=124)
root - [INFO]{CONS_1} - check_columns_selections_Raise() - Checking columns selected for prediction: loss	accuracy	val_loss	val_accuracy
0.676	0.656	0.579	0.664
0.586	0.698	0.404	0.82
0.539	0.721	0.584	0.645
0.46	0.79	0.415	0.784
0.411	0.816	0.836	0.557
0.356	0.842	0.441	0.765
0.313	0.872	0.319	0.866
0.283	0.884	0.354	0.85
0.271	0.885	0.424	0.806
0.224	0.906	0.215	0.918
0.218	0.917	0.278	0.891
0.192	0.923	0.177	0.954
0.176	0.931	0.173	0.937

Columns TFm_2888.HK_pos_reg4_mult_128.h5:
Date, buy_sell_point, ti_acc_dist, volu_Chaikin_AD, volu_OBV, mtum_PVOh_12_26_9, ma_TRIMA_50, ma_EMA_50, olap_BBAND_LOWER, sti_TOS_STDEVALL_U_2, sti_TOS_STDEVALL_L_1, sti_TOS_STDEVALL_U_1, sti_TOS_STDEVALL_L_2, sti_TOS_STDEVALL_LR, ti_donchian_lower_20, sti_TOS_STDEVALL_U_3, ma_KAMA_50, ma_SMA_50, vola_KCLe_20_2, sti_TOS_STDEVALL_L_3, ti_force_index_13, mtum_MACD_fix, mtum_AO_5_34, mtum_MACD_ext_signal, mtum_MACD, vola_KCBe_20_2, mtum_MACD_fix_signal, mtum_MACD_signal, mcrh_EMA_50_WMA_100, ti_kelt_20_lower, olap_MCGD_10, ichi_kijun_sen, olap_BBAND_dif, mtum_STCmacd_10_12_26_05, volu_PVOL, ti_donchian_center_20, ma_WMA_20, mcrh_KAMA_20_WMA_100, mtum_APO, ma_TRIMA_20, olap_BBAND_MIDDLE, mtum_MACD_ext, ma_EMA_20, ichi_senkou_a, ichi_senkou_b, ma_TRIMA_10, mtum_PPO, tend_VHF_28, olap_ALMA_10_60_085, olap_SAR, olap_SINWMA_14, olap_MIDPRICE, mcrh_T3_50_T3_100, mcrh_TEMA_20_EMA_50, mtum_PLUS_DM, mcrh_TRIMA_20_TEMA_100, mcrh_TRIMA_5_DEMA_20, mcrh_TRIMA_5_TEMA_50, olap_VMAP, mtum_DMP_14, ti_choppiness_14, sti_LINEARREG_INTERCEPT, mcrh_KAMA_5_TEMA_10, olap_MIDPOINT, ma_T3_10, ichi_tenkan_sen, volu_EFI_13, vola_HWL, ti_supertrend_20, ma_KAMA_10, ma_KAMA_20, cycl_SINE_sine, cycl_SINE_lead, ma_SMA_20, cycl_DCPERIOD, ma_WMA_10, Volume, ma_KAMA_5, ma_SMA_10, ma_EMA_5, sti_LINEARREG, ma_SMA_5, olap_VWMA_10, ma_EMA_10, mtum_PVOs_12_26_9, mtum_PVO_12_26_9, HSI_SMA_100, mtum_QQE_14_5_4236_RSIMA, olap_SWMA_10, volu_NVI_1, mtum_SMIs_5_20_5, olap_PWMA_10, volu_PVI_1, cycl_DCPHASE, olap_BBAND_UPPER, olap_HT_TRENDLINE, olap_HWMA_02_01_01, mtum_BIAS_SMA_26, mcrh_KAMA_50_T3_100, ma_T3_5, mcrh_TRIMA_20_SMA_50, ti_coppock_14_11_10, ti_hma_20, tend_renko_ATR, tend_ll, mcrh_EMA_5_T3_50, mcrh_T3_20_TRIMA_50, ti_kelt_20_upper, tend_hl, mcrh_T3_5_T3_10, mcrh_TEMA_20_DEMA_100, mcrh_TEMA_50_T3_100, mcrh_TEMA_5_KAMA_100, mcrh_TRIMA_20_SMA_100, mcrh_TRIMA_10_SMA_20, mcrh_TRIMA_20_WMA_100, vola_KCUe_20_2, vola_THERMOma_20_2_05, mtum_ADX, ma_TRIMA_5, ma_WMA_5, tend_hl_crash, vola_HWM, mcrh_DEMA_20_SMA_50
root - [INFO]{CONS_1} - check_columns_selections_Raise() - match columns: ['Date', 'buy_sell_point', 'ti_acc_dist', 'volu_Chaikin_AD', 'volu_OBV', 'mtum_PVOh_12_26_9', 'ma_TRIMA_50', 'ma_EMA_50', 'olap_BBAND_LOWER', 'sti_TOS_STDEVALL_U_2', 'sti_TOS_STDEVALL_L_1', 'sti_TOS_STDEVALL_U_1', 'sti_TOS_STDEVALL_L_2', 'sti_TOS_STDEVALL_LR', 'ti_donchian_lower_20', 'sti_TOS_STDEVALL_U_3', 'ma_KAMA_50', 'ma_SMA_50', 'vola_KCLe_20_2', 'sti_TOS_STDEVALL_L_3', 'ti_force_index_13', 'mtum_MACD_fix', 'mtum_AO_5_34', 'mtum_MACD_ext_signal', 'mtum_MACD', 'vola_KCBe_20_2', 'mtum_MACD_fix_signal', 'mtum_MACD_signal', 'mcrh_EMA_50_WMA_100', 'ti_kelt_20_lower', 'olap_MCGD_10', 'ichi_kijun_sen', 'olap_BBAND_dif', 'mtum_STCmacd_10_12_26_05', 'volu_PVOL', 'ti_donchian_center_20', 'ma_WMA_20', 'mcrh_KAMA_20_WMA_100', 'mtum_APO', 'ma_TRIMA_20', 'olap_BBAND_MIDDLE', 'mtum_MACD_ext', 'ma_EMA_20', 'ichi_senkou_a', 'ichi_senkou_b', 'ma_TRIMA_10', 'mtum_PPO', 'tend_VHF_28', 'olap_ALMA_10_60_085', 'olap_SAR', 'olap_SINWMA_14', 'olap_MIDPRICE', 'mcrh_T3_50_T3_100', 'mcrh_TEMA_20_EMA_50', 'mtum_PLUS_DM', 'mcrh_TRIMA_20_TEMA_100', 'mcrh_TRIMA_5_DEMA_20', 'mcrh_TRIMA_5_TEMA_50', 'olap_VMAP', 'mtum_DMP_14', 'ti_choppiness_14', 'sti_LINEARREG_INTERCEPT', 'mcrh_KAMA_5_TEMA_10', 'olap_MIDPOINT', 'ma_T3_10', 'ichi_tenkan_sen', 'volu_EFI_13', 'vola_HWL', 'ti_supertrend_20', 'ma_KAMA_10', 'ma_KAMA_20', 'cycl_SINE_sine', 'cycl_SINE_lead', 'ma_SMA_20', 'cycl_DCPERIOD', 'ma_WMA_10', 'Volume', 'ma_KAMA_5', 'ma_SMA_10', 'ma_EMA_5', 'sti_LINEARREG', 'ma_SMA_5', 'olap_VWMA_10', 'ma_EMA_10', 'mtum_PVOs_12_26_9', 'mtum_PVO_12_26_9', 'HSI_SMA_100', 'mtum_QQE_14_5_4236_RSIMA', 'olap_SWMA_10', 'volu_NVI_1', 'mtum_SMIs_5_20_5', 'olap_PWMA_10', 'volu_PVI_1', 'cycl_DCPHASE', 'olap_BBAND_UPPER', 'olap_HT_TRENDLINE', 'olap_HWMA_02_01_01', 'mtum_BIAS_SMA_26', 'mcrh_KAMA_50_T3_100', 'ma_T3_5', 'mcrh_TRIMA_20_SMA_50', 'ti_coppock_14_11_10', 'ti_hma_20', 'tend_renko_ATR', 'tend_ll', 'mcrh_EMA_5_T3_50', 'mcrh_T3_20_TRIMA_50', 'ti_kelt_20_upper', 'tend_hl', 'mcrh_T3_5_T3_10', 'mcrh_TEMA_20_DEMA_100', 'mcrh_TEMA_50_T3_100', 'mcrh_TEMA_5_KAMA_100', 'mcrh_TRIMA_20_SMA_100', 'mcrh_TRIMA_10_SMA_20', 'mcrh_TRIMA_20_WMA_100', 'vola_KCUe_20_2', 'vola_THERMOma_20_2_05', 'mtum_ADX', 'ma_TRIMA_5', 'ma_WMA_5', 'tend_hl_crash', 'vola_HWM', 'mcrh_DEMA_20_SMA_50']
root - [INFO]{CONS_1} - check_columns_selections_Raise() - cols model columns: Index(['Date', 'buy_sell_point', 'ti_acc_dist', 'volu_Chaikin_AD', 'volu_OBV',
       'mtum_PVOh_12_26_9', 'ma_TRIMA_50', 'ma_EMA_50', 'olap_BBAND_LOWER',
       'sti_TOS_STDEVALL_U_2',
       ...
       'mcrh_TRIMA_10_SMA_20', 'mcrh_TRIMA_20_WMA_100', 'vola_KCUe_20_2',
       'vola_THERMOma_20_2_05', 'mtum_ADX', 'ma_TRIMA_5', 'ma_WMA_5',
       'tend_hl_crash', 'vola_HWM', 'mcrh_DEMA_20_SMA_50'],
      dtype='object', length=124)
root - [INFO]{CONS_1} - check_columns_selections_Raise() - Columns required by the Model: Models/TF_multi/TFm_2888.HK_pos_reg4_mult_128.h5__TEST_26.0%_accuracy_93.14%__loss_0.18__epochs_12[90].csv are: Date, buy_sell_point, ti_acc_dist, volu_Chaikin_AD, volu_OBV, mtum_PVOh_12_26_9, ma_TRIMA_50, ma_EMA_50, olap_BBAND_LOWER, sti_TOS_STDEVALL_U_2, sti_TOS_STDEVALL_L_1, sti_TOS_STDEVALL_U_1, sti_TOS_STDEVALL_L_2, sti_TOS_STDEVALL_LR, ti_donchian_lower_20, sti_TOS_STDEVALL_U_3, ma_KAMA_50, ma_SMA_50, vola_KCLe_20_2, sti_TOS_STDEVALL_L_3, ti_force_index_13, mtum_MACD_fix, mtum_AO_5_34, mtum_MACD_ext_signal, mtum_MACD, vola_KCBe_20_2, mtum_MACD_fix_signal, mtum_MACD_signal, mcrh_EMA_50_WMA_100, ti_kelt_20_lower, olap_MCGD_10, ichi_kijun_sen, olap_BBAND_dif, mtum_STCmacd_10_12_26_05, volu_PVOL, ti_donchian_center_20, ma_WMA_20, mcrh_KAMA_20_WMA_100, mtum_APO, ma_TRIMA_20, olap_BBAND_MIDDLE, mtum_MACD_ext, ma_EMA_20, ichi_senkou_a, ichi_senkou_b, ma_TRIMA_10, mtum_PPO, tend_VHF_28, olap_ALMA_10_60_085, olap_SAR, olap_SINWMA_14, olap_MIDPRICE, mcrh_T3_50_T3_100, mcrh_TEMA_20_EMA_50, mtum_PLUS_DM, mcrh_TRIMA_20_TEMA_100, mcrh_TRIMA_5_DEMA_20, mcrh_TRIMA_5_TEMA_50, olap_VMAP, mtum_DMP_14, ti_choppiness_14, sti_LINEARREG_INTERCEPT, mcrh_KAMA_5_TEMA_10, olap_MIDPOINT, ma_T3_10, ichi_tenkan_sen, volu_EFI_13, vola_HWL, ti_supertrend_20, ma_KAMA_10, ma_KAMA_20, cycl_SINE_sine, cycl_SINE_lead, ma_SMA_20, cycl_DCPERIOD, ma_WMA_10, Volume, ma_KAMA_5, ma_SMA_10, ma_EMA_5, sti_LINEARREG, ma_SMA_5, olap_VWMA_10, ma_EMA_10, mtum_PVOs_12_26_9, mtum_PVO_12_26_9, HSI_SMA_100, mtum_QQE_14_5_4236_RSIMA, olap_SWMA_10, volu_NVI_1, mtum_SMIs_5_20_5, olap_PWMA_10, volu_PVI_1, cycl_DCPHASE, olap_BBAND_UPPER, olap_HT_TRENDLINE, olap_HWMA_02_01_01, mtum_BIAS_SMA_26, mcrh_KAMA_50_T3_100, ma_T3_5, mcrh_TRIMA_20_SMA_50, ti_coppock_14_11_10, ti_hma_20, tend_renko_ATR, tend_ll, mcrh_EMA_5_T3_50, mcrh_T3_20_TRIMA_50, ti_kelt_20_upper, tend_hl, mcrh_T3_5_T3_10, mcrh_TEMA_20_DEMA_100, mcrh_TEMA_50_T3_100, mcrh_TEMA_5_KAMA_100, mcrh_TRIMA_20_SMA_100, mcrh_TRIMA_10_SMA_20, mcrh_TRIMA_20_WMA_100, vola_KCUe_20_2, vola_THERMOma_20_2_05, mtum_ADX, ma_TRIMA_5, ma_WMA_5, tend_hl_crash, vola_HWM, mcrh_DEMA_20_SMA_50
root - [INFO]{CONS_1} - predict_Multi_models() -  Load model Type MULTI TF:   Path:  Models/TF_multi/[94mTFm_2888.HK_pos_reg4_mult_128[0m.h5   Shape df to predict: (-1, 10, 123)
root - [DEBUG]{CONS_1} - scaler_min_max_array() - Scaler will be Loaded Path: Models/TF_multi/Scalers/2888.HK_pos_reg4_.scal
root - [INFO]{CONS_1} - create_df_eval_prediction() - Columns selected for model: ['mtum_MACD_signal', 'mtum_MACD_fix_signal', 'mtum_STCmacd_10_12_26_05', 'mtum_MACD_fix', 'mtum_MACD', 'olap_BBAND_dif', 'mtum_DMP_14', 'mtum_MACD_ext_signal', 'mtum_AO_5_34', 'mtum_APO', 'mtum_PLUS_DM', 'volu_PVT', 'mtum_PPO', 'mtum_MACD_ext', 'cycl_SINE_lead', 'vola_HWU', 'volu_EFI_13', 'ti_force_index_13', 'tend_VHF_28', 'ti_coppock_14_11_10', 'ma_TEMA_20', 'olap_HWMA_02_01_01', 'ma_DEMA_10', 'mtum_SMIs_5_20_5', 'ma_KAMA_10', 'sti_TSF', 'mtum_BIAS_SMA_26', 'vola_HWM', 'ma_DEMA_20', 'sti_ENTP_10', 'mtum_QQE_14_5_4236_RSIMA', 'sti_CORREL', 'ma_TEMA_10']col_select: good9 pos_neg: neg model_name: TFm_2888.HK_neg_good9_mult_128
root - [INFO]{CONS_1} - create_df_eval_prediction() - Load model NameModel: TFm_2888.HK_neg_good9_mult_128 Neg/Pos: neg df.shape: (64, 37) Columns: good9
root - [INFO]{CONS_1} - create_df_eval_prediction() - df_in_pure record:
   Close  Volume                 Date  buy_sell_point  mtum_MACD_signal  mtum_MACD_fix_signal  mtum_STCmacd_10_12_26_05  mtum_MACD_fix  mtum_MACD  olap_BBAND_dif  mtum_DMP_14  mtum_MACD_ext_signal  mtum_AO_5_34  mtum_APO  mtum_PLUS_DM      volu_PVT  mtum_PPO  mtum_MACD_ext  cycl_SINE_lead    vola_HWU   volu_EFI_13  ti_force_index_13  tend_VHF_28  ti_coppock_14_11_10  ma_TEMA_20  olap_HWMA_02_01_01  ma_DEMA_10  mtum_SMIs_5_20_5  ma_KAMA_10     sti_TSF  mtum_BIAS_SMA_26    vola_HWM  ma_DEMA_20  sti_ENTP_10  mtum_QQE_14_5_4236_RSIMA  sti_CORREL  ma_TEMA_10
0  141.0   56250  2025-08-04 15:00:00               0         -0.182081             -0.172465                 -0.441247      -0.417381  -0.441773        3.253552     1.914524             -0.109117     -1.078824 -0.576282      1.914524 -47903.619147 -0.402475      -0.576282             NaN  143.019310 -12625.058966      -12623.829737     0.383721            -2.071222  141.714822          141.973791  141.521300         -0.289034  142.292448  141.371429         -0.015257  141.973791  142.168447     3.313115                 34.356740     0.87511  141.132873
1  140.6   46550  2025-08-04 14:45:00               0         -0.255098             -0.241443                 -0.546722      -0.517356  -0.547167        3.764253     1.777772             -0.214672     -1.638235 -0.690385      1.777772 -61109.292906 -0.482566      -0.690385        0.298442  142.554072 -13481.479113      -13480.425489     0.425287            -2.488720  141.314361          141.461443  141.115944         -0.342061  141.945804  140.884615         -0.017233  141.461443  141.843183     3.311018                 31.908617     0.90692  140.704333
root - [INFO]{CONS_1} - create_df_eval_prediction() - df_eval:
                  Date  buy_sell_point  Close  Volume
0  2025-08-04 11:45:00               0  139.8   31050
1  2025-08-04 11:30:00               0  139.6   35700
root - [INFO]{CONS_1} - create_df_eval_prediction() - df_S record:
           Date  buy_sell_point  mtum_MACD_signal  mtum_MACD_fix_signal  mtum_STCmacd_10_12_26_05  mtum_MACD_fix  mtum_MACD  olap_BBAND_dif  mtum_DMP_14  mtum_MACD_ext_signal  mtum_AO_5_34  mtum_APO  mtum_PLUS_DM      volu_PVT  mtum_PPO  mtum_MACD_ext  cycl_SINE_lead    vola_HWU   volu_EFI_13  ti_force_index_13  tend_VHF_28  ti_coppock_14_11_10  ma_TEMA_20  olap_HWMA_02_01_01  ma_DEMA_10  mtum_SMIs_5_20_5  ma_KAMA_10     sti_TSF  mtum_BIAS_SMA_26    vola_HWM  ma_DEMA_20  sti_ENTP_10  mtum_QQE_14_5_4236_RSIMA  sti_CORREL  ma_TEMA_10
0  1.754320e+09               0         -0.182081             -0.172465                 -0.441247      -0.417381  -0.441773        3.253552     1.914524             -0.109117     -1.078824 -0.576282      1.914524 -47903.619147 -0.402475      -0.576282             NaN  143.019310 -12625.058966      -12623.829737     0.383721            -2.071222  141.714822          141.973791  141.521300         -0.289034  142.292448  141.371429         -0.015257  141.973791  142.168447     3.313115                 34.356740     0.87511  141.132873
1  1.754319e+09               0         -0.255098             -0.241443                 -0.546722      -0.517356  -0.547167        3.764253     1.777772             -0.214672     -1.638235 -0.690385      1.777772 -61109.292906 -0.482566      -0.690385        0.298442  142.554072 -13481.479113      -13480.425489     0.425287            -2.488720  141.314361          141.461443  141.115944         -0.342061  141.945804  140.884615         -0.017233  141.461443  141.843183     3.311018                 31.908617     0.90692  140.704333
root - [INFO]{CONS_1} - create_df_eval_prediction() - Index(['Date', 'buy_sell_point', 'mtum_MACD_signal', 'mtum_MACD_fix_signal',
       'mtum_STCmacd_10_12_26_05', 'mtum_MACD_fix', 'mtum_MACD',
       'olap_BBAND_dif', 'mtum_DMP_14', 'mtum_MACD_ext_signal', 'mtum_AO_5_34',
       'mtum_APO', 'mtum_PLUS_DM', 'volu_PVT', 'mtum_PPO', 'mtum_MACD_ext',
       'cycl_SINE_lead', 'vola_HWU', 'volu_EFI_13', 'ti_force_index_13',
       'tend_VHF_28', 'ti_coppock_14_11_10', 'ma_TEMA_20',
       'olap_HWMA_02_01_01', 'ma_DEMA_10', 'mtum_SMIs_5_20_5', 'ma_KAMA_10',
       'sti_TSF', 'mtum_BIAS_SMA_26', 'vola_HWM', 'ma_DEMA_20', 'sti_ENTP_10',
       'mtum_QQE_14_5_4236_RSIMA', 'sti_CORREL', 'ma_TEMA_10'],
      dtype='object')
root - [INFO]{CONS_1} - check_columns_selections_Raise() - Checking columns selected for prediction: loss	accuracy	val_loss	val_accuracy
0.622	0.679	0.846	0.468
0.526	0.723	0.711	0.6
0.505	0.732	0.376	0.868
0.474	0.755	0.478	0.738
0.458	0.763	0.47	0.743
0.438	0.77	0.547	0.697
0.421	0.79	0.412	0.778
0.403	0.801	0.291	0.886
0.358	0.824	1.005	0.514
0.36	0.818	0.269	0.908
0.348	0.838	0.369	0.811
0.329	0.856	0.294	0.886
0.305	0.859	0.405	0.832
0.304	0.866	0.261	0.889
0.292	0.88	0.334	0.865
0.283	0.881	0.456	0.792
0.278	0.882	0.374	0.816

Columns TFm_2888.HK_neg_good9_mult_128.h5:
Date, buy_sell_point, mtum_MACD_signal, mtum_MACD_fix_signal, mtum_STCmacd_10_12_26_05, mtum_MACD_fix, mtum_MACD, olap_BBAND_dif, mtum_DMP_14, mtum_MACD_ext_signal, mtum_AO_5_34, mtum_APO, mtum_PLUS_DM, volu_PVT, mtum_PPO, mtum_MACD_ext, cycl_SINE_lead, vola_HWU, volu_EFI_13, ti_force_index_13, tend_VHF_28, ti_coppock_14_11_10, ma_TEMA_20, olap_HWMA_02_01_01, ma_DEMA_10, mtum_SMIs_5_20_5, ma_KAMA_10, sti_TSF, mtum_BIAS_SMA_26, vola_HWM, ma_DEMA_20, sti_ENTP_10, mtum_QQE_14_5_4236_RSIMA, sti_CORREL, ma_TEMA_10
root - [INFO]{CONS_1} - check_columns_selections_Raise() - match columns: ['Date', 'buy_sell_point', 'mtum_MACD_signal', 'mtum_MACD_fix_signal', 'mtum_STCmacd_10_12_26_05', 'mtum_MACD_fix', 'mtum_MACD', 'olap_BBAND_dif', 'mtum_DMP_14', 'mtum_MACD_ext_signal', 'mtum_AO_5_34', 'mtum_APO', 'mtum_PLUS_DM', 'volu_PVT', 'mtum_PPO', 'mtum_MACD_ext', 'cycl_SINE_lead', 'vola_HWU', 'volu_EFI_13', 'ti_force_index_13', 'tend_VHF_28', 'ti_coppock_14_11_10', 'ma_TEMA_20', 'olap_HWMA_02_01_01', 'ma_DEMA_10', 'mtum_SMIs_5_20_5', 'ma_KAMA_10', 'sti_TSF', 'mtum_BIAS_SMA_26', 'vola_HWM', 'ma_DEMA_20', 'sti_ENTP_10', 'mtum_QQE_14_5_4236_RSIMA', 'sti_CORREL', 'ma_TEMA_10']
root - [INFO]{CONS_1} - check_columns_selections_Raise() - cols model columns: Index(['Date', 'buy_sell_point', 'mtum_MACD_signal', 'mtum_MACD_fix_signal',
       'mtum_STCmacd_10_12_26_05', 'mtum_MACD_fix', 'mtum_MACD',
       'olap_BBAND_dif', 'mtum_DMP_14', 'mtum_MACD_ext_signal', 'mtum_AO_5_34',
       'mtum_APO', 'mtum_PLUS_DM', 'volu_PVT', 'mtum_PPO', 'mtum_MACD_ext',
       'cycl_SINE_lead', 'vola_HWU', 'volu_EFI_13', 'ti_force_index_13',
       'tend_VHF_28', 'ti_coppock_14_11_10', 'ma_TEMA_20',
       'olap_HWMA_02_01_01', 'ma_DEMA_10', 'mtum_SMIs_5_20_5', 'ma_KAMA_10',
       'sti_TSF', 'mtum_BIAS_SMA_26', 'vola_HWM', 'ma_DEMA_20', 'sti_ENTP_10',
       'mtum_QQE_14_5_4236_RSIMA', 'sti_CORREL', 'ma_TEMA_10'],
      dtype='object')
root - [INFO]{CONS_1} - check_columns_selections_Raise() - Columns required by the Model: Models/TF_multi/TFm_2888.HK_neg_good9_mult_128.h5__TEST_24.1%_accuracy_88.23%__loss_0.28__epochs_16[90].csv are: Date, buy_sell_point, mtum_MACD_signal, mtum_MACD_fix_signal, mtum_STCmacd_10_12_26_05, mtum_MACD_fix, mtum_MACD, olap_BBAND_dif, mtum_DMP_14, mtum_MACD_ext_signal, mtum_AO_5_34, mtum_APO, mtum_PLUS_DM, volu_PVT, mtum_PPO, mtum_MACD_ext, cycl_SINE_lead, vola_HWU, volu_EFI_13, ti_force_index_13, tend_VHF_28, ti_coppock_14_11_10, ma_TEMA_20, olap_HWMA_02_01_01, ma_DEMA_10, mtum_SMIs_5_20_5, ma_KAMA_10, sti_TSF, mtum_BIAS_SMA_26, vola_HWM, ma_DEMA_20, sti_ENTP_10, mtum_QQE_14_5_4236_RSIMA, sti_CORREL, ma_TEMA_10
root - [INFO]{CONS_1} - predict_Multi_models() -  Load model Type MULTI TF:   Path:  Models/TF_multi/[94mTFm_2888.HK_neg_good9_mult_128[0m.h5   Shape df to predict: (-1, 10, 34)
root - [DEBUG]{CONS_1} - scaler_min_max_array() - Scaler will be Loaded Path: Models/TF_multi/Scalers/2888.HK_neg_good9_.scal
root - [INFO]{CONS_1} - create_df_eval_prediction() - Columns selected for model: ['mtum_MACD_signal', 'mtum_MACD_fix_signal', 'mtum_STCmacd_10_12_26_05', 'mtum_MACD_fix', 'mtum_MACD', 'olap_BBAND_dif', 'mtum_DMP_14', 'mtum_MACD_ext_signal', 'mtum_AO_5_34', 'mtum_APO', 'mtum_PLUS_DM', 'volu_PVT', 'mtum_PPO', 'mtum_MACD_ext', 'cycl_SINE_lead', 'vola_HWU', 'volu_EFI_13', 'ti_force_index_13', 'tend_VHF_28', 'ti_coppock_14_11_10', 'ma_TEMA_20', 'olap_HWMA_02_01_01', 'ma_DEMA_10', 'mtum_SMIs_5_20_5', 'ma_KAMA_10', 'sti_TSF', 'mtum_BIAS_SMA_26', 'vola_HWM', 'ma_DEMA_20', 'sti_ENTP_10', 'mtum_QQE_14_5_4236_RSIMA', 'sti_CORREL', 'ma_TEMA_10', 'ti_donchian_upper_20', 'trad_r2', 'ti_konk_avg', 'trad_r3', 'ti_hma_20', 'mcrh_TEMA_20_DEMA_100', 'tend_lh_crash', 'sti_LINEARREG_SLOPE', 'sti_LINEARREG_ANGLE', 'sti_LINEARREG', 'olap_BBAND_UPPER', 'olap_VWMA_10', 'vola_HWL', 'olap_SSF_10_2', 'ma_DEMA_5', 'ma_T3_5', 'fibo_r3', 'volu_PVI_1', 'ma_SMA_5', 'wood_pp', 'cama_r3', 'ma_EMA_5', 'wood_r2', 'cama_r2', 'ichi_tenkan_sen', 'High', 'mtum_CTI_12', 'fibo_s1', 'olap_SWMA_10', 'fibo_r2', 'fibo_r1', 'fibo_pp', 'demark_r1', 'demark_pp', 'cycl_SINE_sine', 'olap_BBAND_LOWER', 'cycl_DCPHASE', 'clas_r3', 'clas_r2', 'ma_TRIMA_5', 'mtum_QQEs_14_5_4236', 'clas_pp', 'olap_JMA_7_0', 'cama_pp', 'wood_r1', 'mtum_td_seq', 'perf_ha', 'clas_r1', 'ma_WMA_10', 'wood_r3', 'mcrh_TRIMA_20_WMA_100', 'ma_KAMA_5', 'mcrh_TEMA_20_EMA_50', 'mcrh_TEMA_50_T3_100', 'ma_EMA_10', 'mcrh_TRIMA_10_SMA_20', 'mcrh_TRIMA_20_SMA_100', 'mcrh_EMA_5_T3_50', 'mcrh_TRIMA_20_SMA_50', 'ma_SMA_10', 'ma_T3_10', 'trad_pp', 'ma_KAMA_20', 'trad_r1', 'vola_THERMOma_20_2_05', 'mtum_ADX', 'ma_EMA_50']col_select: reg4 pos_neg: neg model_name: TFm_2888.HK_neg_reg4_mult_lstm
root - [INFO]{CONS_1} - create_df_eval_prediction() - Load model NameModel: TFm_2888.HK_neg_reg4_mult_lstm Neg/Pos: neg df.shape: (64, 104) Columns: reg4
root - [INFO]{CONS_1} - create_df_eval_prediction() - df_in_pure record:
   Close  Volume                 Date  buy_sell_point  mtum_MACD_signal  mtum_MACD_fix_signal  mtum_STCmacd_10_12_26_05  mtum_MACD_fix  mtum_MACD  olap_BBAND_dif  mtum_DMP_14  mtum_MACD_ext_signal  mtum_AO_5_34  mtum_APO  mtum_PLUS_DM      volu_PVT  mtum_PPO  mtum_MACD_ext  cycl_SINE_lead    vola_HWU   volu_EFI_13  ti_force_index_13  tend_VHF_28  ti_coppock_14_11_10  ma_TEMA_20  olap_HWMA_02_01_01  ma_DEMA_10  mtum_SMIs_5_20_5  ma_KAMA_10     sti_TSF  mtum_BIAS_SMA_26    vola_HWM  ma_DEMA_20  sti_ENTP_10  mtum_QQE_14_5_4236_RSIMA  sti_CORREL  ma_TEMA_10  ti_donchian_upper_20     trad_r2  ti_konk_avg     trad_r3   ti_hma_20  mcrh_TEMA_20_DEMA_100  tend_lh_crash  sti_LINEARREG_SLOPE  sti_LINEARREG_ANGLE  sti_LINEARREG  olap_BBAND_UPPER  olap_VWMA_10    vola_HWL  olap_SSF_10_2   ma_DEMA_5     ma_T3_5     fibo_r3   volu_PVI_1  ma_SMA_5  wood_pp   cama_r3    ma_EMA_5  wood_r2     cama_r2  ichi_tenkan_sen   High  mtum_CTI_12     fibo_s1  olap_SWMA_10     fibo_r2     fibo_r1     fibo_pp  demark_r1  demark_pp  cycl_SINE_sine  olap_BBAND_LOWER  cycl_DCPHASE     clas_r3     clas_r2  ma_TRIMA_5  mtum_QQEs_14_5_4236     clas_pp  olap_JMA_7_0     cama_pp  wood_r1  mtum_td_seq  perf_ha     clas_r1   ma_WMA_10  wood_r3  mcrh_TRIMA_20_WMA_100   ma_KAMA_5  mcrh_TEMA_20_EMA_50  mcrh_TEMA_50_T3_100   ma_EMA_10  mcrh_TRIMA_10_SMA_20  mcrh_TRIMA_20_SMA_100  mcrh_EMA_5_T3_50  mcrh_TRIMA_20_SMA_50  ma_SMA_10    ma_T3_10     trad_pp  ma_KAMA_20     trad_r1  vola_THERMOma_20_2_05   mtum_ADX   ma_EMA_50
0  141.0   56250  2025-08-04 15:00:00               0         -0.182081             -0.172465                 -0.441247      -0.417381  -0.441773        3.253552     1.914524             -0.109117     -1.078824 -0.576282      1.914524 -47903.619147 -0.402475      -0.576282             NaN  143.019310 -12625.058966      -12623.829737     0.383721            -2.071222  141.714822          141.973791  141.521300         -0.289034  142.292448  141.371429         -0.015257  141.973791  142.168447     3.313115                 34.356740     0.87511  141.132873                 144.4  141.600000    38.829953  141.800000  141.907381                      0              0            -0.180000           -10.203974     141.551429        144.606776    142.371139  140.928271     141.532738  141.076631  141.928077  141.600000  1000.495439    141.80  140.975  141.1375  141.665985  141.475  141.091667           142.60  141.6    -0.881118  140.909000    142.580000  141.409000  141.291000  141.100000      141.2     141.05             NaN        141.353224           NaN  142.100000  141.600000  141.800000                  0.0  141.100000    141.140267  141.100000   141.05           12  141.050  141.300000  142.050909   141.55                      0  142.199264                    0                    0  142.198858                     0                      0                 0                     0     142.45  142.826839  141.100000  142.375548  141.300000               0.536009   9.551140  142.964706
1  140.6   46550  2025-08-04 14:45:00               0         -0.255098             -0.241443                 -0.546722      -0.517356  -0.547167        3.764253     1.777772             -0.214672     -1.638235 -0.690385      1.777772 -61109.292906 -0.482566      -0.690385        0.298442  142.554072 -13481.479113      -13480.425489     0.425287            -2.488720  141.314361          141.461443  141.115944         -0.342061  141.945804  140.884615         -0.017233  141.461443  141.843183     3.311018                 31.908617     0.90692  140.704333                 144.4  141.933333    34.400489  142.266667  141.486844                      0              0            -0.218242           -12.311294     141.102857        144.702126    142.114075  140.368814     141.116363  140.680868  141.518186  141.933333  1000.495439    141.32  140.600  141.2200  141.310656  141.400  141.146667           141.95  140.8    -0.914591  140.827733    142.283333  141.627733  141.438933  141.133333      141.3     141.05       -0.463852        140.937874    -27.635929  142.733333  141.933333  141.311111                  0.0  141.133333    140.814170  141.133333   140.40           13  140.225  141.466667  141.714545   141.20                      0  141.773237                    0                    0  141.908156                     0                      0                 0                     0     142.16  142.582652  141.133333  142.079110  141.466667               0.608770  10.862416  142.871972
root - [INFO]{CONS_1} - create_df_eval_prediction() - df_eval:
                  Date  buy_sell_point  Close  Volume
0  2025-08-04 11:45:00               0  139.8   31050
1  2025-08-04 11:30:00               0  139.6   35700
root - [INFO]{CONS_1} - create_df_eval_prediction() - df_S record:
           Date  buy_sell_point  mtum_MACD_signal  mtum_MACD_fix_signal  mtum_STCmacd_10_12_26_05  mtum_MACD_fix  mtum_MACD  olap_BBAND_dif  mtum_DMP_14  mtum_MACD_ext_signal  mtum_AO_5_34  mtum_APO  mtum_PLUS_DM      volu_PVT  mtum_PPO  mtum_MACD_ext  cycl_SINE_lead    vola_HWU   volu_EFI_13  ti_force_index_13  tend_VHF_28  ti_coppock_14_11_10  ma_TEMA_20  olap_HWMA_02_01_01  ma_DEMA_10  mtum_SMIs_5_20_5  ma_KAMA_10     sti_TSF  mtum_BIAS_SMA_26    vola_HWM  ma_DEMA_20  sti_ENTP_10  mtum_QQE_14_5_4236_RSIMA  sti_CORREL  ma_TEMA_10  ti_donchian_upper_20     trad_r2  ti_konk_avg     trad_r3   ti_hma_20  mcrh_TEMA_20_DEMA_100  tend_lh_crash  sti_LINEARREG_SLOPE  sti_LINEARREG_ANGLE  sti_LINEARREG  olap_BBAND_UPPER  olap_VWMA_10    vola_HWL  olap_SSF_10_2   ma_DEMA_5     ma_T3_5     fibo_r3   volu_PVI_1  ma_SMA_5  wood_pp   cama_r3    ma_EMA_5  wood_r2     cama_r2  ichi_tenkan_sen   High  mtum_CTI_12     fibo_s1  olap_SWMA_10     fibo_r2     fibo_r1     fibo_pp  demark_r1  demark_pp  cycl_SINE_sine  olap_BBAND_LOWER  cycl_DCPHASE     clas_r3     clas_r2  ma_TRIMA_5  mtum_QQEs_14_5_4236     clas_pp  olap_JMA_7_0     cama_pp  wood_r1  mtum_td_seq  perf_ha     clas_r1   ma_WMA_10  wood_r3  mcrh_TRIMA_20_WMA_100   ma_KAMA_5  mcrh_TEMA_20_EMA_50  mcrh_TEMA_50_T3_100   ma_EMA_10  mcrh_TRIMA_10_SMA_20  mcrh_TRIMA_20_SMA_100  mcrh_EMA_5_T3_50  mcrh_TRIMA_20_SMA_50  ma_SMA_10    ma_T3_10     trad_pp  ma_KAMA_20     trad_r1  vola_THERMOma_20_2_05   mtum_ADX   ma_EMA_50
0  1.754320e+09               0         -0.182081             -0.172465                 -0.441247      -0.417381  -0.441773        3.253552     1.914524             -0.109117     -1.078824 -0.576282      1.914524 -47903.619147 -0.402475      -0.576282             NaN  143.019310 -12625.058966      -12623.829737     0.383721            -2.071222  141.714822          141.973791  141.521300         -0.289034  142.292448  141.371429         -0.015257  141.973791  142.168447     3.313115                 34.356740     0.87511  141.132873                 144.4  141.600000    38.829953  141.800000  141.907381                      0              0            -0.180000           -10.203974     141.551429        144.606776    142.371139  140.928271     141.532738  141.076631  141.928077  141.600000  1000.495439    141.80  140.975  141.1375  141.665985  141.475  141.091667           142.60  141.6    -0.881118  140.909000    142.580000  141.409000  141.291000  141.100000      141.2     141.05             NaN        141.353224           NaN  142.100000  141.600000  141.800000                  0.0  141.100000    141.140267  141.100000   141.05           12  141.050  141.300000  142.050909   141.55                      0  142.199264                    0                    0  142.198858                     0                      0                 0                     0     142.45  142.826839  141.100000  142.375548  141.300000               0.536009   9.551140  142.964706
1  1.754319e+09               0         -0.255098             -0.241443                 -0.546722      -0.517356  -0.547167        3.764253     1.777772             -0.214672     -1.638235 -0.690385      1.777772 -61109.292906 -0.482566      -0.690385        0.298442  142.554072 -13481.479113      -13480.425489     0.425287            -2.488720  141.314361          141.461443  141.115944         -0.342061  141.945804  140.884615         -0.017233  141.461443  141.843183     3.311018                 31.908617     0.90692  140.704333                 144.4  141.933333    34.400489  142.266667  141.486844                      0              0            -0.218242           -12.311294     141.102857        144.702126    142.114075  140.368814     141.116363  140.680868  141.518186  141.933333  1000.495439    141.32  140.600  141.2200  141.310656  141.400  141.146667           141.95  140.8    -0.914591  140.827733    142.283333  141.627733  141.438933  141.133333      141.3     141.05       -0.463852        140.937874    -27.635929  142.733333  141.933333  141.311111                  0.0  141.133333    140.814170  141.133333   140.40           13  140.225  141.466667  141.714545   141.20                      0  141.773237                    0                    0  141.908156                     0                      0                 0                     0     142.16  142.582652  141.133333  142.079110  141.466667               0.608770  10.862416  142.871972
root - [INFO]{CONS_1} - create_df_eval_prediction() - Index(['Date', 'buy_sell_point', 'mtum_MACD_signal', 'mtum_MACD_fix_signal',
       'mtum_STCmacd_10_12_26_05', 'mtum_MACD_fix', 'mtum_MACD',
       'olap_BBAND_dif', 'mtum_DMP_14', 'mtum_MACD_ext_signal',
       ...
       'mcrh_EMA_5_T3_50', 'mcrh_TRIMA_20_SMA_50', 'ma_SMA_10', 'ma_T3_10',
       'trad_pp', 'ma_KAMA_20', 'trad_r1', 'vola_THERMOma_20_2_05', 'mtum_ADX',
       'ma_EMA_50'],
      dtype='object', length=102)
root - [INFO]{CONS_1} - check_columns_selections_Raise() - Checking columns selected for prediction: loss	accuracy	val_loss	val_accuracy
0.649	0.665	0.748	0.514
0.545	0.723	0.515	0.678
0.541	0.758	0.703	0.551
0.459	0.778	0.453	0.714
0.414	0.801	0.446	0.719
0.393	0.816	0.199	0.932
0.342	0.844	0.789	0.576
0.323	0.86	0.226	0.897
0.28	0.88	0.227	0.892
0.252	0.894	0.25	0.884
0.225	0.907	0.183	0.903
0.242	0.915	0.274	0.862
0.178	0.925	0.216	0.881
0.245	0.92	0.261	0.876
0.159	0.936	0.162	0.935

Columns TFm_2888.HK_neg_reg4_mult_lstm.h5:
Date, buy_sell_point, mtum_MACD_signal, mtum_MACD_fix_signal, mtum_STCmacd_10_12_26_05, mtum_MACD_fix, mtum_MACD, olap_BBAND_dif, mtum_DMP_14, mtum_MACD_ext_signal, mtum_AO_5_34, mtum_APO, mtum_PLUS_DM, volu_PVT, mtum_PPO, mtum_MACD_ext, cycl_SINE_lead, vola_HWU, volu_EFI_13, ti_force_index_13, tend_VHF_28, ti_coppock_14_11_10, ma_TEMA_20, olap_HWMA_02_01_01, ma_DEMA_10, mtum_SMIs_5_20_5, ma_KAMA_10, sti_TSF, mtum_BIAS_SMA_26, vola_HWM, ma_DEMA_20, sti_ENTP_10, mtum_QQE_14_5_4236_RSIMA, sti_CORREL, ma_TEMA_10, ti_donchian_upper_20, trad_r2, ti_konk_avg, trad_r3, ti_hma_20, mcrh_TEMA_20_DEMA_100, tend_lh_crash, sti_LINEARREG_SLOPE, sti_LINEARREG_ANGLE, sti_LINEARREG, olap_BBAND_UPPER, olap_VWMA_10, vola_HWL, olap_SSF_10_2, ma_DEMA_5, ma_T3_5, fibo_r3, volu_PVI_1, ma_SMA_5, wood_pp, cama_r3, ma_EMA_5, wood_r2, cama_r2, ichi_tenkan_sen, High, mtum_CTI_12, fibo_s1, olap_SWMA_10, fibo_r2, fibo_r1, fibo_pp, demark_r1, demark_pp, cycl_SINE_sine, olap_BBAND_LOWER, cycl_DCPHASE, clas_r3, clas_r2, ma_TRIMA_5, mtum_QQEs_14_5_4236, clas_pp, olap_JMA_7_0, cama_pp, wood_r1, mtum_td_seq, perf_ha, clas_r1, ma_WMA_10, wood_r3, mcrh_TRIMA_20_WMA_100, ma_KAMA_5, mcrh_TEMA_20_EMA_50, mcrh_TEMA_50_T3_100, ma_EMA_10, mcrh_TRIMA_10_SMA_20, mcrh_TRIMA_20_SMA_100, mcrh_EMA_5_T3_50, mcrh_TRIMA_20_SMA_50, ma_SMA_10, ma_T3_10, trad_pp, ma_KAMA_20, trad_r1, vola_THERMOma_20_2_05, mtum_ADX, ma_EMA_50
root - [INFO]{CONS_1} - check_columns_selections_Raise() - match columns: ['Date', 'buy_sell_point', 'mtum_MACD_signal', 'mtum_MACD_fix_signal', 'mtum_STCmacd_10_12_26_05', 'mtum_MACD_fix', 'mtum_MACD', 'olap_BBAND_dif', 'mtum_DMP_14', 'mtum_MACD_ext_signal', 'mtum_AO_5_34', 'mtum_APO', 'mtum_PLUS_DM', 'volu_PVT', 'mtum_PPO', 'mtum_MACD_ext', 'cycl_SINE_lead', 'vola_HWU', 'volu_EFI_13', 'ti_force_index_13', 'tend_VHF_28', 'ti_coppock_14_11_10', 'ma_TEMA_20', 'olap_HWMA_02_01_01', 'ma_DEMA_10', 'mtum_SMIs_5_20_5', 'ma_KAMA_10', 'sti_TSF', 'mtum_BIAS_SMA_26', 'vola_HWM', 'ma_DEMA_20', 'sti_ENTP_10', 'mtum_QQE_14_5_4236_RSIMA', 'sti_CORREL', 'ma_TEMA_10', 'ti_donchian_upper_20', 'trad_r2', 'ti_konk_avg', 'trad_r3', 'ti_hma_20', 'mcrh_TEMA_20_DEMA_100', 'tend_lh_crash', 'sti_LINEARREG_SLOPE', 'sti_LINEARREG_ANGLE', 'sti_LINEARREG', 'olap_BBAND_UPPER', 'olap_VWMA_10', 'vola_HWL', 'olap_SSF_10_2', 'ma_DEMA_5', 'ma_T3_5', 'fibo_r3', 'volu_PVI_1', 'ma_SMA_5', 'wood_pp', 'cama_r3', 'ma_EMA_5', 'wood_r2', 'cama_r2', 'ichi_tenkan_sen', 'High', 'mtum_CTI_12', 'fibo_s1', 'olap_SWMA_10', 'fibo_r2', 'fibo_r1', 'fibo_pp', 'demark_r1', 'demark_pp', 'cycl_SINE_sine', 'olap_BBAND_LOWER', 'cycl_DCPHASE', 'clas_r3', 'clas_r2', 'ma_TRIMA_5', 'mtum_QQEs_14_5_4236', 'clas_pp', 'olap_JMA_7_0', 'cama_pp', 'wood_r1', 'mtum_td_seq', 'perf_ha', 'clas_r1', 'ma_WMA_10', 'wood_r3', 'mcrh_TRIMA_20_WMA_100', 'ma_KAMA_5', 'mcrh_TEMA_20_EMA_50', 'mcrh_TEMA_50_T3_100', 'ma_EMA_10', 'mcrh_TRIMA_10_SMA_20', 'mcrh_TRIMA_20_SMA_100', 'mcrh_EMA_5_T3_50', 'mcrh_TRIMA_20_SMA_50', 'ma_SMA_10', 'ma_T3_10', 'trad_pp', 'ma_KAMA_20', 'trad_r1', 'vola_THERMOma_20_2_05', 'mtum_ADX', 'ma_EMA_50']
root - [INFO]{CONS_1} - check_columns_selections_Raise() - cols model columns: Index(['Date', 'buy_sell_point', 'mtum_MACD_signal', 'mtum_MACD_fix_signal',
       'mtum_STCmacd_10_12_26_05', 'mtum_MACD_fix', 'mtum_MACD',
       'olap_BBAND_dif', 'mtum_DMP_14', 'mtum_MACD_ext_signal',
       ...
       'mcrh_EMA_5_T3_50', 'mcrh_TRIMA_20_SMA_50', 'ma_SMA_10', 'ma_T3_10',
       'trad_pp', 'ma_KAMA_20', 'trad_r1', 'vola_THERMOma_20_2_05', 'mtum_ADX',
       'ma_EMA_50'],
      dtype='object', length=102)
root - [INFO]{CONS_1} - check_columns_selections_Raise() - Columns required by the Model: Models/TF_multi/TFm_2888.HK_neg_reg4_mult_lstm.h5__TEST_51.4%_accuracy_93.62%__loss_0.16__epochs_14[90].csv are: Date, buy_sell_point, mtum_MACD_signal, mtum_MACD_fix_signal, mtum_STCmacd_10_12_26_05, mtum_MACD_fix, mtum_MACD, olap_BBAND_dif, mtum_DMP_14, mtum_MACD_ext_signal, mtum_AO_5_34, mtum_APO, mtum_PLUS_DM, volu_PVT, mtum_PPO, mtum_MACD_ext, cycl_SINE_lead, vola_HWU, volu_EFI_13, ti_force_index_13, tend_VHF_28, ti_coppock_14_11_10, ma_TEMA_20, olap_HWMA_02_01_01, ma_DEMA_10, mtum_SMIs_5_20_5, ma_KAMA_10, sti_TSF, mtum_BIAS_SMA_26, vola_HWM, ma_DEMA_20, sti_ENTP_10, mtum_QQE_14_5_4236_RSIMA, sti_CORREL, ma_TEMA_10, ti_donchian_upper_20, trad_r2, ti_konk_avg, trad_r3, ti_hma_20, mcrh_TEMA_20_DEMA_100, tend_lh_crash, sti_LINEARREG_SLOPE, sti_LINEARREG_ANGLE, sti_LINEARREG, olap_BBAND_UPPER, olap_VWMA_10, vola_HWL, olap_SSF_10_2, ma_DEMA_5, ma_T3_5, fibo_r3, volu_PVI_1, ma_SMA_5, wood_pp, cama_r3, ma_EMA_5, wood_r2, cama_r2, ichi_tenkan_sen, High, mtum_CTI_12, fibo_s1, olap_SWMA_10, fibo_r2, fibo_r1, fibo_pp, demark_r1, demark_pp, cycl_SINE_sine, olap_BBAND_LOWER, cycl_DCPHASE, clas_r3, clas_r2, ma_TRIMA_5, mtum_QQEs_14_5_4236, clas_pp, olap_JMA_7_0, cama_pp, wood_r1, mtum_td_seq, perf_ha, clas_r1, ma_WMA_10, wood_r3, mcrh_TRIMA_20_WMA_100, ma_KAMA_5, mcrh_TEMA_20_EMA_50, mcrh_TEMA_50_T3_100, ma_EMA_10, mcrh_TRIMA_10_SMA_20, mcrh_TRIMA_20_SMA_100, mcrh_EMA_5_T3_50, mcrh_TRIMA_20_SMA_50, ma_SMA_10, ma_T3_10, trad_pp, ma_KAMA_20, trad_r1, vola_THERMOma_20_2_05, mtum_ADX, ma_EMA_50
root - [INFO]{CONS_1} - predict_Multi_models() -  Load model Type MULTI TF:   Path:  Models/TF_multi/[94mTFm_2888.HK_neg_reg4_mult_lstm[0m.h5   Shape df to predict: (-1, 10, 101)
root - [DEBUG]{CONS_1} - scaler_min_max_array() - Scaler will be Loaded Path: Models/TF_multi/Scalers/2888.HK_neg_reg4_.scal
root - [INFO]{CONS_1} - send_MULTI_alert_and_register() - Score POS: 180 for stock: 2888.HK with models: ['Acert_TFm_2888.HK_pos_vgood16__mult_gru', 'Acert_TFm_2888.HK_pos_reg4_mult_128']
root - [INFO]{CONS_1} - send_MULTI_alert_and_register() - Score NEG: 180 for stock: 2888.HK with models: ['Acert_TFm_2888.HK_neg_good9_mult_128', 'Acert_TFm_2888.HK_neg_reg4_mult_lstm']
root - [INFO]{SENDING_NEG} - send_image_full_alersts() - It will send alert  Stock: 2888.HK_neg
root - [INFO]{SENDING_NEG} - send_mesage_all_people() - Send alert everybody
root - [INFO]{CONS_1} - consumer() -  completed cycle    Date: 2025-08-07 06:18:04 stoks: 2318.HK 2888.HK
root - [DEBUG]{SENDING_NEG} - send_mesage_all_people() - Will send messege for LIST_PEOPLE_IDS_CHAT url: https://api.telegram.org/bot7543747510:AAGsgP2nQqu6dh-Ue95E_xTmc3Zi3JuZtGQ/sendMessage?chat_id=7164061667&text=<strong>📉 SELL 📉: 2888.HK</strong> <em>2025-07-31 09:30:00</em>-𝘓𝘰𝘯𝘥𝘰𝘯
☝Value:<pre> 141.8</pre>
<a href="https://www.tradingview.com/chart/1q24vjd7/?symbol=HKEX%3A2888">TraderView.com</a>

<b><i>Confidence of models:</i></b>
		⬆POS_score: 30.0%/2
		⬇NEG_score: 94.5%/2
<b><i>📊⚙Model names:</i></b><pre>
		⦁good9_mult_128: 94% 
		⦁reg4_mult_lstm: 95% </pre>&parse_mode=HTML
root - [INFO]{SENDING_NEG} - send_image_full_alersts() - It has sent alert  Stock: 2888.HK_neg
yfinance - [DEBUG]{CONS_1} - wrapper() - Entering history()
yfinance - [DEBUG]{CONS_1} - wrapper() -  Entering history()
yfinance - [DEBUG]{CONS_1} - history() - ^HSI: Yahoo GET parameters: {'range': '6d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{CONS_1} - wrapper() -   Entering get()
yfinance - [DEBUG]{CONS_1} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{CONS_1} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/^HSI
yfinance - [DEBUG]{CONS_1} - _make_request() - params={'range': '6d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{CONS_1} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{CONS_1} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{CONS_1} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{CONS_1} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{CONS_1} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{CONS_1} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{CONS_1} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{CONS_1} - _get_crumb_basic() - reusing crumb
yfinance - [DEBUG]{CONS_1} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{CONS_1} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{CONS_1} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{CONS_1} - _make_request() - response code=200
yfinance - [DEBUG]{CONS_1} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{CONS_1} - wrapper() -   Exiting get()
yfinance - [DEBUG]{CONS_1} - history() - ^HSI: yfinance received OHLC data: 2025-07-31 01:30:00 -> 2025-08-07 06:03:18
yfinance - [DEBUG]{CONS_1} - history() - ^HSI: OHLC after cleaning: 2025-07-31 09:30:00+08:00 -> 2025-08-07 14:03:18+08:00
yfinance - [DEBUG]{CONS_1} - history() - ^HSI: OHLC after combining events: 2025-07-31 09:30:00+08:00 -> 2025-08-07 14:03:18+08:00
yfinance - [DEBUG]{CONS_1} - history() - ^HSI: yfinance returning OHLC: 2025-07-31 09:30:00+08:00 -> 2025-08-07 14:00:00+08:00
yfinance - [DEBUG]{CONS_1} - wrapper() -  Exiting history()
yfinance - [DEBUG]{CONS_1} - wrapper() - Exiting history()
root - [INFO]{CONS_1} - consumer() -  completed cycle    Date: 2025-08-07 06:18:19 stoks: 2318.HK 2888.HK
yfinance - [DEBUG]{CONS_1} - wrapper() - Entering history()
yfinance - [DEBUG]{CONS_1} - wrapper() -  Entering history()
yfinance - [DEBUG]{CONS_1} - history() - ^HSI: Yahoo GET parameters: {'range': '6d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{CONS_1} - wrapper() -   Entering get()
yfinance - [DEBUG]{CONS_1} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{CONS_1} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/^HSI
yfinance - [DEBUG]{CONS_1} - _make_request() - params={'range': '6d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{CONS_1} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{CONS_1} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{CONS_1} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{CONS_1} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{CONS_1} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{CONS_1} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{CONS_1} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{CONS_1} - _get_crumb_basic() - reusing crumb
yfinance - [DEBUG]{CONS_1} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{CONS_1} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{CONS_1} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{CONS_1} - _make_request() - response code=200
yfinance - [DEBUG]{CONS_1} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{CONS_1} - wrapper() -   Exiting get()
yfinance - [DEBUG]{CONS_1} - history() - ^HSI: yfinance received OHLC data: 2025-07-31 01:30:00 -> 2025-08-07 06:03:32
yfinance - [DEBUG]{CONS_1} - history() - ^HSI: OHLC after cleaning: 2025-07-31 09:30:00+08:00 -> 2025-08-07 14:03:32+08:00
yfinance - [DEBUG]{CONS_1} - history() - ^HSI: OHLC after combining events: 2025-07-31 09:30:00+08:00 -> 2025-08-07 14:03:32+08:00
yfinance - [DEBUG]{CONS_1} - history() - ^HSI: yfinance returning OHLC: 2025-07-31 09:30:00+08:00 -> 2025-08-07 14:00:00+08:00
yfinance - [DEBUG]{CONS_1} - wrapper() -  Exiting history()
yfinance - [DEBUG]{CONS_1} - wrapper() - Exiting history()
root - [INFO]{CONS_1} - consumer() -  completed cycle    Date: 2025-08-07 06:18:35 stoks: 2318.HK 2888.HK
yfinance - [DEBUG]{CONS_1} - wrapper() - Entering history()
yfinance - [DEBUG]{CONS_1} - wrapper() -  Entering history()
yfinance - [DEBUG]{CONS_1} - history() - ^HSI: Yahoo GET parameters: {'range': '6d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{CONS_1} - wrapper() -   Entering get()
yfinance - [DEBUG]{CONS_1} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{CONS_1} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/^HSI
yfinance - [DEBUG]{CONS_1} - _make_request() - params={'range': '6d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{CONS_1} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{CONS_1} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{CONS_1} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{CONS_1} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{CONS_1} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{CONS_1} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{CONS_1} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{CONS_1} - _get_crumb_basic() - reusing crumb
yfinance - [DEBUG]{CONS_1} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{CONS_1} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{CONS_1} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{CONS_1} - _make_request() - response code=200
yfinance - [DEBUG]{CONS_1} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{CONS_1} - wrapper() -   Exiting get()
yfinance - [DEBUG]{CONS_1} - history() - ^HSI: yfinance received OHLC data: 2025-07-31 01:30:00 -> 2025-08-07 06:03:48
yfinance - [DEBUG]{CONS_1} - history() - ^HSI: OHLC after cleaning: 2025-07-31 09:30:00+08:00 -> 2025-08-07 14:03:48+08:00
yfinance - [DEBUG]{CONS_1} - history() - ^HSI: OHLC after combining events: 2025-07-31 09:30:00+08:00 -> 2025-08-07 14:03:48+08:00
yfinance - [DEBUG]{CONS_1} - history() - ^HSI: yfinance returning OHLC: 2025-07-31 09:30:00+08:00 -> 2025-08-07 14:00:00+08:00
yfinance - [DEBUG]{CONS_1} - wrapper() -  Exiting history()
yfinance - [DEBUG]{CONS_1} - wrapper() - Exiting history()
root - [INFO]{CONS_1} - consumer() -  completed cycle    Date: 2025-08-07 06:18:50 stoks: 2318.HK 2888.HK
yfinance - [DEBUG]{CONS_1} - wrapper() - Entering history()
yfinance - [DEBUG]{CONS_1} - wrapper() -  Entering history()
yfinance - [DEBUG]{CONS_1} - history() - ^HSI: Yahoo GET parameters: {'range': '6d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{CONS_1} - wrapper() -   Entering get()
yfinance - [DEBUG]{CONS_1} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{CONS_1} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/^HSI
yfinance - [DEBUG]{CONS_1} - _make_request() - params={'range': '6d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{CONS_1} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{CONS_1} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{CONS_1} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{CONS_1} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{CONS_1} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{CONS_1} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{CONS_1} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{CONS_1} - _get_crumb_basic() - reusing crumb
yfinance - [DEBUG]{CONS_1} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{CONS_1} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{CONS_1} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{CONS_1} - _make_request() - response code=200
yfinance - [DEBUG]{CONS_1} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{CONS_1} - wrapper() -   Exiting get()
yfinance - [DEBUG]{CONS_1} - history() - ^HSI: yfinance received OHLC data: 2025-07-31 01:30:00 -> 2025-08-07 06:04:04
yfinance - [DEBUG]{CONS_1} - history() - ^HSI: OHLC after cleaning: 2025-07-31 09:30:00+08:00 -> 2025-08-07 14:04:04+08:00
yfinance - [DEBUG]{CONS_1} - history() - ^HSI: OHLC after combining events: 2025-07-31 09:30:00+08:00 -> 2025-08-07 14:04:04+08:00
yfinance - [DEBUG]{CONS_1} - history() - ^HSI: yfinance returning OHLC: 2025-07-31 09:30:00+08:00 -> 2025-08-07 14:00:00+08:00
yfinance - [DEBUG]{CONS_1} - wrapper() -  Exiting history()
yfinance - [DEBUG]{CONS_1} - wrapper() - Exiting history()
root - [INFO]{CONS_1} - consumer() -  completed cycle    Date: 2025-08-07 06:19:05 stoks: 2318.HK 2888.HK
