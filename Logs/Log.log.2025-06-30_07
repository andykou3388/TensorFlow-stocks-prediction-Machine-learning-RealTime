h5py._conv - [DEBUG]{MainThread} - <module>() - Creating converter from 7 to 5
h5py._conv - [DEBUG]{MainThread} - <module>() - Creating converter from 5 to 7
h5py._conv - [DEBUG]{MainThread} - <module>() - Creating converter from 7 to 5
h5py._conv - [DEBUG]{MainThread} - <module>() - Creating converter from 5 to 7
matplotlib - [DEBUG]{MainThread} - wrapper() - matplotlib data path: /opt/conda/lib/python3.10/site-packages/matplotlib/mpl-data
matplotlib - [DEBUG]{MainThread} - wrapper() - CONFIGDIR=/root/.config/matplotlib
matplotlib - [DEBUG]{MainThread} - <module>() - interactive is False
matplotlib - [DEBUG]{MainThread} - <module>() - platform is linux
matplotlib - [DEBUG]{MainThread} - wrapper() - CACHEDIR=/root/.cache/matplotlib
matplotlib.font_manager - [DEBUG]{MainThread} - __init__() - font search path [PosixPath('/opt/conda/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf'), PosixPath('/opt/conda/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/afm'), PosixPath('/opt/conda/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/pdfcorefonts')]
matplotlib.font_manager - [INFO]{MainThread} - _load_fontmanager() - generated new fontManager
yfinance - [DEBUG]{MainThread} - wrapper() - Entering history()
peewee - [DEBUG]{MainThread} - execute_sql() - ('CREATE TABLE IF NOT EXISTS "_tz_kv" ("key" VARCHAR(255) NOT NULL PRIMARY KEY, "value" VARCHAR(255)) WITHOUT ROWID', [])
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['UBER', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -  Entering _fetch_ticker_tz()
yfinance - [DEBUG]{MainThread} - wrapper() -   Entering get()
yfinance - [DEBUG]{MainThread} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{MainThread} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/UBER
yfinance - [DEBUG]{MainThread} - _make_request() - params=frozendict.frozendict({'range': '1d', 'interval': '1d'})
yfinance - [DEBUG]{MainThread} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{MainThread} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -        Entering _load_cookie_curlCffi()
peewee - [DEBUG]{MainThread} - execute_sql() - ('CREATE TABLE IF NOT EXISTS "_cookieschema" ("strategy" VARCHAR(255) NOT NULL PRIMARY KEY, "fetch_date" DATETIME NOT NULL, "cookie_bytes" BLOB NOT NULL) WITHOUT ROWID', [])
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -        Exiting _load_cookie_curlCffi()
yfinance - [DEBUG]{MainThread} - wrapper() -        Entering _save_cookie_curlCffi()
peewee - [DEBUG]{MainThread} - execute_sql() - ('DELETE FROM "_cookieschema" WHERE ("_cookieschema"."strategy" = ?)', ['curlCffi'])
peewee - [DEBUG]{MainThread} - execute_sql() - ('BEGIN', None)
peewee - [DEBUG]{MainThread} - execute_sql() - ('INSERT INTO "_cookieschema" ("strategy", "fetch_date", "cookie_bytes") VALUES (?, ?, ?)', ['curlCffi', '2025-06-30T06:14:14.876766', <memory at 0x773299cefe80>])
yfinance - [DEBUG]{MainThread} - wrapper() -        Exiting _save_cookie_curlCffi()
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -        Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -         Entering _load_cookie_curlCffi()
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -         Exiting _load_cookie_curlCffi()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing persistent cookie
yfinance - [DEBUG]{MainThread} - wrapper() -        Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_crumb_basic() - crumb = 'dK3IG/1ev6r'
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _make_request() - response code=200
yfinance - [DEBUG]{MainThread} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{MainThread} - wrapper() -   Exiting get()
yfinance - [DEBUG]{MainThread} - wrapper() -  Exiting _fetch_ticker_tz()
peewee - [DEBUG]{MainThread} - execute_sql() - ('BEGIN', None)
peewee - [DEBUG]{MainThread} - execute_sql() - ('INSERT INTO "_tz_kv" ("key", "value") VALUES (?, ?)', ['UBER', 'America/New_York'])
yfinance - [DEBUG]{MainThread} - wrapper() -  Entering history()
yfinance - [DEBUG]{MainThread} - history() - UBER: Yahoo GET parameters: {'range': '60d', 'interval': '15m', 'includePrePost': True, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -   Entering get()
yfinance - [DEBUG]{MainThread} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{MainThread} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/UBER
yfinance - [DEBUG]{MainThread} - _make_request() - params={'range': '60d', 'interval': '15m', 'includePrePost': True, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{MainThread} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - _get_crumb_basic() - reusing crumb
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _make_request() - response code=200
yfinance - [DEBUG]{MainThread} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{MainThread} - wrapper() -   Exiting get()
yfinance - [DEBUG]{MainThread} - history() - UBER: yfinance received OHLC data: 2025-04-02 08:00:00 -> 2025-06-27 23:59:53
yfinance - [DEBUG]{MainThread} - history() - UBER: OHLC after cleaning: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:59:53-04:00
yfinance - [DEBUG]{MainThread} - history() - UBER: OHLC after combining events: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:59:53-04:00
yfinance - [DEBUG]{MainThread} - history() - UBER: yfinance returning OHLC: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:45:00-04:00
yfinance - [DEBUG]{MainThread} - wrapper() -  Exiting history()
yfinance - [DEBUG]{MainThread} - wrapper() - Exiting history()
root - [INFO]{MainThread} - get_buy_sell_points_Roll() - Parameters of acquisition "buy_sell_points" for this stock is set to POSITIVE (units) 	92%: 1.123 	98%: 1.8743 NEGATIVE (units) 	93%: 1.252 	98%: 1.9188
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=99)
           2	LOAD_GLOBAL(arg=0, lineno=106)
           4	LOAD_FAST(arg=0, lineno=106)
           6	CALL_FUNCTION(arg=1, lineno=106)
           8	STORE_FAST(arg=4, lineno=106)
          10	LOAD_GLOBAL(arg=1, lineno=107)
          12	LOAD_METHOD(arg=2, lineno=107)
          14	LOAD_FAST(arg=4, lineno=107)
          16	CALL_METHOD(arg=1, lineno=107)
          18	STORE_FAST(arg=5, lineno=107)
          20	LOAD_GLOBAL(arg=1, lineno=108)
          22	LOAD_METHOD(arg=2, lineno=108)
          24	LOAD_FAST(arg=4, lineno=108)
          26	CALL_METHOD(arg=1, lineno=108)
          28	STORE_FAST(arg=6, lineno=108)
          30	LOAD_GLOBAL(arg=1, lineno=109)
          32	LOAD_METHOD(arg=2, lineno=109)
          34	LOAD_FAST(arg=4, lineno=109)
          36	CALL_METHOD(arg=1, lineno=109)
          38	STORE_FAST(arg=7, lineno=109)
          40	LOAD_GLOBAL(arg=3, lineno=111)
          42	LOAD_FAST(arg=3, lineno=111)
          44	LOAD_FAST(arg=4, lineno=111)
          46	CALL_FUNCTION(arg=2, lineno=111)
          48	GET_ITER(arg=None, lineno=111)
>         50	FOR_ITER(arg=188, lineno=111)
          52	STORE_FAST(arg=8, lineno=111)
          54	LOAD_FAST(arg=1, lineno=113)
          56	LOAD_FAST(arg=8, lineno=113)
          58	BINARY_SUBSCR(arg=None, lineno=113)
          60	LOAD_FAST(arg=5, lineno=113)
          62	LOAD_FAST(arg=8, lineno=113)
          64	LOAD_CONST(arg=1, lineno=113)
          66	BINARY_SUBTRACT(arg=None, lineno=113)
          68	BINARY_SUBSCR(arg=None, lineno=113)
          70	COMPARE_OP(arg=0, lineno=113)
          72	POP_JUMP_IF_TRUE(arg=50, lineno=113)
          74	LOAD_FAST(arg=0, lineno=113)
          76	LOAD_FAST(arg=8, lineno=113)
          78	LOAD_CONST(arg=1, lineno=113)
          80	BINARY_SUBTRACT(arg=None, lineno=113)
          82	BINARY_SUBSCR(arg=None, lineno=113)
          84	LOAD_FAST(arg=5, lineno=113)
          86	LOAD_FAST(arg=8, lineno=113)
          88	LOAD_CONST(arg=1, lineno=113)
          90	BINARY_SUBTRACT(arg=None, lineno=113)
          92	BINARY_SUBSCR(arg=None, lineno=113)
          94	COMPARE_OP(arg=4, lineno=113)
          96	POP_JUMP_IF_FALSE(arg=57, lineno=113)
>         98	LOAD_FAST(arg=1, lineno=114)
         100	LOAD_FAST(arg=8, lineno=114)
         102	BINARY_SUBSCR(arg=None, lineno=114)
         104	LOAD_FAST(arg=5, lineno=114)
         106	LOAD_FAST(arg=8, lineno=114)
         108	STORE_SUBSCR(arg=None, lineno=114)
         110	JUMP_FORWARD(arg=8, lineno=114)
>        112	LOAD_FAST(arg=5, lineno=116)
         114	LOAD_FAST(arg=8, lineno=116)
         116	LOAD_CONST(arg=1, lineno=116)
         118	BINARY_SUBTRACT(arg=None, lineno=116)
         120	BINARY_SUBSCR(arg=None, lineno=116)
         122	LOAD_FAST(arg=5, lineno=116)
         124	LOAD_FAST(arg=8, lineno=116)
         126	STORE_SUBSCR(arg=None, lineno=116)
>        128	LOAD_FAST(arg=2, lineno=118)
         130	LOAD_FAST(arg=8, lineno=118)
         132	BINARY_SUBSCR(arg=None, lineno=118)
         134	LOAD_FAST(arg=6, lineno=118)
         136	LOAD_FAST(arg=8, lineno=118)
         138	LOAD_CONST(arg=1, lineno=118)
         140	BINARY_SUBTRACT(arg=None, lineno=118)
         142	BINARY_SUBSCR(arg=None, lineno=118)
         144	COMPARE_OP(arg=4, lineno=118)
         146	POP_JUMP_IF_TRUE(arg=87, lineno=118)
         148	LOAD_FAST(arg=0, lineno=118)
         150	LOAD_FAST(arg=8, lineno=118)
         152	LOAD_CONST(arg=1, lineno=118)
         154	BINARY_SUBTRACT(arg=None, lineno=118)
         156	BINARY_SUBSCR(arg=None, lineno=118)
         158	LOAD_FAST(arg=6, lineno=118)
         160	LOAD_FAST(arg=8, lineno=118)
         162	LOAD_CONST(arg=1, lineno=118)
         164	BINARY_SUBTRACT(arg=None, lineno=118)
         166	BINARY_SUBSCR(arg=None, lineno=118)
         168	COMPARE_OP(arg=0, lineno=118)
         170	POP_JUMP_IF_FALSE(arg=94, lineno=118)
>        172	LOAD_FAST(arg=2, lineno=119)
         174	LOAD_FAST(arg=8, lineno=119)
         176	BINARY_SUBSCR(arg=None, lineno=119)
         178	LOAD_FAST(arg=6, lineno=119)
         180	LOAD_FAST(arg=8, lineno=119)
         182	STORE_SUBSCR(arg=None, lineno=119)
         184	JUMP_FORWARD(arg=8, lineno=119)
>        186	LOAD_FAST(arg=6, lineno=121)
         188	LOAD_FAST(arg=8, lineno=121)
         190	LOAD_CONST(arg=1, lineno=121)
         192	BINARY_SUBTRACT(arg=None, lineno=121)
         194	BINARY_SUBSCR(arg=None, lineno=121)
         196	LOAD_FAST(arg=6, lineno=121)
         198	LOAD_FAST(arg=8, lineno=121)
         200	STORE_SUBSCR(arg=None, lineno=121)
>        202	LOAD_FAST(arg=7, lineno=123)
         204	LOAD_FAST(arg=8, lineno=123)
         206	LOAD_CONST(arg=1, lineno=123)
         208	BINARY_SUBTRACT(arg=None, lineno=123)
         210	BINARY_SUBSCR(arg=None, lineno=123)
         212	LOAD_FAST(arg=5, lineno=123)
         214	LOAD_FAST(arg=8, lineno=123)
         216	LOAD_CONST(arg=1, lineno=123)
         218	BINARY_SUBTRACT(arg=None, lineno=123)
         220	BINARY_SUBSCR(arg=None, lineno=123)
         222	COMPARE_OP(arg=2, lineno=123)
         224	POP_JUMP_IF_FALSE(arg=129, lineno=123)
         226	LOAD_FAST(arg=0, lineno=123)
         228	LOAD_FAST(arg=8, lineno=123)
         230	BINARY_SUBSCR(arg=None, lineno=123)
         232	LOAD_FAST(arg=5, lineno=123)
         234	LOAD_FAST(arg=8, lineno=123)
         236	BINARY_SUBSCR(arg=None, lineno=123)
         238	COMPARE_OP(arg=1, lineno=123)
         240	POP_JUMP_IF_FALSE(arg=129, lineno=123)
         242	LOAD_FAST(arg=5, lineno=124)
         244	LOAD_FAST(arg=8, lineno=124)
         246	BINARY_SUBSCR(arg=None, lineno=124)
         248	LOAD_FAST(arg=7, lineno=124)
         250	LOAD_FAST(arg=8, lineno=124)
         252	STORE_SUBSCR(arg=None, lineno=124)
         254	JUMP_ABSOLUTE(arg=26, lineno=124)
>        256	LOAD_FAST(arg=7, lineno=125)
         258	LOAD_FAST(arg=8, lineno=125)
         260	LOAD_CONST(arg=1, lineno=125)
         262	BINARY_SUBTRACT(arg=None, lineno=125)
         264	BINARY_SUBSCR(arg=None, lineno=125)
         266	LOAD_FAST(arg=5, lineno=125)
         268	LOAD_FAST(arg=8, lineno=125)
         270	LOAD_CONST(arg=1, lineno=125)
         272	BINARY_SUBTRACT(arg=None, lineno=125)
         274	BINARY_SUBSCR(arg=None, lineno=125)
         276	COMPARE_OP(arg=2, lineno=125)
         278	POP_JUMP_IF_FALSE(arg=156, lineno=125)
         280	LOAD_FAST(arg=0, lineno=125)
         282	LOAD_FAST(arg=8, lineno=125)
         284	BINARY_SUBSCR(arg=None, lineno=125)
         286	LOAD_FAST(arg=5, lineno=125)
         288	LOAD_FAST(arg=8, lineno=125)
         290	BINARY_SUBSCR(arg=None, lineno=125)
         292	COMPARE_OP(arg=4, lineno=125)
         294	POP_JUMP_IF_FALSE(arg=156, lineno=125)
         296	LOAD_FAST(arg=6, lineno=126)
         298	LOAD_FAST(arg=8, lineno=126)
         300	BINARY_SUBSCR(arg=None, lineno=126)
         302	LOAD_FAST(arg=7, lineno=126)
         304	LOAD_FAST(arg=8, lineno=126)
         306	STORE_SUBSCR(arg=None, lineno=126)
         308	JUMP_ABSOLUTE(arg=26, lineno=126)
>        310	LOAD_FAST(arg=7, lineno=127)
         312	LOAD_FAST(arg=8, lineno=127)
         314	LOAD_CONST(arg=1, lineno=127)
         316	BINARY_SUBTRACT(arg=None, lineno=127)
         318	BINARY_SUBSCR(arg=None, lineno=127)
         320	LOAD_FAST(arg=6, lineno=127)
         322	LOAD_FAST(arg=8, lineno=127)
         324	LOAD_CONST(arg=1, lineno=127)
         326	BINARY_SUBTRACT(arg=None, lineno=127)
         328	BINARY_SUBSCR(arg=None, lineno=127)
         330	COMPARE_OP(arg=2, lineno=127)
         332	POP_JUMP_IF_FALSE(arg=183, lineno=127)
         334	LOAD_FAST(arg=0, lineno=127)
         336	LOAD_FAST(arg=8, lineno=127)
         338	BINARY_SUBSCR(arg=None, lineno=127)
         340	LOAD_FAST(arg=6, lineno=127)
         342	LOAD_FAST(arg=8, lineno=127)
         344	BINARY_SUBSCR(arg=None, lineno=127)
         346	COMPARE_OP(arg=5, lineno=127)
         348	POP_JUMP_IF_FALSE(arg=183, lineno=127)
         350	LOAD_FAST(arg=6, lineno=128)
         352	LOAD_FAST(arg=8, lineno=128)
         354	BINARY_SUBSCR(arg=None, lineno=128)
         356	LOAD_FAST(arg=7, lineno=128)
         358	LOAD_FAST(arg=8, lineno=128)
         360	STORE_SUBSCR(arg=None, lineno=128)
         362	JUMP_ABSOLUTE(arg=26, lineno=128)
>        364	LOAD_FAST(arg=7, lineno=129)
         366	LOAD_FAST(arg=8, lineno=129)
         368	LOAD_CONST(arg=1, lineno=129)
         370	BINARY_SUBTRACT(arg=None, lineno=129)
         372	BINARY_SUBSCR(arg=None, lineno=129)
         374	LOAD_FAST(arg=6, lineno=129)
         376	LOAD_FAST(arg=8, lineno=129)
         378	LOAD_CONST(arg=1, lineno=129)
         380	BINARY_SUBTRACT(arg=None, lineno=129)
         382	BINARY_SUBSCR(arg=None, lineno=129)
         384	COMPARE_OP(arg=2, lineno=129)
         386	POP_JUMP_IF_FALSE(arg=210, lineno=129)
         388	LOAD_FAST(arg=0, lineno=129)
         390	LOAD_FAST(arg=8, lineno=129)
         392	BINARY_SUBSCR(arg=None, lineno=129)
         394	LOAD_FAST(arg=6, lineno=129)
         396	LOAD_FAST(arg=8, lineno=129)
         398	BINARY_SUBSCR(arg=None, lineno=129)
         400	COMPARE_OP(arg=0, lineno=129)
         402	POP_JUMP_IF_FALSE(arg=210, lineno=129)
         404	LOAD_FAST(arg=5, lineno=130)
         406	LOAD_FAST(arg=8, lineno=130)
         408	BINARY_SUBSCR(arg=None, lineno=130)
         410	LOAD_FAST(arg=7, lineno=130)
         412	LOAD_FAST(arg=8, lineno=130)
         414	STORE_SUBSCR(arg=None, lineno=130)
         416	JUMP_ABSOLUTE(arg=26, lineno=130)
>        418	LOAD_CONST(arg=2, lineno=132)
         420	LOAD_FAST(arg=7, lineno=132)
         422	LOAD_FAST(arg=8, lineno=132)
         424	STORE_SUBSCR(arg=None, lineno=132)
         426	JUMP_ABSOLUTE(arg=26, lineno=132)
>        428	LOAD_FAST(arg=7, lineno=134)
         430	RETURN_VALUE(arg=None, lineno=134)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=99)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=106)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=106)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=106)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$close4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=STORE_FAST(arg=4, lineno=106)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$6call_function.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=LOAD_METHOD(arg=2, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$10load_global.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=14, inst=LOAD_FAST(arg=4, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$12load_method.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=16, inst=CALL_METHOD(arg=1, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$12load_method.4', '$length14.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=18, inst=STORE_FAST(arg=5, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$16call_method.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=20, inst=LOAD_GLOBAL(arg=1, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=22, inst=LOAD_METHOD(arg=2, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$20load_global.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=24, inst=LOAD_FAST(arg=4, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$22load_method.8']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=26, inst=CALL_METHOD(arg=1, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$22load_method.8', '$length24.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=28, inst=STORE_FAST(arg=6, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$26call_method.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=30, inst=LOAD_GLOBAL(arg=1, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=32, inst=LOAD_METHOD(arg=2, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$30load_global.11']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=34, inst=LOAD_FAST(arg=4, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$32load_method.12']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=36, inst=CALL_METHOD(arg=1, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$32load_method.12', '$length34.13']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=38, inst=STORE_FAST(arg=7, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$36call_method.14']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=40, inst=LOAD_GLOBAL(arg=3, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=42, inst=LOAD_FAST(arg=3, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$40load_global.15']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=44, inst=LOAD_FAST(arg=4, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$40load_global.15', '$n42.16']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=46, inst=CALL_FUNCTION(arg=2, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$40load_global.15', '$n42.16', '$length44.17']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=48, inst=GET_ITER(arg=None, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$46call_function.18']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$48get_iter.19',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi50.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=50 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=50, inst=FOR_ITER(arg=188, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi50.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=428, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=('$phi50.0', '$50for_iter.2'), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=428 nstack_initial=0), State(pc_initial=52 nstack_initial=2)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=428 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=428, inst=LOAD_FAST(arg=7, lineno=134)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=430, inst=RETURN_VALUE(arg=None, lineno=134)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$supertrend428.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=52 nstack_initial=2)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi52.0', '$phi52.1']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=52 nstack_initial=2)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=52, inst=STORE_FAST(arg=8, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$phi52.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=54, inst=LOAD_FAST(arg=1, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=56, inst=LOAD_FAST(arg=8, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$basic_ub54.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=58, inst=BINARY_SUBSCR(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$basic_ub54.2', '$i56.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=60, inst=LOAD_FAST(arg=5, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=62, inst=LOAD_FAST(arg=8, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$final_ub60.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$final_ub60.5', '$i62.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=66, inst=BINARY_SUBTRACT(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$final_ub60.5', '$i62.6', '$const64.7.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=68, inst=BINARY_SUBSCR(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$final_ub60.5', '$66binary_subtract.8']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=70, inst=COMPARE_OP(arg=0, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$68binary_subscr.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=72, inst=POP_JUMP_IF_TRUE(arg=50, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$70compare_op.10']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=74, stack=('$phi52.0',), blockstack=(), npush=0), Edge(pc=98, stack=('$phi52.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=74 nstack_initial=1), State(pc_initial=98 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi74.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=74 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=74, inst=LOAD_FAST(arg=0, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=76, inst=LOAD_FAST(arg=8, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$close74.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$close74.1', '$i76.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=80, inst=BINARY_SUBTRACT(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$close74.1', '$i76.2', '$const78.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$close74.1', '$80binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=84, inst=LOAD_FAST(arg=5, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=86, inst=LOAD_FAST(arg=8, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$final_ub84.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=88, inst=LOAD_CONST(arg=1, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$final_ub84.6', '$i86.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=90, inst=BINARY_SUBTRACT(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$final_ub84.6', '$i86.7', '$const88.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=92, inst=BINARY_SUBSCR(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$final_ub84.6', '$90binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=94, inst=COMPARE_OP(arg=4, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$92binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=96, inst=POP_JUMP_IF_FALSE(arg=57, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$94compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=98, stack=('$phi74.0',), blockstack=(), npush=0), Edge(pc=112, stack=('$phi74.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=98 nstack_initial=1), State(pc_initial=98 nstack_initial=1), State(pc_initial=112 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi98.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=98 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=98, inst=LOAD_FAST(arg=1, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=100, inst=LOAD_FAST(arg=8, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$basic_ub98.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=102, inst=BINARY_SUBSCR(arg=None, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$basic_ub98.1', '$i100.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=104, inst=LOAD_FAST(arg=5, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$102binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=106, inst=LOAD_FAST(arg=8, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$102binary_subscr.3', '$final_ub104.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=108, inst=STORE_SUBSCR(arg=None, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$102binary_subscr.3', '$final_ub104.4', '$i106.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=110, inst=JUMP_FORWARD(arg=8, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=128, stack=('$phi98.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=98 nstack_initial=1), State(pc_initial=112 nstack_initial=1), State(pc_initial=128 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=112 nstack_initial=1), State(pc_initial=128 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi112.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=112 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=112, inst=LOAD_FAST(arg=5, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=114, inst=LOAD_FAST(arg=8, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$final_ub112.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=116, inst=LOAD_CONST(arg=1, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$final_ub112.1', '$i114.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=118, inst=BINARY_SUBTRACT(arg=None, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$final_ub112.1', '$i114.2', '$const116.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=120, inst=BINARY_SUBSCR(arg=None, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$final_ub112.1', '$118binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=122, inst=LOAD_FAST(arg=5, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$120binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=124, inst=LOAD_FAST(arg=8, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$120binary_subscr.5', '$final_ub122.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=126, inst=STORE_SUBSCR(arg=None, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$120binary_subscr.5', '$final_ub122.6', '$i124.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=128, stack=('$phi112.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=128 nstack_initial=1), State(pc_initial=128 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi128.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=128 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=128, inst=LOAD_FAST(arg=2, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=130, inst=LOAD_FAST(arg=8, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$basic_lb128.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=132, inst=BINARY_SUBSCR(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$basic_lb128.1', '$i130.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=134, inst=LOAD_FAST(arg=6, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=136, inst=LOAD_FAST(arg=8, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$final_lb134.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=138, inst=LOAD_CONST(arg=1, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$final_lb134.4', '$i136.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=140, inst=BINARY_SUBTRACT(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$final_lb134.4', '$i136.5', '$const138.6.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=142, inst=BINARY_SUBSCR(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$final_lb134.4', '$140binary_subtract.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=144, inst=COMPARE_OP(arg=4, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$142binary_subscr.8']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=146, inst=POP_JUMP_IF_TRUE(arg=87, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$144compare_op.9']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=148, stack=('$phi128.0',), blockstack=(), npush=0), Edge(pc=172, stack=('$phi128.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=128 nstack_initial=1), State(pc_initial=148 nstack_initial=1), State(pc_initial=172 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=148 nstack_initial=1), State(pc_initial=172 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi148.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=148 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=150, inst=LOAD_FAST(arg=8, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$close148.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=152, inst=LOAD_CONST(arg=1, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$close148.1', '$i150.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=154, inst=BINARY_SUBTRACT(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$close148.1', '$i150.2', '$const152.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=156, inst=BINARY_SUBSCR(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$close148.1', '$154binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=158, inst=LOAD_FAST(arg=6, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=160, inst=LOAD_FAST(arg=8, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$final_lb158.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=162, inst=LOAD_CONST(arg=1, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$final_lb158.6', '$i160.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=164, inst=BINARY_SUBTRACT(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$final_lb158.6', '$i160.7', '$const162.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=166, inst=BINARY_SUBSCR(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$final_lb158.6', '$164binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=168, inst=COMPARE_OP(arg=0, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$166binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=170, inst=POP_JUMP_IF_FALSE(arg=94, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$168compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=172, stack=('$phi148.0',), blockstack=(), npush=0), Edge(pc=186, stack=('$phi148.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=172 nstack_initial=1), State(pc_initial=172 nstack_initial=1), State(pc_initial=186 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi172.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=172 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=172, inst=LOAD_FAST(arg=2, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=174, inst=LOAD_FAST(arg=8, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$basic_lb172.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=176, inst=BINARY_SUBSCR(arg=None, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$basic_lb172.1', '$i174.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=178, inst=LOAD_FAST(arg=6, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$176binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=180, inst=LOAD_FAST(arg=8, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$176binary_subscr.3', '$final_lb178.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=182, inst=STORE_SUBSCR(arg=None, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$176binary_subscr.3', '$final_lb178.4', '$i180.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=184, inst=JUMP_FORWARD(arg=8, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=202, stack=('$phi172.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=172 nstack_initial=1), State(pc_initial=186 nstack_initial=1), State(pc_initial=202 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=186 nstack_initial=1), State(pc_initial=202 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi186.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=186 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=186, inst=LOAD_FAST(arg=6, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=188, inst=LOAD_FAST(arg=8, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$final_lb186.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=190, inst=LOAD_CONST(arg=1, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$final_lb186.1', '$i188.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=192, inst=BINARY_SUBTRACT(arg=None, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$final_lb186.1', '$i188.2', '$const190.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=194, inst=BINARY_SUBSCR(arg=None, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$final_lb186.1', '$192binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=196, inst=LOAD_FAST(arg=6, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$194binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=198, inst=LOAD_FAST(arg=8, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$194binary_subscr.5', '$final_lb196.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=200, inst=STORE_SUBSCR(arg=None, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$194binary_subscr.5', '$final_lb196.6', '$i198.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=202, stack=('$phi186.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=202 nstack_initial=1), State(pc_initial=202 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi202.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=202 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=202, inst=LOAD_FAST(arg=7, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=204, inst=LOAD_FAST(arg=8, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$supertrend202.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=206, inst=LOAD_CONST(arg=1, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$supertrend202.1', '$i204.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=208, inst=BINARY_SUBTRACT(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$supertrend202.1', '$i204.2', '$const206.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=210, inst=BINARY_SUBSCR(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$supertrend202.1', '$208binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=212, inst=LOAD_FAST(arg=5, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=214, inst=LOAD_FAST(arg=8, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$final_ub212.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=216, inst=LOAD_CONST(arg=1, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$final_ub212.6', '$i214.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=218, inst=BINARY_SUBTRACT(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$final_ub212.6', '$i214.7', '$const216.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=220, inst=BINARY_SUBSCR(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$final_ub212.6', '$218binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=222, inst=COMPARE_OP(arg=2, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$220binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=224, inst=POP_JUMP_IF_FALSE(arg=129, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$222compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=226, stack=('$phi202.0',), blockstack=(), npush=0), Edge(pc=256, stack=('$phi202.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=202 nstack_initial=1), State(pc_initial=226 nstack_initial=1), State(pc_initial=256 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=226 nstack_initial=1), State(pc_initial=256 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi226.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=226 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=226, inst=LOAD_FAST(arg=0, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=228, inst=LOAD_FAST(arg=8, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$close226.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=230, inst=BINARY_SUBSCR(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$close226.1', '$i228.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=232, inst=LOAD_FAST(arg=5, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$230binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=234, inst=LOAD_FAST(arg=8, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$230binary_subscr.3', '$final_ub232.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=236, inst=BINARY_SUBSCR(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$230binary_subscr.3', '$final_ub232.4', '$i234.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=238, inst=COMPARE_OP(arg=1, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$230binary_subscr.3', '$236binary_subscr.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=240, inst=POP_JUMP_IF_FALSE(arg=129, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$238compare_op.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=242, stack=('$phi226.0',), blockstack=(), npush=0), Edge(pc=256, stack=('$phi226.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=256 nstack_initial=1), State(pc_initial=242 nstack_initial=1), State(pc_initial=256 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi256.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=256 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=256, inst=LOAD_FAST(arg=7, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=258, inst=LOAD_FAST(arg=8, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$supertrend256.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=260, inst=LOAD_CONST(arg=1, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$supertrend256.1', '$i258.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=262, inst=BINARY_SUBTRACT(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$supertrend256.1', '$i258.2', '$const260.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=264, inst=BINARY_SUBSCR(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$supertrend256.1', '$262binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=266, inst=LOAD_FAST(arg=5, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=268, inst=LOAD_FAST(arg=8, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$final_ub266.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=270, inst=LOAD_CONST(arg=1, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$final_ub266.6', '$i268.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=272, inst=BINARY_SUBTRACT(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$final_ub266.6', '$i268.7', '$const270.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=274, inst=BINARY_SUBSCR(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$final_ub266.6', '$272binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=276, inst=COMPARE_OP(arg=2, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$274binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=278, inst=POP_JUMP_IF_FALSE(arg=156, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$276compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=280, stack=('$phi256.0',), blockstack=(), npush=0), Edge(pc=310, stack=('$phi256.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=242 nstack_initial=1), State(pc_initial=256 nstack_initial=1), State(pc_initial=280 nstack_initial=1), State(pc_initial=310 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi242.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=242 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=242, inst=LOAD_FAST(arg=5, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=244, inst=LOAD_FAST(arg=8, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$final_ub242.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=246, inst=BINARY_SUBSCR(arg=None, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$final_ub242.1', '$i244.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=248, inst=LOAD_FAST(arg=7, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$246binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=250, inst=LOAD_FAST(arg=8, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$246binary_subscr.3', '$supertrend248.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=252, inst=STORE_SUBSCR(arg=None, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$246binary_subscr.3', '$supertrend248.4', '$i250.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=254, inst=JUMP_ABSOLUTE(arg=26, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi242.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=256 nstack_initial=1), State(pc_initial=280 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=280 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi280.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=280 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=280, inst=LOAD_FAST(arg=0, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=282, inst=LOAD_FAST(arg=8, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$close280.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=284, inst=BINARY_SUBSCR(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$close280.1', '$i282.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=286, inst=LOAD_FAST(arg=5, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$284binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=288, inst=LOAD_FAST(arg=8, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$284binary_subscr.3', '$final_ub286.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=290, inst=BINARY_SUBSCR(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$284binary_subscr.3', '$final_ub286.4', '$i288.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=292, inst=COMPARE_OP(arg=4, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$284binary_subscr.3', '$290binary_subscr.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=294, inst=POP_JUMP_IF_FALSE(arg=156, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$292compare_op.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=296, stack=('$phi280.0',), blockstack=(), npush=0), Edge(pc=310, stack=('$phi280.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=310 nstack_initial=1), State(pc_initial=50 nstack_initial=1), State(pc_initial=296 nstack_initial=1), State(pc_initial=310 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi310.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=310 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=310, inst=LOAD_FAST(arg=7, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=312, inst=LOAD_FAST(arg=8, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$supertrend310.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=314, inst=LOAD_CONST(arg=1, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$supertrend310.1', '$i312.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=316, inst=BINARY_SUBTRACT(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$supertrend310.1', '$i312.2', '$const314.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=318, inst=BINARY_SUBSCR(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$supertrend310.1', '$316binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=320, inst=LOAD_FAST(arg=6, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=322, inst=LOAD_FAST(arg=8, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$final_lb320.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=324, inst=LOAD_CONST(arg=1, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$final_lb320.6', '$i322.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=326, inst=BINARY_SUBTRACT(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$final_lb320.6', '$i322.7', '$const324.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=328, inst=BINARY_SUBSCR(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$final_lb320.6', '$326binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=330, inst=COMPARE_OP(arg=2, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$328binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=332, inst=POP_JUMP_IF_FALSE(arg=183, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$330compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=334, stack=('$phi310.0',), blockstack=(), npush=0), Edge(pc=364, stack=('$phi310.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=296 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=334 nstack_initial=1), State(pc_initial=364 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=296 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=334 nstack_initial=1), State(pc_initial=364 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi296.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=296 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=296, inst=LOAD_FAST(arg=6, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=298, inst=LOAD_FAST(arg=8, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$final_lb296.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=300, inst=BINARY_SUBSCR(arg=None, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$final_lb296.1', '$i298.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=302, inst=LOAD_FAST(arg=7, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$300binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=304, inst=LOAD_FAST(arg=8, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$300binary_subscr.3', '$supertrend302.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=306, inst=STORE_SUBSCR(arg=None, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$300binary_subscr.3', '$supertrend302.4', '$i304.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=308, inst=JUMP_ABSOLUTE(arg=26, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi296.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=310 nstack_initial=1), State(pc_initial=334 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=334 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi334.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=334 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=334, inst=LOAD_FAST(arg=0, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=336, inst=LOAD_FAST(arg=8, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$close334.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=338, inst=BINARY_SUBSCR(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$close334.1', '$i336.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=340, inst=LOAD_FAST(arg=6, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$338binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=342, inst=LOAD_FAST(arg=8, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$338binary_subscr.3', '$final_lb340.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=344, inst=BINARY_SUBSCR(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$338binary_subscr.3', '$final_lb340.4', '$i342.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=346, inst=COMPARE_OP(arg=5, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$338binary_subscr.3', '$344binary_subscr.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=348, inst=POP_JUMP_IF_FALSE(arg=183, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$346compare_op.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=350, stack=('$phi334.0',), blockstack=(), npush=0), Edge(pc=364, stack=('$phi334.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=364 nstack_initial=1), State(pc_initial=50 nstack_initial=1), State(pc_initial=350 nstack_initial=1), State(pc_initial=364 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi364.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=364 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=364, inst=LOAD_FAST(arg=7, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=366, inst=LOAD_FAST(arg=8, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$supertrend364.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=368, inst=LOAD_CONST(arg=1, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$supertrend364.1', '$i366.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=370, inst=BINARY_SUBTRACT(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$supertrend364.1', '$i366.2', '$const368.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=372, inst=BINARY_SUBSCR(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$supertrend364.1', '$370binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=374, inst=LOAD_FAST(arg=6, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=376, inst=LOAD_FAST(arg=8, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$final_lb374.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=378, inst=LOAD_CONST(arg=1, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$final_lb374.6', '$i376.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=380, inst=BINARY_SUBTRACT(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$final_lb374.6', '$i376.7', '$const378.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=382, inst=BINARY_SUBSCR(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$final_lb374.6', '$380binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=384, inst=COMPARE_OP(arg=2, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$382binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=386, inst=POP_JUMP_IF_FALSE(arg=210, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$384compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=388, stack=('$phi364.0',), blockstack=(), npush=0), Edge(pc=418, stack=('$phi364.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=350 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=388 nstack_initial=1), State(pc_initial=418 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=350 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=388 nstack_initial=1), State(pc_initial=418 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi350.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=350 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=350, inst=LOAD_FAST(arg=6, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=352, inst=LOAD_FAST(arg=8, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$final_lb350.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=354, inst=BINARY_SUBSCR(arg=None, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$final_lb350.1', '$i352.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=356, inst=LOAD_FAST(arg=7, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$354binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=358, inst=LOAD_FAST(arg=8, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$354binary_subscr.3', '$supertrend356.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=360, inst=STORE_SUBSCR(arg=None, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$354binary_subscr.3', '$supertrend356.4', '$i358.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=362, inst=JUMP_ABSOLUTE(arg=26, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi350.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=364 nstack_initial=1), State(pc_initial=388 nstack_initial=1), State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=388 nstack_initial=1), State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi388.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=388 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=388, inst=LOAD_FAST(arg=0, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=390, inst=LOAD_FAST(arg=8, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$close388.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=392, inst=BINARY_SUBSCR(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$close388.1', '$i390.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=394, inst=LOAD_FAST(arg=6, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$392binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=396, inst=LOAD_FAST(arg=8, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$392binary_subscr.3', '$final_lb394.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=398, inst=BINARY_SUBSCR(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$392binary_subscr.3', '$final_lb394.4', '$i396.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=400, inst=COMPARE_OP(arg=0, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$392binary_subscr.3', '$398binary_subscr.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=402, inst=POP_JUMP_IF_FALSE(arg=210, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$400compare_op.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=404, stack=('$phi388.0',), blockstack=(), npush=0), Edge(pc=418, stack=('$phi388.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1), State(pc_initial=404 nstack_initial=1), State(pc_initial=418 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi418.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=418 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=418, inst=LOAD_CONST(arg=2, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=420, inst=LOAD_FAST(arg=7, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0', '$const418.1.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=422, inst=LOAD_FAST(arg=8, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0', '$const418.1.2', '$supertrend420.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=424, inst=STORE_SUBSCR(arg=None, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0', '$const418.1.2', '$supertrend420.2', '$i422.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=426, inst=JUMP_ABSOLUTE(arg=26, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi418.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=404 nstack_initial=1), State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=404 nstack_initial=1), State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi404.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=404 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=404, inst=LOAD_FAST(arg=5, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=406, inst=LOAD_FAST(arg=8, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$final_ub404.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=408, inst=BINARY_SUBSCR(arg=None, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$final_ub404.1', '$i406.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=410, inst=LOAD_FAST(arg=7, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$408binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=412, inst=LOAD_FAST(arg=8, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$408binary_subscr.3', '$supertrend410.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=414, inst=STORE_SUBSCR(arg=None, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$408binary_subscr.3', '$supertrend410.4', '$i412.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=416, inst=JUMP_ABSOLUTE(arg=26, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi404.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): {'$phi50.0'},
             State(pc_initial=52 nstack_initial=2): {'$phi52.1'},
             State(pc_initial=74 nstack_initial=1): set(),
             State(pc_initial=98 nstack_initial=1): set(),
             State(pc_initial=112 nstack_initial=1): set(),
             State(pc_initial=128 nstack_initial=1): set(),
             State(pc_initial=148 nstack_initial=1): set(),
             State(pc_initial=172 nstack_initial=1): set(),
             State(pc_initial=186 nstack_initial=1): set(),
             State(pc_initial=202 nstack_initial=1): set(),
             State(pc_initial=226 nstack_initial=1): set(),
             State(pc_initial=242 nstack_initial=1): set(),
             State(pc_initial=256 nstack_initial=1): set(),
             State(pc_initial=280 nstack_initial=1): set(),
             State(pc_initial=296 nstack_initial=1): set(),
             State(pc_initial=310 nstack_initial=1): set(),
             State(pc_initial=334 nstack_initial=1): set(),
             State(pc_initial=350 nstack_initial=1): set(),
             State(pc_initial=364 nstack_initial=1): set(),
             State(pc_initial=388 nstack_initial=1): set(),
             State(pc_initial=404 nstack_initial=1): set(),
             State(pc_initial=418 nstack_initial=1): set(),
             State(pc_initial=428 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {'$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi52.1': State(pc_initial=50 nstack_initial=1)}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi128.0': {('$phi112.0',
                            State(pc_initial=112 nstack_initial=1)),
                           ('$phi98.0', State(pc_initial=98 nstack_initial=1))},
             '$phi148.0': {('$phi128.0',
                            State(pc_initial=128 nstack_initial=1))},
             '$phi172.0': {('$phi128.0',
                            State(pc_initial=128 nstack_initial=1)),
                           ('$phi148.0',
                            State(pc_initial=148 nstack_initial=1))},
             '$phi186.0': {('$phi148.0',
                            State(pc_initial=148 nstack_initial=1))},
             '$phi202.0': {('$phi172.0',
                            State(pc_initial=172 nstack_initial=1)),
                           ('$phi186.0',
                            State(pc_initial=186 nstack_initial=1))},
             '$phi226.0': {('$phi202.0',
                            State(pc_initial=202 nstack_initial=1))},
             '$phi242.0': {('$phi226.0',
                            State(pc_initial=226 nstack_initial=1))},
             '$phi256.0': {('$phi202.0',
                            State(pc_initial=202 nstack_initial=1)),
                           ('$phi226.0',
                            State(pc_initial=226 nstack_initial=1))},
             '$phi280.0': {('$phi256.0',
                            State(pc_initial=256 nstack_initial=1))},
             '$phi296.0': {('$phi280.0',
                            State(pc_initial=280 nstack_initial=1))},
             '$phi310.0': {('$phi256.0',
                            State(pc_initial=256 nstack_initial=1)),
                           ('$phi280.0',
                            State(pc_initial=280 nstack_initial=1))},
             '$phi334.0': {('$phi310.0',
                            State(pc_initial=310 nstack_initial=1))},
             '$phi350.0': {('$phi334.0',
                            State(pc_initial=334 nstack_initial=1))},
             '$phi364.0': {('$phi310.0',
                            State(pc_initial=310 nstack_initial=1)),
                           ('$phi334.0',
                            State(pc_initial=334 nstack_initial=1))},
             '$phi388.0': {('$phi364.0',
                            State(pc_initial=364 nstack_initial=1))},
             '$phi404.0': {('$phi388.0',
                            State(pc_initial=388 nstack_initial=1))},
             '$phi418.0': {('$phi364.0',
                            State(pc_initial=364 nstack_initial=1)),
                           ('$phi388.0',
                            State(pc_initial=388 nstack_initial=1))},
             '$phi50.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi242.0', State(pc_initial=242 nstack_initial=1)),
                          ('$phi296.0', State(pc_initial=296 nstack_initial=1)),
                          ('$phi350.0', State(pc_initial=350 nstack_initial=1)),
                          ('$phi404.0', State(pc_initial=404 nstack_initial=1)),
                          ('$phi418.0',
                           State(pc_initial=418 nstack_initial=1))},
             '$phi52.0': {('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))},
             '$phi74.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi98.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))}})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi128.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi148.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi172.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi186.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi202.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi226.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi242.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi256.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi280.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi296.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi310.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi334.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi350.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi364.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi388.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi404.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi418.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi50.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi52.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))},
             '$phi74.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi98.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))}})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi128.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi148.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi172.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi186.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi202.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi226.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi242.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi256.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi280.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi296.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi310.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi334.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi350.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi364.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi388.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi404.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi418.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))},
             '$phi74.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))}})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi128.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi148.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi172.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi186.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi202.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi226.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi242.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi256.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi280.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi296.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi310.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi334.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi350.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi364.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi388.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi404.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi418.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))},
             '$phi74.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))}})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {'$phi50.0': {('$48get_iter.19', State(pc_initial=0 nstack_initial=0))},
 '$phi52.1': {('$50for_iter.2', State(pc_initial=50 nstack_initial=1))}}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi50.0': '$48get_iter.19'},
             State(pc_initial=50 nstack_initial=1): {'$phi52.1': '$50for_iter.2'}})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$close4.1'}), (6, {'func': '$2load_global.0', 'args': ['$close4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_global.3'}), (12, {'item': '$10load_global.3', 'res': '$12load_method.4'}), (14, {'res': '$length14.5'}), (16, {'func': '$12load_method.4', 'args': ['$length14.5'], 'res': '$16call_method.6'}), (18, {'value': '$16call_method.6'}), (20, {'res': '$20load_global.7'}), (22, {'item': '$20load_global.7', 'res': '$22load_method.8'}), (24, {'res': '$length24.9'}), (26, {'func': '$22load_method.8', 'args': ['$length24.9'], 'res': '$26call_method.10'}), (28, {'value': '$26call_method.10'}), (30, {'res': '$30load_global.11'}), (32, {'item': '$30load_global.11', 'res': '$32load_method.12'}), (34, {'res': '$length34.13'}), (36, {'func': '$32load_method.12', 'args': ['$length34.13'], 'res': '$36call_method.14'}), (38, {'value': '$36call_method.14'}), (40, {'res': '$40load_global.15'}), (42, {'res': '$n42.16'}), (44, {'res': '$length44.17'}), (46, {'func': '$40load_global.15', 'args': ['$n42.16', '$length44.17'], 'res': '$46call_function.18'}), (48, {'value': '$46call_function.18', 'res': '$48get_iter.19'})), outgoing_phis={'$phi50.0': '$48get_iter.19'}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$48get_iter.19',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((50, {'iterator': '$phi50.0', 'pair': '$50for_iter.1', 'indval': '$50for_iter.2', 'pred': '$50for_iter.3'}),), outgoing_phis={'$phi52.1': '$50for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={428: (), 52: ('$phi50.0', '$50for_iter.2')})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=52 nstack_initial=2):
AdaptBlockInfo(insts=((52, {'value': '$phi52.1'}), (54, {'res': '$basic_ub54.2'}), (56, {'res': '$i56.3'}), (58, {'index': '$i56.3', 'target': '$basic_ub54.2', 'res': '$58binary_subscr.4'}), (60, {'res': '$final_ub60.5'}), (62, {'res': '$i62.6'}), (64, {'res': '$const64.7.1'}), (66, {'lhs': '$i62.6', 'rhs': '$const64.7.1', 'res': '$66binary_subtract.8'}), (68, {'index': '$66binary_subtract.8', 'target': '$final_ub60.5', 'res': '$68binary_subscr.9'}), (70, {'lhs': '$58binary_subscr.4', 'rhs': '$68binary_subscr.9', 'res': '$70compare_op.10'}), (72, {'pred': '$70compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ('$phi52.0',), 98: ('$phi52.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=74 nstack_initial=1):
AdaptBlockInfo(insts=((74, {'res': '$close74.1'}), (76, {'res': '$i76.2'}), (78, {'res': '$const78.3.1'}), (80, {'lhs': '$i76.2', 'rhs': '$const78.3.1', 'res': '$80binary_subtract.4'}), (82, {'index': '$80binary_subtract.4', 'target': '$close74.1', 'res': '$82binary_subscr.5'}), (84, {'res': '$final_ub84.6'}), (86, {'res': '$i86.7'}), (88, {'res': '$const88.8.1'}), (90, {'lhs': '$i86.7', 'rhs': '$const88.8.1', 'res': '$90binary_subtract.9'}), (92, {'index': '$90binary_subtract.9', 'target': '$final_ub84.6', 'res': '$92binary_subscr.10'}), (94, {'lhs': '$82binary_subscr.5', 'rhs': '$92binary_subscr.10', 'res': '$94compare_op.11'}), (96, {'pred': '$94compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: ('$phi74.0',), 112: ('$phi74.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=98 nstack_initial=1):
AdaptBlockInfo(insts=((98, {'res': '$basic_ub98.1'}), (100, {'res': '$i100.2'}), (102, {'index': '$i100.2', 'target': '$basic_ub98.1', 'res': '$102binary_subscr.3'}), (104, {'res': '$final_ub104.4'}), (106, {'res': '$i106.5'}), (108, {'target': '$final_ub104.4', 'index': '$i106.5', 'value': '$102binary_subscr.3'}), (110, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={128: ('$phi98.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=112 nstack_initial=1):
AdaptBlockInfo(insts=((112, {'res': '$final_ub112.1'}), (114, {'res': '$i114.2'}), (116, {'res': '$const116.3.1'}), (118, {'lhs': '$i114.2', 'rhs': '$const116.3.1', 'res': '$118binary_subtract.4'}), (120, {'index': '$118binary_subtract.4', 'target': '$final_ub112.1', 'res': '$120binary_subscr.5'}), (122, {'res': '$final_ub122.6'}), (124, {'res': '$i124.7'}), (126, {'target': '$final_ub122.6', 'index': '$i124.7', 'value': '$120binary_subscr.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={128: ('$phi112.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=128 nstack_initial=1):
AdaptBlockInfo(insts=((128, {'res': '$basic_lb128.1'}), (130, {'res': '$i130.2'}), (132, {'index': '$i130.2', 'target': '$basic_lb128.1', 'res': '$132binary_subscr.3'}), (134, {'res': '$final_lb134.4'}), (136, {'res': '$i136.5'}), (138, {'res': '$const138.6.1'}), (140, {'lhs': '$i136.5', 'rhs': '$const138.6.1', 'res': '$140binary_subtract.7'}), (142, {'index': '$140binary_subtract.7', 'target': '$final_lb134.4', 'res': '$142binary_subscr.8'}), (144, {'lhs': '$132binary_subscr.3', 'rhs': '$142binary_subscr.8', 'res': '$144compare_op.9'}), (146, {'pred': '$144compare_op.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={148: ('$phi128.0',), 172: ('$phi128.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=148 nstack_initial=1):
AdaptBlockInfo(insts=((148, {'res': '$close148.1'}), (150, {'res': '$i150.2'}), (152, {'res': '$const152.3.1'}), (154, {'lhs': '$i150.2', 'rhs': '$const152.3.1', 'res': '$154binary_subtract.4'}), (156, {'index': '$154binary_subtract.4', 'target': '$close148.1', 'res': '$156binary_subscr.5'}), (158, {'res': '$final_lb158.6'}), (160, {'res': '$i160.7'}), (162, {'res': '$const162.8.1'}), (164, {'lhs': '$i160.7', 'rhs': '$const162.8.1', 'res': '$164binary_subtract.9'}), (166, {'index': '$164binary_subtract.9', 'target': '$final_lb158.6', 'res': '$166binary_subscr.10'}), (168, {'lhs': '$156binary_subscr.5', 'rhs': '$166binary_subscr.10', 'res': '$168compare_op.11'}), (170, {'pred': '$168compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={172: ('$phi148.0',), 186: ('$phi148.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=172 nstack_initial=1):
AdaptBlockInfo(insts=((172, {'res': '$basic_lb172.1'}), (174, {'res': '$i174.2'}), (176, {'index': '$i174.2', 'target': '$basic_lb172.1', 'res': '$176binary_subscr.3'}), (178, {'res': '$final_lb178.4'}), (180, {'res': '$i180.5'}), (182, {'target': '$final_lb178.4', 'index': '$i180.5', 'value': '$176binary_subscr.3'}), (184, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={202: ('$phi172.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=186 nstack_initial=1):
AdaptBlockInfo(insts=((186, {'res': '$final_lb186.1'}), (188, {'res': '$i188.2'}), (190, {'res': '$const190.3.1'}), (192, {'lhs': '$i188.2', 'rhs': '$const190.3.1', 'res': '$192binary_subtract.4'}), (194, {'index': '$192binary_subtract.4', 'target': '$final_lb186.1', 'res': '$194binary_subscr.5'}), (196, {'res': '$final_lb196.6'}), (198, {'res': '$i198.7'}), (200, {'target': '$final_lb196.6', 'index': '$i198.7', 'value': '$194binary_subscr.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={202: ('$phi186.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=202 nstack_initial=1):
AdaptBlockInfo(insts=((202, {'res': '$supertrend202.1'}), (204, {'res': '$i204.2'}), (206, {'res': '$const206.3.1'}), (208, {'lhs': '$i204.2', 'rhs': '$const206.3.1', 'res': '$208binary_subtract.4'}), (210, {'index': '$208binary_subtract.4', 'target': '$supertrend202.1', 'res': '$210binary_subscr.5'}), (212, {'res': '$final_ub212.6'}), (214, {'res': '$i214.7'}), (216, {'res': '$const216.8.1'}), (218, {'lhs': '$i214.7', 'rhs': '$const216.8.1', 'res': '$218binary_subtract.9'}), (220, {'index': '$218binary_subtract.9', 'target': '$final_ub212.6', 'res': '$220binary_subscr.10'}), (222, {'lhs': '$210binary_subscr.5', 'rhs': '$220binary_subscr.10', 'res': '$222compare_op.11'}), (224, {'pred': '$222compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={226: ('$phi202.0',), 256: ('$phi202.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=226 nstack_initial=1):
AdaptBlockInfo(insts=((226, {'res': '$close226.1'}), (228, {'res': '$i228.2'}), (230, {'index': '$i228.2', 'target': '$close226.1', 'res': '$230binary_subscr.3'}), (232, {'res': '$final_ub232.4'}), (234, {'res': '$i234.5'}), (236, {'index': '$i234.5', 'target': '$final_ub232.4', 'res': '$236binary_subscr.6'}), (238, {'lhs': '$230binary_subscr.3', 'rhs': '$236binary_subscr.6', 'res': '$238compare_op.7'}), (240, {'pred': '$238compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={242: ('$phi226.0',), 256: ('$phi226.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=242 nstack_initial=1):
AdaptBlockInfo(insts=((242, {'res': '$final_ub242.1'}), (244, {'res': '$i244.2'}), (246, {'index': '$i244.2', 'target': '$final_ub242.1', 'res': '$246binary_subscr.3'}), (248, {'res': '$supertrend248.4'}), (250, {'res': '$i250.5'}), (252, {'target': '$supertrend248.4', 'index': '$i250.5', 'value': '$246binary_subscr.3'}), (254, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi242.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=256 nstack_initial=1):
AdaptBlockInfo(insts=((256, {'res': '$supertrend256.1'}), (258, {'res': '$i258.2'}), (260, {'res': '$const260.3.1'}), (262, {'lhs': '$i258.2', 'rhs': '$const260.3.1', 'res': '$262binary_subtract.4'}), (264, {'index': '$262binary_subtract.4', 'target': '$supertrend256.1', 'res': '$264binary_subscr.5'}), (266, {'res': '$final_ub266.6'}), (268, {'res': '$i268.7'}), (270, {'res': '$const270.8.1'}), (272, {'lhs': '$i268.7', 'rhs': '$const270.8.1', 'res': '$272binary_subtract.9'}), (274, {'index': '$272binary_subtract.9', 'target': '$final_ub266.6', 'res': '$274binary_subscr.10'}), (276, {'lhs': '$264binary_subscr.5', 'rhs': '$274binary_subscr.10', 'res': '$276compare_op.11'}), (278, {'pred': '$276compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={280: ('$phi256.0',), 310: ('$phi256.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=280 nstack_initial=1):
AdaptBlockInfo(insts=((280, {'res': '$close280.1'}), (282, {'res': '$i282.2'}), (284, {'index': '$i282.2', 'target': '$close280.1', 'res': '$284binary_subscr.3'}), (286, {'res': '$final_ub286.4'}), (288, {'res': '$i288.5'}), (290, {'index': '$i288.5', 'target': '$final_ub286.4', 'res': '$290binary_subscr.6'}), (292, {'lhs': '$284binary_subscr.3', 'rhs': '$290binary_subscr.6', 'res': '$292compare_op.7'}), (294, {'pred': '$292compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={296: ('$phi280.0',), 310: ('$phi280.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=296 nstack_initial=1):
AdaptBlockInfo(insts=((296, {'res': '$final_lb296.1'}), (298, {'res': '$i298.2'}), (300, {'index': '$i298.2', 'target': '$final_lb296.1', 'res': '$300binary_subscr.3'}), (302, {'res': '$supertrend302.4'}), (304, {'res': '$i304.5'}), (306, {'target': '$supertrend302.4', 'index': '$i304.5', 'value': '$300binary_subscr.3'}), (308, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi296.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=310 nstack_initial=1):
AdaptBlockInfo(insts=((310, {'res': '$supertrend310.1'}), (312, {'res': '$i312.2'}), (314, {'res': '$const314.3.1'}), (316, {'lhs': '$i312.2', 'rhs': '$const314.3.1', 'res': '$316binary_subtract.4'}), (318, {'index': '$316binary_subtract.4', 'target': '$supertrend310.1', 'res': '$318binary_subscr.5'}), (320, {'res': '$final_lb320.6'}), (322, {'res': '$i322.7'}), (324, {'res': '$const324.8.1'}), (326, {'lhs': '$i322.7', 'rhs': '$const324.8.1', 'res': '$326binary_subtract.9'}), (328, {'index': '$326binary_subtract.9', 'target': '$final_lb320.6', 'res': '$328binary_subscr.10'}), (330, {'lhs': '$318binary_subscr.5', 'rhs': '$328binary_subscr.10', 'res': '$330compare_op.11'}), (332, {'pred': '$330compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={334: ('$phi310.0',), 364: ('$phi310.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=334 nstack_initial=1):
AdaptBlockInfo(insts=((334, {'res': '$close334.1'}), (336, {'res': '$i336.2'}), (338, {'index': '$i336.2', 'target': '$close334.1', 'res': '$338binary_subscr.3'}), (340, {'res': '$final_lb340.4'}), (342, {'res': '$i342.5'}), (344, {'index': '$i342.5', 'target': '$final_lb340.4', 'res': '$344binary_subscr.6'}), (346, {'lhs': '$338binary_subscr.3', 'rhs': '$344binary_subscr.6', 'res': '$346compare_op.7'}), (348, {'pred': '$346compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={350: ('$phi334.0',), 364: ('$phi334.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=350 nstack_initial=1):
AdaptBlockInfo(insts=((350, {'res': '$final_lb350.1'}), (352, {'res': '$i352.2'}), (354, {'index': '$i352.2', 'target': '$final_lb350.1', 'res': '$354binary_subscr.3'}), (356, {'res': '$supertrend356.4'}), (358, {'res': '$i358.5'}), (360, {'target': '$supertrend356.4', 'index': '$i358.5', 'value': '$354binary_subscr.3'}), (362, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi350.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=364 nstack_initial=1):
AdaptBlockInfo(insts=((364, {'res': '$supertrend364.1'}), (366, {'res': '$i366.2'}), (368, {'res': '$const368.3.1'}), (370, {'lhs': '$i366.2', 'rhs': '$const368.3.1', 'res': '$370binary_subtract.4'}), (372, {'index': '$370binary_subtract.4', 'target': '$supertrend364.1', 'res': '$372binary_subscr.5'}), (374, {'res': '$final_lb374.6'}), (376, {'res': '$i376.7'}), (378, {'res': '$const378.8.1'}), (380, {'lhs': '$i376.7', 'rhs': '$const378.8.1', 'res': '$380binary_subtract.9'}), (382, {'index': '$380binary_subtract.9', 'target': '$final_lb374.6', 'res': '$382binary_subscr.10'}), (384, {'lhs': '$372binary_subscr.5', 'rhs': '$382binary_subscr.10', 'res': '$384compare_op.11'}), (386, {'pred': '$384compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={388: ('$phi364.0',), 418: ('$phi364.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=388 nstack_initial=1):
AdaptBlockInfo(insts=((388, {'res': '$close388.1'}), (390, {'res': '$i390.2'}), (392, {'index': '$i390.2', 'target': '$close388.1', 'res': '$392binary_subscr.3'}), (394, {'res': '$final_lb394.4'}), (396, {'res': '$i396.5'}), (398, {'index': '$i396.5', 'target': '$final_lb394.4', 'res': '$398binary_subscr.6'}), (400, {'lhs': '$392binary_subscr.3', 'rhs': '$398binary_subscr.6', 'res': '$400compare_op.7'}), (402, {'pred': '$400compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={404: ('$phi388.0',), 418: ('$phi388.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=404 nstack_initial=1):
AdaptBlockInfo(insts=((404, {'res': '$final_ub404.1'}), (406, {'res': '$i406.2'}), (408, {'index': '$i406.2', 'target': '$final_ub404.1', 'res': '$408binary_subscr.3'}), (410, {'res': '$supertrend410.4'}), (412, {'res': '$i412.5'}), (414, {'target': '$supertrend410.4', 'index': '$i412.5', 'value': '$408binary_subscr.3'}), (416, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi404.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=418 nstack_initial=1):
AdaptBlockInfo(insts=((418, {'res': '$const418.1.2'}), (420, {'res': '$supertrend420.2'}), (422, {'res': '$i422.3'}), (424, {'target': '$supertrend420.2', 'index': '$i422.3', 'value': '$const418.1.2'}), (426, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi418.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=428 nstack_initial=0):
AdaptBlockInfo(insts=((428, {'res': '$supertrend428.0'}), (430, {'retval': '$supertrend428.0', 'castval': '$430return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    close = arg(0, name=close)               ['close']
    basic_ub = arg(1, name=basic_ub)         ['basic_ub']
    basic_lb = arg(2, name=basic_lb)         ['basic_lb']
    n = arg(3, name=n)                       ['n']
    $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
    length = call $2load_global.0(close, func=$2load_global.0, args=[Var(close, helper_loops.py:99)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'close', 'length']
    $10load_global.3 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>) ['$10load_global.3']
    $12load_method.4 = getattr(value=$10load_global.3, attr=zeros) ['$10load_global.3', '$12load_method.4']
    final_ub = call $12load_method.4(length, func=$12load_method.4, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_method.4', 'final_ub', 'length']
    $20load_global.7 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.7']
    $22load_method.8 = getattr(value=$20load_global.7, attr=zeros) ['$20load_global.7', '$22load_method.8']
    final_lb = call $22load_method.8(length, func=$22load_method.8, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.8', 'final_lb', 'length']
    $30load_global.11 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>) ['$30load_global.11']
    $32load_method.12 = getattr(value=$30load_global.11, attr=zeros) ['$30load_global.11', '$32load_method.12']
    supertrend = call $32load_method.12(length, func=$32load_method.12, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$32load_method.12', 'length', 'supertrend']
    $40load_global.15 = global(range: <class 'range'>) ['$40load_global.15']
    $46call_function.18 = call $40load_global.15(n, length, func=$40load_global.15, args=[Var(n, helper_loops.py:99), Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_global.15', '$46call_function.18', 'length', 'n']
    $48get_iter.19 = getiter(value=$46call_function.18) ['$46call_function.18', '$48get_iter.19']
    $phi50.0 = $48get_iter.19                ['$48get_iter.19', '$phi50.0']
    jump 50                                  []
label 50:
    $50for_iter.1 = iternext(value=$phi50.0) ['$50for_iter.1', '$phi50.0']
    $50for_iter.2 = pair_first(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.2']
    $50for_iter.3 = pair_second(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.3']
    $phi52.1 = $50for_iter.2                 ['$50for_iter.2', '$phi52.1']
    branch $50for_iter.3, 52, 428            ['$50for_iter.3']
label 52:
    i = $phi52.1                             ['$phi52.1', 'i']
    $58binary_subscr.4 = getitem(value=basic_ub, index=i, fn=<built-in function getitem>) ['$58binary_subscr.4', 'basic_ub', 'i']
    $const64.7.1 = const(int, 1)             ['$const64.7.1']
    $66binary_subtract.8 = i - $const64.7.1  ['$66binary_subtract.8', '$const64.7.1', 'i']
    $68binary_subscr.9 = getitem(value=final_ub, index=$66binary_subtract.8, fn=<built-in function getitem>) ['$66binary_subtract.8', '$68binary_subscr.9', 'final_ub']
    $70compare_op.10 = $58binary_subscr.4 < $68binary_subscr.9 ['$58binary_subscr.4', '$68binary_subscr.9', '$70compare_op.10']
    bool72 = global(bool: <class 'bool'>)    ['bool72']
    $72pred = call bool72($70compare_op.10, func=bool72, args=(Var($70compare_op.10, helper_loops.py:113),), kws=(), vararg=None, varkwarg=None, target=None) ['$70compare_op.10', '$72pred', 'bool72']
    branch $72pred, 98, 74                   ['$72pred']
label 74:
    $const78.3.1 = const(int, 1)             ['$const78.3.1']
    $80binary_subtract.4 = i - $const78.3.1  ['$80binary_subtract.4', '$const78.3.1', 'i']
    $82binary_subscr.5 = getitem(value=close, index=$80binary_subtract.4, fn=<built-in function getitem>) ['$80binary_subtract.4', '$82binary_subscr.5', 'close']
    $const88.8.1 = const(int, 1)             ['$const88.8.1']
    $90binary_subtract.9 = i - $const88.8.1  ['$90binary_subtract.9', '$const88.8.1', 'i']
    $92binary_subscr.10 = getitem(value=final_ub, index=$90binary_subtract.9, fn=<built-in function getitem>) ['$90binary_subtract.9', '$92binary_subscr.10', 'final_ub']
    $94compare_op.11 = $82binary_subscr.5 > $92binary_subscr.10 ['$82binary_subscr.5', '$92binary_subscr.10', '$94compare_op.11']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
    $96pred = call bool96($94compare_op.11, func=bool96, args=(Var($94compare_op.11, helper_loops.py:113),), kws=(), vararg=None, varkwarg=None, target=None) ['$94compare_op.11', '$96pred', 'bool96']
    branch $96pred, 98, 112                  ['$96pred']
label 98:
    $102binary_subscr.3 = getitem(value=basic_ub, index=i, fn=<built-in function getitem>) ['$102binary_subscr.3', 'basic_ub', 'i']
    final_ub[i] = $102binary_subscr.3        ['$102binary_subscr.3', 'final_ub', 'i']
    jump 128                                 []
label 112:
    $const116.3.1 = const(int, 1)            ['$const116.3.1']
    $118binary_subtract.4 = i - $const116.3.1 ['$118binary_subtract.4', '$const116.3.1', 'i']
    $120binary_subscr.5 = getitem(value=final_ub, index=$118binary_subtract.4, fn=<built-in function getitem>) ['$118binary_subtract.4', '$120binary_subscr.5', 'final_ub']
    final_ub[i] = $120binary_subscr.5        ['$120binary_subscr.5', 'final_ub', 'i']
    jump 128                                 []
label 128:
    $132binary_subscr.3 = getitem(value=basic_lb, index=i, fn=<built-in function getitem>) ['$132binary_subscr.3', 'basic_lb', 'i']
    $const138.6.1 = const(int, 1)            ['$const138.6.1']
    $140binary_subtract.7 = i - $const138.6.1 ['$140binary_subtract.7', '$const138.6.1', 'i']
    $142binary_subscr.8 = getitem(value=final_lb, index=$140binary_subtract.7, fn=<built-in function getitem>) ['$140binary_subtract.7', '$142binary_subscr.8', 'final_lb']
    $144compare_op.9 = $132binary_subscr.3 > $142binary_subscr.8 ['$132binary_subscr.3', '$142binary_subscr.8', '$144compare_op.9']
    bool146 = global(bool: <class 'bool'>)   ['bool146']
    $146pred = call bool146($144compare_op.9, func=bool146, args=(Var($144compare_op.9, helper_loops.py:118),), kws=(), vararg=None, varkwarg=None, target=None) ['$144compare_op.9', '$146pred', 'bool146']
    branch $146pred, 172, 148                ['$146pred']
label 148:
    $const152.3.1 = const(int, 1)            ['$const152.3.1']
    $154binary_subtract.4 = i - $const152.3.1 ['$154binary_subtract.4', '$const152.3.1', 'i']
    $156binary_subscr.5 = getitem(value=close, index=$154binary_subtract.4, fn=<built-in function getitem>) ['$154binary_subtract.4', '$156binary_subscr.5', 'close']
    $const162.8.1 = const(int, 1)            ['$const162.8.1']
    $164binary_subtract.9 = i - $const162.8.1 ['$164binary_subtract.9', '$const162.8.1', 'i']
    $166binary_subscr.10 = getitem(value=final_lb, index=$164binary_subtract.9, fn=<built-in function getitem>) ['$164binary_subtract.9', '$166binary_subscr.10', 'final_lb']
    $168compare_op.11 = $156binary_subscr.5 < $166binary_subscr.10 ['$156binary_subscr.5', '$166binary_subscr.10', '$168compare_op.11']
    bool170 = global(bool: <class 'bool'>)   ['bool170']
    $170pred = call bool170($168compare_op.11, func=bool170, args=(Var($168compare_op.11, helper_loops.py:118),), kws=(), vararg=None, varkwarg=None, target=None) ['$168compare_op.11', '$170pred', 'bool170']
    branch $170pred, 172, 186                ['$170pred']
label 172:
    $176binary_subscr.3 = getitem(value=basic_lb, index=i, fn=<built-in function getitem>) ['$176binary_subscr.3', 'basic_lb', 'i']
    final_lb[i] = $176binary_subscr.3        ['$176binary_subscr.3', 'final_lb', 'i']
    jump 202                                 []
label 186:
    $const190.3.1 = const(int, 1)            ['$const190.3.1']
    $192binary_subtract.4 = i - $const190.3.1 ['$192binary_subtract.4', '$const190.3.1', 'i']
    $194binary_subscr.5 = getitem(value=final_lb, index=$192binary_subtract.4, fn=<built-in function getitem>) ['$192binary_subtract.4', '$194binary_subscr.5', 'final_lb']
    final_lb[i] = $194binary_subscr.5        ['$194binary_subscr.5', 'final_lb', 'i']
    jump 202                                 []
label 202:
    $const206.3.1 = const(int, 1)            ['$const206.3.1']
    $208binary_subtract.4 = i - $const206.3.1 ['$208binary_subtract.4', '$const206.3.1', 'i']
    $210binary_subscr.5 = getitem(value=supertrend, index=$208binary_subtract.4, fn=<built-in function getitem>) ['$208binary_subtract.4', '$210binary_subscr.5', 'supertrend']
    $const216.8.1 = const(int, 1)            ['$const216.8.1']
    $218binary_subtract.9 = i - $const216.8.1 ['$218binary_subtract.9', '$const216.8.1', 'i']
    $220binary_subscr.10 = getitem(value=final_ub, index=$218binary_subtract.9, fn=<built-in function getitem>) ['$218binary_subtract.9', '$220binary_subscr.10', 'final_ub']
    $222compare_op.11 = $210binary_subscr.5 == $220binary_subscr.10 ['$210binary_subscr.5', '$220binary_subscr.10', '$222compare_op.11']
    bool224 = global(bool: <class 'bool'>)   ['bool224']
    $224pred = call bool224($222compare_op.11, func=bool224, args=(Var($222compare_op.11, helper_loops.py:123),), kws=(), vararg=None, varkwarg=None, target=None) ['$222compare_op.11', '$224pred', 'bool224']
    branch $224pred, 226, 256                ['$224pred']
label 226:
    $230binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>) ['$230binary_subscr.3', 'close', 'i']
    $236binary_subscr.6 = getitem(value=final_ub, index=i, fn=<built-in function getitem>) ['$236binary_subscr.6', 'final_ub', 'i']
    $238compare_op.7 = $230binary_subscr.3 <= $236binary_subscr.6 ['$230binary_subscr.3', '$236binary_subscr.6', '$238compare_op.7']
    bool240 = global(bool: <class 'bool'>)   ['bool240']
    $240pred = call bool240($238compare_op.7, func=bool240, args=(Var($238compare_op.7, helper_loops.py:123),), kws=(), vararg=None, varkwarg=None, target=None) ['$238compare_op.7', '$240pred', 'bool240']
    branch $240pred, 242, 256                ['$240pred']
label 242:
    $246binary_subscr.3 = getitem(value=final_ub, index=i, fn=<built-in function getitem>) ['$246binary_subscr.3', 'final_ub', 'i']
    supertrend[i] = $246binary_subscr.3      ['$246binary_subscr.3', 'i', 'supertrend']
    jump 50                                  []
label 256:
    $const260.3.1 = const(int, 1)            ['$const260.3.1']
    $262binary_subtract.4 = i - $const260.3.1 ['$262binary_subtract.4', '$const260.3.1', 'i']
    $264binary_subscr.5 = getitem(value=supertrend, index=$262binary_subtract.4, fn=<built-in function getitem>) ['$262binary_subtract.4', '$264binary_subscr.5', 'supertrend']
    $const270.8.1 = const(int, 1)            ['$const270.8.1']
    $272binary_subtract.9 = i - $const270.8.1 ['$272binary_subtract.9', '$const270.8.1', 'i']
    $274binary_subscr.10 = getitem(value=final_ub, index=$272binary_subtract.9, fn=<built-in function getitem>) ['$272binary_subtract.9', '$274binary_subscr.10', 'final_ub']
    $276compare_op.11 = $264binary_subscr.5 == $274binary_subscr.10 ['$264binary_subscr.5', '$274binary_subscr.10', '$276compare_op.11']
    bool278 = global(bool: <class 'bool'>)   ['bool278']
    $278pred = call bool278($276compare_op.11, func=bool278, args=(Var($276compare_op.11, helper_loops.py:125),), kws=(), vararg=None, varkwarg=None, target=None) ['$276compare_op.11', '$278pred', 'bool278']
    branch $278pred, 280, 310                ['$278pred']
label 280:
    $284binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>) ['$284binary_subscr.3', 'close', 'i']
    $290binary_subscr.6 = getitem(value=final_ub, index=i, fn=<built-in function getitem>) ['$290binary_subscr.6', 'final_ub', 'i']
    $292compare_op.7 = $284binary_subscr.3 > $290binary_subscr.6 ['$284binary_subscr.3', '$290binary_subscr.6', '$292compare_op.7']
    bool294 = global(bool: <class 'bool'>)   ['bool294']
    $294pred = call bool294($292compare_op.7, func=bool294, args=(Var($292compare_op.7, helper_loops.py:125),), kws=(), vararg=None, varkwarg=None, target=None) ['$292compare_op.7', '$294pred', 'bool294']
    branch $294pred, 296, 310                ['$294pred']
label 296:
    $300binary_subscr.3 = getitem(value=final_lb, index=i, fn=<built-in function getitem>) ['$300binary_subscr.3', 'final_lb', 'i']
    supertrend[i] = $300binary_subscr.3      ['$300binary_subscr.3', 'i', 'supertrend']
    jump 50                                  []
label 310:
    $const314.3.1 = const(int, 1)            ['$const314.3.1']
    $316binary_subtract.4 = i - $const314.3.1 ['$316binary_subtract.4', '$const314.3.1', 'i']
    $318binary_subscr.5 = getitem(value=supertrend, index=$316binary_subtract.4, fn=<built-in function getitem>) ['$316binary_subtract.4', '$318binary_subscr.5', 'supertrend']
    $const324.8.1 = const(int, 1)            ['$const324.8.1']
    $326binary_subtract.9 = i - $const324.8.1 ['$326binary_subtract.9', '$const324.8.1', 'i']
    $328binary_subscr.10 = getitem(value=final_lb, index=$326binary_subtract.9, fn=<built-in function getitem>) ['$326binary_subtract.9', '$328binary_subscr.10', 'final_lb']
    $330compare_op.11 = $318binary_subscr.5 == $328binary_subscr.10 ['$318binary_subscr.5', '$328binary_subscr.10', '$330compare_op.11']
    bool332 = global(bool: <class 'bool'>)   ['bool332']
    $332pred = call bool332($330compare_op.11, func=bool332, args=(Var($330compare_op.11, helper_loops.py:127),), kws=(), vararg=None, varkwarg=None, target=None) ['$330compare_op.11', '$332pred', 'bool332']
    branch $332pred, 334, 364                ['$332pred']
label 334:
    $338binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>) ['$338binary_subscr.3', 'close', 'i']
    $344binary_subscr.6 = getitem(value=final_lb, index=i, fn=<built-in function getitem>) ['$344binary_subscr.6', 'final_lb', 'i']
    $346compare_op.7 = $338binary_subscr.3 >= $344binary_subscr.6 ['$338binary_subscr.3', '$344binary_subscr.6', '$346compare_op.7']
    bool348 = global(bool: <class 'bool'>)   ['bool348']
    $348pred = call bool348($346compare_op.7, func=bool348, args=(Var($346compare_op.7, helper_loops.py:127),), kws=(), vararg=None, varkwarg=None, target=None) ['$346compare_op.7', '$348pred', 'bool348']
    branch $348pred, 350, 364                ['$348pred']
label 350:
    $354binary_subscr.3 = getitem(value=final_lb, index=i, fn=<built-in function getitem>) ['$354binary_subscr.3', 'final_lb', 'i']
    supertrend[i] = $354binary_subscr.3      ['$354binary_subscr.3', 'i', 'supertrend']
    jump 50                                  []
label 364:
    $const368.3.1 = const(int, 1)            ['$const368.3.1']
    $370binary_subtract.4 = i - $const368.3.1 ['$370binary_subtract.4', '$const368.3.1', 'i']
    $372binary_subscr.5 = getitem(value=supertrend, index=$370binary_subtract.4, fn=<built-in function getitem>) ['$370binary_subtract.4', '$372binary_subscr.5', 'supertrend']
    $const378.8.1 = const(int, 1)            ['$const378.8.1']
    $380binary_subtract.9 = i - $const378.8.1 ['$380binary_subtract.9', '$const378.8.1', 'i']
    $382binary_subscr.10 = getitem(value=final_lb, index=$380binary_subtract.9, fn=<built-in function getitem>) ['$380binary_subtract.9', '$382binary_subscr.10', 'final_lb']
    $384compare_op.11 = $372binary_subscr.5 == $382binary_subscr.10 ['$372binary_subscr.5', '$382binary_subscr.10', '$384compare_op.11']
    bool386 = global(bool: <class 'bool'>)   ['bool386']
    $386pred = call bool386($384compare_op.11, func=bool386, args=(Var($384compare_op.11, helper_loops.py:129),), kws=(), vararg=None, varkwarg=None, target=None) ['$384compare_op.11', '$386pred', 'bool386']
    branch $386pred, 388, 418                ['$386pred']
label 388:
    $392binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>) ['$392binary_subscr.3', 'close', 'i']
    $398binary_subscr.6 = getitem(value=final_lb, index=i, fn=<built-in function getitem>) ['$398binary_subscr.6', 'final_lb', 'i']
    $400compare_op.7 = $392binary_subscr.3 < $398binary_subscr.6 ['$392binary_subscr.3', '$398binary_subscr.6', '$400compare_op.7']
    bool402 = global(bool: <class 'bool'>)   ['bool402']
    $402pred = call bool402($400compare_op.7, func=bool402, args=(Var($400compare_op.7, helper_loops.py:129),), kws=(), vararg=None, varkwarg=None, target=None) ['$400compare_op.7', '$402pred', 'bool402']
    branch $402pred, 404, 418                ['$402pred']
label 404:
    $408binary_subscr.3 = getitem(value=final_ub, index=i, fn=<built-in function getitem>) ['$408binary_subscr.3', 'final_ub', 'i']
    supertrend[i] = $408binary_subscr.3      ['$408binary_subscr.3', 'i', 'supertrend']
    jump 50                                  []
label 418:
    $const418.1.2 = const(float, 0.0)        ['$const418.1.2']
    supertrend[i] = $const418.1.2            ['$const418.1.2', 'i', 'supertrend']
    jump 50                                  []
label 428:
    $430return_value.1 = cast(value=supertrend) ['$430return_value.1', 'supertrend']
    return $430return_value.1                ['$430return_value.1']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x773298ebfe50>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: close = arg(0, name=close)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: basic_ub = arg(1, name=basic_ub)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: basic_lb = arg(2, name=basic_lb)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: n = arg(3, name=n)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(len: <built-in function len>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: length = call $2load_global.0(close, func=$2load_global.0, args=[Var(close, helper_loops.py:99)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $10load_global.3 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $12load_method.4 = getattr(value=$10load_global.3, attr=zeros)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_ub = call $12load_method.4(length, func=$12load_method.4, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $20load_global.7 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $22load_method.8 = getattr(value=$20load_global.7, attr=zeros)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_lb = call $22load_method.8(length, func=$22load_method.8, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $30load_global.11 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $32load_method.12 = getattr(value=$30load_global.11, attr=zeros)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend = call $32load_method.12(length, func=$32load_method.12, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $40load_global.15 = global(range: <class 'range'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $46call_function.18 = call $40load_global.15(n, length, func=$40load_global.15, args=[Var(n, helper_loops.py:99), Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $48get_iter.19 = getiter(value=$46call_function.18)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $phi50.0 = $48get_iter.19
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 50
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 50
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x773298ebfe50>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $50for_iter.1 = iternext(value=$phi50.0)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $phi52.1 = $50for_iter.2
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $50for_iter.3, 52, 428
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 52
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x773298ebfe50>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: i = $phi52.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $58binary_subscr.4 = getitem(value=basic_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const64.7.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $66binary_subtract.8 = i - $const64.7.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $68binary_subscr.9 = getitem(value=final_ub, index=$66binary_subtract.8, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $70compare_op.10 = $58binary_subscr.4 < $68binary_subscr.9
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool72 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $72pred = call bool72($70compare_op.10, func=bool72, args=(Var($70compare_op.10, helper_loops.py:113),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $72pred, 98, 74
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 74
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x773298ebfe50>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const78.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $80binary_subtract.4 = i - $const78.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $82binary_subscr.5 = getitem(value=close, index=$80binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const88.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $90binary_subtract.9 = i - $const88.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $92binary_subscr.10 = getitem(value=final_ub, index=$90binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $94compare_op.11 = $82binary_subscr.5 > $92binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool96 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $96pred = call bool96($94compare_op.11, func=bool96, args=(Var($94compare_op.11, helper_loops.py:113),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $96pred, 98, 112
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 98
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x773298ebfe50>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $102binary_subscr.3 = getitem(value=basic_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_ub[i] = $102binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 128
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 112
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x773298ebfe50>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const116.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $118binary_subtract.4 = i - $const116.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $120binary_subscr.5 = getitem(value=final_ub, index=$118binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_ub[i] = $120binary_subscr.5
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 128
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 128
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x773298ebfe50>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $132binary_subscr.3 = getitem(value=basic_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const138.6.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $140binary_subtract.7 = i - $const138.6.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $142binary_subscr.8 = getitem(value=final_lb, index=$140binary_subtract.7, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $144compare_op.9 = $132binary_subscr.3 > $142binary_subscr.8
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool146 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $146pred = call bool146($144compare_op.9, func=bool146, args=(Var($144compare_op.9, helper_loops.py:118),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $146pred, 172, 148
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 148
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x773298ebfe50>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const152.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $154binary_subtract.4 = i - $const152.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $156binary_subscr.5 = getitem(value=close, index=$154binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const162.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $164binary_subtract.9 = i - $const162.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $166binary_subscr.10 = getitem(value=final_lb, index=$164binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $168compare_op.11 = $156binary_subscr.5 < $166binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool170 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $170pred = call bool170($168compare_op.11, func=bool170, args=(Var($168compare_op.11, helper_loops.py:118),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $170pred, 172, 186
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 172
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x773298ebfe50>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $176binary_subscr.3 = getitem(value=basic_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_lb[i] = $176binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 202
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 186
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x773298ebfe50>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const190.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $192binary_subtract.4 = i - $const190.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $194binary_subscr.5 = getitem(value=final_lb, index=$192binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_lb[i] = $194binary_subscr.5
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 202
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 202
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x773298ebfe50>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const206.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $208binary_subtract.4 = i - $const206.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $210binary_subscr.5 = getitem(value=supertrend, index=$208binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const216.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $218binary_subtract.9 = i - $const216.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $220binary_subscr.10 = getitem(value=final_ub, index=$218binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $222compare_op.11 = $210binary_subscr.5 == $220binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool224 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $224pred = call bool224($222compare_op.11, func=bool224, args=(Var($222compare_op.11, helper_loops.py:123),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $224pred, 226, 256
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 226
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x773298ebfe50>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $230binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $236binary_subscr.6 = getitem(value=final_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $238compare_op.7 = $230binary_subscr.3 <= $236binary_subscr.6
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool240 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $240pred = call bool240($238compare_op.7, func=bool240, args=(Var($238compare_op.7, helper_loops.py:123),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $240pred, 242, 256
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 242
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x773298ebfe50>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $246binary_subscr.3 = getitem(value=final_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $246binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 256
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x773298ebfe50>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const260.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $262binary_subtract.4 = i - $const260.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $264binary_subscr.5 = getitem(value=supertrend, index=$262binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const270.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $272binary_subtract.9 = i - $const270.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $274binary_subscr.10 = getitem(value=final_ub, index=$272binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $276compare_op.11 = $264binary_subscr.5 == $274binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool278 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $278pred = call bool278($276compare_op.11, func=bool278, args=(Var($276compare_op.11, helper_loops.py:125),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $278pred, 280, 310
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 280
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x773298ebfe50>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $284binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $290binary_subscr.6 = getitem(value=final_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $292compare_op.7 = $284binary_subscr.3 > $290binary_subscr.6
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool294 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $294pred = call bool294($292compare_op.7, func=bool294, args=(Var($292compare_op.7, helper_loops.py:125),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $294pred, 296, 310
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 296
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x773298ebfe50>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $300binary_subscr.3 = getitem(value=final_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $300binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 310
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x773298ebfe50>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const314.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $316binary_subtract.4 = i - $const314.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $318binary_subscr.5 = getitem(value=supertrend, index=$316binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const324.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $326binary_subtract.9 = i - $const324.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $328binary_subscr.10 = getitem(value=final_lb, index=$326binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $330compare_op.11 = $318binary_subscr.5 == $328binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool332 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $332pred = call bool332($330compare_op.11, func=bool332, args=(Var($330compare_op.11, helper_loops.py:127),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $332pred, 334, 364
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 334
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x773298ebfe50>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $338binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $344binary_subscr.6 = getitem(value=final_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $346compare_op.7 = $338binary_subscr.3 >= $344binary_subscr.6
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool348 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $348pred = call bool348($346compare_op.7, func=bool348, args=(Var($346compare_op.7, helper_loops.py:127),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $348pred, 350, 364
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 350
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x773298ebfe50>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $354binary_subscr.3 = getitem(value=final_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $354binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 364
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x773298ebfe50>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const368.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $370binary_subtract.4 = i - $const368.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $372binary_subscr.5 = getitem(value=supertrend, index=$370binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const378.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $380binary_subtract.9 = i - $const378.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $382binary_subscr.10 = getitem(value=final_lb, index=$380binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $384compare_op.11 = $372binary_subscr.5 == $382binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool386 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $386pred = call bool386($384compare_op.11, func=bool386, args=(Var($384compare_op.11, helper_loops.py:129),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $386pred, 388, 418
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 388
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x773298ebfe50>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $392binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $398binary_subscr.6 = getitem(value=final_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $400compare_op.7 = $392binary_subscr.3 < $398binary_subscr.6
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool402 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $402pred = call bool402($400compare_op.7, func=bool402, args=(Var($400compare_op.7, helper_loops.py:129),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $402pred, 404, 418
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 404
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x773298ebfe50>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $408binary_subscr.3 = getitem(value=final_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $408binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 418
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x773298ebfe50>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const418.1.2 = const(float, 0.0)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $const418.1.2
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 428
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x773298ebfe50>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $430return_value.1 = cast(value=supertrend)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $430return_value.1
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 429
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x773298ebfe50>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 50
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$102binary_subscr.3': [(<numba.core.ir.Assign object at 0x773298e9dab0>,
                                      98)],
             '$10load_global.3': [(<numba.core.ir.Assign object at 0x77329903d8a0>,
                                   0)],
             '$118binary_subtract.4': [(<numba.core.ir.Assign object at 0x773298e9e2f0>,
                                        112)],
             '$120binary_subscr.5': [(<numba.core.ir.Assign object at 0x773298e9e470>,
                                      112)],
             '$12load_method.4': [(<numba.core.ir.Assign object at 0x77329903da20>,
                                   0)],
             '$132binary_subscr.3': [(<numba.core.ir.Assign object at 0x773298e9ead0>,
                                      128)],
             '$140binary_subtract.7': [(<numba.core.ir.Assign object at 0x773298e9f010>,
                                        128)],
             '$142binary_subscr.8': [(<numba.core.ir.Assign object at 0x773298e9f190>,
                                      128)],
             '$144compare_op.9': [(<numba.core.ir.Assign object at 0x773298e9f310>,
                                   128)],
             '$146pred': [(<numba.core.ir.Assign object at 0x773298e9f580>,
                           128)],
             '$154binary_subtract.4': [(<numba.core.ir.Assign object at 0x773298e9fa90>,
                                        148)],
             '$156binary_subscr.5': [(<numba.core.ir.Assign object at 0x773298e9fc10>,
                                      148)],
             '$164binary_subtract.9': [(<numba.core.ir.Assign object at 0x773298ea4190>,
                                        148)],
             '$166binary_subscr.10': [(<numba.core.ir.Assign object at 0x773298ea4310>,
                                       148)],
             '$168compare_op.11': [(<numba.core.ir.Assign object at 0x773298ea4490>,
                                    148)],
             '$170pred': [(<numba.core.ir.Assign object at 0x773298ea4700>,
                           148)],
             '$176binary_subscr.3': [(<numba.core.ir.Assign object at 0x773298ea4a90>,
                                      172)],
             '$192binary_subtract.4': [(<numba.core.ir.Assign object at 0x773298ea52d0>,
                                        186)],
             '$194binary_subscr.5': [(<numba.core.ir.Assign object at 0x773298ea5450>,
                                      186)],
             '$208binary_subtract.4': [(<numba.core.ir.Assign object at 0x773298ea5c30>,
                                        202)],
             '$20load_global.7': [(<numba.core.ir.Assign object at 0x77329903df60>,
                                   0)],
             '$210binary_subscr.5': [(<numba.core.ir.Assign object at 0x773298ea5db0>,
                                      202)],
             '$218binary_subtract.9': [(<numba.core.ir.Assign object at 0x773298ea62f0>,
                                        202)],
             '$220binary_subscr.10': [(<numba.core.ir.Assign object at 0x773298ea6470>,
                                       202)],
             '$222compare_op.11': [(<numba.core.ir.Assign object at 0x773298ea65f0>,
                                    202)],
             '$224pred': [(<numba.core.ir.Assign object at 0x773298ea6860>,
                           202)],
             '$22load_method.8': [(<numba.core.ir.Assign object at 0x77329903e0e0>,
                                   0)],
             '$230binary_subscr.3': [(<numba.core.ir.Assign object at 0x773298ea6bf0>,
                                      226)],
             '$236binary_subscr.6': [(<numba.core.ir.Assign object at 0x773298ea6fb0>,
                                      226)],
             '$238compare_op.7': [(<numba.core.ir.Assign object at 0x773298ea7130>,
                                   226)],
             '$240pred': [(<numba.core.ir.Assign object at 0x773298ea73a0>,
                           226)],
             '$246binary_subscr.3': [(<numba.core.ir.Assign object at 0x773298ea7730>,
                                      242)],
             '$262binary_subtract.4': [(<numba.core.ir.Assign object at 0x773298ea7f70>,
                                        256)],
             '$264binary_subscr.5': [(<numba.core.ir.Assign object at 0x773298eb0130>,
                                      256)],
             '$272binary_subtract.9': [(<numba.core.ir.Assign object at 0x773298eb0670>,
                                        256)],
             '$274binary_subscr.10': [(<numba.core.ir.Assign object at 0x773298eb07f0>,
                                       256)],
             '$276compare_op.11': [(<numba.core.ir.Assign object at 0x773298eb0970>,
                                    256)],
             '$278pred': [(<numba.core.ir.Assign object at 0x773298eb0be0>,
                           256)],
             '$284binary_subscr.3': [(<numba.core.ir.Assign object at 0x773298eb0f70>,
                                      280)],
             '$290binary_subscr.6': [(<numba.core.ir.Assign object at 0x773298eb1330>,
                                      280)],
             '$292compare_op.7': [(<numba.core.ir.Assign object at 0x773298eb14b0>,
                                   280)],
             '$294pred': [(<numba.core.ir.Assign object at 0x773298eb1720>,
                           280)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x77329903d360>,
                                  0)],
             '$300binary_subscr.3': [(<numba.core.ir.Assign object at 0x773298eb1ab0>,
                                      296)],
             '$30load_global.11': [(<numba.core.ir.Assign object at 0x77329903e620>,
                                    0)],
             '$316binary_subtract.4': [(<numba.core.ir.Assign object at 0x773298eb22f0>,
                                        310)],
             '$318binary_subscr.5': [(<numba.core.ir.Assign object at 0x773298eb2470>,
                                      310)],
             '$326binary_subtract.9': [(<numba.core.ir.Assign object at 0x773298eb29b0>,
                                        310)],
             '$328binary_subscr.10': [(<numba.core.ir.Assign object at 0x773298eb2b30>,
                                       310)],
             '$32load_method.12': [(<numba.core.ir.Assign object at 0x77329903e7a0>,
                                    0)],
             '$330compare_op.11': [(<numba.core.ir.Assign object at 0x773298eb2cb0>,
                                    310)],
             '$332pred': [(<numba.core.ir.Assign object at 0x773298eb2f20>,
                           310)],
             '$338binary_subscr.3': [(<numba.core.ir.Assign object at 0x773298eb32b0>,
                                      334)],
             '$344binary_subscr.6': [(<numba.core.ir.Assign object at 0x773298eb3670>,
                                      334)],
             '$346compare_op.7': [(<numba.core.ir.Assign object at 0x773298eb37f0>,
                                   334)],
             '$348pred': [(<numba.core.ir.Assign object at 0x773298eb3a60>,
                           334)],
             '$354binary_subscr.3': [(<numba.core.ir.Assign object at 0x773298eb3df0>,
                                      350)],
             '$370binary_subtract.4': [(<numba.core.ir.Assign object at 0x773298ebc670>,
                                        364)],
             '$372binary_subscr.5': [(<numba.core.ir.Assign object at 0x773298ebc7f0>,
                                      364)],
             '$380binary_subtract.9': [(<numba.core.ir.Assign object at 0x773298ebcd30>,
                                        364)],
             '$382binary_subscr.10': [(<numba.core.ir.Assign object at 0x773298ebceb0>,
                                       364)],
             '$384compare_op.11': [(<numba.core.ir.Assign object at 0x773298ebd030>,
                                    364)],
             '$386pred': [(<numba.core.ir.Assign object at 0x773298ebd2a0>,
                           364)],
             '$392binary_subscr.3': [(<numba.core.ir.Assign object at 0x773298ebd630>,
                                      388)],
             '$398binary_subscr.6': [(<numba.core.ir.Assign object at 0x773298ebd9f0>,
                                      388)],
             '$400compare_op.7': [(<numba.core.ir.Assign object at 0x773298ebdb70>,
                                   388)],
             '$402pred': [(<numba.core.ir.Assign object at 0x773298ebdde0>,
                           388)],
             '$408binary_subscr.3': [(<numba.core.ir.Assign object at 0x773298ebe170>,
                                      404)],
             '$40load_global.15': [(<numba.core.ir.Assign object at 0x77329903ece0>,
                                    0)],
             '$430return_value.1': [(<numba.core.ir.Assign object at 0x773298ebec20>,
                                     428)],
             '$46call_function.18': [(<numba.core.ir.Assign object at 0x77329903f100>,
                                      0)],
             '$48get_iter.19': [(<numba.core.ir.Assign object at 0x77329903f220>,
                                 0)],
             '$50for_iter.1': [(<numba.core.ir.Assign object at 0x77329903ee90>,
                                50)],
             '$50for_iter.2': [(<numba.core.ir.Assign object at 0x77329903f310>,
                                50)],
             '$50for_iter.3': [(<numba.core.ir.Assign object at 0x77329903f430>,
                                50)],
             '$58binary_subscr.4': [(<numba.core.ir.Assign object at 0x77329903faf0>,
                                     52)],
             '$66binary_subtract.8': [(<numba.core.ir.Assign object at 0x773298e9c070>,
                                       52)],
             '$68binary_subscr.9': [(<numba.core.ir.Assign object at 0x773298e9c1f0>,
                                     52)],
             '$70compare_op.10': [(<numba.core.ir.Assign object at 0x773298e9c370>,
                                   52)],
             '$72pred': [(<numba.core.ir.Assign object at 0x773298e9c5e0>, 52)],
             '$80binary_subtract.4': [(<numba.core.ir.Assign object at 0x773298e9caf0>,
                                       74)],
             '$82binary_subscr.5': [(<numba.core.ir.Assign object at 0x773298e9cc70>,
                                     74)],
             '$90binary_subtract.9': [(<numba.core.ir.Assign object at 0x773298e9d1b0>,
                                       74)],
             '$92binary_subscr.10': [(<numba.core.ir.Assign object at 0x773298e9d330>,
                                      74)],
             '$94compare_op.11': [(<numba.core.ir.Assign object at 0x773298e9d4b0>,
                                   74)],
             '$96pred': [(<numba.core.ir.Assign object at 0x773298e9d720>, 74)],
             '$const116.3.1': [(<numba.core.ir.Assign object at 0x773298e9e140>,
                                112)],
             '$const138.6.1': [(<numba.core.ir.Assign object at 0x773298e9ee60>,
                                128)],
             '$const152.3.1': [(<numba.core.ir.Assign object at 0x773298e9f8e0>,
                                148)],
             '$const162.8.1': [(<numba.core.ir.Assign object at 0x773298e9ffa0>,
                                148)],
             '$const190.3.1': [(<numba.core.ir.Assign object at 0x773298ea5120>,
                                186)],
             '$const206.3.1': [(<numba.core.ir.Assign object at 0x773298ea5a80>,
                                202)],
             '$const216.8.1': [(<numba.core.ir.Assign object at 0x773298ea6140>,
                                202)],
             '$const260.3.1': [(<numba.core.ir.Assign object at 0x773298ea7dc0>,
                                256)],
             '$const270.8.1': [(<numba.core.ir.Assign object at 0x773298eb04c0>,
                                256)],
             '$const314.3.1': [(<numba.core.ir.Assign object at 0x773298eb2140>,
                                310)],
             '$const324.8.1': [(<numba.core.ir.Assign object at 0x773298eb2800>,
                                310)],
             '$const368.3.1': [(<numba.core.ir.Assign object at 0x773298ebc4c0>,
                                364)],
             '$const378.8.1': [(<numba.core.ir.Assign object at 0x773298ebcb80>,
                                364)],
             '$const418.1.2': [(<numba.core.ir.Assign object at 0x773298ebe5c0>,
                                418)],
             '$const64.7.1': [(<numba.core.ir.Assign object at 0x77329903fe80>,
                               52)],
             '$const78.3.1': [(<numba.core.ir.Assign object at 0x773298e9c940>,
                               74)],
             '$const88.8.1': [(<numba.core.ir.Assign object at 0x773298e9d000>,
                               74)],
             '$phi50.0': [(<numba.core.ir.Assign object at 0x77329903d510>, 0)],
             '$phi52.1': [(<numba.core.ir.Assign object at 0x77329903e950>,
                           50)],
             'basic_lb': [(<numba.core.ir.Assign object at 0x77329903c2e0>, 0)],
             'basic_ub': [(<numba.core.ir.Assign object at 0x77329903ce80>, 0)],
             'bool146': [(<numba.core.ir.Assign object at 0x773298e9f460>,
                          128)],
             'bool170': [(<numba.core.ir.Assign object at 0x773298ea45e0>,
                          148)],
             'bool224': [(<numba.core.ir.Assign object at 0x773298ea6740>,
                          202)],
             'bool240': [(<numba.core.ir.Assign object at 0x773298ea7280>,
                          226)],
             'bool278': [(<numba.core.ir.Assign object at 0x773298eb0ac0>,
                          256)],
             'bool294': [(<numba.core.ir.Assign object at 0x773298eb1600>,
                          280)],
             'bool332': [(<numba.core.ir.Assign object at 0x773298eb2e00>,
                          310)],
             'bool348': [(<numba.core.ir.Assign object at 0x773298eb3940>,
                          334)],
             'bool386': [(<numba.core.ir.Assign object at 0x773298ebd180>,
                          364)],
             'bool402': [(<numba.core.ir.Assign object at 0x773298ebdcc0>,
                          388)],
             'bool72': [(<numba.core.ir.Assign object at 0x773298e9c4c0>, 52)],
             'bool96': [(<numba.core.ir.Assign object at 0x773298e9d600>, 74)],
             'close': [(<numba.core.ir.Assign object at 0x77329903c820>, 0)],
             'final_lb': [(<numba.core.ir.Assign object at 0x77329903e410>, 0)],
             'final_ub': [(<numba.core.ir.Assign object at 0x77329903dd50>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x77329903f700>, 52)],
             'length': [(<numba.core.ir.Assign object at 0x77329903d660>, 0)],
             'n': [(<numba.core.ir.Assign object at 0x77329903d1e0>, 0)],
             'supertrend': [(<numba.core.ir.Assign object at 0x77329903ead0>,
                             0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x77329912ebc0>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4522)
           2	LOAD_GLOBAL(arg=0, lineno=4523)
           4	LOAD_ATTR(arg=1, lineno=4523)
           6	LOAD_FAST(arg=0, lineno=4523)
           8	LOAD_FAST(arg=1, lineno=4523)
          10	LOAD_CONST(arg=1, lineno=4523)
          12	CALL_FUNCTION_KW(arg=2, lineno=4523)
          14	STORE_FAST(arg=2, lineno=4523)
          16	LOAD_FAST(arg=2, lineno=4524)
          18	LOAD_METHOD(arg=2, lineno=4524)
          20	CALL_METHOD(arg=0, lineno=4524)
          22	POP_TOP(arg=None, lineno=4524)
          24	LOAD_FAST(arg=2, lineno=4525)
          26	RETURN_VALUE(arg=None, lineno=4525)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4522)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_attr.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_attr.1', '$shape6.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_attr.1', '$shape6.2', '$dtype8.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=CALL_FUNCTION_KW(arg=2, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_attr.1', '$shape6.2', '$dtype8.3', '$const10.4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=14, inst=STORE_FAST(arg=2, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$12call_function_kw.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=4524)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=4524)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$arr16.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=20, inst=CALL_METHOD(arg=0, lineno=4524)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$18load_method.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=22, inst=POP_TOP(arg=None, lineno=4524)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$20call_method.8']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=24, inst=LOAD_FAST(arg=2, lineno=4525)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=26, inst=RETURN_VALUE(arg=None, lineno=4525)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$arr24.9']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'res': '$shape6.2'}), (8, {'res': '$dtype8.3'}), (10, {'res': '$const10.4.1'}), (12, {'func': '$4load_attr.1', 'args': ['$shape6.2', '$dtype8.3'], 'names': '$const10.4.1', 'res': '$12call_function_kw.5'}), (14, {'value': '$12call_function_kw.5'}), (16, {'res': '$arr16.6'}), (18, {'item': '$arr16.6', 'res': '$18load_method.7'}), (20, {'func': '$18load_method.7', 'args': [], 'res': '$20call_method.8'}), (24, {'res': '$arr24.9'}), (26, {'retval': '$arr24.9', 'castval': '$26return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=empty) ['$2load_global.0', '$4load_attr.1']
    arr = call $4load_attr.1(shape, func=$4load_attr.1, args=[Var(shape, arrayobj.py:4522)], kws=[('dtype', Var(dtype, arrayobj.py:4522))], vararg=None, varkwarg=None, target=None) ['$4load_attr.1', 'arr', 'dtype', 'shape']
    $18load_method.7 = getattr(value=arr, attr=_zero_fill) ['$18load_method.7', 'arr']
    $20call_method.8 = call $18load_method.7(func=$18load_method.7, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_method.7', '$20call_method.8']
    $26return_value.10 = cast(value=arr)     ['$26return_value.10', 'arr']
    return $26return_value.10                ['$26return_value.10']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x773298d5c340>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: shape = arg(0, name=shape)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: dtype = arg(1, name=dtype)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: arr = call $4load_attr.1(shape, func=$4load_attr.1, args=[Var(shape, arrayobj.py:4522)], kws=[('dtype', Var(dtype, arrayobj.py:4522))], vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $18load_method.7 = getattr(value=arr, attr=_zero_fill)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $20call_method.8 = call $18load_method.7(func=$18load_method.7, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $26return_value.10 = cast(value=arr)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $26return_value.10
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$18load_method.7': [(<numba.core.ir.Assign object at 0x773298f0ba60>,
                                   0)],
             '$20call_method.8': [(<numba.core.ir.Assign object at 0x773298f0bc70>,
                                   0)],
             '$26return_value.10': [(<numba.core.ir.Assign object at 0x773298f0be80>,
                                     0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x773298f0af80>,
                                  0)],
             '$4load_attr.1': [(<numba.core.ir.Assign object at 0x773298f0b100>,
                                0)],
             'arr': [(<numba.core.ir.Assign object at 0x773298f0b7c0>, 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x773298f0ae00>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x773298f0ace0>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x773298d5c340>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4454)
           2	LOAD_GLOBAL(arg=0, lineno=4455)
           4	LOAD_FAST(arg=0, lineno=4455)
           6	LOAD_FAST(arg=1, lineno=4455)
           8	LOAD_DEREF(arg=0, lineno=4455)
          10	CALL_FUNCTION(arg=3, lineno=4455)
          12	RETURN_VALUE(arg=None, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4454)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$shape4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=LOAD_DEREF(arg=0, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$shape4.1', '$dtype6.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=CALL_FUNCTION(arg=3, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$shape4.1', '$dtype6.2', '$8load_deref.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$10call_function.4']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'res': '$dtype6.2'}), (8, {'res': '$8load_deref.3'}), (10, {'func': '$2load_global.0', 'args': ['$shape4.1', '$dtype6.2', '$8load_deref.3'], 'res': '$10call_function.4'}), (12, {'retval': '$10call_function.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$2load_global.0']
    $8load_deref.3 = freevar(retty: array(float64, 1d, C)) ['$8load_deref.3']
    $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4454), Var(dtype, arrayobj.py:4454), Var($8load_deref.3, arrayobj.py:4455)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_deref.3', 'dtype', 'shape']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x773298d5d870>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: shape = arg(0, name=shape)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: dtype = arg(1, name=dtype)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $8load_deref.3 = freevar(retty: array(float64, 1d, C))
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4454), Var(dtype, arrayobj.py:4454), Var($8load_deref.3, arrayobj.py:4455)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $12return_value.5 = cast(value=$10call_function.4)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $12return_value.5
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$10call_function.4': [(<numba.core.ir.Assign object at 0x773298d5d090>,
                                     0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x773298d5ddb0>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x773298d5da50>,
                                  0)],
             '$8load_deref.3': [(<numba.core.ir.Assign object at 0x773298d5d270>,
                                 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x773298d5dbd0>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x773298d5d000>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x773298d5d870>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4330)
           2	LOAD_FAST(arg=0, lineno=4333)
           4	LOAD_METHOD(arg=0, lineno=4333)
           6	LOAD_FAST(arg=1, lineno=4333)
           8	LOAD_FAST(arg=2, lineno=4333)
          10	CALL_METHOD(arg=2, lineno=4333)
          12	RETURN_VALUE(arg=None, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4330)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_METHOD(arg=0, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$arrtype2.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_method.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_method.1', '$size6.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=CALL_METHOD(arg=2, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_method.1', '$size6.2', '$align8.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$10call_method.4']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$arrtype2.0'}), (4, {'item': '$arrtype2.0', 'res': '$4load_method.1'}), (6, {'res': '$size6.2'}), (8, {'res': '$align8.3'}), (10, {'func': '$4load_method.1', 'args': ['$size6.2', '$align8.3'], 'res': '$10call_method.4'}), (12, {'retval': '$10call_method.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    arrtype = arg(0, name=arrtype)           ['arrtype']
    size = arg(1, name=size)                 ['size']
    align = arg(2, name=align)               ['align']
    $4load_method.1 = getattr(value=arrtype, attr=_allocate) ['$4load_method.1', 'arrtype']
    $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:4330), Var(align, arrayobj.py:4330)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', 'align', 'size']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x773298e3d180>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: arrtype = arg(0, name=arrtype)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: size = arg(1, name=size)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: align = arg(2, name=align)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $4load_method.1 = getattr(value=arrtype, attr=_allocate)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:4330), Var(align, arrayobj.py:4330)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $12return_value.5 = cast(value=$10call_method.4)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $12return_value.5
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$10call_method.4': [(<numba.core.ir.Assign object at 0x773298e3cca0>,
                                   0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x773298e3cd90>,
                                    0)],
             '$4load_method.1': [(<numba.core.ir.Assign object at 0x773298e3c850>,
                                  0)],
             'align': [(<numba.core.ir.Assign object at 0x773298e3c0a0>, 0)],
             'arrtype': [(<numba.core.ir.Assign object at 0x773298e3c340>, 0)],
             'size': [(<numba.core.ir.Assign object at 0x773298e3c220>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x773298e3d180>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4325)
           2	LOAD_GLOBAL(arg=0, lineno=4326)
           4	LOAD_FAST(arg=1, lineno=4326)
           6	LOAD_FAST(arg=2, lineno=4326)
           8	CALL_FUNCTION(arg=2, lineno=4326)
          10	RETURN_VALUE(arg=None, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4325)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=LOAD_FAST(arg=2, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$allocsize4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$allocsize4.1', '$align6.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=RETURN_VALUE(arg=None, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$8call_function.3']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$allocsize4.1'}), (6, {'res': '$align6.2'}), (8, {'func': '$2load_global.0', 'args': ['$allocsize4.1', '$align6.2'], 'res': '$8call_function.3'}), (10, {'retval': '$8call_function.3', 'castval': '$10return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    cls = arg(0, name=cls)                   ['cls']
    allocsize = arg(1, name=allocsize)       ['allocsize']
    align = arg(2, name=align)               ['align']
    $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:4325), Var(align, arrayobj.py:4325)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'align', 'allocsize']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x773298e3f040>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: cls = arg(0, name=cls)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: allocsize = arg(1, name=allocsize)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: align = arg(2, name=align)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:4325), Var(align, arrayobj.py:4325)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $10return_value.4 = cast(value=$8call_function.3)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $10return_value.4
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$10return_value.4': [(<numba.core.ir.Assign object at 0x773298e3fe50>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x773298e3f910>,
                                  0)],
             '$8call_function.3': [(<numba.core.ir.Assign object at 0x773298e3fd30>,
                                    0)],
             'align': [(<numba.core.ir.Assign object at 0x773298e3f790>, 0)],
             'allocsize': [(<numba.core.ir.Assign object at 0x773298e3f670>,
                            0)],
             'cls': [(<numba.core.ir.Assign object at 0x773298e3e560>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x773298e3f040>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4513)
           2	LOAD_GLOBAL(arg=0, lineno=4514)
           4	LOAD_FAST(arg=0, lineno=4514)
           6	CALL_FUNCTION(arg=1, lineno=4514)
           8	POP_TOP(arg=None, lineno=4514)
          10	LOAD_CONST(arg=0, lineno=4514)
          12	RETURN_VALUE(arg=None, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4513)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$self4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=POP_TOP(arg=None, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$6call_function.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=LOAD_CONST(arg=0, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$const10.3.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$self4.1'}), (6, {'func': '$2load_global.0', 'args': ['$self4.1'], 'res': '$6call_function.2'}), (10, {'res': '$const10.3.0'}), (12, {'retval': '$const10.3.0', 'castval': '$12return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    self = arg(0, name=self)                 ['self']
    $2load_global.0 = global(_zero_fill_array_method: <intrinsic _zero_fill_array_method>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(self, func=$2load_global.0, args=[Var(self, arrayobj.py:4513)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'self']
    $const10.3.0 = const(NoneType, None)     ['$const10.3.0']
    $12return_value.4 = cast(value=$const10.3.0) ['$12return_value.4', '$const10.3.0']
    return $12return_value.4                 ['$12return_value.4']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x773298ce75b0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: self = arg(0, name=self)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(_zero_fill_array_method: <intrinsic _zero_fill_array_method>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $6call_function.2 = call $2load_global.0(self, func=$2load_global.0, args=[Var(self, arrayobj.py:4513)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const10.3.0 = const(NoneType, None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $12return_value.4 = cast(value=$const10.3.0)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $12return_value.4
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$12return_value.4': [(<numba.core.ir.Assign object at 0x773298ce79a0>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x773298ce7670>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x773298ce6ec0>,
                                    0)],
             '$const10.3.0': [(<numba.core.ir.Assign object at 0x773298ce6da0>,
                               0)],
             'self': [(<numba.core.ir.Assign object at 0x773298ce6b60>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x773298ce75b0>
h5py._conv - [DEBUG]{MainThread} - <module>() - Creating converter from 7 to 5
h5py._conv - [DEBUG]{MainThread} - <module>() - Creating converter from 5 to 7
h5py._conv - [DEBUG]{MainThread} - <module>() - Creating converter from 7 to 5
h5py._conv - [DEBUG]{MainThread} - <module>() - Creating converter from 5 to 7
matplotlib - [DEBUG]{MainThread} - wrapper() - matplotlib data path: /opt/conda/lib/python3.10/site-packages/matplotlib/mpl-data
matplotlib - [DEBUG]{MainThread} - wrapper() - CONFIGDIR=/root/.config/matplotlib
matplotlib - [DEBUG]{MainThread} - <module>() - interactive is False
matplotlib - [DEBUG]{MainThread} - <module>() - platform is linux
matplotlib - [DEBUG]{MainThread} - wrapper() - CACHEDIR=/root/.cache/matplotlib
matplotlib.font_manager - [DEBUG]{MainThread} - _load_fontmanager() - Using fontManager instance from /root/.cache/matplotlib/fontlist-v390.json
yfinance - [DEBUG]{MainThread} - wrapper() - Entering history()
peewee - [DEBUG]{MainThread} - execute_sql() - ('CREATE TABLE IF NOT EXISTS "_tz_kv" ("key" VARCHAR(255) NOT NULL PRIMARY KEY, "value" VARCHAR(255)) WITHOUT ROWID', [])
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['UBER', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -  Entering history()
yfinance - [DEBUG]{MainThread} - history() - UBER: Yahoo GET parameters: {'range': '60d', 'interval': '15m', 'includePrePost': True, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -   Entering get()
yfinance - [DEBUG]{MainThread} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{MainThread} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/UBER
yfinance - [DEBUG]{MainThread} - _make_request() - params={'range': '60d', 'interval': '15m', 'includePrePost': True, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{MainThread} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -        Entering _load_cookie_curlCffi()
peewee - [DEBUG]{MainThread} - execute_sql() - ('CREATE TABLE IF NOT EXISTS "_cookieschema" ("strategy" VARCHAR(255) NOT NULL PRIMARY KEY, "fetch_date" DATETIME NOT NULL, "cookie_bytes" BLOB NOT NULL) WITHOUT ROWID', [])
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -        Exiting _load_cookie_curlCffi()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing persistent cookie
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -        Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{MainThread} - wrapper() -        Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_crumb_basic() - crumb = 'dK3IG/1ev6r'
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _make_request() - response code=200
yfinance - [DEBUG]{MainThread} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{MainThread} - wrapper() -   Exiting get()
yfinance - [DEBUG]{MainThread} - history() - UBER: yfinance received OHLC data: 2025-04-02 08:00:00 -> 2025-06-27 23:59:53
yfinance - [DEBUG]{MainThread} - history() - UBER: OHLC after cleaning: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:59:53-04:00
yfinance - [DEBUG]{MainThread} - history() - UBER: OHLC after combining events: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:59:53-04:00
yfinance - [DEBUG]{MainThread} - history() - UBER: yfinance returning OHLC: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:45:00-04:00
yfinance - [DEBUG]{MainThread} - wrapper() -  Exiting history()
yfinance - [DEBUG]{MainThread} - wrapper() - Exiting history()
root - [INFO]{MainThread} - get_buy_sell_points_Roll() - Parameters of acquisition "buy_sell_points" for this stock is set to POSITIVE (units) 	92%: 1.123 	98%: 1.8743 NEGATIVE (units) 	93%: 1.2466 	98%: 1.9188
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=99)
           2	LOAD_GLOBAL(arg=0, lineno=106)
           4	LOAD_FAST(arg=0, lineno=106)
           6	CALL_FUNCTION(arg=1, lineno=106)
           8	STORE_FAST(arg=4, lineno=106)
          10	LOAD_GLOBAL(arg=1, lineno=107)
          12	LOAD_METHOD(arg=2, lineno=107)
          14	LOAD_FAST(arg=4, lineno=107)
          16	CALL_METHOD(arg=1, lineno=107)
          18	STORE_FAST(arg=5, lineno=107)
          20	LOAD_GLOBAL(arg=1, lineno=108)
          22	LOAD_METHOD(arg=2, lineno=108)
          24	LOAD_FAST(arg=4, lineno=108)
          26	CALL_METHOD(arg=1, lineno=108)
          28	STORE_FAST(arg=6, lineno=108)
          30	LOAD_GLOBAL(arg=1, lineno=109)
          32	LOAD_METHOD(arg=2, lineno=109)
          34	LOAD_FAST(arg=4, lineno=109)
          36	CALL_METHOD(arg=1, lineno=109)
          38	STORE_FAST(arg=7, lineno=109)
          40	LOAD_GLOBAL(arg=3, lineno=111)
          42	LOAD_FAST(arg=3, lineno=111)
          44	LOAD_FAST(arg=4, lineno=111)
          46	CALL_FUNCTION(arg=2, lineno=111)
          48	GET_ITER(arg=None, lineno=111)
>         50	FOR_ITER(arg=188, lineno=111)
          52	STORE_FAST(arg=8, lineno=111)
          54	LOAD_FAST(arg=1, lineno=113)
          56	LOAD_FAST(arg=8, lineno=113)
          58	BINARY_SUBSCR(arg=None, lineno=113)
          60	LOAD_FAST(arg=5, lineno=113)
          62	LOAD_FAST(arg=8, lineno=113)
          64	LOAD_CONST(arg=1, lineno=113)
          66	BINARY_SUBTRACT(arg=None, lineno=113)
          68	BINARY_SUBSCR(arg=None, lineno=113)
          70	COMPARE_OP(arg=0, lineno=113)
          72	POP_JUMP_IF_TRUE(arg=50, lineno=113)
          74	LOAD_FAST(arg=0, lineno=113)
          76	LOAD_FAST(arg=8, lineno=113)
          78	LOAD_CONST(arg=1, lineno=113)
          80	BINARY_SUBTRACT(arg=None, lineno=113)
          82	BINARY_SUBSCR(arg=None, lineno=113)
          84	LOAD_FAST(arg=5, lineno=113)
          86	LOAD_FAST(arg=8, lineno=113)
          88	LOAD_CONST(arg=1, lineno=113)
          90	BINARY_SUBTRACT(arg=None, lineno=113)
          92	BINARY_SUBSCR(arg=None, lineno=113)
          94	COMPARE_OP(arg=4, lineno=113)
          96	POP_JUMP_IF_FALSE(arg=57, lineno=113)
>         98	LOAD_FAST(arg=1, lineno=114)
         100	LOAD_FAST(arg=8, lineno=114)
         102	BINARY_SUBSCR(arg=None, lineno=114)
         104	LOAD_FAST(arg=5, lineno=114)
         106	LOAD_FAST(arg=8, lineno=114)
         108	STORE_SUBSCR(arg=None, lineno=114)
         110	JUMP_FORWARD(arg=8, lineno=114)
>        112	LOAD_FAST(arg=5, lineno=116)
         114	LOAD_FAST(arg=8, lineno=116)
         116	LOAD_CONST(arg=1, lineno=116)
         118	BINARY_SUBTRACT(arg=None, lineno=116)
         120	BINARY_SUBSCR(arg=None, lineno=116)
         122	LOAD_FAST(arg=5, lineno=116)
         124	LOAD_FAST(arg=8, lineno=116)
         126	STORE_SUBSCR(arg=None, lineno=116)
>        128	LOAD_FAST(arg=2, lineno=118)
         130	LOAD_FAST(arg=8, lineno=118)
         132	BINARY_SUBSCR(arg=None, lineno=118)
         134	LOAD_FAST(arg=6, lineno=118)
         136	LOAD_FAST(arg=8, lineno=118)
         138	LOAD_CONST(arg=1, lineno=118)
         140	BINARY_SUBTRACT(arg=None, lineno=118)
         142	BINARY_SUBSCR(arg=None, lineno=118)
         144	COMPARE_OP(arg=4, lineno=118)
         146	POP_JUMP_IF_TRUE(arg=87, lineno=118)
         148	LOAD_FAST(arg=0, lineno=118)
         150	LOAD_FAST(arg=8, lineno=118)
         152	LOAD_CONST(arg=1, lineno=118)
         154	BINARY_SUBTRACT(arg=None, lineno=118)
         156	BINARY_SUBSCR(arg=None, lineno=118)
         158	LOAD_FAST(arg=6, lineno=118)
         160	LOAD_FAST(arg=8, lineno=118)
         162	LOAD_CONST(arg=1, lineno=118)
         164	BINARY_SUBTRACT(arg=None, lineno=118)
         166	BINARY_SUBSCR(arg=None, lineno=118)
         168	COMPARE_OP(arg=0, lineno=118)
         170	POP_JUMP_IF_FALSE(arg=94, lineno=118)
>        172	LOAD_FAST(arg=2, lineno=119)
         174	LOAD_FAST(arg=8, lineno=119)
         176	BINARY_SUBSCR(arg=None, lineno=119)
         178	LOAD_FAST(arg=6, lineno=119)
         180	LOAD_FAST(arg=8, lineno=119)
         182	STORE_SUBSCR(arg=None, lineno=119)
         184	JUMP_FORWARD(arg=8, lineno=119)
>        186	LOAD_FAST(arg=6, lineno=121)
         188	LOAD_FAST(arg=8, lineno=121)
         190	LOAD_CONST(arg=1, lineno=121)
         192	BINARY_SUBTRACT(arg=None, lineno=121)
         194	BINARY_SUBSCR(arg=None, lineno=121)
         196	LOAD_FAST(arg=6, lineno=121)
         198	LOAD_FAST(arg=8, lineno=121)
         200	STORE_SUBSCR(arg=None, lineno=121)
>        202	LOAD_FAST(arg=7, lineno=123)
         204	LOAD_FAST(arg=8, lineno=123)
         206	LOAD_CONST(arg=1, lineno=123)
         208	BINARY_SUBTRACT(arg=None, lineno=123)
         210	BINARY_SUBSCR(arg=None, lineno=123)
         212	LOAD_FAST(arg=5, lineno=123)
         214	LOAD_FAST(arg=8, lineno=123)
         216	LOAD_CONST(arg=1, lineno=123)
         218	BINARY_SUBTRACT(arg=None, lineno=123)
         220	BINARY_SUBSCR(arg=None, lineno=123)
         222	COMPARE_OP(arg=2, lineno=123)
         224	POP_JUMP_IF_FALSE(arg=129, lineno=123)
         226	LOAD_FAST(arg=0, lineno=123)
         228	LOAD_FAST(arg=8, lineno=123)
         230	BINARY_SUBSCR(arg=None, lineno=123)
         232	LOAD_FAST(arg=5, lineno=123)
         234	LOAD_FAST(arg=8, lineno=123)
         236	BINARY_SUBSCR(arg=None, lineno=123)
         238	COMPARE_OP(arg=1, lineno=123)
         240	POP_JUMP_IF_FALSE(arg=129, lineno=123)
         242	LOAD_FAST(arg=5, lineno=124)
         244	LOAD_FAST(arg=8, lineno=124)
         246	BINARY_SUBSCR(arg=None, lineno=124)
         248	LOAD_FAST(arg=7, lineno=124)
         250	LOAD_FAST(arg=8, lineno=124)
         252	STORE_SUBSCR(arg=None, lineno=124)
         254	JUMP_ABSOLUTE(arg=26, lineno=124)
>        256	LOAD_FAST(arg=7, lineno=125)
         258	LOAD_FAST(arg=8, lineno=125)
         260	LOAD_CONST(arg=1, lineno=125)
         262	BINARY_SUBTRACT(arg=None, lineno=125)
         264	BINARY_SUBSCR(arg=None, lineno=125)
         266	LOAD_FAST(arg=5, lineno=125)
         268	LOAD_FAST(arg=8, lineno=125)
         270	LOAD_CONST(arg=1, lineno=125)
         272	BINARY_SUBTRACT(arg=None, lineno=125)
         274	BINARY_SUBSCR(arg=None, lineno=125)
         276	COMPARE_OP(arg=2, lineno=125)
         278	POP_JUMP_IF_FALSE(arg=156, lineno=125)
         280	LOAD_FAST(arg=0, lineno=125)
         282	LOAD_FAST(arg=8, lineno=125)
         284	BINARY_SUBSCR(arg=None, lineno=125)
         286	LOAD_FAST(arg=5, lineno=125)
         288	LOAD_FAST(arg=8, lineno=125)
         290	BINARY_SUBSCR(arg=None, lineno=125)
         292	COMPARE_OP(arg=4, lineno=125)
         294	POP_JUMP_IF_FALSE(arg=156, lineno=125)
         296	LOAD_FAST(arg=6, lineno=126)
         298	LOAD_FAST(arg=8, lineno=126)
         300	BINARY_SUBSCR(arg=None, lineno=126)
         302	LOAD_FAST(arg=7, lineno=126)
         304	LOAD_FAST(arg=8, lineno=126)
         306	STORE_SUBSCR(arg=None, lineno=126)
         308	JUMP_ABSOLUTE(arg=26, lineno=126)
>        310	LOAD_FAST(arg=7, lineno=127)
         312	LOAD_FAST(arg=8, lineno=127)
         314	LOAD_CONST(arg=1, lineno=127)
         316	BINARY_SUBTRACT(arg=None, lineno=127)
         318	BINARY_SUBSCR(arg=None, lineno=127)
         320	LOAD_FAST(arg=6, lineno=127)
         322	LOAD_FAST(arg=8, lineno=127)
         324	LOAD_CONST(arg=1, lineno=127)
         326	BINARY_SUBTRACT(arg=None, lineno=127)
         328	BINARY_SUBSCR(arg=None, lineno=127)
         330	COMPARE_OP(arg=2, lineno=127)
         332	POP_JUMP_IF_FALSE(arg=183, lineno=127)
         334	LOAD_FAST(arg=0, lineno=127)
         336	LOAD_FAST(arg=8, lineno=127)
         338	BINARY_SUBSCR(arg=None, lineno=127)
         340	LOAD_FAST(arg=6, lineno=127)
         342	LOAD_FAST(arg=8, lineno=127)
         344	BINARY_SUBSCR(arg=None, lineno=127)
         346	COMPARE_OP(arg=5, lineno=127)
         348	POP_JUMP_IF_FALSE(arg=183, lineno=127)
         350	LOAD_FAST(arg=6, lineno=128)
         352	LOAD_FAST(arg=8, lineno=128)
         354	BINARY_SUBSCR(arg=None, lineno=128)
         356	LOAD_FAST(arg=7, lineno=128)
         358	LOAD_FAST(arg=8, lineno=128)
         360	STORE_SUBSCR(arg=None, lineno=128)
         362	JUMP_ABSOLUTE(arg=26, lineno=128)
>        364	LOAD_FAST(arg=7, lineno=129)
         366	LOAD_FAST(arg=8, lineno=129)
         368	LOAD_CONST(arg=1, lineno=129)
         370	BINARY_SUBTRACT(arg=None, lineno=129)
         372	BINARY_SUBSCR(arg=None, lineno=129)
         374	LOAD_FAST(arg=6, lineno=129)
         376	LOAD_FAST(arg=8, lineno=129)
         378	LOAD_CONST(arg=1, lineno=129)
         380	BINARY_SUBTRACT(arg=None, lineno=129)
         382	BINARY_SUBSCR(arg=None, lineno=129)
         384	COMPARE_OP(arg=2, lineno=129)
         386	POP_JUMP_IF_FALSE(arg=210, lineno=129)
         388	LOAD_FAST(arg=0, lineno=129)
         390	LOAD_FAST(arg=8, lineno=129)
         392	BINARY_SUBSCR(arg=None, lineno=129)
         394	LOAD_FAST(arg=6, lineno=129)
         396	LOAD_FAST(arg=8, lineno=129)
         398	BINARY_SUBSCR(arg=None, lineno=129)
         400	COMPARE_OP(arg=0, lineno=129)
         402	POP_JUMP_IF_FALSE(arg=210, lineno=129)
         404	LOAD_FAST(arg=5, lineno=130)
         406	LOAD_FAST(arg=8, lineno=130)
         408	BINARY_SUBSCR(arg=None, lineno=130)
         410	LOAD_FAST(arg=7, lineno=130)
         412	LOAD_FAST(arg=8, lineno=130)
         414	STORE_SUBSCR(arg=None, lineno=130)
         416	JUMP_ABSOLUTE(arg=26, lineno=130)
>        418	LOAD_CONST(arg=2, lineno=132)
         420	LOAD_FAST(arg=7, lineno=132)
         422	LOAD_FAST(arg=8, lineno=132)
         424	STORE_SUBSCR(arg=None, lineno=132)
         426	JUMP_ABSOLUTE(arg=26, lineno=132)
>        428	LOAD_FAST(arg=7, lineno=134)
         430	RETURN_VALUE(arg=None, lineno=134)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=99)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=106)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=106)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=106)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$close4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=STORE_FAST(arg=4, lineno=106)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$6call_function.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=LOAD_METHOD(arg=2, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$10load_global.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=14, inst=LOAD_FAST(arg=4, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$12load_method.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=16, inst=CALL_METHOD(arg=1, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$12load_method.4', '$length14.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=18, inst=STORE_FAST(arg=5, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$16call_method.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=20, inst=LOAD_GLOBAL(arg=1, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=22, inst=LOAD_METHOD(arg=2, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$20load_global.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=24, inst=LOAD_FAST(arg=4, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$22load_method.8']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=26, inst=CALL_METHOD(arg=1, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$22load_method.8', '$length24.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=28, inst=STORE_FAST(arg=6, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$26call_method.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=30, inst=LOAD_GLOBAL(arg=1, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=32, inst=LOAD_METHOD(arg=2, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$30load_global.11']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=34, inst=LOAD_FAST(arg=4, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$32load_method.12']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=36, inst=CALL_METHOD(arg=1, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$32load_method.12', '$length34.13']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=38, inst=STORE_FAST(arg=7, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$36call_method.14']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=40, inst=LOAD_GLOBAL(arg=3, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=42, inst=LOAD_FAST(arg=3, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$40load_global.15']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=44, inst=LOAD_FAST(arg=4, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$40load_global.15', '$n42.16']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=46, inst=CALL_FUNCTION(arg=2, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$40load_global.15', '$n42.16', '$length44.17']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=48, inst=GET_ITER(arg=None, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$46call_function.18']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$48get_iter.19',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi50.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=50 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=50, inst=FOR_ITER(arg=188, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi50.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=428, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=('$phi50.0', '$50for_iter.2'), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=428 nstack_initial=0), State(pc_initial=52 nstack_initial=2)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=428 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=428, inst=LOAD_FAST(arg=7, lineno=134)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=430, inst=RETURN_VALUE(arg=None, lineno=134)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$supertrend428.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=52 nstack_initial=2)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi52.0', '$phi52.1']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=52 nstack_initial=2)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=52, inst=STORE_FAST(arg=8, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$phi52.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=54, inst=LOAD_FAST(arg=1, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=56, inst=LOAD_FAST(arg=8, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$basic_ub54.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=58, inst=BINARY_SUBSCR(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$basic_ub54.2', '$i56.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=60, inst=LOAD_FAST(arg=5, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=62, inst=LOAD_FAST(arg=8, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$final_ub60.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$final_ub60.5', '$i62.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=66, inst=BINARY_SUBTRACT(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$final_ub60.5', '$i62.6', '$const64.7.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=68, inst=BINARY_SUBSCR(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$final_ub60.5', '$66binary_subtract.8']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=70, inst=COMPARE_OP(arg=0, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$68binary_subscr.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=72, inst=POP_JUMP_IF_TRUE(arg=50, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$70compare_op.10']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=74, stack=('$phi52.0',), blockstack=(), npush=0), Edge(pc=98, stack=('$phi52.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=74 nstack_initial=1), State(pc_initial=98 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi74.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=74 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=74, inst=LOAD_FAST(arg=0, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=76, inst=LOAD_FAST(arg=8, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$close74.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$close74.1', '$i76.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=80, inst=BINARY_SUBTRACT(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$close74.1', '$i76.2', '$const78.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$close74.1', '$80binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=84, inst=LOAD_FAST(arg=5, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=86, inst=LOAD_FAST(arg=8, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$final_ub84.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=88, inst=LOAD_CONST(arg=1, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$final_ub84.6', '$i86.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=90, inst=BINARY_SUBTRACT(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$final_ub84.6', '$i86.7', '$const88.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=92, inst=BINARY_SUBSCR(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$final_ub84.6', '$90binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=94, inst=COMPARE_OP(arg=4, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$92binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=96, inst=POP_JUMP_IF_FALSE(arg=57, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$94compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=98, stack=('$phi74.0',), blockstack=(), npush=0), Edge(pc=112, stack=('$phi74.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=98 nstack_initial=1), State(pc_initial=98 nstack_initial=1), State(pc_initial=112 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi98.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=98 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=98, inst=LOAD_FAST(arg=1, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=100, inst=LOAD_FAST(arg=8, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$basic_ub98.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=102, inst=BINARY_SUBSCR(arg=None, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$basic_ub98.1', '$i100.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=104, inst=LOAD_FAST(arg=5, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$102binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=106, inst=LOAD_FAST(arg=8, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$102binary_subscr.3', '$final_ub104.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=108, inst=STORE_SUBSCR(arg=None, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$102binary_subscr.3', '$final_ub104.4', '$i106.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=110, inst=JUMP_FORWARD(arg=8, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=128, stack=('$phi98.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=98 nstack_initial=1), State(pc_initial=112 nstack_initial=1), State(pc_initial=128 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=112 nstack_initial=1), State(pc_initial=128 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi112.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=112 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=112, inst=LOAD_FAST(arg=5, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=114, inst=LOAD_FAST(arg=8, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$final_ub112.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=116, inst=LOAD_CONST(arg=1, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$final_ub112.1', '$i114.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=118, inst=BINARY_SUBTRACT(arg=None, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$final_ub112.1', '$i114.2', '$const116.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=120, inst=BINARY_SUBSCR(arg=None, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$final_ub112.1', '$118binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=122, inst=LOAD_FAST(arg=5, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$120binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=124, inst=LOAD_FAST(arg=8, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$120binary_subscr.5', '$final_ub122.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=126, inst=STORE_SUBSCR(arg=None, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$120binary_subscr.5', '$final_ub122.6', '$i124.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=128, stack=('$phi112.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=128 nstack_initial=1), State(pc_initial=128 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi128.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=128 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=128, inst=LOAD_FAST(arg=2, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=130, inst=LOAD_FAST(arg=8, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$basic_lb128.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=132, inst=BINARY_SUBSCR(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$basic_lb128.1', '$i130.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=134, inst=LOAD_FAST(arg=6, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=136, inst=LOAD_FAST(arg=8, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$final_lb134.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=138, inst=LOAD_CONST(arg=1, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$final_lb134.4', '$i136.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=140, inst=BINARY_SUBTRACT(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$final_lb134.4', '$i136.5', '$const138.6.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=142, inst=BINARY_SUBSCR(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$final_lb134.4', '$140binary_subtract.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=144, inst=COMPARE_OP(arg=4, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$142binary_subscr.8']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=146, inst=POP_JUMP_IF_TRUE(arg=87, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$144compare_op.9']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=148, stack=('$phi128.0',), blockstack=(), npush=0), Edge(pc=172, stack=('$phi128.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=128 nstack_initial=1), State(pc_initial=148 nstack_initial=1), State(pc_initial=172 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=148 nstack_initial=1), State(pc_initial=172 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi148.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=148 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=150, inst=LOAD_FAST(arg=8, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$close148.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=152, inst=LOAD_CONST(arg=1, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$close148.1', '$i150.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=154, inst=BINARY_SUBTRACT(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$close148.1', '$i150.2', '$const152.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=156, inst=BINARY_SUBSCR(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$close148.1', '$154binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=158, inst=LOAD_FAST(arg=6, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=160, inst=LOAD_FAST(arg=8, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$final_lb158.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=162, inst=LOAD_CONST(arg=1, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$final_lb158.6', '$i160.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=164, inst=BINARY_SUBTRACT(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$final_lb158.6', '$i160.7', '$const162.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=166, inst=BINARY_SUBSCR(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$final_lb158.6', '$164binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=168, inst=COMPARE_OP(arg=0, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$166binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=170, inst=POP_JUMP_IF_FALSE(arg=94, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$168compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=172, stack=('$phi148.0',), blockstack=(), npush=0), Edge(pc=186, stack=('$phi148.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=172 nstack_initial=1), State(pc_initial=172 nstack_initial=1), State(pc_initial=186 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi172.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=172 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=172, inst=LOAD_FAST(arg=2, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=174, inst=LOAD_FAST(arg=8, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$basic_lb172.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=176, inst=BINARY_SUBSCR(arg=None, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$basic_lb172.1', '$i174.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=178, inst=LOAD_FAST(arg=6, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$176binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=180, inst=LOAD_FAST(arg=8, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$176binary_subscr.3', '$final_lb178.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=182, inst=STORE_SUBSCR(arg=None, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$176binary_subscr.3', '$final_lb178.4', '$i180.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=184, inst=JUMP_FORWARD(arg=8, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=202, stack=('$phi172.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=172 nstack_initial=1), State(pc_initial=186 nstack_initial=1), State(pc_initial=202 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=186 nstack_initial=1), State(pc_initial=202 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi186.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=186 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=186, inst=LOAD_FAST(arg=6, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=188, inst=LOAD_FAST(arg=8, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$final_lb186.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=190, inst=LOAD_CONST(arg=1, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$final_lb186.1', '$i188.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=192, inst=BINARY_SUBTRACT(arg=None, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$final_lb186.1', '$i188.2', '$const190.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=194, inst=BINARY_SUBSCR(arg=None, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$final_lb186.1', '$192binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=196, inst=LOAD_FAST(arg=6, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$194binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=198, inst=LOAD_FAST(arg=8, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$194binary_subscr.5', '$final_lb196.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=200, inst=STORE_SUBSCR(arg=None, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$194binary_subscr.5', '$final_lb196.6', '$i198.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=202, stack=('$phi186.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=202 nstack_initial=1), State(pc_initial=202 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi202.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=202 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=202, inst=LOAD_FAST(arg=7, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=204, inst=LOAD_FAST(arg=8, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$supertrend202.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=206, inst=LOAD_CONST(arg=1, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$supertrend202.1', '$i204.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=208, inst=BINARY_SUBTRACT(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$supertrend202.1', '$i204.2', '$const206.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=210, inst=BINARY_SUBSCR(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$supertrend202.1', '$208binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=212, inst=LOAD_FAST(arg=5, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=214, inst=LOAD_FAST(arg=8, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$final_ub212.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=216, inst=LOAD_CONST(arg=1, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$final_ub212.6', '$i214.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=218, inst=BINARY_SUBTRACT(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$final_ub212.6', '$i214.7', '$const216.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=220, inst=BINARY_SUBSCR(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$final_ub212.6', '$218binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=222, inst=COMPARE_OP(arg=2, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$220binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=224, inst=POP_JUMP_IF_FALSE(arg=129, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$222compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=226, stack=('$phi202.0',), blockstack=(), npush=0), Edge(pc=256, stack=('$phi202.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=202 nstack_initial=1), State(pc_initial=226 nstack_initial=1), State(pc_initial=256 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=226 nstack_initial=1), State(pc_initial=256 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi226.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=226 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=226, inst=LOAD_FAST(arg=0, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=228, inst=LOAD_FAST(arg=8, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$close226.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=230, inst=BINARY_SUBSCR(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$close226.1', '$i228.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=232, inst=LOAD_FAST(arg=5, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$230binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=234, inst=LOAD_FAST(arg=8, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$230binary_subscr.3', '$final_ub232.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=236, inst=BINARY_SUBSCR(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$230binary_subscr.3', '$final_ub232.4', '$i234.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=238, inst=COMPARE_OP(arg=1, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$230binary_subscr.3', '$236binary_subscr.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=240, inst=POP_JUMP_IF_FALSE(arg=129, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$238compare_op.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=242, stack=('$phi226.0',), blockstack=(), npush=0), Edge(pc=256, stack=('$phi226.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=256 nstack_initial=1), State(pc_initial=242 nstack_initial=1), State(pc_initial=256 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi256.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=256 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=256, inst=LOAD_FAST(arg=7, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=258, inst=LOAD_FAST(arg=8, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$supertrend256.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=260, inst=LOAD_CONST(arg=1, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$supertrend256.1', '$i258.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=262, inst=BINARY_SUBTRACT(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$supertrend256.1', '$i258.2', '$const260.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=264, inst=BINARY_SUBSCR(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$supertrend256.1', '$262binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=266, inst=LOAD_FAST(arg=5, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=268, inst=LOAD_FAST(arg=8, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$final_ub266.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=270, inst=LOAD_CONST(arg=1, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$final_ub266.6', '$i268.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=272, inst=BINARY_SUBTRACT(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$final_ub266.6', '$i268.7', '$const270.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=274, inst=BINARY_SUBSCR(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$final_ub266.6', '$272binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=276, inst=COMPARE_OP(arg=2, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$274binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=278, inst=POP_JUMP_IF_FALSE(arg=156, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$276compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=280, stack=('$phi256.0',), blockstack=(), npush=0), Edge(pc=310, stack=('$phi256.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=242 nstack_initial=1), State(pc_initial=256 nstack_initial=1), State(pc_initial=280 nstack_initial=1), State(pc_initial=310 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi242.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=242 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=242, inst=LOAD_FAST(arg=5, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=244, inst=LOAD_FAST(arg=8, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$final_ub242.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=246, inst=BINARY_SUBSCR(arg=None, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$final_ub242.1', '$i244.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=248, inst=LOAD_FAST(arg=7, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$246binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=250, inst=LOAD_FAST(arg=8, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$246binary_subscr.3', '$supertrend248.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=252, inst=STORE_SUBSCR(arg=None, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$246binary_subscr.3', '$supertrend248.4', '$i250.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=254, inst=JUMP_ABSOLUTE(arg=26, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi242.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=256 nstack_initial=1), State(pc_initial=280 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=280 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi280.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=280 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=280, inst=LOAD_FAST(arg=0, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=282, inst=LOAD_FAST(arg=8, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$close280.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=284, inst=BINARY_SUBSCR(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$close280.1', '$i282.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=286, inst=LOAD_FAST(arg=5, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$284binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=288, inst=LOAD_FAST(arg=8, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$284binary_subscr.3', '$final_ub286.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=290, inst=BINARY_SUBSCR(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$284binary_subscr.3', '$final_ub286.4', '$i288.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=292, inst=COMPARE_OP(arg=4, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$284binary_subscr.3', '$290binary_subscr.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=294, inst=POP_JUMP_IF_FALSE(arg=156, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$292compare_op.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=296, stack=('$phi280.0',), blockstack=(), npush=0), Edge(pc=310, stack=('$phi280.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=310 nstack_initial=1), State(pc_initial=50 nstack_initial=1), State(pc_initial=296 nstack_initial=1), State(pc_initial=310 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi310.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=310 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=310, inst=LOAD_FAST(arg=7, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=312, inst=LOAD_FAST(arg=8, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$supertrend310.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=314, inst=LOAD_CONST(arg=1, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$supertrend310.1', '$i312.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=316, inst=BINARY_SUBTRACT(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$supertrend310.1', '$i312.2', '$const314.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=318, inst=BINARY_SUBSCR(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$supertrend310.1', '$316binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=320, inst=LOAD_FAST(arg=6, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=322, inst=LOAD_FAST(arg=8, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$final_lb320.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=324, inst=LOAD_CONST(arg=1, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$final_lb320.6', '$i322.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=326, inst=BINARY_SUBTRACT(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$final_lb320.6', '$i322.7', '$const324.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=328, inst=BINARY_SUBSCR(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$final_lb320.6', '$326binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=330, inst=COMPARE_OP(arg=2, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$328binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=332, inst=POP_JUMP_IF_FALSE(arg=183, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$330compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=334, stack=('$phi310.0',), blockstack=(), npush=0), Edge(pc=364, stack=('$phi310.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=296 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=334 nstack_initial=1), State(pc_initial=364 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=296 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=334 nstack_initial=1), State(pc_initial=364 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi296.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=296 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=296, inst=LOAD_FAST(arg=6, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=298, inst=LOAD_FAST(arg=8, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$final_lb296.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=300, inst=BINARY_SUBSCR(arg=None, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$final_lb296.1', '$i298.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=302, inst=LOAD_FAST(arg=7, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$300binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=304, inst=LOAD_FAST(arg=8, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$300binary_subscr.3', '$supertrend302.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=306, inst=STORE_SUBSCR(arg=None, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$300binary_subscr.3', '$supertrend302.4', '$i304.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=308, inst=JUMP_ABSOLUTE(arg=26, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi296.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=310 nstack_initial=1), State(pc_initial=334 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=334 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi334.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=334 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=334, inst=LOAD_FAST(arg=0, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=336, inst=LOAD_FAST(arg=8, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$close334.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=338, inst=BINARY_SUBSCR(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$close334.1', '$i336.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=340, inst=LOAD_FAST(arg=6, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$338binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=342, inst=LOAD_FAST(arg=8, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$338binary_subscr.3', '$final_lb340.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=344, inst=BINARY_SUBSCR(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$338binary_subscr.3', '$final_lb340.4', '$i342.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=346, inst=COMPARE_OP(arg=5, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$338binary_subscr.3', '$344binary_subscr.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=348, inst=POP_JUMP_IF_FALSE(arg=183, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$346compare_op.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=350, stack=('$phi334.0',), blockstack=(), npush=0), Edge(pc=364, stack=('$phi334.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=364 nstack_initial=1), State(pc_initial=50 nstack_initial=1), State(pc_initial=350 nstack_initial=1), State(pc_initial=364 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi364.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=364 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=364, inst=LOAD_FAST(arg=7, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=366, inst=LOAD_FAST(arg=8, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$supertrend364.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=368, inst=LOAD_CONST(arg=1, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$supertrend364.1', '$i366.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=370, inst=BINARY_SUBTRACT(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$supertrend364.1', '$i366.2', '$const368.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=372, inst=BINARY_SUBSCR(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$supertrend364.1', '$370binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=374, inst=LOAD_FAST(arg=6, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=376, inst=LOAD_FAST(arg=8, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$final_lb374.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=378, inst=LOAD_CONST(arg=1, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$final_lb374.6', '$i376.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=380, inst=BINARY_SUBTRACT(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$final_lb374.6', '$i376.7', '$const378.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=382, inst=BINARY_SUBSCR(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$final_lb374.6', '$380binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=384, inst=COMPARE_OP(arg=2, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$382binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=386, inst=POP_JUMP_IF_FALSE(arg=210, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$384compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=388, stack=('$phi364.0',), blockstack=(), npush=0), Edge(pc=418, stack=('$phi364.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=350 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=388 nstack_initial=1), State(pc_initial=418 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=350 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=388 nstack_initial=1), State(pc_initial=418 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi350.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=350 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=350, inst=LOAD_FAST(arg=6, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=352, inst=LOAD_FAST(arg=8, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$final_lb350.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=354, inst=BINARY_SUBSCR(arg=None, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$final_lb350.1', '$i352.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=356, inst=LOAD_FAST(arg=7, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$354binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=358, inst=LOAD_FAST(arg=8, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$354binary_subscr.3', '$supertrend356.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=360, inst=STORE_SUBSCR(arg=None, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$354binary_subscr.3', '$supertrend356.4', '$i358.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=362, inst=JUMP_ABSOLUTE(arg=26, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi350.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=364 nstack_initial=1), State(pc_initial=388 nstack_initial=1), State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=388 nstack_initial=1), State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi388.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=388 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=388, inst=LOAD_FAST(arg=0, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=390, inst=LOAD_FAST(arg=8, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$close388.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=392, inst=BINARY_SUBSCR(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$close388.1', '$i390.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=394, inst=LOAD_FAST(arg=6, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$392binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=396, inst=LOAD_FAST(arg=8, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$392binary_subscr.3', '$final_lb394.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=398, inst=BINARY_SUBSCR(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$392binary_subscr.3', '$final_lb394.4', '$i396.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=400, inst=COMPARE_OP(arg=0, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$392binary_subscr.3', '$398binary_subscr.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=402, inst=POP_JUMP_IF_FALSE(arg=210, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$400compare_op.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=404, stack=('$phi388.0',), blockstack=(), npush=0), Edge(pc=418, stack=('$phi388.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1), State(pc_initial=404 nstack_initial=1), State(pc_initial=418 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi418.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=418 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=418, inst=LOAD_CONST(arg=2, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=420, inst=LOAD_FAST(arg=7, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0', '$const418.1.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=422, inst=LOAD_FAST(arg=8, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0', '$const418.1.2', '$supertrend420.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=424, inst=STORE_SUBSCR(arg=None, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0', '$const418.1.2', '$supertrend420.2', '$i422.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=426, inst=JUMP_ABSOLUTE(arg=26, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi418.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=404 nstack_initial=1), State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=404 nstack_initial=1), State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi404.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=404 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=404, inst=LOAD_FAST(arg=5, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=406, inst=LOAD_FAST(arg=8, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$final_ub404.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=408, inst=BINARY_SUBSCR(arg=None, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$final_ub404.1', '$i406.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=410, inst=LOAD_FAST(arg=7, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$408binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=412, inst=LOAD_FAST(arg=8, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$408binary_subscr.3', '$supertrend410.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=414, inst=STORE_SUBSCR(arg=None, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$408binary_subscr.3', '$supertrend410.4', '$i412.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=416, inst=JUMP_ABSOLUTE(arg=26, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi404.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): {'$phi50.0'},
             State(pc_initial=52 nstack_initial=2): {'$phi52.1'},
             State(pc_initial=74 nstack_initial=1): set(),
             State(pc_initial=98 nstack_initial=1): set(),
             State(pc_initial=112 nstack_initial=1): set(),
             State(pc_initial=128 nstack_initial=1): set(),
             State(pc_initial=148 nstack_initial=1): set(),
             State(pc_initial=172 nstack_initial=1): set(),
             State(pc_initial=186 nstack_initial=1): set(),
             State(pc_initial=202 nstack_initial=1): set(),
             State(pc_initial=226 nstack_initial=1): set(),
             State(pc_initial=242 nstack_initial=1): set(),
             State(pc_initial=256 nstack_initial=1): set(),
             State(pc_initial=280 nstack_initial=1): set(),
             State(pc_initial=296 nstack_initial=1): set(),
             State(pc_initial=310 nstack_initial=1): set(),
             State(pc_initial=334 nstack_initial=1): set(),
             State(pc_initial=350 nstack_initial=1): set(),
             State(pc_initial=364 nstack_initial=1): set(),
             State(pc_initial=388 nstack_initial=1): set(),
             State(pc_initial=404 nstack_initial=1): set(),
             State(pc_initial=418 nstack_initial=1): set(),
             State(pc_initial=428 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {'$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi52.1': State(pc_initial=50 nstack_initial=1)}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi128.0': {('$phi112.0',
                            State(pc_initial=112 nstack_initial=1)),
                           ('$phi98.0', State(pc_initial=98 nstack_initial=1))},
             '$phi148.0': {('$phi128.0',
                            State(pc_initial=128 nstack_initial=1))},
             '$phi172.0': {('$phi128.0',
                            State(pc_initial=128 nstack_initial=1)),
                           ('$phi148.0',
                            State(pc_initial=148 nstack_initial=1))},
             '$phi186.0': {('$phi148.0',
                            State(pc_initial=148 nstack_initial=1))},
             '$phi202.0': {('$phi172.0',
                            State(pc_initial=172 nstack_initial=1)),
                           ('$phi186.0',
                            State(pc_initial=186 nstack_initial=1))},
             '$phi226.0': {('$phi202.0',
                            State(pc_initial=202 nstack_initial=1))},
             '$phi242.0': {('$phi226.0',
                            State(pc_initial=226 nstack_initial=1))},
             '$phi256.0': {('$phi202.0',
                            State(pc_initial=202 nstack_initial=1)),
                           ('$phi226.0',
                            State(pc_initial=226 nstack_initial=1))},
             '$phi280.0': {('$phi256.0',
                            State(pc_initial=256 nstack_initial=1))},
             '$phi296.0': {('$phi280.0',
                            State(pc_initial=280 nstack_initial=1))},
             '$phi310.0': {('$phi256.0',
                            State(pc_initial=256 nstack_initial=1)),
                           ('$phi280.0',
                            State(pc_initial=280 nstack_initial=1))},
             '$phi334.0': {('$phi310.0',
                            State(pc_initial=310 nstack_initial=1))},
             '$phi350.0': {('$phi334.0',
                            State(pc_initial=334 nstack_initial=1))},
             '$phi364.0': {('$phi310.0',
                            State(pc_initial=310 nstack_initial=1)),
                           ('$phi334.0',
                            State(pc_initial=334 nstack_initial=1))},
             '$phi388.0': {('$phi364.0',
                            State(pc_initial=364 nstack_initial=1))},
             '$phi404.0': {('$phi388.0',
                            State(pc_initial=388 nstack_initial=1))},
             '$phi418.0': {('$phi364.0',
                            State(pc_initial=364 nstack_initial=1)),
                           ('$phi388.0',
                            State(pc_initial=388 nstack_initial=1))},
             '$phi50.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi242.0', State(pc_initial=242 nstack_initial=1)),
                          ('$phi296.0', State(pc_initial=296 nstack_initial=1)),
                          ('$phi350.0', State(pc_initial=350 nstack_initial=1)),
                          ('$phi404.0', State(pc_initial=404 nstack_initial=1)),
                          ('$phi418.0',
                           State(pc_initial=418 nstack_initial=1))},
             '$phi52.0': {('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))},
             '$phi74.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi98.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))}})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi128.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi148.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi172.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi186.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi202.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi226.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi242.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi256.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi280.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi296.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi310.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi334.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi350.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi364.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi388.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi404.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi418.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi50.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi52.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))},
             '$phi74.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi98.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))}})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi128.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi148.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi172.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi186.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi202.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi226.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi242.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi256.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi280.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi296.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi310.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi334.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi350.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi364.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi388.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi404.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi418.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))},
             '$phi74.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))}})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi128.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi148.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi172.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi186.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi202.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi226.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi242.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi256.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi280.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi296.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi310.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi334.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi350.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi364.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi388.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi404.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi418.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))},
             '$phi74.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))}})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {'$phi50.0': {('$48get_iter.19', State(pc_initial=0 nstack_initial=0))},
 '$phi52.1': {('$50for_iter.2', State(pc_initial=50 nstack_initial=1))}}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi50.0': '$48get_iter.19'},
             State(pc_initial=50 nstack_initial=1): {'$phi52.1': '$50for_iter.2'}})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$close4.1'}), (6, {'func': '$2load_global.0', 'args': ['$close4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_global.3'}), (12, {'item': '$10load_global.3', 'res': '$12load_method.4'}), (14, {'res': '$length14.5'}), (16, {'func': '$12load_method.4', 'args': ['$length14.5'], 'res': '$16call_method.6'}), (18, {'value': '$16call_method.6'}), (20, {'res': '$20load_global.7'}), (22, {'item': '$20load_global.7', 'res': '$22load_method.8'}), (24, {'res': '$length24.9'}), (26, {'func': '$22load_method.8', 'args': ['$length24.9'], 'res': '$26call_method.10'}), (28, {'value': '$26call_method.10'}), (30, {'res': '$30load_global.11'}), (32, {'item': '$30load_global.11', 'res': '$32load_method.12'}), (34, {'res': '$length34.13'}), (36, {'func': '$32load_method.12', 'args': ['$length34.13'], 'res': '$36call_method.14'}), (38, {'value': '$36call_method.14'}), (40, {'res': '$40load_global.15'}), (42, {'res': '$n42.16'}), (44, {'res': '$length44.17'}), (46, {'func': '$40load_global.15', 'args': ['$n42.16', '$length44.17'], 'res': '$46call_function.18'}), (48, {'value': '$46call_function.18', 'res': '$48get_iter.19'})), outgoing_phis={'$phi50.0': '$48get_iter.19'}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$48get_iter.19',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((50, {'iterator': '$phi50.0', 'pair': '$50for_iter.1', 'indval': '$50for_iter.2', 'pred': '$50for_iter.3'}),), outgoing_phis={'$phi52.1': '$50for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={428: (), 52: ('$phi50.0', '$50for_iter.2')})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=52 nstack_initial=2):
AdaptBlockInfo(insts=((52, {'value': '$phi52.1'}), (54, {'res': '$basic_ub54.2'}), (56, {'res': '$i56.3'}), (58, {'index': '$i56.3', 'target': '$basic_ub54.2', 'res': '$58binary_subscr.4'}), (60, {'res': '$final_ub60.5'}), (62, {'res': '$i62.6'}), (64, {'res': '$const64.7.1'}), (66, {'lhs': '$i62.6', 'rhs': '$const64.7.1', 'res': '$66binary_subtract.8'}), (68, {'index': '$66binary_subtract.8', 'target': '$final_ub60.5', 'res': '$68binary_subscr.9'}), (70, {'lhs': '$58binary_subscr.4', 'rhs': '$68binary_subscr.9', 'res': '$70compare_op.10'}), (72, {'pred': '$70compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ('$phi52.0',), 98: ('$phi52.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=74 nstack_initial=1):
AdaptBlockInfo(insts=((74, {'res': '$close74.1'}), (76, {'res': '$i76.2'}), (78, {'res': '$const78.3.1'}), (80, {'lhs': '$i76.2', 'rhs': '$const78.3.1', 'res': '$80binary_subtract.4'}), (82, {'index': '$80binary_subtract.4', 'target': '$close74.1', 'res': '$82binary_subscr.5'}), (84, {'res': '$final_ub84.6'}), (86, {'res': '$i86.7'}), (88, {'res': '$const88.8.1'}), (90, {'lhs': '$i86.7', 'rhs': '$const88.8.1', 'res': '$90binary_subtract.9'}), (92, {'index': '$90binary_subtract.9', 'target': '$final_ub84.6', 'res': '$92binary_subscr.10'}), (94, {'lhs': '$82binary_subscr.5', 'rhs': '$92binary_subscr.10', 'res': '$94compare_op.11'}), (96, {'pred': '$94compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: ('$phi74.0',), 112: ('$phi74.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=98 nstack_initial=1):
AdaptBlockInfo(insts=((98, {'res': '$basic_ub98.1'}), (100, {'res': '$i100.2'}), (102, {'index': '$i100.2', 'target': '$basic_ub98.1', 'res': '$102binary_subscr.3'}), (104, {'res': '$final_ub104.4'}), (106, {'res': '$i106.5'}), (108, {'target': '$final_ub104.4', 'index': '$i106.5', 'value': '$102binary_subscr.3'}), (110, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={128: ('$phi98.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=112 nstack_initial=1):
AdaptBlockInfo(insts=((112, {'res': '$final_ub112.1'}), (114, {'res': '$i114.2'}), (116, {'res': '$const116.3.1'}), (118, {'lhs': '$i114.2', 'rhs': '$const116.3.1', 'res': '$118binary_subtract.4'}), (120, {'index': '$118binary_subtract.4', 'target': '$final_ub112.1', 'res': '$120binary_subscr.5'}), (122, {'res': '$final_ub122.6'}), (124, {'res': '$i124.7'}), (126, {'target': '$final_ub122.6', 'index': '$i124.7', 'value': '$120binary_subscr.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={128: ('$phi112.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=128 nstack_initial=1):
AdaptBlockInfo(insts=((128, {'res': '$basic_lb128.1'}), (130, {'res': '$i130.2'}), (132, {'index': '$i130.2', 'target': '$basic_lb128.1', 'res': '$132binary_subscr.3'}), (134, {'res': '$final_lb134.4'}), (136, {'res': '$i136.5'}), (138, {'res': '$const138.6.1'}), (140, {'lhs': '$i136.5', 'rhs': '$const138.6.1', 'res': '$140binary_subtract.7'}), (142, {'index': '$140binary_subtract.7', 'target': '$final_lb134.4', 'res': '$142binary_subscr.8'}), (144, {'lhs': '$132binary_subscr.3', 'rhs': '$142binary_subscr.8', 'res': '$144compare_op.9'}), (146, {'pred': '$144compare_op.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={148: ('$phi128.0',), 172: ('$phi128.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=148 nstack_initial=1):
AdaptBlockInfo(insts=((148, {'res': '$close148.1'}), (150, {'res': '$i150.2'}), (152, {'res': '$const152.3.1'}), (154, {'lhs': '$i150.2', 'rhs': '$const152.3.1', 'res': '$154binary_subtract.4'}), (156, {'index': '$154binary_subtract.4', 'target': '$close148.1', 'res': '$156binary_subscr.5'}), (158, {'res': '$final_lb158.6'}), (160, {'res': '$i160.7'}), (162, {'res': '$const162.8.1'}), (164, {'lhs': '$i160.7', 'rhs': '$const162.8.1', 'res': '$164binary_subtract.9'}), (166, {'index': '$164binary_subtract.9', 'target': '$final_lb158.6', 'res': '$166binary_subscr.10'}), (168, {'lhs': '$156binary_subscr.5', 'rhs': '$166binary_subscr.10', 'res': '$168compare_op.11'}), (170, {'pred': '$168compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={172: ('$phi148.0',), 186: ('$phi148.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=172 nstack_initial=1):
AdaptBlockInfo(insts=((172, {'res': '$basic_lb172.1'}), (174, {'res': '$i174.2'}), (176, {'index': '$i174.2', 'target': '$basic_lb172.1', 'res': '$176binary_subscr.3'}), (178, {'res': '$final_lb178.4'}), (180, {'res': '$i180.5'}), (182, {'target': '$final_lb178.4', 'index': '$i180.5', 'value': '$176binary_subscr.3'}), (184, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={202: ('$phi172.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=186 nstack_initial=1):
AdaptBlockInfo(insts=((186, {'res': '$final_lb186.1'}), (188, {'res': '$i188.2'}), (190, {'res': '$const190.3.1'}), (192, {'lhs': '$i188.2', 'rhs': '$const190.3.1', 'res': '$192binary_subtract.4'}), (194, {'index': '$192binary_subtract.4', 'target': '$final_lb186.1', 'res': '$194binary_subscr.5'}), (196, {'res': '$final_lb196.6'}), (198, {'res': '$i198.7'}), (200, {'target': '$final_lb196.6', 'index': '$i198.7', 'value': '$194binary_subscr.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={202: ('$phi186.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=202 nstack_initial=1):
AdaptBlockInfo(insts=((202, {'res': '$supertrend202.1'}), (204, {'res': '$i204.2'}), (206, {'res': '$const206.3.1'}), (208, {'lhs': '$i204.2', 'rhs': '$const206.3.1', 'res': '$208binary_subtract.4'}), (210, {'index': '$208binary_subtract.4', 'target': '$supertrend202.1', 'res': '$210binary_subscr.5'}), (212, {'res': '$final_ub212.6'}), (214, {'res': '$i214.7'}), (216, {'res': '$const216.8.1'}), (218, {'lhs': '$i214.7', 'rhs': '$const216.8.1', 'res': '$218binary_subtract.9'}), (220, {'index': '$218binary_subtract.9', 'target': '$final_ub212.6', 'res': '$220binary_subscr.10'}), (222, {'lhs': '$210binary_subscr.5', 'rhs': '$220binary_subscr.10', 'res': '$222compare_op.11'}), (224, {'pred': '$222compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={226: ('$phi202.0',), 256: ('$phi202.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=226 nstack_initial=1):
AdaptBlockInfo(insts=((226, {'res': '$close226.1'}), (228, {'res': '$i228.2'}), (230, {'index': '$i228.2', 'target': '$close226.1', 'res': '$230binary_subscr.3'}), (232, {'res': '$final_ub232.4'}), (234, {'res': '$i234.5'}), (236, {'index': '$i234.5', 'target': '$final_ub232.4', 'res': '$236binary_subscr.6'}), (238, {'lhs': '$230binary_subscr.3', 'rhs': '$236binary_subscr.6', 'res': '$238compare_op.7'}), (240, {'pred': '$238compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={242: ('$phi226.0',), 256: ('$phi226.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=242 nstack_initial=1):
AdaptBlockInfo(insts=((242, {'res': '$final_ub242.1'}), (244, {'res': '$i244.2'}), (246, {'index': '$i244.2', 'target': '$final_ub242.1', 'res': '$246binary_subscr.3'}), (248, {'res': '$supertrend248.4'}), (250, {'res': '$i250.5'}), (252, {'target': '$supertrend248.4', 'index': '$i250.5', 'value': '$246binary_subscr.3'}), (254, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi242.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=256 nstack_initial=1):
AdaptBlockInfo(insts=((256, {'res': '$supertrend256.1'}), (258, {'res': '$i258.2'}), (260, {'res': '$const260.3.1'}), (262, {'lhs': '$i258.2', 'rhs': '$const260.3.1', 'res': '$262binary_subtract.4'}), (264, {'index': '$262binary_subtract.4', 'target': '$supertrend256.1', 'res': '$264binary_subscr.5'}), (266, {'res': '$final_ub266.6'}), (268, {'res': '$i268.7'}), (270, {'res': '$const270.8.1'}), (272, {'lhs': '$i268.7', 'rhs': '$const270.8.1', 'res': '$272binary_subtract.9'}), (274, {'index': '$272binary_subtract.9', 'target': '$final_ub266.6', 'res': '$274binary_subscr.10'}), (276, {'lhs': '$264binary_subscr.5', 'rhs': '$274binary_subscr.10', 'res': '$276compare_op.11'}), (278, {'pred': '$276compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={280: ('$phi256.0',), 310: ('$phi256.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=280 nstack_initial=1):
AdaptBlockInfo(insts=((280, {'res': '$close280.1'}), (282, {'res': '$i282.2'}), (284, {'index': '$i282.2', 'target': '$close280.1', 'res': '$284binary_subscr.3'}), (286, {'res': '$final_ub286.4'}), (288, {'res': '$i288.5'}), (290, {'index': '$i288.5', 'target': '$final_ub286.4', 'res': '$290binary_subscr.6'}), (292, {'lhs': '$284binary_subscr.3', 'rhs': '$290binary_subscr.6', 'res': '$292compare_op.7'}), (294, {'pred': '$292compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={296: ('$phi280.0',), 310: ('$phi280.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=296 nstack_initial=1):
AdaptBlockInfo(insts=((296, {'res': '$final_lb296.1'}), (298, {'res': '$i298.2'}), (300, {'index': '$i298.2', 'target': '$final_lb296.1', 'res': '$300binary_subscr.3'}), (302, {'res': '$supertrend302.4'}), (304, {'res': '$i304.5'}), (306, {'target': '$supertrend302.4', 'index': '$i304.5', 'value': '$300binary_subscr.3'}), (308, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi296.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=310 nstack_initial=1):
AdaptBlockInfo(insts=((310, {'res': '$supertrend310.1'}), (312, {'res': '$i312.2'}), (314, {'res': '$const314.3.1'}), (316, {'lhs': '$i312.2', 'rhs': '$const314.3.1', 'res': '$316binary_subtract.4'}), (318, {'index': '$316binary_subtract.4', 'target': '$supertrend310.1', 'res': '$318binary_subscr.5'}), (320, {'res': '$final_lb320.6'}), (322, {'res': '$i322.7'}), (324, {'res': '$const324.8.1'}), (326, {'lhs': '$i322.7', 'rhs': '$const324.8.1', 'res': '$326binary_subtract.9'}), (328, {'index': '$326binary_subtract.9', 'target': '$final_lb320.6', 'res': '$328binary_subscr.10'}), (330, {'lhs': '$318binary_subscr.5', 'rhs': '$328binary_subscr.10', 'res': '$330compare_op.11'}), (332, {'pred': '$330compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={334: ('$phi310.0',), 364: ('$phi310.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=334 nstack_initial=1):
AdaptBlockInfo(insts=((334, {'res': '$close334.1'}), (336, {'res': '$i336.2'}), (338, {'index': '$i336.2', 'target': '$close334.1', 'res': '$338binary_subscr.3'}), (340, {'res': '$final_lb340.4'}), (342, {'res': '$i342.5'}), (344, {'index': '$i342.5', 'target': '$final_lb340.4', 'res': '$344binary_subscr.6'}), (346, {'lhs': '$338binary_subscr.3', 'rhs': '$344binary_subscr.6', 'res': '$346compare_op.7'}), (348, {'pred': '$346compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={350: ('$phi334.0',), 364: ('$phi334.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=350 nstack_initial=1):
AdaptBlockInfo(insts=((350, {'res': '$final_lb350.1'}), (352, {'res': '$i352.2'}), (354, {'index': '$i352.2', 'target': '$final_lb350.1', 'res': '$354binary_subscr.3'}), (356, {'res': '$supertrend356.4'}), (358, {'res': '$i358.5'}), (360, {'target': '$supertrend356.4', 'index': '$i358.5', 'value': '$354binary_subscr.3'}), (362, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi350.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=364 nstack_initial=1):
AdaptBlockInfo(insts=((364, {'res': '$supertrend364.1'}), (366, {'res': '$i366.2'}), (368, {'res': '$const368.3.1'}), (370, {'lhs': '$i366.2', 'rhs': '$const368.3.1', 'res': '$370binary_subtract.4'}), (372, {'index': '$370binary_subtract.4', 'target': '$supertrend364.1', 'res': '$372binary_subscr.5'}), (374, {'res': '$final_lb374.6'}), (376, {'res': '$i376.7'}), (378, {'res': '$const378.8.1'}), (380, {'lhs': '$i376.7', 'rhs': '$const378.8.1', 'res': '$380binary_subtract.9'}), (382, {'index': '$380binary_subtract.9', 'target': '$final_lb374.6', 'res': '$382binary_subscr.10'}), (384, {'lhs': '$372binary_subscr.5', 'rhs': '$382binary_subscr.10', 'res': '$384compare_op.11'}), (386, {'pred': '$384compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={388: ('$phi364.0',), 418: ('$phi364.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=388 nstack_initial=1):
AdaptBlockInfo(insts=((388, {'res': '$close388.1'}), (390, {'res': '$i390.2'}), (392, {'index': '$i390.2', 'target': '$close388.1', 'res': '$392binary_subscr.3'}), (394, {'res': '$final_lb394.4'}), (396, {'res': '$i396.5'}), (398, {'index': '$i396.5', 'target': '$final_lb394.4', 'res': '$398binary_subscr.6'}), (400, {'lhs': '$392binary_subscr.3', 'rhs': '$398binary_subscr.6', 'res': '$400compare_op.7'}), (402, {'pred': '$400compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={404: ('$phi388.0',), 418: ('$phi388.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=404 nstack_initial=1):
AdaptBlockInfo(insts=((404, {'res': '$final_ub404.1'}), (406, {'res': '$i406.2'}), (408, {'index': '$i406.2', 'target': '$final_ub404.1', 'res': '$408binary_subscr.3'}), (410, {'res': '$supertrend410.4'}), (412, {'res': '$i412.5'}), (414, {'target': '$supertrend410.4', 'index': '$i412.5', 'value': '$408binary_subscr.3'}), (416, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi404.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=418 nstack_initial=1):
AdaptBlockInfo(insts=((418, {'res': '$const418.1.2'}), (420, {'res': '$supertrend420.2'}), (422, {'res': '$i422.3'}), (424, {'target': '$supertrend420.2', 'index': '$i422.3', 'value': '$const418.1.2'}), (426, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi418.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=428 nstack_initial=0):
AdaptBlockInfo(insts=((428, {'res': '$supertrend428.0'}), (430, {'retval': '$supertrend428.0', 'castval': '$430return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    close = arg(0, name=close)               ['close']
    basic_ub = arg(1, name=basic_ub)         ['basic_ub']
    basic_lb = arg(2, name=basic_lb)         ['basic_lb']
    n = arg(3, name=n)                       ['n']
    $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
    length = call $2load_global.0(close, func=$2load_global.0, args=[Var(close, helper_loops.py:99)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'close', 'length']
    $10load_global.3 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>) ['$10load_global.3']
    $12load_method.4 = getattr(value=$10load_global.3, attr=zeros) ['$10load_global.3', '$12load_method.4']
    final_ub = call $12load_method.4(length, func=$12load_method.4, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_method.4', 'final_ub', 'length']
    $20load_global.7 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.7']
    $22load_method.8 = getattr(value=$20load_global.7, attr=zeros) ['$20load_global.7', '$22load_method.8']
    final_lb = call $22load_method.8(length, func=$22load_method.8, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.8', 'final_lb', 'length']
    $30load_global.11 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>) ['$30load_global.11']
    $32load_method.12 = getattr(value=$30load_global.11, attr=zeros) ['$30load_global.11', '$32load_method.12']
    supertrend = call $32load_method.12(length, func=$32load_method.12, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$32load_method.12', 'length', 'supertrend']
    $40load_global.15 = global(range: <class 'range'>) ['$40load_global.15']
    $46call_function.18 = call $40load_global.15(n, length, func=$40load_global.15, args=[Var(n, helper_loops.py:99), Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_global.15', '$46call_function.18', 'length', 'n']
    $48get_iter.19 = getiter(value=$46call_function.18) ['$46call_function.18', '$48get_iter.19']
    $phi50.0 = $48get_iter.19                ['$48get_iter.19', '$phi50.0']
    jump 50                                  []
label 50:
    $50for_iter.1 = iternext(value=$phi50.0) ['$50for_iter.1', '$phi50.0']
    $50for_iter.2 = pair_first(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.2']
    $50for_iter.3 = pair_second(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.3']
    $phi52.1 = $50for_iter.2                 ['$50for_iter.2', '$phi52.1']
    branch $50for_iter.3, 52, 428            ['$50for_iter.3']
label 52:
    i = $phi52.1                             ['$phi52.1', 'i']
    $58binary_subscr.4 = getitem(value=basic_ub, index=i, fn=<built-in function getitem>) ['$58binary_subscr.4', 'basic_ub', 'i']
    $const64.7.1 = const(int, 1)             ['$const64.7.1']
    $66binary_subtract.8 = i - $const64.7.1  ['$66binary_subtract.8', '$const64.7.1', 'i']
    $68binary_subscr.9 = getitem(value=final_ub, index=$66binary_subtract.8, fn=<built-in function getitem>) ['$66binary_subtract.8', '$68binary_subscr.9', 'final_ub']
    $70compare_op.10 = $58binary_subscr.4 < $68binary_subscr.9 ['$58binary_subscr.4', '$68binary_subscr.9', '$70compare_op.10']
    bool72 = global(bool: <class 'bool'>)    ['bool72']
    $72pred = call bool72($70compare_op.10, func=bool72, args=(Var($70compare_op.10, helper_loops.py:113),), kws=(), vararg=None, varkwarg=None, target=None) ['$70compare_op.10', '$72pred', 'bool72']
    branch $72pred, 98, 74                   ['$72pred']
label 74:
    $const78.3.1 = const(int, 1)             ['$const78.3.1']
    $80binary_subtract.4 = i - $const78.3.1  ['$80binary_subtract.4', '$const78.3.1', 'i']
    $82binary_subscr.5 = getitem(value=close, index=$80binary_subtract.4, fn=<built-in function getitem>) ['$80binary_subtract.4', '$82binary_subscr.5', 'close']
    $const88.8.1 = const(int, 1)             ['$const88.8.1']
    $90binary_subtract.9 = i - $const88.8.1  ['$90binary_subtract.9', '$const88.8.1', 'i']
    $92binary_subscr.10 = getitem(value=final_ub, index=$90binary_subtract.9, fn=<built-in function getitem>) ['$90binary_subtract.9', '$92binary_subscr.10', 'final_ub']
    $94compare_op.11 = $82binary_subscr.5 > $92binary_subscr.10 ['$82binary_subscr.5', '$92binary_subscr.10', '$94compare_op.11']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
    $96pred = call bool96($94compare_op.11, func=bool96, args=(Var($94compare_op.11, helper_loops.py:113),), kws=(), vararg=None, varkwarg=None, target=None) ['$94compare_op.11', '$96pred', 'bool96']
    branch $96pred, 98, 112                  ['$96pred']
label 98:
    $102binary_subscr.3 = getitem(value=basic_ub, index=i, fn=<built-in function getitem>) ['$102binary_subscr.3', 'basic_ub', 'i']
    final_ub[i] = $102binary_subscr.3        ['$102binary_subscr.3', 'final_ub', 'i']
    jump 128                                 []
label 112:
    $const116.3.1 = const(int, 1)            ['$const116.3.1']
    $118binary_subtract.4 = i - $const116.3.1 ['$118binary_subtract.4', '$const116.3.1', 'i']
    $120binary_subscr.5 = getitem(value=final_ub, index=$118binary_subtract.4, fn=<built-in function getitem>) ['$118binary_subtract.4', '$120binary_subscr.5', 'final_ub']
    final_ub[i] = $120binary_subscr.5        ['$120binary_subscr.5', 'final_ub', 'i']
    jump 128                                 []
label 128:
    $132binary_subscr.3 = getitem(value=basic_lb, index=i, fn=<built-in function getitem>) ['$132binary_subscr.3', 'basic_lb', 'i']
    $const138.6.1 = const(int, 1)            ['$const138.6.1']
    $140binary_subtract.7 = i - $const138.6.1 ['$140binary_subtract.7', '$const138.6.1', 'i']
    $142binary_subscr.8 = getitem(value=final_lb, index=$140binary_subtract.7, fn=<built-in function getitem>) ['$140binary_subtract.7', '$142binary_subscr.8', 'final_lb']
    $144compare_op.9 = $132binary_subscr.3 > $142binary_subscr.8 ['$132binary_subscr.3', '$142binary_subscr.8', '$144compare_op.9']
    bool146 = global(bool: <class 'bool'>)   ['bool146']
    $146pred = call bool146($144compare_op.9, func=bool146, args=(Var($144compare_op.9, helper_loops.py:118),), kws=(), vararg=None, varkwarg=None, target=None) ['$144compare_op.9', '$146pred', 'bool146']
    branch $146pred, 172, 148                ['$146pred']
label 148:
    $const152.3.1 = const(int, 1)            ['$const152.3.1']
    $154binary_subtract.4 = i - $const152.3.1 ['$154binary_subtract.4', '$const152.3.1', 'i']
    $156binary_subscr.5 = getitem(value=close, index=$154binary_subtract.4, fn=<built-in function getitem>) ['$154binary_subtract.4', '$156binary_subscr.5', 'close']
    $const162.8.1 = const(int, 1)            ['$const162.8.1']
    $164binary_subtract.9 = i - $const162.8.1 ['$164binary_subtract.9', '$const162.8.1', 'i']
    $166binary_subscr.10 = getitem(value=final_lb, index=$164binary_subtract.9, fn=<built-in function getitem>) ['$164binary_subtract.9', '$166binary_subscr.10', 'final_lb']
    $168compare_op.11 = $156binary_subscr.5 < $166binary_subscr.10 ['$156binary_subscr.5', '$166binary_subscr.10', '$168compare_op.11']
    bool170 = global(bool: <class 'bool'>)   ['bool170']
    $170pred = call bool170($168compare_op.11, func=bool170, args=(Var($168compare_op.11, helper_loops.py:118),), kws=(), vararg=None, varkwarg=None, target=None) ['$168compare_op.11', '$170pred', 'bool170']
    branch $170pred, 172, 186                ['$170pred']
label 172:
    $176binary_subscr.3 = getitem(value=basic_lb, index=i, fn=<built-in function getitem>) ['$176binary_subscr.3', 'basic_lb', 'i']
    final_lb[i] = $176binary_subscr.3        ['$176binary_subscr.3', 'final_lb', 'i']
    jump 202                                 []
label 186:
    $const190.3.1 = const(int, 1)            ['$const190.3.1']
    $192binary_subtract.4 = i - $const190.3.1 ['$192binary_subtract.4', '$const190.3.1', 'i']
    $194binary_subscr.5 = getitem(value=final_lb, index=$192binary_subtract.4, fn=<built-in function getitem>) ['$192binary_subtract.4', '$194binary_subscr.5', 'final_lb']
    final_lb[i] = $194binary_subscr.5        ['$194binary_subscr.5', 'final_lb', 'i']
    jump 202                                 []
label 202:
    $const206.3.1 = const(int, 1)            ['$const206.3.1']
    $208binary_subtract.4 = i - $const206.3.1 ['$208binary_subtract.4', '$const206.3.1', 'i']
    $210binary_subscr.5 = getitem(value=supertrend, index=$208binary_subtract.4, fn=<built-in function getitem>) ['$208binary_subtract.4', '$210binary_subscr.5', 'supertrend']
    $const216.8.1 = const(int, 1)            ['$const216.8.1']
    $218binary_subtract.9 = i - $const216.8.1 ['$218binary_subtract.9', '$const216.8.1', 'i']
    $220binary_subscr.10 = getitem(value=final_ub, index=$218binary_subtract.9, fn=<built-in function getitem>) ['$218binary_subtract.9', '$220binary_subscr.10', 'final_ub']
    $222compare_op.11 = $210binary_subscr.5 == $220binary_subscr.10 ['$210binary_subscr.5', '$220binary_subscr.10', '$222compare_op.11']
    bool224 = global(bool: <class 'bool'>)   ['bool224']
    $224pred = call bool224($222compare_op.11, func=bool224, args=(Var($222compare_op.11, helper_loops.py:123),), kws=(), vararg=None, varkwarg=None, target=None) ['$222compare_op.11', '$224pred', 'bool224']
    branch $224pred, 226, 256                ['$224pred']
label 226:
    $230binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>) ['$230binary_subscr.3', 'close', 'i']
    $236binary_subscr.6 = getitem(value=final_ub, index=i, fn=<built-in function getitem>) ['$236binary_subscr.6', 'final_ub', 'i']
    $238compare_op.7 = $230binary_subscr.3 <= $236binary_subscr.6 ['$230binary_subscr.3', '$236binary_subscr.6', '$238compare_op.7']
    bool240 = global(bool: <class 'bool'>)   ['bool240']
    $240pred = call bool240($238compare_op.7, func=bool240, args=(Var($238compare_op.7, helper_loops.py:123),), kws=(), vararg=None, varkwarg=None, target=None) ['$238compare_op.7', '$240pred', 'bool240']
    branch $240pred, 242, 256                ['$240pred']
label 242:
    $246binary_subscr.3 = getitem(value=final_ub, index=i, fn=<built-in function getitem>) ['$246binary_subscr.3', 'final_ub', 'i']
    supertrend[i] = $246binary_subscr.3      ['$246binary_subscr.3', 'i', 'supertrend']
    jump 50                                  []
label 256:
    $const260.3.1 = const(int, 1)            ['$const260.3.1']
    $262binary_subtract.4 = i - $const260.3.1 ['$262binary_subtract.4', '$const260.3.1', 'i']
    $264binary_subscr.5 = getitem(value=supertrend, index=$262binary_subtract.4, fn=<built-in function getitem>) ['$262binary_subtract.4', '$264binary_subscr.5', 'supertrend']
    $const270.8.1 = const(int, 1)            ['$const270.8.1']
    $272binary_subtract.9 = i - $const270.8.1 ['$272binary_subtract.9', '$const270.8.1', 'i']
    $274binary_subscr.10 = getitem(value=final_ub, index=$272binary_subtract.9, fn=<built-in function getitem>) ['$272binary_subtract.9', '$274binary_subscr.10', 'final_ub']
    $276compare_op.11 = $264binary_subscr.5 == $274binary_subscr.10 ['$264binary_subscr.5', '$274binary_subscr.10', '$276compare_op.11']
    bool278 = global(bool: <class 'bool'>)   ['bool278']
    $278pred = call bool278($276compare_op.11, func=bool278, args=(Var($276compare_op.11, helper_loops.py:125),), kws=(), vararg=None, varkwarg=None, target=None) ['$276compare_op.11', '$278pred', 'bool278']
    branch $278pred, 280, 310                ['$278pred']
label 280:
    $284binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>) ['$284binary_subscr.3', 'close', 'i']
    $290binary_subscr.6 = getitem(value=final_ub, index=i, fn=<built-in function getitem>) ['$290binary_subscr.6', 'final_ub', 'i']
    $292compare_op.7 = $284binary_subscr.3 > $290binary_subscr.6 ['$284binary_subscr.3', '$290binary_subscr.6', '$292compare_op.7']
    bool294 = global(bool: <class 'bool'>)   ['bool294']
    $294pred = call bool294($292compare_op.7, func=bool294, args=(Var($292compare_op.7, helper_loops.py:125),), kws=(), vararg=None, varkwarg=None, target=None) ['$292compare_op.7', '$294pred', 'bool294']
    branch $294pred, 296, 310                ['$294pred']
label 296:
    $300binary_subscr.3 = getitem(value=final_lb, index=i, fn=<built-in function getitem>) ['$300binary_subscr.3', 'final_lb', 'i']
    supertrend[i] = $300binary_subscr.3      ['$300binary_subscr.3', 'i', 'supertrend']
    jump 50                                  []
label 310:
    $const314.3.1 = const(int, 1)            ['$const314.3.1']
    $316binary_subtract.4 = i - $const314.3.1 ['$316binary_subtract.4', '$const314.3.1', 'i']
    $318binary_subscr.5 = getitem(value=supertrend, index=$316binary_subtract.4, fn=<built-in function getitem>) ['$316binary_subtract.4', '$318binary_subscr.5', 'supertrend']
    $const324.8.1 = const(int, 1)            ['$const324.8.1']
    $326binary_subtract.9 = i - $const324.8.1 ['$326binary_subtract.9', '$const324.8.1', 'i']
    $328binary_subscr.10 = getitem(value=final_lb, index=$326binary_subtract.9, fn=<built-in function getitem>) ['$326binary_subtract.9', '$328binary_subscr.10', 'final_lb']
    $330compare_op.11 = $318binary_subscr.5 == $328binary_subscr.10 ['$318binary_subscr.5', '$328binary_subscr.10', '$330compare_op.11']
    bool332 = global(bool: <class 'bool'>)   ['bool332']
    $332pred = call bool332($330compare_op.11, func=bool332, args=(Var($330compare_op.11, helper_loops.py:127),), kws=(), vararg=None, varkwarg=None, target=None) ['$330compare_op.11', '$332pred', 'bool332']
    branch $332pred, 334, 364                ['$332pred']
label 334:
    $338binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>) ['$338binary_subscr.3', 'close', 'i']
    $344binary_subscr.6 = getitem(value=final_lb, index=i, fn=<built-in function getitem>) ['$344binary_subscr.6', 'final_lb', 'i']
    $346compare_op.7 = $338binary_subscr.3 >= $344binary_subscr.6 ['$338binary_subscr.3', '$344binary_subscr.6', '$346compare_op.7']
    bool348 = global(bool: <class 'bool'>)   ['bool348']
    $348pred = call bool348($346compare_op.7, func=bool348, args=(Var($346compare_op.7, helper_loops.py:127),), kws=(), vararg=None, varkwarg=None, target=None) ['$346compare_op.7', '$348pred', 'bool348']
    branch $348pred, 350, 364                ['$348pred']
label 350:
    $354binary_subscr.3 = getitem(value=final_lb, index=i, fn=<built-in function getitem>) ['$354binary_subscr.3', 'final_lb', 'i']
    supertrend[i] = $354binary_subscr.3      ['$354binary_subscr.3', 'i', 'supertrend']
    jump 50                                  []
label 364:
    $const368.3.1 = const(int, 1)            ['$const368.3.1']
    $370binary_subtract.4 = i - $const368.3.1 ['$370binary_subtract.4', '$const368.3.1', 'i']
    $372binary_subscr.5 = getitem(value=supertrend, index=$370binary_subtract.4, fn=<built-in function getitem>) ['$370binary_subtract.4', '$372binary_subscr.5', 'supertrend']
    $const378.8.1 = const(int, 1)            ['$const378.8.1']
    $380binary_subtract.9 = i - $const378.8.1 ['$380binary_subtract.9', '$const378.8.1', 'i']
    $382binary_subscr.10 = getitem(value=final_lb, index=$380binary_subtract.9, fn=<built-in function getitem>) ['$380binary_subtract.9', '$382binary_subscr.10', 'final_lb']
    $384compare_op.11 = $372binary_subscr.5 == $382binary_subscr.10 ['$372binary_subscr.5', '$382binary_subscr.10', '$384compare_op.11']
    bool386 = global(bool: <class 'bool'>)   ['bool386']
    $386pred = call bool386($384compare_op.11, func=bool386, args=(Var($384compare_op.11, helper_loops.py:129),), kws=(), vararg=None, varkwarg=None, target=None) ['$384compare_op.11', '$386pred', 'bool386']
    branch $386pred, 388, 418                ['$386pred']
label 388:
    $392binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>) ['$392binary_subscr.3', 'close', 'i']
    $398binary_subscr.6 = getitem(value=final_lb, index=i, fn=<built-in function getitem>) ['$398binary_subscr.6', 'final_lb', 'i']
    $400compare_op.7 = $392binary_subscr.3 < $398binary_subscr.6 ['$392binary_subscr.3', '$398binary_subscr.6', '$400compare_op.7']
    bool402 = global(bool: <class 'bool'>)   ['bool402']
    $402pred = call bool402($400compare_op.7, func=bool402, args=(Var($400compare_op.7, helper_loops.py:129),), kws=(), vararg=None, varkwarg=None, target=None) ['$400compare_op.7', '$402pred', 'bool402']
    branch $402pred, 404, 418                ['$402pred']
label 404:
    $408binary_subscr.3 = getitem(value=final_ub, index=i, fn=<built-in function getitem>) ['$408binary_subscr.3', 'final_ub', 'i']
    supertrend[i] = $408binary_subscr.3      ['$408binary_subscr.3', 'i', 'supertrend']
    jump 50                                  []
label 418:
    $const418.1.2 = const(float, 0.0)        ['$const418.1.2']
    supertrend[i] = $const418.1.2            ['$const418.1.2', 'i', 'supertrend']
    jump 50                                  []
label 428:
    $430return_value.1 = cast(value=supertrend) ['$430return_value.1', 'supertrend']
    return $430return_value.1                ['$430return_value.1']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x77623fc43b80>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: close = arg(0, name=close)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: basic_ub = arg(1, name=basic_ub)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: basic_lb = arg(2, name=basic_lb)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: n = arg(3, name=n)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(len: <built-in function len>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: length = call $2load_global.0(close, func=$2load_global.0, args=[Var(close, helper_loops.py:99)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $10load_global.3 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $12load_method.4 = getattr(value=$10load_global.3, attr=zeros)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_ub = call $12load_method.4(length, func=$12load_method.4, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $20load_global.7 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $22load_method.8 = getattr(value=$20load_global.7, attr=zeros)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_lb = call $22load_method.8(length, func=$22load_method.8, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $30load_global.11 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $32load_method.12 = getattr(value=$30load_global.11, attr=zeros)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend = call $32load_method.12(length, func=$32load_method.12, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $40load_global.15 = global(range: <class 'range'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $46call_function.18 = call $40load_global.15(n, length, func=$40load_global.15, args=[Var(n, helper_loops.py:99), Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $48get_iter.19 = getiter(value=$46call_function.18)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $phi50.0 = $48get_iter.19
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 50
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 50
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x77623fc43b80>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $50for_iter.1 = iternext(value=$phi50.0)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $phi52.1 = $50for_iter.2
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $50for_iter.3, 52, 428
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 52
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x77623fc43b80>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: i = $phi52.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $58binary_subscr.4 = getitem(value=basic_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const64.7.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $66binary_subtract.8 = i - $const64.7.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $68binary_subscr.9 = getitem(value=final_ub, index=$66binary_subtract.8, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $70compare_op.10 = $58binary_subscr.4 < $68binary_subscr.9
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool72 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $72pred = call bool72($70compare_op.10, func=bool72, args=(Var($70compare_op.10, helper_loops.py:113),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $72pred, 98, 74
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 74
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x77623fc43b80>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const78.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $80binary_subtract.4 = i - $const78.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $82binary_subscr.5 = getitem(value=close, index=$80binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const88.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $90binary_subtract.9 = i - $const88.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $92binary_subscr.10 = getitem(value=final_ub, index=$90binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $94compare_op.11 = $82binary_subscr.5 > $92binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool96 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $96pred = call bool96($94compare_op.11, func=bool96, args=(Var($94compare_op.11, helper_loops.py:113),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $96pred, 98, 112
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 98
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x77623fc43b80>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $102binary_subscr.3 = getitem(value=basic_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_ub[i] = $102binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 128
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 112
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x77623fc43b80>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const116.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $118binary_subtract.4 = i - $const116.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $120binary_subscr.5 = getitem(value=final_ub, index=$118binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_ub[i] = $120binary_subscr.5
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 128
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 128
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x77623fc43b80>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $132binary_subscr.3 = getitem(value=basic_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const138.6.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $140binary_subtract.7 = i - $const138.6.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $142binary_subscr.8 = getitem(value=final_lb, index=$140binary_subtract.7, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $144compare_op.9 = $132binary_subscr.3 > $142binary_subscr.8
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool146 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $146pred = call bool146($144compare_op.9, func=bool146, args=(Var($144compare_op.9, helper_loops.py:118),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $146pred, 172, 148
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 148
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x77623fc43b80>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const152.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $154binary_subtract.4 = i - $const152.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $156binary_subscr.5 = getitem(value=close, index=$154binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const162.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $164binary_subtract.9 = i - $const162.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $166binary_subscr.10 = getitem(value=final_lb, index=$164binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $168compare_op.11 = $156binary_subscr.5 < $166binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool170 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $170pred = call bool170($168compare_op.11, func=bool170, args=(Var($168compare_op.11, helper_loops.py:118),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $170pred, 172, 186
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 172
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x77623fc43b80>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $176binary_subscr.3 = getitem(value=basic_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_lb[i] = $176binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 202
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 186
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x77623fc43b80>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const190.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $192binary_subtract.4 = i - $const190.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $194binary_subscr.5 = getitem(value=final_lb, index=$192binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_lb[i] = $194binary_subscr.5
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 202
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 202
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x77623fc43b80>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const206.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $208binary_subtract.4 = i - $const206.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $210binary_subscr.5 = getitem(value=supertrend, index=$208binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const216.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $218binary_subtract.9 = i - $const216.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $220binary_subscr.10 = getitem(value=final_ub, index=$218binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $222compare_op.11 = $210binary_subscr.5 == $220binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool224 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $224pred = call bool224($222compare_op.11, func=bool224, args=(Var($222compare_op.11, helper_loops.py:123),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $224pred, 226, 256
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 226
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x77623fc43b80>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $230binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $236binary_subscr.6 = getitem(value=final_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $238compare_op.7 = $230binary_subscr.3 <= $236binary_subscr.6
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool240 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $240pred = call bool240($238compare_op.7, func=bool240, args=(Var($238compare_op.7, helper_loops.py:123),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $240pred, 242, 256
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 242
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x77623fc43b80>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $246binary_subscr.3 = getitem(value=final_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $246binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 256
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x77623fc43b80>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const260.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $262binary_subtract.4 = i - $const260.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $264binary_subscr.5 = getitem(value=supertrend, index=$262binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const270.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $272binary_subtract.9 = i - $const270.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $274binary_subscr.10 = getitem(value=final_ub, index=$272binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $276compare_op.11 = $264binary_subscr.5 == $274binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool278 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $278pred = call bool278($276compare_op.11, func=bool278, args=(Var($276compare_op.11, helper_loops.py:125),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $278pred, 280, 310
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 280
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x77623fc43b80>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $284binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $290binary_subscr.6 = getitem(value=final_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $292compare_op.7 = $284binary_subscr.3 > $290binary_subscr.6
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool294 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $294pred = call bool294($292compare_op.7, func=bool294, args=(Var($292compare_op.7, helper_loops.py:125),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $294pred, 296, 310
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 296
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x77623fc43b80>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $300binary_subscr.3 = getitem(value=final_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $300binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 310
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x77623fc43b80>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const314.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $316binary_subtract.4 = i - $const314.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $318binary_subscr.5 = getitem(value=supertrend, index=$316binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const324.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $326binary_subtract.9 = i - $const324.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $328binary_subscr.10 = getitem(value=final_lb, index=$326binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $330compare_op.11 = $318binary_subscr.5 == $328binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool332 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $332pred = call bool332($330compare_op.11, func=bool332, args=(Var($330compare_op.11, helper_loops.py:127),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $332pred, 334, 364
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 334
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x77623fc43b80>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $338binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $344binary_subscr.6 = getitem(value=final_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $346compare_op.7 = $338binary_subscr.3 >= $344binary_subscr.6
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool348 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $348pred = call bool348($346compare_op.7, func=bool348, args=(Var($346compare_op.7, helper_loops.py:127),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $348pred, 350, 364
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 350
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x77623fc43b80>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $354binary_subscr.3 = getitem(value=final_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $354binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 364
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x77623fc43b80>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const368.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $370binary_subtract.4 = i - $const368.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $372binary_subscr.5 = getitem(value=supertrend, index=$370binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const378.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $380binary_subtract.9 = i - $const378.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $382binary_subscr.10 = getitem(value=final_lb, index=$380binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $384compare_op.11 = $372binary_subscr.5 == $382binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool386 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $386pred = call bool386($384compare_op.11, func=bool386, args=(Var($384compare_op.11, helper_loops.py:129),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $386pred, 388, 418
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 388
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x77623fc43b80>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $392binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $398binary_subscr.6 = getitem(value=final_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $400compare_op.7 = $392binary_subscr.3 < $398binary_subscr.6
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool402 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $402pred = call bool402($400compare_op.7, func=bool402, args=(Var($400compare_op.7, helper_loops.py:129),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $402pred, 404, 418
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 404
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x77623fc43b80>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $408binary_subscr.3 = getitem(value=final_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $408binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 418
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x77623fc43b80>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const418.1.2 = const(float, 0.0)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $const418.1.2
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 428
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x77623fc43b80>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $430return_value.1 = cast(value=supertrend)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $430return_value.1
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 429
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x77623fc43b80>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 50
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$102binary_subscr.3': [(<numba.core.ir.Assign object at 0x77623fc252d0>,
                                      98)],
             '$10load_global.3': [(<numba.core.ir.Assign object at 0x77623fdd10c0>,
                                   0)],
             '$118binary_subtract.4': [(<numba.core.ir.Assign object at 0x77623fc25b10>,
                                        112)],
             '$120binary_subscr.5': [(<numba.core.ir.Assign object at 0x77623fc25c90>,
                                      112)],
             '$12load_method.4': [(<numba.core.ir.Assign object at 0x77623fdd1240>,
                                   0)],
             '$132binary_subscr.3': [(<numba.core.ir.Assign object at 0x77623fc262f0>,
                                      128)],
             '$140binary_subtract.7': [(<numba.core.ir.Assign object at 0x77623fc26830>,
                                        128)],
             '$142binary_subscr.8': [(<numba.core.ir.Assign object at 0x77623fc269b0>,
                                      128)],
             '$144compare_op.9': [(<numba.core.ir.Assign object at 0x77623fc26b30>,
                                   128)],
             '$146pred': [(<numba.core.ir.Assign object at 0x77623fc26da0>,
                           128)],
             '$154binary_subtract.4': [(<numba.core.ir.Assign object at 0x77623fc272b0>,
                                        148)],
             '$156binary_subscr.5': [(<numba.core.ir.Assign object at 0x77623fc27430>,
                                      148)],
             '$164binary_subtract.9': [(<numba.core.ir.Assign object at 0x77623fc27970>,
                                        148)],
             '$166binary_subscr.10': [(<numba.core.ir.Assign object at 0x77623fc27af0>,
                                       148)],
             '$168compare_op.11': [(<numba.core.ir.Assign object at 0x77623fc27c70>,
                                    148)],
             '$170pred': [(<numba.core.ir.Assign object at 0x77623fc27ee0>,
                           148)],
             '$176binary_subscr.3': [(<numba.core.ir.Assign object at 0x77623fc302b0>,
                                      172)],
             '$192binary_subtract.4': [(<numba.core.ir.Assign object at 0x77623fc30af0>,
                                        186)],
             '$194binary_subscr.5': [(<numba.core.ir.Assign object at 0x77623fc30c70>,
                                      186)],
             '$208binary_subtract.4': [(<numba.core.ir.Assign object at 0x77623fc31450>,
                                        202)],
             '$20load_global.7': [(<numba.core.ir.Assign object at 0x77623fdd1780>,
                                   0)],
             '$210binary_subscr.5': [(<numba.core.ir.Assign object at 0x77623fc315d0>,
                                      202)],
             '$218binary_subtract.9': [(<numba.core.ir.Assign object at 0x77623fc31b10>,
                                        202)],
             '$220binary_subscr.10': [(<numba.core.ir.Assign object at 0x77623fc31c90>,
                                       202)],
             '$222compare_op.11': [(<numba.core.ir.Assign object at 0x77623fc31e10>,
                                    202)],
             '$224pred': [(<numba.core.ir.Assign object at 0x77623fc32080>,
                           202)],
             '$22load_method.8': [(<numba.core.ir.Assign object at 0x77623fdd1900>,
                                   0)],
             '$230binary_subscr.3': [(<numba.core.ir.Assign object at 0x77623fc32410>,
                                      226)],
             '$236binary_subscr.6': [(<numba.core.ir.Assign object at 0x77623fc327d0>,
                                      226)],
             '$238compare_op.7': [(<numba.core.ir.Assign object at 0x77623fc32950>,
                                   226)],
             '$240pred': [(<numba.core.ir.Assign object at 0x77623fc32bc0>,
                           226)],
             '$246binary_subscr.3': [(<numba.core.ir.Assign object at 0x77623fc32f50>,
                                      242)],
             '$262binary_subtract.4': [(<numba.core.ir.Assign object at 0x77623fc33790>,
                                        256)],
             '$264binary_subscr.5': [(<numba.core.ir.Assign object at 0x77623fc33910>,
                                      256)],
             '$272binary_subtract.9': [(<numba.core.ir.Assign object at 0x77623fc33e50>,
                                        256)],
             '$274binary_subscr.10': [(<numba.core.ir.Assign object at 0x77623fc33fd0>,
                                       256)],
             '$276compare_op.11': [(<numba.core.ir.Assign object at 0x77623fc38190>,
                                    256)],
             '$278pred': [(<numba.core.ir.Assign object at 0x77623fc38400>,
                           256)],
             '$284binary_subscr.3': [(<numba.core.ir.Assign object at 0x77623fc38790>,
                                      280)],
             '$290binary_subscr.6': [(<numba.core.ir.Assign object at 0x77623fc38b50>,
                                      280)],
             '$292compare_op.7': [(<numba.core.ir.Assign object at 0x77623fc38cd0>,
                                   280)],
             '$294pred': [(<numba.core.ir.Assign object at 0x77623fc38f40>,
                           280)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x77623fdd0b80>,
                                  0)],
             '$300binary_subscr.3': [(<numba.core.ir.Assign object at 0x77623fc392d0>,
                                      296)],
             '$30load_global.11': [(<numba.core.ir.Assign object at 0x77623fdd1e40>,
                                    0)],
             '$316binary_subtract.4': [(<numba.core.ir.Assign object at 0x77623fc39b10>,
                                        310)],
             '$318binary_subscr.5': [(<numba.core.ir.Assign object at 0x77623fc39c90>,
                                      310)],
             '$326binary_subtract.9': [(<numba.core.ir.Assign object at 0x77623fc3a1d0>,
                                        310)],
             '$328binary_subscr.10': [(<numba.core.ir.Assign object at 0x77623fc3a350>,
                                       310)],
             '$32load_method.12': [(<numba.core.ir.Assign object at 0x77623fdd1fc0>,
                                    0)],
             '$330compare_op.11': [(<numba.core.ir.Assign object at 0x77623fc3a4d0>,
                                    310)],
             '$332pred': [(<numba.core.ir.Assign object at 0x77623fc3a740>,
                           310)],
             '$338binary_subscr.3': [(<numba.core.ir.Assign object at 0x77623fc3aad0>,
                                      334)],
             '$344binary_subscr.6': [(<numba.core.ir.Assign object at 0x77623fc3ae90>,
                                      334)],
             '$346compare_op.7': [(<numba.core.ir.Assign object at 0x77623fc3b010>,
                                   334)],
             '$348pred': [(<numba.core.ir.Assign object at 0x77623fc3b280>,
                           334)],
             '$354binary_subscr.3': [(<numba.core.ir.Assign object at 0x77623fc3b610>,
                                      350)],
             '$370binary_subtract.4': [(<numba.core.ir.Assign object at 0x77623fc3be50>,
                                        364)],
             '$372binary_subscr.5': [(<numba.core.ir.Assign object at 0x77623fc3bfd0>,
                                      364)],
             '$380binary_subtract.9': [(<numba.core.ir.Assign object at 0x77623fc40550>,
                                        364)],
             '$382binary_subscr.10': [(<numba.core.ir.Assign object at 0x77623fc406d0>,
                                       364)],
             '$384compare_op.11': [(<numba.core.ir.Assign object at 0x77623fc40850>,
                                    364)],
             '$386pred': [(<numba.core.ir.Assign object at 0x77623fc40ac0>,
                           364)],
             '$392binary_subscr.3': [(<numba.core.ir.Assign object at 0x77623fc40e50>,
                                      388)],
             '$398binary_subscr.6': [(<numba.core.ir.Assign object at 0x77623fc41210>,
                                      388)],
             '$400compare_op.7': [(<numba.core.ir.Assign object at 0x77623fc41390>,
                                   388)],
             '$402pred': [(<numba.core.ir.Assign object at 0x77623fc41600>,
                           388)],
             '$408binary_subscr.3': [(<numba.core.ir.Assign object at 0x77623fc41990>,
                                      404)],
             '$40load_global.15': [(<numba.core.ir.Assign object at 0x77623fdd2500>,
                                    0)],
             '$430return_value.1': [(<numba.core.ir.Assign object at 0x77623fc42440>,
                                     428)],
             '$46call_function.18': [(<numba.core.ir.Assign object at 0x77623fdd2920>,
                                      0)],
             '$48get_iter.19': [(<numba.core.ir.Assign object at 0x77623fdd2a40>,
                                 0)],
             '$50for_iter.1': [(<numba.core.ir.Assign object at 0x77623fdd26b0>,
                                50)],
             '$50for_iter.2': [(<numba.core.ir.Assign object at 0x77623fdd2b30>,
                                50)],
             '$50for_iter.3': [(<numba.core.ir.Assign object at 0x77623fdd2c50>,
                                50)],
             '$58binary_subscr.4': [(<numba.core.ir.Assign object at 0x77623fdd3310>,
                                     52)],
             '$66binary_subtract.8': [(<numba.core.ir.Assign object at 0x77623fdd3850>,
                                       52)],
             '$68binary_subscr.9': [(<numba.core.ir.Assign object at 0x77623fdd39d0>,
                                     52)],
             '$70compare_op.10': [(<numba.core.ir.Assign object at 0x77623fdd3b50>,
                                   52)],
             '$72pred': [(<numba.core.ir.Assign object at 0x77623fdd3dc0>, 52)],
             '$80binary_subtract.4': [(<numba.core.ir.Assign object at 0x77623fc24310>,
                                       74)],
             '$82binary_subscr.5': [(<numba.core.ir.Assign object at 0x77623fc24490>,
                                     74)],
             '$90binary_subtract.9': [(<numba.core.ir.Assign object at 0x77623fc249d0>,
                                       74)],
             '$92binary_subscr.10': [(<numba.core.ir.Assign object at 0x77623fc24b50>,
                                      74)],
             '$94compare_op.11': [(<numba.core.ir.Assign object at 0x77623fc24cd0>,
                                   74)],
             '$96pred': [(<numba.core.ir.Assign object at 0x77623fc24f40>, 74)],
             '$const116.3.1': [(<numba.core.ir.Assign object at 0x77623fc25960>,
                                112)],
             '$const138.6.1': [(<numba.core.ir.Assign object at 0x77623fc26680>,
                                128)],
             '$const152.3.1': [(<numba.core.ir.Assign object at 0x77623fc27100>,
                                148)],
             '$const162.8.1': [(<numba.core.ir.Assign object at 0x77623fc277c0>,
                                148)],
             '$const190.3.1': [(<numba.core.ir.Assign object at 0x77623fc30940>,
                                186)],
             '$const206.3.1': [(<numba.core.ir.Assign object at 0x77623fc312a0>,
                                202)],
             '$const216.8.1': [(<numba.core.ir.Assign object at 0x77623fc31960>,
                                202)],
             '$const260.3.1': [(<numba.core.ir.Assign object at 0x77623fc335e0>,
                                256)],
             '$const270.8.1': [(<numba.core.ir.Assign object at 0x77623fc33ca0>,
                                256)],
             '$const314.3.1': [(<numba.core.ir.Assign object at 0x77623fc39960>,
                                310)],
             '$const324.8.1': [(<numba.core.ir.Assign object at 0x77623fc3a020>,
                                310)],
             '$const368.3.1': [(<numba.core.ir.Assign object at 0x77623fc3bca0>,
                                364)],
             '$const378.8.1': [(<numba.core.ir.Assign object at 0x77623fc403a0>,
                                364)],
             '$const418.1.2': [(<numba.core.ir.Assign object at 0x77623fc41de0>,
                                418)],
             '$const64.7.1': [(<numba.core.ir.Assign object at 0x77623fdd36a0>,
                               52)],
             '$const78.3.1': [(<numba.core.ir.Assign object at 0x77623fc24160>,
                               74)],
             '$const88.8.1': [(<numba.core.ir.Assign object at 0x77623fc24820>,
                               74)],
             '$phi50.0': [(<numba.core.ir.Assign object at 0x77623fdd0d30>, 0)],
             '$phi52.1': [(<numba.core.ir.Assign object at 0x77623fdd2170>,
                           50)],
             'basic_lb': [(<numba.core.ir.Assign object at 0x77623fdd0820>, 0)],
             'basic_ub': [(<numba.core.ir.Assign object at 0x77623fdd03a0>, 0)],
             'bool146': [(<numba.core.ir.Assign object at 0x77623fc26c80>,
                          128)],
             'bool170': [(<numba.core.ir.Assign object at 0x77623fc27dc0>,
                          148)],
             'bool224': [(<numba.core.ir.Assign object at 0x77623fc31f60>,
                          202)],
             'bool240': [(<numba.core.ir.Assign object at 0x77623fc32aa0>,
                          226)],
             'bool278': [(<numba.core.ir.Assign object at 0x77623fc382e0>,
                          256)],
             'bool294': [(<numba.core.ir.Assign object at 0x77623fc38e20>,
                          280)],
             'bool332': [(<numba.core.ir.Assign object at 0x77623fc3a620>,
                          310)],
             'bool348': [(<numba.core.ir.Assign object at 0x77623fc3b160>,
                          334)],
             'bool386': [(<numba.core.ir.Assign object at 0x77623fc409a0>,
                          364)],
             'bool402': [(<numba.core.ir.Assign object at 0x77623fc414e0>,
                          388)],
             'bool72': [(<numba.core.ir.Assign object at 0x77623fdd3ca0>, 52)],
             'bool96': [(<numba.core.ir.Assign object at 0x77623fc24e20>, 74)],
             'close': [(<numba.core.ir.Assign object at 0x77623fdd00a0>, 0)],
             'final_lb': [(<numba.core.ir.Assign object at 0x77623fdd1c30>, 0)],
             'final_ub': [(<numba.core.ir.Assign object at 0x77623fdd1570>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x77623fdd2f20>, 52)],
             'length': [(<numba.core.ir.Assign object at 0x77623fdd0e80>, 0)],
             'n': [(<numba.core.ir.Assign object at 0x77623fdd0a00>, 0)],
             'supertrend': [(<numba.core.ir.Assign object at 0x77623fdd22f0>,
                             0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x77623fdbb2e0>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4522)
           2	LOAD_GLOBAL(arg=0, lineno=4523)
           4	LOAD_ATTR(arg=1, lineno=4523)
           6	LOAD_FAST(arg=0, lineno=4523)
           8	LOAD_FAST(arg=1, lineno=4523)
          10	LOAD_CONST(arg=1, lineno=4523)
          12	CALL_FUNCTION_KW(arg=2, lineno=4523)
          14	STORE_FAST(arg=2, lineno=4523)
          16	LOAD_FAST(arg=2, lineno=4524)
          18	LOAD_METHOD(arg=2, lineno=4524)
          20	CALL_METHOD(arg=0, lineno=4524)
          22	POP_TOP(arg=None, lineno=4524)
          24	LOAD_FAST(arg=2, lineno=4525)
          26	RETURN_VALUE(arg=None, lineno=4525)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4522)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_attr.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_attr.1', '$shape6.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_attr.1', '$shape6.2', '$dtype8.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=CALL_FUNCTION_KW(arg=2, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_attr.1', '$shape6.2', '$dtype8.3', '$const10.4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=14, inst=STORE_FAST(arg=2, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$12call_function_kw.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=4524)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=4524)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$arr16.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=20, inst=CALL_METHOD(arg=0, lineno=4524)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$18load_method.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=22, inst=POP_TOP(arg=None, lineno=4524)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$20call_method.8']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=24, inst=LOAD_FAST(arg=2, lineno=4525)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=26, inst=RETURN_VALUE(arg=None, lineno=4525)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$arr24.9']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'res': '$shape6.2'}), (8, {'res': '$dtype8.3'}), (10, {'res': '$const10.4.1'}), (12, {'func': '$4load_attr.1', 'args': ['$shape6.2', '$dtype8.3'], 'names': '$const10.4.1', 'res': '$12call_function_kw.5'}), (14, {'value': '$12call_function_kw.5'}), (16, {'res': '$arr16.6'}), (18, {'item': '$arr16.6', 'res': '$18load_method.7'}), (20, {'func': '$18load_method.7', 'args': [], 'res': '$20call_method.8'}), (24, {'res': '$arr24.9'}), (26, {'retval': '$arr24.9', 'castval': '$26return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=empty) ['$2load_global.0', '$4load_attr.1']
    arr = call $4load_attr.1(shape, func=$4load_attr.1, args=[Var(shape, arrayobj.py:4522)], kws=[('dtype', Var(dtype, arrayobj.py:4522))], vararg=None, varkwarg=None, target=None) ['$4load_attr.1', 'arr', 'dtype', 'shape']
    $18load_method.7 = getattr(value=arr, attr=_zero_fill) ['$18load_method.7', 'arr']
    $20call_method.8 = call $18load_method.7(func=$18load_method.7, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_method.7', '$20call_method.8']
    $26return_value.10 = cast(value=arr)     ['$26return_value.10', 'arr']
    return $26return_value.10                ['$26return_value.10']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x77623fc95b40>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: shape = arg(0, name=shape)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: dtype = arg(1, name=dtype)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: arr = call $4load_attr.1(shape, func=$4load_attr.1, args=[Var(shape, arrayobj.py:4522)], kws=[('dtype', Var(dtype, arrayobj.py:4522))], vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $18load_method.7 = getattr(value=arr, attr=_zero_fill)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $20call_method.8 = call $18load_method.7(func=$18load_method.7, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $26return_value.10 = cast(value=arr)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $26return_value.10
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$18load_method.7': [(<numba.core.ir.Assign object at 0x77623fc973a0>,
                                   0)],
             '$20call_method.8': [(<numba.core.ir.Assign object at 0x77623fc975b0>,
                                   0)],
             '$26return_value.10': [(<numba.core.ir.Assign object at 0x77623fc977c0>,
                                     0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x77623fc968c0>,
                                  0)],
             '$4load_attr.1': [(<numba.core.ir.Assign object at 0x77623fc96a40>,
                                0)],
             'arr': [(<numba.core.ir.Assign object at 0x77623fc97100>, 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x77623fc96740>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x77623fc96620>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x77623fc95b40>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4454)
           2	LOAD_GLOBAL(arg=0, lineno=4455)
           4	LOAD_FAST(arg=0, lineno=4455)
           6	LOAD_FAST(arg=1, lineno=4455)
           8	LOAD_DEREF(arg=0, lineno=4455)
          10	CALL_FUNCTION(arg=3, lineno=4455)
          12	RETURN_VALUE(arg=None, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4454)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$shape4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=LOAD_DEREF(arg=0, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$shape4.1', '$dtype6.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=CALL_FUNCTION(arg=3, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$shape4.1', '$dtype6.2', '$8load_deref.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$10call_function.4']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'res': '$dtype6.2'}), (8, {'res': '$8load_deref.3'}), (10, {'func': '$2load_global.0', 'args': ['$shape4.1', '$dtype6.2', '$8load_deref.3'], 'res': '$10call_function.4'}), (12, {'retval': '$10call_function.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$2load_global.0']
    $8load_deref.3 = freevar(retty: array(float64, 1d, C)) ['$8load_deref.3']
    $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4454), Var(dtype, arrayobj.py:4454), Var($8load_deref.3, arrayobj.py:4455)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_deref.3', 'dtype', 'shape']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x77623fcd11b0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: shape = arg(0, name=shape)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: dtype = arg(1, name=dtype)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $8load_deref.3 = freevar(retty: array(float64, 1d, C))
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4454), Var(dtype, arrayobj.py:4454), Var($8load_deref.3, arrayobj.py:4455)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $12return_value.5 = cast(value=$10call_function.4)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $12return_value.5
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$10call_function.4': [(<numba.core.ir.Assign object at 0x77623fcd1450>,
                                     0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x77623fcd1330>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x77623fcd18d0>,
                                  0)],
             '$8load_deref.3': [(<numba.core.ir.Assign object at 0x77623fcd1630>,
                                 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x77623fcd1750>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x77623fcd0940>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x77623fcd11b0>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4330)
           2	LOAD_FAST(arg=0, lineno=4333)
           4	LOAD_METHOD(arg=0, lineno=4333)
           6	LOAD_FAST(arg=1, lineno=4333)
           8	LOAD_FAST(arg=2, lineno=4333)
          10	CALL_METHOD(arg=2, lineno=4333)
          12	RETURN_VALUE(arg=None, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4330)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_METHOD(arg=0, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$arrtype2.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_method.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_method.1', '$size6.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=CALL_METHOD(arg=2, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_method.1', '$size6.2', '$align8.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$10call_method.4']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$arrtype2.0'}), (4, {'item': '$arrtype2.0', 'res': '$4load_method.1'}), (6, {'res': '$size6.2'}), (8, {'res': '$align8.3'}), (10, {'func': '$4load_method.1', 'args': ['$size6.2', '$align8.3'], 'res': '$10call_method.4'}), (12, {'retval': '$10call_method.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    arrtype = arg(0, name=arrtype)           ['arrtype']
    size = arg(1, name=size)                 ['size']
    align = arg(2, name=align)               ['align']
    $4load_method.1 = getattr(value=arrtype, attr=_allocate) ['$4load_method.1', 'arrtype']
    $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:4330), Var(align, arrayobj.py:4330)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', 'align', 'size']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x77623fc96350>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: arrtype = arg(0, name=arrtype)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: size = arg(1, name=size)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: align = arg(2, name=align)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $4load_method.1 = getattr(value=arrtype, attr=_allocate)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:4330), Var(align, arrayobj.py:4330)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $12return_value.5 = cast(value=$10call_method.4)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $12return_value.5
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$10call_method.4': [(<numba.core.ir.Assign object at 0x77623fbc0ca0>,
                                   0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x77623fbc0d90>,
                                    0)],
             '$4load_method.1': [(<numba.core.ir.Assign object at 0x77623fbc0850>,
                                  0)],
             'align': [(<numba.core.ir.Assign object at 0x77623fbc05b0>, 0)],
             'arrtype': [(<numba.core.ir.Assign object at 0x77623fba7640>, 0)],
             'size': [(<numba.core.ir.Assign object at 0x77623fbc0490>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x77623fc96350>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4325)
           2	LOAD_GLOBAL(arg=0, lineno=4326)
           4	LOAD_FAST(arg=1, lineno=4326)
           6	LOAD_FAST(arg=2, lineno=4326)
           8	CALL_FUNCTION(arg=2, lineno=4326)
          10	RETURN_VALUE(arg=None, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4325)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=LOAD_FAST(arg=2, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$allocsize4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$allocsize4.1', '$align6.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=RETURN_VALUE(arg=None, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$8call_function.3']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$allocsize4.1'}), (6, {'res': '$align6.2'}), (8, {'func': '$2load_global.0', 'args': ['$allocsize4.1', '$align6.2'], 'res': '$8call_function.3'}), (10, {'retval': '$8call_function.3', 'castval': '$10return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    cls = arg(0, name=cls)                   ['cls']
    allocsize = arg(1, name=allocsize)       ['allocsize']
    align = arg(2, name=align)               ['align']
    $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:4325), Var(align, arrayobj.py:4325)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'align', 'allocsize']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x77623fbc1a80>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: cls = arg(0, name=cls)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: allocsize = arg(1, name=allocsize)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: align = arg(2, name=align)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:4325), Var(align, arrayobj.py:4325)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $10return_value.4 = cast(value=$8call_function.3)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $10return_value.4
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$10return_value.4': [(<numba.core.ir.Assign object at 0x77623fbc2e60>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x77623fbc2920>,
                                  0)],
             '$8call_function.3': [(<numba.core.ir.Assign object at 0x77623fbc2d40>,
                                    0)],
             'align': [(<numba.core.ir.Assign object at 0x77623fbc27a0>, 0)],
             'allocsize': [(<numba.core.ir.Assign object at 0x77623fbc2680>,
                            0)],
             'cls': [(<numba.core.ir.Assign object at 0x77623fbc2560>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x77623fbc1a80>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4513)
           2	LOAD_GLOBAL(arg=0, lineno=4514)
           4	LOAD_FAST(arg=0, lineno=4514)
           6	CALL_FUNCTION(arg=1, lineno=4514)
           8	POP_TOP(arg=None, lineno=4514)
          10	LOAD_CONST(arg=0, lineno=4514)
          12	RETURN_VALUE(arg=None, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4513)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$self4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=POP_TOP(arg=None, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$6call_function.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=LOAD_CONST(arg=0, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$const10.3.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$self4.1'}), (6, {'func': '$2load_global.0', 'args': ['$self4.1'], 'res': '$6call_function.2'}), (10, {'res': '$const10.3.0'}), (12, {'retval': '$const10.3.0', 'castval': '$12return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    self = arg(0, name=self)                 ['self']
    $2load_global.0 = global(_zero_fill_array_method: <intrinsic _zero_fill_array_method>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(self, func=$2load_global.0, args=[Var(self, arrayobj.py:4513)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'self']
    $const10.3.0 = const(NoneType, None)     ['$const10.3.0']
    $12return_value.4 = cast(value=$const10.3.0) ['$12return_value.4', '$const10.3.0']
    return $12return_value.4                 ['$12return_value.4']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x77623fa725c0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: self = arg(0, name=self)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(_zero_fill_array_method: <intrinsic _zero_fill_array_method>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $6call_function.2 = call $2load_global.0(self, func=$2load_global.0, args=[Var(self, arrayobj.py:4513)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const10.3.0 = const(NoneType, None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $12return_value.4 = cast(value=$const10.3.0)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $12return_value.4
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$12return_value.4': [(<numba.core.ir.Assign object at 0x77623fa72a40>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x77623fa71cf0>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x77623fa71e40>,
                                    0)],
             '$const10.3.0': [(<numba.core.ir.Assign object at 0x77623fa728c0>,
                               0)],
             'self': [(<numba.core.ir.Assign object at 0x77623fa71b40>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x77623fa725c0>
yfinance - [DEBUG]{MainThread} - wrapper() - Entering history()
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NQ=F', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -  Entering _fetch_ticker_tz()
yfinance - [DEBUG]{MainThread} - wrapper() -   Entering get()
yfinance - [DEBUG]{MainThread} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{MainThread} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/NQ=F
yfinance - [DEBUG]{MainThread} - _make_request() - params=frozendict.frozendict({'range': '1d', 'interval': '1d'})
yfinance - [DEBUG]{MainThread} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{MainThread} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - _get_crumb_basic() - reusing crumb
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _make_request() - response code=200
yfinance - [DEBUG]{MainThread} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{MainThread} - wrapper() -   Exiting get()
yfinance - [DEBUG]{MainThread} - wrapper() -  Exiting _fetch_ticker_tz()
peewee - [DEBUG]{MainThread} - execute_sql() - ('BEGIN', None)
peewee - [DEBUG]{MainThread} - execute_sql() - ('INSERT INTO "_tz_kv" ("key", "value") VALUES (?, ?)', ['NQ=F', 'America/New_York'])
yfinance - [DEBUG]{MainThread} - wrapper() -  Entering history()
yfinance - [DEBUG]{MainThread} - history() - NQ=F: Yahoo GET parameters: {'range': '60d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -   Entering get()
yfinance - [DEBUG]{MainThread} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{MainThread} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/NQ=F
yfinance - [DEBUG]{MainThread} - _make_request() - params={'range': '60d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{MainThread} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - _get_crumb_basic() - reusing crumb
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _make_request() - response code=200
yfinance - [DEBUG]{MainThread} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{MainThread} - wrapper() -   Exiting get()
yfinance - [DEBUG]{MainThread} - history() - NQ=F: yfinance received OHLC data: 2025-04-22 04:00:00 -> 2025-06-30 06:11:06
yfinance - [DEBUG]{MainThread} - history() - NQ=F: OHLC after cleaning: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:11:06-04:00
yfinance - [DEBUG]{MainThread} - history() - NQ=F: OHLC after combining events: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:11:06-04:00
yfinance - [DEBUG]{MainThread} - history() - NQ=F: yfinance returning OHLC: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:00:00-04:00
yfinance - [DEBUG]{MainThread} - wrapper() -  Exiting history()
yfinance - [DEBUG]{MainThread} - wrapper() - Exiting history()
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
yfinance - [DEBUG]{MainThread} - wrapper() - Entering history()
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PYPL', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -  Entering _fetch_ticker_tz()
yfinance - [DEBUG]{MainThread} - wrapper() -   Entering get()
yfinance - [DEBUG]{MainThread} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{MainThread} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/PYPL
yfinance - [DEBUG]{MainThread} - _make_request() - params=frozendict.frozendict({'range': '1d', 'interval': '1d'})
yfinance - [DEBUG]{MainThread} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{MainThread} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - _get_crumb_basic() - reusing crumb
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _make_request() - response code=200
yfinance - [DEBUG]{MainThread} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{MainThread} - wrapper() -   Exiting get()
yfinance - [DEBUG]{MainThread} - wrapper() -  Exiting _fetch_ticker_tz()
peewee - [DEBUG]{MainThread} - execute_sql() - ('BEGIN', None)
peewee - [DEBUG]{MainThread} - execute_sql() - ('INSERT INTO "_tz_kv" ("key", "value") VALUES (?, ?)', ['PYPL', 'America/New_York'])
yfinance - [DEBUG]{MainThread} - wrapper() -  Entering history()
yfinance - [DEBUG]{MainThread} - history() - PYPL: Yahoo GET parameters: {'range': '60d', 'interval': '15m', 'includePrePost': True, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -   Entering get()
yfinance - [DEBUG]{MainThread} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{MainThread} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/PYPL
yfinance - [DEBUG]{MainThread} - _make_request() - params={'range': '60d', 'interval': '15m', 'includePrePost': True, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{MainThread} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - _get_crumb_basic() - reusing crumb
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _make_request() - response code=200
yfinance - [DEBUG]{MainThread} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{MainThread} - wrapper() -   Exiting get()
yfinance - [DEBUG]{MainThread} - history() - PYPL: yfinance received OHLC data: 2025-04-02 08:00:00 -> 2025-06-27 23:59:55
yfinance - [DEBUG]{MainThread} - history() - PYPL: OHLC after cleaning: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:59:55-04:00
yfinance - [DEBUG]{MainThread} - history() - PYPL: OHLC after combining events: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:59:55-04:00
yfinance - [DEBUG]{MainThread} - history() - PYPL: yfinance returning OHLC: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:45:00-04:00
yfinance - [DEBUG]{MainThread} - wrapper() -  Exiting history()
yfinance - [DEBUG]{MainThread} - wrapper() - Exiting history()
root - [INFO]{MainThread} - get_buy_sell_points_Roll() - Parameters of acquisition "buy_sell_points" for this stock is set to POSITIVE (units) 	92%: 0.82 	98%: 1.582 NEGATIVE (units) 	93%: 0.7994 	98%: 1.3015
yfinance - [DEBUG]{MainThread} - wrapper() - Entering history()
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NQ=F', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -  Entering history()
yfinance - [DEBUG]{MainThread} - history() - NQ=F: Yahoo GET parameters: {'range': '60d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -   Entering get()
yfinance - [DEBUG]{MainThread} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{MainThread} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/NQ=F
yfinance - [DEBUG]{MainThread} - _make_request() - params={'range': '60d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{MainThread} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - _get_crumb_basic() - reusing crumb
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _make_request() - response code=200
yfinance - [DEBUG]{MainThread} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{MainThread} - wrapper() -   Exiting get()
yfinance - [DEBUG]{MainThread} - history() - NQ=F: yfinance received OHLC data: 2025-04-22 04:00:00 -> 2025-06-30 06:12:01
yfinance - [DEBUG]{MainThread} - history() - NQ=F: OHLC after cleaning: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:12:01-04:00
yfinance - [DEBUG]{MainThread} - history() - NQ=F: OHLC after combining events: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:12:01-04:00
yfinance - [DEBUG]{MainThread} - history() - NQ=F: yfinance returning OHLC: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:00:00-04:00
yfinance - [DEBUG]{MainThread} - wrapper() -  Exiting history()
yfinance - [DEBUG]{MainThread} - wrapper() - Exiting history()
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
h5py._conv - [DEBUG]{MainThread} - <module>() - Creating converter from 7 to 5
h5py._conv - [DEBUG]{MainThread} - <module>() - Creating converter from 5 to 7
h5py._conv - [DEBUG]{MainThread} - <module>() - Creating converter from 7 to 5
h5py._conv - [DEBUG]{MainThread} - <module>() - Creating converter from 5 to 7
matplotlib - [DEBUG]{MainThread} - wrapper() - matplotlib data path: /opt/conda/lib/python3.10/site-packages/matplotlib/mpl-data
matplotlib - [DEBUG]{MainThread} - wrapper() - CONFIGDIR=/root/.config/matplotlib
matplotlib - [DEBUG]{MainThread} - <module>() - interactive is False
matplotlib - [DEBUG]{MainThread} - <module>() - platform is linux
matplotlib - [DEBUG]{MainThread} - wrapper() - CACHEDIR=/root/.cache/matplotlib
matplotlib.font_manager - [DEBUG]{MainThread} - _load_fontmanager() - Using fontManager instance from /root/.cache/matplotlib/fontlist-v390.json
yfinance - [DEBUG]{MainThread} - wrapper() - Entering history()
peewee - [DEBUG]{MainThread} - execute_sql() - ('CREATE TABLE IF NOT EXISTS "_tz_kv" ("key" VARCHAR(255) NOT NULL PRIMARY KEY, "value" VARCHAR(255)) WITHOUT ROWID', [])
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['UBER', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -  Entering history()
yfinance - [DEBUG]{MainThread} - history() - UBER: Yahoo GET parameters: {'range': '60d', 'interval': '15m', 'includePrePost': True, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -   Entering get()
yfinance - [DEBUG]{MainThread} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{MainThread} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/UBER
yfinance - [DEBUG]{MainThread} - _make_request() - params={'range': '60d', 'interval': '15m', 'includePrePost': True, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{MainThread} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -        Entering _load_cookie_curlCffi()
peewee - [DEBUG]{MainThread} - execute_sql() - ('CREATE TABLE IF NOT EXISTS "_cookieschema" ("strategy" VARCHAR(255) NOT NULL PRIMARY KEY, "fetch_date" DATETIME NOT NULL, "cookie_bytes" BLOB NOT NULL) WITHOUT ROWID', [])
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -        Exiting _load_cookie_curlCffi()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing persistent cookie
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -        Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{MainThread} - wrapper() -        Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_crumb_basic() - crumb = 'dK3IG/1ev6r'
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _make_request() - response code=200
yfinance - [DEBUG]{MainThread} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{MainThread} - wrapper() -   Exiting get()
yfinance - [DEBUG]{MainThread} - history() - UBER: yfinance received OHLC data: 2025-04-02 08:00:00 -> 2025-06-27 23:59:53
yfinance - [DEBUG]{MainThread} - history() - UBER: OHLC after cleaning: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:59:53-04:00
yfinance - [DEBUG]{MainThread} - history() - UBER: OHLC after combining events: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:59:53-04:00
yfinance - [DEBUG]{MainThread} - history() - UBER: yfinance returning OHLC: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:45:00-04:00
yfinance - [DEBUG]{MainThread} - wrapper() -  Exiting history()
yfinance - [DEBUG]{MainThread} - wrapper() - Exiting history()
root - [INFO]{MainThread} - get_buy_sell_points_Roll() - Parameters of acquisition "buy_sell_points" for this stock is set to POSITIVE (units) 	92%: 1.123 	98%: 1.8743 NEGATIVE (units) 	93%: 1.252 	98%: 1.9188
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=99)
           2	LOAD_GLOBAL(arg=0, lineno=106)
           4	LOAD_FAST(arg=0, lineno=106)
           6	CALL_FUNCTION(arg=1, lineno=106)
           8	STORE_FAST(arg=4, lineno=106)
          10	LOAD_GLOBAL(arg=1, lineno=107)
          12	LOAD_METHOD(arg=2, lineno=107)
          14	LOAD_FAST(arg=4, lineno=107)
          16	CALL_METHOD(arg=1, lineno=107)
          18	STORE_FAST(arg=5, lineno=107)
          20	LOAD_GLOBAL(arg=1, lineno=108)
          22	LOAD_METHOD(arg=2, lineno=108)
          24	LOAD_FAST(arg=4, lineno=108)
          26	CALL_METHOD(arg=1, lineno=108)
          28	STORE_FAST(arg=6, lineno=108)
          30	LOAD_GLOBAL(arg=1, lineno=109)
          32	LOAD_METHOD(arg=2, lineno=109)
          34	LOAD_FAST(arg=4, lineno=109)
          36	CALL_METHOD(arg=1, lineno=109)
          38	STORE_FAST(arg=7, lineno=109)
          40	LOAD_GLOBAL(arg=3, lineno=111)
          42	LOAD_FAST(arg=3, lineno=111)
          44	LOAD_FAST(arg=4, lineno=111)
          46	CALL_FUNCTION(arg=2, lineno=111)
          48	GET_ITER(arg=None, lineno=111)
>         50	FOR_ITER(arg=188, lineno=111)
          52	STORE_FAST(arg=8, lineno=111)
          54	LOAD_FAST(arg=1, lineno=113)
          56	LOAD_FAST(arg=8, lineno=113)
          58	BINARY_SUBSCR(arg=None, lineno=113)
          60	LOAD_FAST(arg=5, lineno=113)
          62	LOAD_FAST(arg=8, lineno=113)
          64	LOAD_CONST(arg=1, lineno=113)
          66	BINARY_SUBTRACT(arg=None, lineno=113)
          68	BINARY_SUBSCR(arg=None, lineno=113)
          70	COMPARE_OP(arg=0, lineno=113)
          72	POP_JUMP_IF_TRUE(arg=50, lineno=113)
          74	LOAD_FAST(arg=0, lineno=113)
          76	LOAD_FAST(arg=8, lineno=113)
          78	LOAD_CONST(arg=1, lineno=113)
          80	BINARY_SUBTRACT(arg=None, lineno=113)
          82	BINARY_SUBSCR(arg=None, lineno=113)
          84	LOAD_FAST(arg=5, lineno=113)
          86	LOAD_FAST(arg=8, lineno=113)
          88	LOAD_CONST(arg=1, lineno=113)
          90	BINARY_SUBTRACT(arg=None, lineno=113)
          92	BINARY_SUBSCR(arg=None, lineno=113)
          94	COMPARE_OP(arg=4, lineno=113)
          96	POP_JUMP_IF_FALSE(arg=57, lineno=113)
>         98	LOAD_FAST(arg=1, lineno=114)
         100	LOAD_FAST(arg=8, lineno=114)
         102	BINARY_SUBSCR(arg=None, lineno=114)
         104	LOAD_FAST(arg=5, lineno=114)
         106	LOAD_FAST(arg=8, lineno=114)
         108	STORE_SUBSCR(arg=None, lineno=114)
         110	JUMP_FORWARD(arg=8, lineno=114)
>        112	LOAD_FAST(arg=5, lineno=116)
         114	LOAD_FAST(arg=8, lineno=116)
         116	LOAD_CONST(arg=1, lineno=116)
         118	BINARY_SUBTRACT(arg=None, lineno=116)
         120	BINARY_SUBSCR(arg=None, lineno=116)
         122	LOAD_FAST(arg=5, lineno=116)
         124	LOAD_FAST(arg=8, lineno=116)
         126	STORE_SUBSCR(arg=None, lineno=116)
>        128	LOAD_FAST(arg=2, lineno=118)
         130	LOAD_FAST(arg=8, lineno=118)
         132	BINARY_SUBSCR(arg=None, lineno=118)
         134	LOAD_FAST(arg=6, lineno=118)
         136	LOAD_FAST(arg=8, lineno=118)
         138	LOAD_CONST(arg=1, lineno=118)
         140	BINARY_SUBTRACT(arg=None, lineno=118)
         142	BINARY_SUBSCR(arg=None, lineno=118)
         144	COMPARE_OP(arg=4, lineno=118)
         146	POP_JUMP_IF_TRUE(arg=87, lineno=118)
         148	LOAD_FAST(arg=0, lineno=118)
         150	LOAD_FAST(arg=8, lineno=118)
         152	LOAD_CONST(arg=1, lineno=118)
         154	BINARY_SUBTRACT(arg=None, lineno=118)
         156	BINARY_SUBSCR(arg=None, lineno=118)
         158	LOAD_FAST(arg=6, lineno=118)
         160	LOAD_FAST(arg=8, lineno=118)
         162	LOAD_CONST(arg=1, lineno=118)
         164	BINARY_SUBTRACT(arg=None, lineno=118)
         166	BINARY_SUBSCR(arg=None, lineno=118)
         168	COMPARE_OP(arg=0, lineno=118)
         170	POP_JUMP_IF_FALSE(arg=94, lineno=118)
>        172	LOAD_FAST(arg=2, lineno=119)
         174	LOAD_FAST(arg=8, lineno=119)
         176	BINARY_SUBSCR(arg=None, lineno=119)
         178	LOAD_FAST(arg=6, lineno=119)
         180	LOAD_FAST(arg=8, lineno=119)
         182	STORE_SUBSCR(arg=None, lineno=119)
         184	JUMP_FORWARD(arg=8, lineno=119)
>        186	LOAD_FAST(arg=6, lineno=121)
         188	LOAD_FAST(arg=8, lineno=121)
         190	LOAD_CONST(arg=1, lineno=121)
         192	BINARY_SUBTRACT(arg=None, lineno=121)
         194	BINARY_SUBSCR(arg=None, lineno=121)
         196	LOAD_FAST(arg=6, lineno=121)
         198	LOAD_FAST(arg=8, lineno=121)
         200	STORE_SUBSCR(arg=None, lineno=121)
>        202	LOAD_FAST(arg=7, lineno=123)
         204	LOAD_FAST(arg=8, lineno=123)
         206	LOAD_CONST(arg=1, lineno=123)
         208	BINARY_SUBTRACT(arg=None, lineno=123)
         210	BINARY_SUBSCR(arg=None, lineno=123)
         212	LOAD_FAST(arg=5, lineno=123)
         214	LOAD_FAST(arg=8, lineno=123)
         216	LOAD_CONST(arg=1, lineno=123)
         218	BINARY_SUBTRACT(arg=None, lineno=123)
         220	BINARY_SUBSCR(arg=None, lineno=123)
         222	COMPARE_OP(arg=2, lineno=123)
         224	POP_JUMP_IF_FALSE(arg=129, lineno=123)
         226	LOAD_FAST(arg=0, lineno=123)
         228	LOAD_FAST(arg=8, lineno=123)
         230	BINARY_SUBSCR(arg=None, lineno=123)
         232	LOAD_FAST(arg=5, lineno=123)
         234	LOAD_FAST(arg=8, lineno=123)
         236	BINARY_SUBSCR(arg=None, lineno=123)
         238	COMPARE_OP(arg=1, lineno=123)
         240	POP_JUMP_IF_FALSE(arg=129, lineno=123)
         242	LOAD_FAST(arg=5, lineno=124)
         244	LOAD_FAST(arg=8, lineno=124)
         246	BINARY_SUBSCR(arg=None, lineno=124)
         248	LOAD_FAST(arg=7, lineno=124)
         250	LOAD_FAST(arg=8, lineno=124)
         252	STORE_SUBSCR(arg=None, lineno=124)
         254	JUMP_ABSOLUTE(arg=26, lineno=124)
>        256	LOAD_FAST(arg=7, lineno=125)
         258	LOAD_FAST(arg=8, lineno=125)
         260	LOAD_CONST(arg=1, lineno=125)
         262	BINARY_SUBTRACT(arg=None, lineno=125)
         264	BINARY_SUBSCR(arg=None, lineno=125)
         266	LOAD_FAST(arg=5, lineno=125)
         268	LOAD_FAST(arg=8, lineno=125)
         270	LOAD_CONST(arg=1, lineno=125)
         272	BINARY_SUBTRACT(arg=None, lineno=125)
         274	BINARY_SUBSCR(arg=None, lineno=125)
         276	COMPARE_OP(arg=2, lineno=125)
         278	POP_JUMP_IF_FALSE(arg=156, lineno=125)
         280	LOAD_FAST(arg=0, lineno=125)
         282	LOAD_FAST(arg=8, lineno=125)
         284	BINARY_SUBSCR(arg=None, lineno=125)
         286	LOAD_FAST(arg=5, lineno=125)
         288	LOAD_FAST(arg=8, lineno=125)
         290	BINARY_SUBSCR(arg=None, lineno=125)
         292	COMPARE_OP(arg=4, lineno=125)
         294	POP_JUMP_IF_FALSE(arg=156, lineno=125)
         296	LOAD_FAST(arg=6, lineno=126)
         298	LOAD_FAST(arg=8, lineno=126)
         300	BINARY_SUBSCR(arg=None, lineno=126)
         302	LOAD_FAST(arg=7, lineno=126)
         304	LOAD_FAST(arg=8, lineno=126)
         306	STORE_SUBSCR(arg=None, lineno=126)
         308	JUMP_ABSOLUTE(arg=26, lineno=126)
>        310	LOAD_FAST(arg=7, lineno=127)
         312	LOAD_FAST(arg=8, lineno=127)
         314	LOAD_CONST(arg=1, lineno=127)
         316	BINARY_SUBTRACT(arg=None, lineno=127)
         318	BINARY_SUBSCR(arg=None, lineno=127)
         320	LOAD_FAST(arg=6, lineno=127)
         322	LOAD_FAST(arg=8, lineno=127)
         324	LOAD_CONST(arg=1, lineno=127)
         326	BINARY_SUBTRACT(arg=None, lineno=127)
         328	BINARY_SUBSCR(arg=None, lineno=127)
         330	COMPARE_OP(arg=2, lineno=127)
         332	POP_JUMP_IF_FALSE(arg=183, lineno=127)
         334	LOAD_FAST(arg=0, lineno=127)
         336	LOAD_FAST(arg=8, lineno=127)
         338	BINARY_SUBSCR(arg=None, lineno=127)
         340	LOAD_FAST(arg=6, lineno=127)
         342	LOAD_FAST(arg=8, lineno=127)
         344	BINARY_SUBSCR(arg=None, lineno=127)
         346	COMPARE_OP(arg=5, lineno=127)
         348	POP_JUMP_IF_FALSE(arg=183, lineno=127)
         350	LOAD_FAST(arg=6, lineno=128)
         352	LOAD_FAST(arg=8, lineno=128)
         354	BINARY_SUBSCR(arg=None, lineno=128)
         356	LOAD_FAST(arg=7, lineno=128)
         358	LOAD_FAST(arg=8, lineno=128)
         360	STORE_SUBSCR(arg=None, lineno=128)
         362	JUMP_ABSOLUTE(arg=26, lineno=128)
>        364	LOAD_FAST(arg=7, lineno=129)
         366	LOAD_FAST(arg=8, lineno=129)
         368	LOAD_CONST(arg=1, lineno=129)
         370	BINARY_SUBTRACT(arg=None, lineno=129)
         372	BINARY_SUBSCR(arg=None, lineno=129)
         374	LOAD_FAST(arg=6, lineno=129)
         376	LOAD_FAST(arg=8, lineno=129)
         378	LOAD_CONST(arg=1, lineno=129)
         380	BINARY_SUBTRACT(arg=None, lineno=129)
         382	BINARY_SUBSCR(arg=None, lineno=129)
         384	COMPARE_OP(arg=2, lineno=129)
         386	POP_JUMP_IF_FALSE(arg=210, lineno=129)
         388	LOAD_FAST(arg=0, lineno=129)
         390	LOAD_FAST(arg=8, lineno=129)
         392	BINARY_SUBSCR(arg=None, lineno=129)
         394	LOAD_FAST(arg=6, lineno=129)
         396	LOAD_FAST(arg=8, lineno=129)
         398	BINARY_SUBSCR(arg=None, lineno=129)
         400	COMPARE_OP(arg=0, lineno=129)
         402	POP_JUMP_IF_FALSE(arg=210, lineno=129)
         404	LOAD_FAST(arg=5, lineno=130)
         406	LOAD_FAST(arg=8, lineno=130)
         408	BINARY_SUBSCR(arg=None, lineno=130)
         410	LOAD_FAST(arg=7, lineno=130)
         412	LOAD_FAST(arg=8, lineno=130)
         414	STORE_SUBSCR(arg=None, lineno=130)
         416	JUMP_ABSOLUTE(arg=26, lineno=130)
>        418	LOAD_CONST(arg=2, lineno=132)
         420	LOAD_FAST(arg=7, lineno=132)
         422	LOAD_FAST(arg=8, lineno=132)
         424	STORE_SUBSCR(arg=None, lineno=132)
         426	JUMP_ABSOLUTE(arg=26, lineno=132)
>        428	LOAD_FAST(arg=7, lineno=134)
         430	RETURN_VALUE(arg=None, lineno=134)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=99)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=106)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=106)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=106)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$close4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=STORE_FAST(arg=4, lineno=106)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$6call_function.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=LOAD_METHOD(arg=2, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$10load_global.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=14, inst=LOAD_FAST(arg=4, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$12load_method.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=16, inst=CALL_METHOD(arg=1, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$12load_method.4', '$length14.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=18, inst=STORE_FAST(arg=5, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$16call_method.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=20, inst=LOAD_GLOBAL(arg=1, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=22, inst=LOAD_METHOD(arg=2, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$20load_global.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=24, inst=LOAD_FAST(arg=4, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$22load_method.8']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=26, inst=CALL_METHOD(arg=1, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$22load_method.8', '$length24.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=28, inst=STORE_FAST(arg=6, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$26call_method.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=30, inst=LOAD_GLOBAL(arg=1, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=32, inst=LOAD_METHOD(arg=2, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$30load_global.11']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=34, inst=LOAD_FAST(arg=4, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$32load_method.12']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=36, inst=CALL_METHOD(arg=1, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$32load_method.12', '$length34.13']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=38, inst=STORE_FAST(arg=7, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$36call_method.14']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=40, inst=LOAD_GLOBAL(arg=3, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=42, inst=LOAD_FAST(arg=3, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$40load_global.15']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=44, inst=LOAD_FAST(arg=4, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$40load_global.15', '$n42.16']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=46, inst=CALL_FUNCTION(arg=2, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$40load_global.15', '$n42.16', '$length44.17']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=48, inst=GET_ITER(arg=None, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$46call_function.18']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$48get_iter.19',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi50.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=50 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=50, inst=FOR_ITER(arg=188, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi50.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=428, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=('$phi50.0', '$50for_iter.2'), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=428 nstack_initial=0), State(pc_initial=52 nstack_initial=2)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=428 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=428, inst=LOAD_FAST(arg=7, lineno=134)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=430, inst=RETURN_VALUE(arg=None, lineno=134)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$supertrend428.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=52 nstack_initial=2)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi52.0', '$phi52.1']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=52 nstack_initial=2)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=52, inst=STORE_FAST(arg=8, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$phi52.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=54, inst=LOAD_FAST(arg=1, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=56, inst=LOAD_FAST(arg=8, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$basic_ub54.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=58, inst=BINARY_SUBSCR(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$basic_ub54.2', '$i56.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=60, inst=LOAD_FAST(arg=5, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=62, inst=LOAD_FAST(arg=8, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$final_ub60.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$final_ub60.5', '$i62.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=66, inst=BINARY_SUBTRACT(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$final_ub60.5', '$i62.6', '$const64.7.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=68, inst=BINARY_SUBSCR(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$final_ub60.5', '$66binary_subtract.8']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=70, inst=COMPARE_OP(arg=0, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$68binary_subscr.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=72, inst=POP_JUMP_IF_TRUE(arg=50, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$70compare_op.10']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=74, stack=('$phi52.0',), blockstack=(), npush=0), Edge(pc=98, stack=('$phi52.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=74 nstack_initial=1), State(pc_initial=98 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi74.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=74 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=74, inst=LOAD_FAST(arg=0, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=76, inst=LOAD_FAST(arg=8, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$close74.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$close74.1', '$i76.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=80, inst=BINARY_SUBTRACT(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$close74.1', '$i76.2', '$const78.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$close74.1', '$80binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=84, inst=LOAD_FAST(arg=5, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=86, inst=LOAD_FAST(arg=8, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$final_ub84.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=88, inst=LOAD_CONST(arg=1, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$final_ub84.6', '$i86.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=90, inst=BINARY_SUBTRACT(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$final_ub84.6', '$i86.7', '$const88.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=92, inst=BINARY_SUBSCR(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$final_ub84.6', '$90binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=94, inst=COMPARE_OP(arg=4, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$92binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=96, inst=POP_JUMP_IF_FALSE(arg=57, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$94compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=98, stack=('$phi74.0',), blockstack=(), npush=0), Edge(pc=112, stack=('$phi74.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=98 nstack_initial=1), State(pc_initial=98 nstack_initial=1), State(pc_initial=112 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi98.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=98 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=98, inst=LOAD_FAST(arg=1, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=100, inst=LOAD_FAST(arg=8, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$basic_ub98.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=102, inst=BINARY_SUBSCR(arg=None, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$basic_ub98.1', '$i100.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=104, inst=LOAD_FAST(arg=5, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$102binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=106, inst=LOAD_FAST(arg=8, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$102binary_subscr.3', '$final_ub104.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=108, inst=STORE_SUBSCR(arg=None, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$102binary_subscr.3', '$final_ub104.4', '$i106.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=110, inst=JUMP_FORWARD(arg=8, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=128, stack=('$phi98.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=98 nstack_initial=1), State(pc_initial=112 nstack_initial=1), State(pc_initial=128 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=112 nstack_initial=1), State(pc_initial=128 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi112.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=112 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=112, inst=LOAD_FAST(arg=5, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=114, inst=LOAD_FAST(arg=8, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$final_ub112.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=116, inst=LOAD_CONST(arg=1, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$final_ub112.1', '$i114.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=118, inst=BINARY_SUBTRACT(arg=None, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$final_ub112.1', '$i114.2', '$const116.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=120, inst=BINARY_SUBSCR(arg=None, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$final_ub112.1', '$118binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=122, inst=LOAD_FAST(arg=5, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$120binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=124, inst=LOAD_FAST(arg=8, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$120binary_subscr.5', '$final_ub122.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=126, inst=STORE_SUBSCR(arg=None, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$120binary_subscr.5', '$final_ub122.6', '$i124.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=128, stack=('$phi112.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=128 nstack_initial=1), State(pc_initial=128 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi128.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=128 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=128, inst=LOAD_FAST(arg=2, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=130, inst=LOAD_FAST(arg=8, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$basic_lb128.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=132, inst=BINARY_SUBSCR(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$basic_lb128.1', '$i130.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=134, inst=LOAD_FAST(arg=6, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=136, inst=LOAD_FAST(arg=8, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$final_lb134.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=138, inst=LOAD_CONST(arg=1, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$final_lb134.4', '$i136.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=140, inst=BINARY_SUBTRACT(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$final_lb134.4', '$i136.5', '$const138.6.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=142, inst=BINARY_SUBSCR(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$final_lb134.4', '$140binary_subtract.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=144, inst=COMPARE_OP(arg=4, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$142binary_subscr.8']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=146, inst=POP_JUMP_IF_TRUE(arg=87, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$144compare_op.9']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=148, stack=('$phi128.0',), blockstack=(), npush=0), Edge(pc=172, stack=('$phi128.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=128 nstack_initial=1), State(pc_initial=148 nstack_initial=1), State(pc_initial=172 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=148 nstack_initial=1), State(pc_initial=172 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi148.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=148 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=150, inst=LOAD_FAST(arg=8, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$close148.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=152, inst=LOAD_CONST(arg=1, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$close148.1', '$i150.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=154, inst=BINARY_SUBTRACT(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$close148.1', '$i150.2', '$const152.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=156, inst=BINARY_SUBSCR(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$close148.1', '$154binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=158, inst=LOAD_FAST(arg=6, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=160, inst=LOAD_FAST(arg=8, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$final_lb158.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=162, inst=LOAD_CONST(arg=1, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$final_lb158.6', '$i160.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=164, inst=BINARY_SUBTRACT(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$final_lb158.6', '$i160.7', '$const162.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=166, inst=BINARY_SUBSCR(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$final_lb158.6', '$164binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=168, inst=COMPARE_OP(arg=0, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$166binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=170, inst=POP_JUMP_IF_FALSE(arg=94, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$168compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=172, stack=('$phi148.0',), blockstack=(), npush=0), Edge(pc=186, stack=('$phi148.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=172 nstack_initial=1), State(pc_initial=172 nstack_initial=1), State(pc_initial=186 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi172.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=172 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=172, inst=LOAD_FAST(arg=2, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=174, inst=LOAD_FAST(arg=8, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$basic_lb172.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=176, inst=BINARY_SUBSCR(arg=None, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$basic_lb172.1', '$i174.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=178, inst=LOAD_FAST(arg=6, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$176binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=180, inst=LOAD_FAST(arg=8, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$176binary_subscr.3', '$final_lb178.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=182, inst=STORE_SUBSCR(arg=None, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$176binary_subscr.3', '$final_lb178.4', '$i180.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=184, inst=JUMP_FORWARD(arg=8, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=202, stack=('$phi172.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=172 nstack_initial=1), State(pc_initial=186 nstack_initial=1), State(pc_initial=202 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=186 nstack_initial=1), State(pc_initial=202 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi186.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=186 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=186, inst=LOAD_FAST(arg=6, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=188, inst=LOAD_FAST(arg=8, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$final_lb186.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=190, inst=LOAD_CONST(arg=1, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$final_lb186.1', '$i188.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=192, inst=BINARY_SUBTRACT(arg=None, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$final_lb186.1', '$i188.2', '$const190.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=194, inst=BINARY_SUBSCR(arg=None, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$final_lb186.1', '$192binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=196, inst=LOAD_FAST(arg=6, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$194binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=198, inst=LOAD_FAST(arg=8, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$194binary_subscr.5', '$final_lb196.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=200, inst=STORE_SUBSCR(arg=None, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$194binary_subscr.5', '$final_lb196.6', '$i198.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=202, stack=('$phi186.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=202 nstack_initial=1), State(pc_initial=202 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi202.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=202 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=202, inst=LOAD_FAST(arg=7, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=204, inst=LOAD_FAST(arg=8, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$supertrend202.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=206, inst=LOAD_CONST(arg=1, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$supertrend202.1', '$i204.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=208, inst=BINARY_SUBTRACT(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$supertrend202.1', '$i204.2', '$const206.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=210, inst=BINARY_SUBSCR(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$supertrend202.1', '$208binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=212, inst=LOAD_FAST(arg=5, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=214, inst=LOAD_FAST(arg=8, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$final_ub212.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=216, inst=LOAD_CONST(arg=1, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$final_ub212.6', '$i214.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=218, inst=BINARY_SUBTRACT(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$final_ub212.6', '$i214.7', '$const216.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=220, inst=BINARY_SUBSCR(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$final_ub212.6', '$218binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=222, inst=COMPARE_OP(arg=2, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$220binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=224, inst=POP_JUMP_IF_FALSE(arg=129, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$222compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=226, stack=('$phi202.0',), blockstack=(), npush=0), Edge(pc=256, stack=('$phi202.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=202 nstack_initial=1), State(pc_initial=226 nstack_initial=1), State(pc_initial=256 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=226 nstack_initial=1), State(pc_initial=256 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi226.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=226 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=226, inst=LOAD_FAST(arg=0, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=228, inst=LOAD_FAST(arg=8, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$close226.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=230, inst=BINARY_SUBSCR(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$close226.1', '$i228.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=232, inst=LOAD_FAST(arg=5, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$230binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=234, inst=LOAD_FAST(arg=8, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$230binary_subscr.3', '$final_ub232.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=236, inst=BINARY_SUBSCR(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$230binary_subscr.3', '$final_ub232.4', '$i234.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=238, inst=COMPARE_OP(arg=1, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$230binary_subscr.3', '$236binary_subscr.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=240, inst=POP_JUMP_IF_FALSE(arg=129, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$238compare_op.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=242, stack=('$phi226.0',), blockstack=(), npush=0), Edge(pc=256, stack=('$phi226.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=256 nstack_initial=1), State(pc_initial=242 nstack_initial=1), State(pc_initial=256 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi256.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=256 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=256, inst=LOAD_FAST(arg=7, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=258, inst=LOAD_FAST(arg=8, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$supertrend256.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=260, inst=LOAD_CONST(arg=1, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$supertrend256.1', '$i258.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=262, inst=BINARY_SUBTRACT(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$supertrend256.1', '$i258.2', '$const260.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=264, inst=BINARY_SUBSCR(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$supertrend256.1', '$262binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=266, inst=LOAD_FAST(arg=5, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=268, inst=LOAD_FAST(arg=8, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$final_ub266.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=270, inst=LOAD_CONST(arg=1, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$final_ub266.6', '$i268.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=272, inst=BINARY_SUBTRACT(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$final_ub266.6', '$i268.7', '$const270.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=274, inst=BINARY_SUBSCR(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$final_ub266.6', '$272binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=276, inst=COMPARE_OP(arg=2, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$274binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=278, inst=POP_JUMP_IF_FALSE(arg=156, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$276compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=280, stack=('$phi256.0',), blockstack=(), npush=0), Edge(pc=310, stack=('$phi256.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=242 nstack_initial=1), State(pc_initial=256 nstack_initial=1), State(pc_initial=280 nstack_initial=1), State(pc_initial=310 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi242.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=242 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=242, inst=LOAD_FAST(arg=5, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=244, inst=LOAD_FAST(arg=8, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$final_ub242.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=246, inst=BINARY_SUBSCR(arg=None, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$final_ub242.1', '$i244.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=248, inst=LOAD_FAST(arg=7, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$246binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=250, inst=LOAD_FAST(arg=8, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$246binary_subscr.3', '$supertrend248.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=252, inst=STORE_SUBSCR(arg=None, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$246binary_subscr.3', '$supertrend248.4', '$i250.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=254, inst=JUMP_ABSOLUTE(arg=26, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi242.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=256 nstack_initial=1), State(pc_initial=280 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=280 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi280.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=280 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=280, inst=LOAD_FAST(arg=0, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=282, inst=LOAD_FAST(arg=8, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$close280.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=284, inst=BINARY_SUBSCR(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$close280.1', '$i282.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=286, inst=LOAD_FAST(arg=5, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$284binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=288, inst=LOAD_FAST(arg=8, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$284binary_subscr.3', '$final_ub286.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=290, inst=BINARY_SUBSCR(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$284binary_subscr.3', '$final_ub286.4', '$i288.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=292, inst=COMPARE_OP(arg=4, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$284binary_subscr.3', '$290binary_subscr.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=294, inst=POP_JUMP_IF_FALSE(arg=156, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$292compare_op.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=296, stack=('$phi280.0',), blockstack=(), npush=0), Edge(pc=310, stack=('$phi280.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=310 nstack_initial=1), State(pc_initial=50 nstack_initial=1), State(pc_initial=296 nstack_initial=1), State(pc_initial=310 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi310.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=310 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=310, inst=LOAD_FAST(arg=7, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=312, inst=LOAD_FAST(arg=8, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$supertrend310.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=314, inst=LOAD_CONST(arg=1, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$supertrend310.1', '$i312.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=316, inst=BINARY_SUBTRACT(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$supertrend310.1', '$i312.2', '$const314.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=318, inst=BINARY_SUBSCR(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$supertrend310.1', '$316binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=320, inst=LOAD_FAST(arg=6, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=322, inst=LOAD_FAST(arg=8, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$final_lb320.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=324, inst=LOAD_CONST(arg=1, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$final_lb320.6', '$i322.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=326, inst=BINARY_SUBTRACT(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$final_lb320.6', '$i322.7', '$const324.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=328, inst=BINARY_SUBSCR(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$final_lb320.6', '$326binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=330, inst=COMPARE_OP(arg=2, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$328binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=332, inst=POP_JUMP_IF_FALSE(arg=183, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$330compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=334, stack=('$phi310.0',), blockstack=(), npush=0), Edge(pc=364, stack=('$phi310.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=296 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=334 nstack_initial=1), State(pc_initial=364 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=296 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=334 nstack_initial=1), State(pc_initial=364 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi296.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=296 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=296, inst=LOAD_FAST(arg=6, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=298, inst=LOAD_FAST(arg=8, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$final_lb296.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=300, inst=BINARY_SUBSCR(arg=None, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$final_lb296.1', '$i298.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=302, inst=LOAD_FAST(arg=7, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$300binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=304, inst=LOAD_FAST(arg=8, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$300binary_subscr.3', '$supertrend302.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=306, inst=STORE_SUBSCR(arg=None, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$300binary_subscr.3', '$supertrend302.4', '$i304.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=308, inst=JUMP_ABSOLUTE(arg=26, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi296.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=310 nstack_initial=1), State(pc_initial=334 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=334 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi334.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=334 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=334, inst=LOAD_FAST(arg=0, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=336, inst=LOAD_FAST(arg=8, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$close334.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=338, inst=BINARY_SUBSCR(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$close334.1', '$i336.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=340, inst=LOAD_FAST(arg=6, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$338binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=342, inst=LOAD_FAST(arg=8, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$338binary_subscr.3', '$final_lb340.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=344, inst=BINARY_SUBSCR(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$338binary_subscr.3', '$final_lb340.4', '$i342.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=346, inst=COMPARE_OP(arg=5, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$338binary_subscr.3', '$344binary_subscr.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=348, inst=POP_JUMP_IF_FALSE(arg=183, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$346compare_op.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=350, stack=('$phi334.0',), blockstack=(), npush=0), Edge(pc=364, stack=('$phi334.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=364 nstack_initial=1), State(pc_initial=50 nstack_initial=1), State(pc_initial=350 nstack_initial=1), State(pc_initial=364 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi364.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=364 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=364, inst=LOAD_FAST(arg=7, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=366, inst=LOAD_FAST(arg=8, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$supertrend364.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=368, inst=LOAD_CONST(arg=1, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$supertrend364.1', '$i366.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=370, inst=BINARY_SUBTRACT(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$supertrend364.1', '$i366.2', '$const368.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=372, inst=BINARY_SUBSCR(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$supertrend364.1', '$370binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=374, inst=LOAD_FAST(arg=6, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=376, inst=LOAD_FAST(arg=8, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$final_lb374.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=378, inst=LOAD_CONST(arg=1, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$final_lb374.6', '$i376.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=380, inst=BINARY_SUBTRACT(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$final_lb374.6', '$i376.7', '$const378.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=382, inst=BINARY_SUBSCR(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$final_lb374.6', '$380binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=384, inst=COMPARE_OP(arg=2, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$382binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=386, inst=POP_JUMP_IF_FALSE(arg=210, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$384compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=388, stack=('$phi364.0',), blockstack=(), npush=0), Edge(pc=418, stack=('$phi364.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=350 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=388 nstack_initial=1), State(pc_initial=418 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=350 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=388 nstack_initial=1), State(pc_initial=418 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi350.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=350 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=350, inst=LOAD_FAST(arg=6, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=352, inst=LOAD_FAST(arg=8, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$final_lb350.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=354, inst=BINARY_SUBSCR(arg=None, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$final_lb350.1', '$i352.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=356, inst=LOAD_FAST(arg=7, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$354binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=358, inst=LOAD_FAST(arg=8, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$354binary_subscr.3', '$supertrend356.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=360, inst=STORE_SUBSCR(arg=None, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$354binary_subscr.3', '$supertrend356.4', '$i358.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=362, inst=JUMP_ABSOLUTE(arg=26, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi350.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=364 nstack_initial=1), State(pc_initial=388 nstack_initial=1), State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=388 nstack_initial=1), State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi388.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=388 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=388, inst=LOAD_FAST(arg=0, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=390, inst=LOAD_FAST(arg=8, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$close388.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=392, inst=BINARY_SUBSCR(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$close388.1', '$i390.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=394, inst=LOAD_FAST(arg=6, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$392binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=396, inst=LOAD_FAST(arg=8, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$392binary_subscr.3', '$final_lb394.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=398, inst=BINARY_SUBSCR(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$392binary_subscr.3', '$final_lb394.4', '$i396.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=400, inst=COMPARE_OP(arg=0, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$392binary_subscr.3', '$398binary_subscr.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=402, inst=POP_JUMP_IF_FALSE(arg=210, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$400compare_op.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=404, stack=('$phi388.0',), blockstack=(), npush=0), Edge(pc=418, stack=('$phi388.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1), State(pc_initial=404 nstack_initial=1), State(pc_initial=418 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi418.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=418 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=418, inst=LOAD_CONST(arg=2, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=420, inst=LOAD_FAST(arg=7, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0', '$const418.1.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=422, inst=LOAD_FAST(arg=8, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0', '$const418.1.2', '$supertrend420.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=424, inst=STORE_SUBSCR(arg=None, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0', '$const418.1.2', '$supertrend420.2', '$i422.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=426, inst=JUMP_ABSOLUTE(arg=26, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi418.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=404 nstack_initial=1), State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=404 nstack_initial=1), State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi404.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=404 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=404, inst=LOAD_FAST(arg=5, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=406, inst=LOAD_FAST(arg=8, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$final_ub404.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=408, inst=BINARY_SUBSCR(arg=None, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$final_ub404.1', '$i406.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=410, inst=LOAD_FAST(arg=7, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$408binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=412, inst=LOAD_FAST(arg=8, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$408binary_subscr.3', '$supertrend410.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=414, inst=STORE_SUBSCR(arg=None, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$408binary_subscr.3', '$supertrend410.4', '$i412.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=416, inst=JUMP_ABSOLUTE(arg=26, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi404.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): {'$phi50.0'},
             State(pc_initial=52 nstack_initial=2): {'$phi52.1'},
             State(pc_initial=74 nstack_initial=1): set(),
             State(pc_initial=98 nstack_initial=1): set(),
             State(pc_initial=112 nstack_initial=1): set(),
             State(pc_initial=128 nstack_initial=1): set(),
             State(pc_initial=148 nstack_initial=1): set(),
             State(pc_initial=172 nstack_initial=1): set(),
             State(pc_initial=186 nstack_initial=1): set(),
             State(pc_initial=202 nstack_initial=1): set(),
             State(pc_initial=226 nstack_initial=1): set(),
             State(pc_initial=242 nstack_initial=1): set(),
             State(pc_initial=256 nstack_initial=1): set(),
             State(pc_initial=280 nstack_initial=1): set(),
             State(pc_initial=296 nstack_initial=1): set(),
             State(pc_initial=310 nstack_initial=1): set(),
             State(pc_initial=334 nstack_initial=1): set(),
             State(pc_initial=350 nstack_initial=1): set(),
             State(pc_initial=364 nstack_initial=1): set(),
             State(pc_initial=388 nstack_initial=1): set(),
             State(pc_initial=404 nstack_initial=1): set(),
             State(pc_initial=418 nstack_initial=1): set(),
             State(pc_initial=428 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {'$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi52.1': State(pc_initial=50 nstack_initial=1)}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi128.0': {('$phi112.0',
                            State(pc_initial=112 nstack_initial=1)),
                           ('$phi98.0', State(pc_initial=98 nstack_initial=1))},
             '$phi148.0': {('$phi128.0',
                            State(pc_initial=128 nstack_initial=1))},
             '$phi172.0': {('$phi128.0',
                            State(pc_initial=128 nstack_initial=1)),
                           ('$phi148.0',
                            State(pc_initial=148 nstack_initial=1))},
             '$phi186.0': {('$phi148.0',
                            State(pc_initial=148 nstack_initial=1))},
             '$phi202.0': {('$phi172.0',
                            State(pc_initial=172 nstack_initial=1)),
                           ('$phi186.0',
                            State(pc_initial=186 nstack_initial=1))},
             '$phi226.0': {('$phi202.0',
                            State(pc_initial=202 nstack_initial=1))},
             '$phi242.0': {('$phi226.0',
                            State(pc_initial=226 nstack_initial=1))},
             '$phi256.0': {('$phi202.0',
                            State(pc_initial=202 nstack_initial=1)),
                           ('$phi226.0',
                            State(pc_initial=226 nstack_initial=1))},
             '$phi280.0': {('$phi256.0',
                            State(pc_initial=256 nstack_initial=1))},
             '$phi296.0': {('$phi280.0',
                            State(pc_initial=280 nstack_initial=1))},
             '$phi310.0': {('$phi256.0',
                            State(pc_initial=256 nstack_initial=1)),
                           ('$phi280.0',
                            State(pc_initial=280 nstack_initial=1))},
             '$phi334.0': {('$phi310.0',
                            State(pc_initial=310 nstack_initial=1))},
             '$phi350.0': {('$phi334.0',
                            State(pc_initial=334 nstack_initial=1))},
             '$phi364.0': {('$phi310.0',
                            State(pc_initial=310 nstack_initial=1)),
                           ('$phi334.0',
                            State(pc_initial=334 nstack_initial=1))},
             '$phi388.0': {('$phi364.0',
                            State(pc_initial=364 nstack_initial=1))},
             '$phi404.0': {('$phi388.0',
                            State(pc_initial=388 nstack_initial=1))},
             '$phi418.0': {('$phi364.0',
                            State(pc_initial=364 nstack_initial=1)),
                           ('$phi388.0',
                            State(pc_initial=388 nstack_initial=1))},
             '$phi50.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi242.0', State(pc_initial=242 nstack_initial=1)),
                          ('$phi296.0', State(pc_initial=296 nstack_initial=1)),
                          ('$phi350.0', State(pc_initial=350 nstack_initial=1)),
                          ('$phi404.0', State(pc_initial=404 nstack_initial=1)),
                          ('$phi418.0',
                           State(pc_initial=418 nstack_initial=1))},
             '$phi52.0': {('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))},
             '$phi74.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi98.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))}})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi128.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi148.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi172.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi186.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi202.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi226.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi242.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi256.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi280.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi296.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi310.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi334.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi350.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi364.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi388.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi404.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi418.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi50.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi52.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))},
             '$phi74.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi98.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))}})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi128.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi148.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi172.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi186.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi202.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi226.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi242.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi256.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi280.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi296.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi310.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi334.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi350.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi364.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi388.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi404.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi418.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))},
             '$phi74.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))}})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi128.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi148.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi172.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi186.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi202.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi226.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi242.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi256.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi280.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi296.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi310.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi334.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi350.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi364.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi388.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi404.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi418.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))},
             '$phi74.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))}})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {'$phi50.0': {('$48get_iter.19', State(pc_initial=0 nstack_initial=0))},
 '$phi52.1': {('$50for_iter.2', State(pc_initial=50 nstack_initial=1))}}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi50.0': '$48get_iter.19'},
             State(pc_initial=50 nstack_initial=1): {'$phi52.1': '$50for_iter.2'}})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$close4.1'}), (6, {'func': '$2load_global.0', 'args': ['$close4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_global.3'}), (12, {'item': '$10load_global.3', 'res': '$12load_method.4'}), (14, {'res': '$length14.5'}), (16, {'func': '$12load_method.4', 'args': ['$length14.5'], 'res': '$16call_method.6'}), (18, {'value': '$16call_method.6'}), (20, {'res': '$20load_global.7'}), (22, {'item': '$20load_global.7', 'res': '$22load_method.8'}), (24, {'res': '$length24.9'}), (26, {'func': '$22load_method.8', 'args': ['$length24.9'], 'res': '$26call_method.10'}), (28, {'value': '$26call_method.10'}), (30, {'res': '$30load_global.11'}), (32, {'item': '$30load_global.11', 'res': '$32load_method.12'}), (34, {'res': '$length34.13'}), (36, {'func': '$32load_method.12', 'args': ['$length34.13'], 'res': '$36call_method.14'}), (38, {'value': '$36call_method.14'}), (40, {'res': '$40load_global.15'}), (42, {'res': '$n42.16'}), (44, {'res': '$length44.17'}), (46, {'func': '$40load_global.15', 'args': ['$n42.16', '$length44.17'], 'res': '$46call_function.18'}), (48, {'value': '$46call_function.18', 'res': '$48get_iter.19'})), outgoing_phis={'$phi50.0': '$48get_iter.19'}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$48get_iter.19',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((50, {'iterator': '$phi50.0', 'pair': '$50for_iter.1', 'indval': '$50for_iter.2', 'pred': '$50for_iter.3'}),), outgoing_phis={'$phi52.1': '$50for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={428: (), 52: ('$phi50.0', '$50for_iter.2')})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=52 nstack_initial=2):
AdaptBlockInfo(insts=((52, {'value': '$phi52.1'}), (54, {'res': '$basic_ub54.2'}), (56, {'res': '$i56.3'}), (58, {'index': '$i56.3', 'target': '$basic_ub54.2', 'res': '$58binary_subscr.4'}), (60, {'res': '$final_ub60.5'}), (62, {'res': '$i62.6'}), (64, {'res': '$const64.7.1'}), (66, {'lhs': '$i62.6', 'rhs': '$const64.7.1', 'res': '$66binary_subtract.8'}), (68, {'index': '$66binary_subtract.8', 'target': '$final_ub60.5', 'res': '$68binary_subscr.9'}), (70, {'lhs': '$58binary_subscr.4', 'rhs': '$68binary_subscr.9', 'res': '$70compare_op.10'}), (72, {'pred': '$70compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ('$phi52.0',), 98: ('$phi52.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=74 nstack_initial=1):
AdaptBlockInfo(insts=((74, {'res': '$close74.1'}), (76, {'res': '$i76.2'}), (78, {'res': '$const78.3.1'}), (80, {'lhs': '$i76.2', 'rhs': '$const78.3.1', 'res': '$80binary_subtract.4'}), (82, {'index': '$80binary_subtract.4', 'target': '$close74.1', 'res': '$82binary_subscr.5'}), (84, {'res': '$final_ub84.6'}), (86, {'res': '$i86.7'}), (88, {'res': '$const88.8.1'}), (90, {'lhs': '$i86.7', 'rhs': '$const88.8.1', 'res': '$90binary_subtract.9'}), (92, {'index': '$90binary_subtract.9', 'target': '$final_ub84.6', 'res': '$92binary_subscr.10'}), (94, {'lhs': '$82binary_subscr.5', 'rhs': '$92binary_subscr.10', 'res': '$94compare_op.11'}), (96, {'pred': '$94compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: ('$phi74.0',), 112: ('$phi74.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=98 nstack_initial=1):
AdaptBlockInfo(insts=((98, {'res': '$basic_ub98.1'}), (100, {'res': '$i100.2'}), (102, {'index': '$i100.2', 'target': '$basic_ub98.1', 'res': '$102binary_subscr.3'}), (104, {'res': '$final_ub104.4'}), (106, {'res': '$i106.5'}), (108, {'target': '$final_ub104.4', 'index': '$i106.5', 'value': '$102binary_subscr.3'}), (110, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={128: ('$phi98.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=112 nstack_initial=1):
AdaptBlockInfo(insts=((112, {'res': '$final_ub112.1'}), (114, {'res': '$i114.2'}), (116, {'res': '$const116.3.1'}), (118, {'lhs': '$i114.2', 'rhs': '$const116.3.1', 'res': '$118binary_subtract.4'}), (120, {'index': '$118binary_subtract.4', 'target': '$final_ub112.1', 'res': '$120binary_subscr.5'}), (122, {'res': '$final_ub122.6'}), (124, {'res': '$i124.7'}), (126, {'target': '$final_ub122.6', 'index': '$i124.7', 'value': '$120binary_subscr.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={128: ('$phi112.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=128 nstack_initial=1):
AdaptBlockInfo(insts=((128, {'res': '$basic_lb128.1'}), (130, {'res': '$i130.2'}), (132, {'index': '$i130.2', 'target': '$basic_lb128.1', 'res': '$132binary_subscr.3'}), (134, {'res': '$final_lb134.4'}), (136, {'res': '$i136.5'}), (138, {'res': '$const138.6.1'}), (140, {'lhs': '$i136.5', 'rhs': '$const138.6.1', 'res': '$140binary_subtract.7'}), (142, {'index': '$140binary_subtract.7', 'target': '$final_lb134.4', 'res': '$142binary_subscr.8'}), (144, {'lhs': '$132binary_subscr.3', 'rhs': '$142binary_subscr.8', 'res': '$144compare_op.9'}), (146, {'pred': '$144compare_op.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={148: ('$phi128.0',), 172: ('$phi128.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=148 nstack_initial=1):
AdaptBlockInfo(insts=((148, {'res': '$close148.1'}), (150, {'res': '$i150.2'}), (152, {'res': '$const152.3.1'}), (154, {'lhs': '$i150.2', 'rhs': '$const152.3.1', 'res': '$154binary_subtract.4'}), (156, {'index': '$154binary_subtract.4', 'target': '$close148.1', 'res': '$156binary_subscr.5'}), (158, {'res': '$final_lb158.6'}), (160, {'res': '$i160.7'}), (162, {'res': '$const162.8.1'}), (164, {'lhs': '$i160.7', 'rhs': '$const162.8.1', 'res': '$164binary_subtract.9'}), (166, {'index': '$164binary_subtract.9', 'target': '$final_lb158.6', 'res': '$166binary_subscr.10'}), (168, {'lhs': '$156binary_subscr.5', 'rhs': '$166binary_subscr.10', 'res': '$168compare_op.11'}), (170, {'pred': '$168compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={172: ('$phi148.0',), 186: ('$phi148.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=172 nstack_initial=1):
AdaptBlockInfo(insts=((172, {'res': '$basic_lb172.1'}), (174, {'res': '$i174.2'}), (176, {'index': '$i174.2', 'target': '$basic_lb172.1', 'res': '$176binary_subscr.3'}), (178, {'res': '$final_lb178.4'}), (180, {'res': '$i180.5'}), (182, {'target': '$final_lb178.4', 'index': '$i180.5', 'value': '$176binary_subscr.3'}), (184, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={202: ('$phi172.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=186 nstack_initial=1):
AdaptBlockInfo(insts=((186, {'res': '$final_lb186.1'}), (188, {'res': '$i188.2'}), (190, {'res': '$const190.3.1'}), (192, {'lhs': '$i188.2', 'rhs': '$const190.3.1', 'res': '$192binary_subtract.4'}), (194, {'index': '$192binary_subtract.4', 'target': '$final_lb186.1', 'res': '$194binary_subscr.5'}), (196, {'res': '$final_lb196.6'}), (198, {'res': '$i198.7'}), (200, {'target': '$final_lb196.6', 'index': '$i198.7', 'value': '$194binary_subscr.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={202: ('$phi186.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=202 nstack_initial=1):
AdaptBlockInfo(insts=((202, {'res': '$supertrend202.1'}), (204, {'res': '$i204.2'}), (206, {'res': '$const206.3.1'}), (208, {'lhs': '$i204.2', 'rhs': '$const206.3.1', 'res': '$208binary_subtract.4'}), (210, {'index': '$208binary_subtract.4', 'target': '$supertrend202.1', 'res': '$210binary_subscr.5'}), (212, {'res': '$final_ub212.6'}), (214, {'res': '$i214.7'}), (216, {'res': '$const216.8.1'}), (218, {'lhs': '$i214.7', 'rhs': '$const216.8.1', 'res': '$218binary_subtract.9'}), (220, {'index': '$218binary_subtract.9', 'target': '$final_ub212.6', 'res': '$220binary_subscr.10'}), (222, {'lhs': '$210binary_subscr.5', 'rhs': '$220binary_subscr.10', 'res': '$222compare_op.11'}), (224, {'pred': '$222compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={226: ('$phi202.0',), 256: ('$phi202.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=226 nstack_initial=1):
AdaptBlockInfo(insts=((226, {'res': '$close226.1'}), (228, {'res': '$i228.2'}), (230, {'index': '$i228.2', 'target': '$close226.1', 'res': '$230binary_subscr.3'}), (232, {'res': '$final_ub232.4'}), (234, {'res': '$i234.5'}), (236, {'index': '$i234.5', 'target': '$final_ub232.4', 'res': '$236binary_subscr.6'}), (238, {'lhs': '$230binary_subscr.3', 'rhs': '$236binary_subscr.6', 'res': '$238compare_op.7'}), (240, {'pred': '$238compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={242: ('$phi226.0',), 256: ('$phi226.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=242 nstack_initial=1):
AdaptBlockInfo(insts=((242, {'res': '$final_ub242.1'}), (244, {'res': '$i244.2'}), (246, {'index': '$i244.2', 'target': '$final_ub242.1', 'res': '$246binary_subscr.3'}), (248, {'res': '$supertrend248.4'}), (250, {'res': '$i250.5'}), (252, {'target': '$supertrend248.4', 'index': '$i250.5', 'value': '$246binary_subscr.3'}), (254, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi242.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=256 nstack_initial=1):
AdaptBlockInfo(insts=((256, {'res': '$supertrend256.1'}), (258, {'res': '$i258.2'}), (260, {'res': '$const260.3.1'}), (262, {'lhs': '$i258.2', 'rhs': '$const260.3.1', 'res': '$262binary_subtract.4'}), (264, {'index': '$262binary_subtract.4', 'target': '$supertrend256.1', 'res': '$264binary_subscr.5'}), (266, {'res': '$final_ub266.6'}), (268, {'res': '$i268.7'}), (270, {'res': '$const270.8.1'}), (272, {'lhs': '$i268.7', 'rhs': '$const270.8.1', 'res': '$272binary_subtract.9'}), (274, {'index': '$272binary_subtract.9', 'target': '$final_ub266.6', 'res': '$274binary_subscr.10'}), (276, {'lhs': '$264binary_subscr.5', 'rhs': '$274binary_subscr.10', 'res': '$276compare_op.11'}), (278, {'pred': '$276compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={280: ('$phi256.0',), 310: ('$phi256.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=280 nstack_initial=1):
AdaptBlockInfo(insts=((280, {'res': '$close280.1'}), (282, {'res': '$i282.2'}), (284, {'index': '$i282.2', 'target': '$close280.1', 'res': '$284binary_subscr.3'}), (286, {'res': '$final_ub286.4'}), (288, {'res': '$i288.5'}), (290, {'index': '$i288.5', 'target': '$final_ub286.4', 'res': '$290binary_subscr.6'}), (292, {'lhs': '$284binary_subscr.3', 'rhs': '$290binary_subscr.6', 'res': '$292compare_op.7'}), (294, {'pred': '$292compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={296: ('$phi280.0',), 310: ('$phi280.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=296 nstack_initial=1):
AdaptBlockInfo(insts=((296, {'res': '$final_lb296.1'}), (298, {'res': '$i298.2'}), (300, {'index': '$i298.2', 'target': '$final_lb296.1', 'res': '$300binary_subscr.3'}), (302, {'res': '$supertrend302.4'}), (304, {'res': '$i304.5'}), (306, {'target': '$supertrend302.4', 'index': '$i304.5', 'value': '$300binary_subscr.3'}), (308, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi296.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=310 nstack_initial=1):
AdaptBlockInfo(insts=((310, {'res': '$supertrend310.1'}), (312, {'res': '$i312.2'}), (314, {'res': '$const314.3.1'}), (316, {'lhs': '$i312.2', 'rhs': '$const314.3.1', 'res': '$316binary_subtract.4'}), (318, {'index': '$316binary_subtract.4', 'target': '$supertrend310.1', 'res': '$318binary_subscr.5'}), (320, {'res': '$final_lb320.6'}), (322, {'res': '$i322.7'}), (324, {'res': '$const324.8.1'}), (326, {'lhs': '$i322.7', 'rhs': '$const324.8.1', 'res': '$326binary_subtract.9'}), (328, {'index': '$326binary_subtract.9', 'target': '$final_lb320.6', 'res': '$328binary_subscr.10'}), (330, {'lhs': '$318binary_subscr.5', 'rhs': '$328binary_subscr.10', 'res': '$330compare_op.11'}), (332, {'pred': '$330compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={334: ('$phi310.0',), 364: ('$phi310.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=334 nstack_initial=1):
AdaptBlockInfo(insts=((334, {'res': '$close334.1'}), (336, {'res': '$i336.2'}), (338, {'index': '$i336.2', 'target': '$close334.1', 'res': '$338binary_subscr.3'}), (340, {'res': '$final_lb340.4'}), (342, {'res': '$i342.5'}), (344, {'index': '$i342.5', 'target': '$final_lb340.4', 'res': '$344binary_subscr.6'}), (346, {'lhs': '$338binary_subscr.3', 'rhs': '$344binary_subscr.6', 'res': '$346compare_op.7'}), (348, {'pred': '$346compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={350: ('$phi334.0',), 364: ('$phi334.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=350 nstack_initial=1):
AdaptBlockInfo(insts=((350, {'res': '$final_lb350.1'}), (352, {'res': '$i352.2'}), (354, {'index': '$i352.2', 'target': '$final_lb350.1', 'res': '$354binary_subscr.3'}), (356, {'res': '$supertrend356.4'}), (358, {'res': '$i358.5'}), (360, {'target': '$supertrend356.4', 'index': '$i358.5', 'value': '$354binary_subscr.3'}), (362, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi350.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=364 nstack_initial=1):
AdaptBlockInfo(insts=((364, {'res': '$supertrend364.1'}), (366, {'res': '$i366.2'}), (368, {'res': '$const368.3.1'}), (370, {'lhs': '$i366.2', 'rhs': '$const368.3.1', 'res': '$370binary_subtract.4'}), (372, {'index': '$370binary_subtract.4', 'target': '$supertrend364.1', 'res': '$372binary_subscr.5'}), (374, {'res': '$final_lb374.6'}), (376, {'res': '$i376.7'}), (378, {'res': '$const378.8.1'}), (380, {'lhs': '$i376.7', 'rhs': '$const378.8.1', 'res': '$380binary_subtract.9'}), (382, {'index': '$380binary_subtract.9', 'target': '$final_lb374.6', 'res': '$382binary_subscr.10'}), (384, {'lhs': '$372binary_subscr.5', 'rhs': '$382binary_subscr.10', 'res': '$384compare_op.11'}), (386, {'pred': '$384compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={388: ('$phi364.0',), 418: ('$phi364.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=388 nstack_initial=1):
AdaptBlockInfo(insts=((388, {'res': '$close388.1'}), (390, {'res': '$i390.2'}), (392, {'index': '$i390.2', 'target': '$close388.1', 'res': '$392binary_subscr.3'}), (394, {'res': '$final_lb394.4'}), (396, {'res': '$i396.5'}), (398, {'index': '$i396.5', 'target': '$final_lb394.4', 'res': '$398binary_subscr.6'}), (400, {'lhs': '$392binary_subscr.3', 'rhs': '$398binary_subscr.6', 'res': '$400compare_op.7'}), (402, {'pred': '$400compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={404: ('$phi388.0',), 418: ('$phi388.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=404 nstack_initial=1):
AdaptBlockInfo(insts=((404, {'res': '$final_ub404.1'}), (406, {'res': '$i406.2'}), (408, {'index': '$i406.2', 'target': '$final_ub404.1', 'res': '$408binary_subscr.3'}), (410, {'res': '$supertrend410.4'}), (412, {'res': '$i412.5'}), (414, {'target': '$supertrend410.4', 'index': '$i412.5', 'value': '$408binary_subscr.3'}), (416, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi404.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=418 nstack_initial=1):
AdaptBlockInfo(insts=((418, {'res': '$const418.1.2'}), (420, {'res': '$supertrend420.2'}), (422, {'res': '$i422.3'}), (424, {'target': '$supertrend420.2', 'index': '$i422.3', 'value': '$const418.1.2'}), (426, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi418.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=428 nstack_initial=0):
AdaptBlockInfo(insts=((428, {'res': '$supertrend428.0'}), (430, {'retval': '$supertrend428.0', 'castval': '$430return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    close = arg(0, name=close)               ['close']
    basic_ub = arg(1, name=basic_ub)         ['basic_ub']
    basic_lb = arg(2, name=basic_lb)         ['basic_lb']
    n = arg(3, name=n)                       ['n']
    $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
    length = call $2load_global.0(close, func=$2load_global.0, args=[Var(close, helper_loops.py:99)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'close', 'length']
    $10load_global.3 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>) ['$10load_global.3']
    $12load_method.4 = getattr(value=$10load_global.3, attr=zeros) ['$10load_global.3', '$12load_method.4']
    final_ub = call $12load_method.4(length, func=$12load_method.4, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_method.4', 'final_ub', 'length']
    $20load_global.7 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.7']
    $22load_method.8 = getattr(value=$20load_global.7, attr=zeros) ['$20load_global.7', '$22load_method.8']
    final_lb = call $22load_method.8(length, func=$22load_method.8, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.8', 'final_lb', 'length']
    $30load_global.11 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>) ['$30load_global.11']
    $32load_method.12 = getattr(value=$30load_global.11, attr=zeros) ['$30load_global.11', '$32load_method.12']
    supertrend = call $32load_method.12(length, func=$32load_method.12, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$32load_method.12', 'length', 'supertrend']
    $40load_global.15 = global(range: <class 'range'>) ['$40load_global.15']
    $46call_function.18 = call $40load_global.15(n, length, func=$40load_global.15, args=[Var(n, helper_loops.py:99), Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_global.15', '$46call_function.18', 'length', 'n']
    $48get_iter.19 = getiter(value=$46call_function.18) ['$46call_function.18', '$48get_iter.19']
    $phi50.0 = $48get_iter.19                ['$48get_iter.19', '$phi50.0']
    jump 50                                  []
label 50:
    $50for_iter.1 = iternext(value=$phi50.0) ['$50for_iter.1', '$phi50.0']
    $50for_iter.2 = pair_first(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.2']
    $50for_iter.3 = pair_second(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.3']
    $phi52.1 = $50for_iter.2                 ['$50for_iter.2', '$phi52.1']
    branch $50for_iter.3, 52, 428            ['$50for_iter.3']
label 52:
    i = $phi52.1                             ['$phi52.1', 'i']
    $58binary_subscr.4 = getitem(value=basic_ub, index=i, fn=<built-in function getitem>) ['$58binary_subscr.4', 'basic_ub', 'i']
    $const64.7.1 = const(int, 1)             ['$const64.7.1']
    $66binary_subtract.8 = i - $const64.7.1  ['$66binary_subtract.8', '$const64.7.1', 'i']
    $68binary_subscr.9 = getitem(value=final_ub, index=$66binary_subtract.8, fn=<built-in function getitem>) ['$66binary_subtract.8', '$68binary_subscr.9', 'final_ub']
    $70compare_op.10 = $58binary_subscr.4 < $68binary_subscr.9 ['$58binary_subscr.4', '$68binary_subscr.9', '$70compare_op.10']
    bool72 = global(bool: <class 'bool'>)    ['bool72']
    $72pred = call bool72($70compare_op.10, func=bool72, args=(Var($70compare_op.10, helper_loops.py:113),), kws=(), vararg=None, varkwarg=None, target=None) ['$70compare_op.10', '$72pred', 'bool72']
    branch $72pred, 98, 74                   ['$72pred']
label 74:
    $const78.3.1 = const(int, 1)             ['$const78.3.1']
    $80binary_subtract.4 = i - $const78.3.1  ['$80binary_subtract.4', '$const78.3.1', 'i']
    $82binary_subscr.5 = getitem(value=close, index=$80binary_subtract.4, fn=<built-in function getitem>) ['$80binary_subtract.4', '$82binary_subscr.5', 'close']
    $const88.8.1 = const(int, 1)             ['$const88.8.1']
    $90binary_subtract.9 = i - $const88.8.1  ['$90binary_subtract.9', '$const88.8.1', 'i']
    $92binary_subscr.10 = getitem(value=final_ub, index=$90binary_subtract.9, fn=<built-in function getitem>) ['$90binary_subtract.9', '$92binary_subscr.10', 'final_ub']
    $94compare_op.11 = $82binary_subscr.5 > $92binary_subscr.10 ['$82binary_subscr.5', '$92binary_subscr.10', '$94compare_op.11']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
    $96pred = call bool96($94compare_op.11, func=bool96, args=(Var($94compare_op.11, helper_loops.py:113),), kws=(), vararg=None, varkwarg=None, target=None) ['$94compare_op.11', '$96pred', 'bool96']
    branch $96pred, 98, 112                  ['$96pred']
label 98:
    $102binary_subscr.3 = getitem(value=basic_ub, index=i, fn=<built-in function getitem>) ['$102binary_subscr.3', 'basic_ub', 'i']
    final_ub[i] = $102binary_subscr.3        ['$102binary_subscr.3', 'final_ub', 'i']
    jump 128                                 []
label 112:
    $const116.3.1 = const(int, 1)            ['$const116.3.1']
    $118binary_subtract.4 = i - $const116.3.1 ['$118binary_subtract.4', '$const116.3.1', 'i']
    $120binary_subscr.5 = getitem(value=final_ub, index=$118binary_subtract.4, fn=<built-in function getitem>) ['$118binary_subtract.4', '$120binary_subscr.5', 'final_ub']
    final_ub[i] = $120binary_subscr.5        ['$120binary_subscr.5', 'final_ub', 'i']
    jump 128                                 []
label 128:
    $132binary_subscr.3 = getitem(value=basic_lb, index=i, fn=<built-in function getitem>) ['$132binary_subscr.3', 'basic_lb', 'i']
    $const138.6.1 = const(int, 1)            ['$const138.6.1']
    $140binary_subtract.7 = i - $const138.6.1 ['$140binary_subtract.7', '$const138.6.1', 'i']
    $142binary_subscr.8 = getitem(value=final_lb, index=$140binary_subtract.7, fn=<built-in function getitem>) ['$140binary_subtract.7', '$142binary_subscr.8', 'final_lb']
    $144compare_op.9 = $132binary_subscr.3 > $142binary_subscr.8 ['$132binary_subscr.3', '$142binary_subscr.8', '$144compare_op.9']
    bool146 = global(bool: <class 'bool'>)   ['bool146']
    $146pred = call bool146($144compare_op.9, func=bool146, args=(Var($144compare_op.9, helper_loops.py:118),), kws=(), vararg=None, varkwarg=None, target=None) ['$144compare_op.9', '$146pred', 'bool146']
    branch $146pred, 172, 148                ['$146pred']
label 148:
    $const152.3.1 = const(int, 1)            ['$const152.3.1']
    $154binary_subtract.4 = i - $const152.3.1 ['$154binary_subtract.4', '$const152.3.1', 'i']
    $156binary_subscr.5 = getitem(value=close, index=$154binary_subtract.4, fn=<built-in function getitem>) ['$154binary_subtract.4', '$156binary_subscr.5', 'close']
    $const162.8.1 = const(int, 1)            ['$const162.8.1']
    $164binary_subtract.9 = i - $const162.8.1 ['$164binary_subtract.9', '$const162.8.1', 'i']
    $166binary_subscr.10 = getitem(value=final_lb, index=$164binary_subtract.9, fn=<built-in function getitem>) ['$164binary_subtract.9', '$166binary_subscr.10', 'final_lb']
    $168compare_op.11 = $156binary_subscr.5 < $166binary_subscr.10 ['$156binary_subscr.5', '$166binary_subscr.10', '$168compare_op.11']
    bool170 = global(bool: <class 'bool'>)   ['bool170']
    $170pred = call bool170($168compare_op.11, func=bool170, args=(Var($168compare_op.11, helper_loops.py:118),), kws=(), vararg=None, varkwarg=None, target=None) ['$168compare_op.11', '$170pred', 'bool170']
    branch $170pred, 172, 186                ['$170pred']
label 172:
    $176binary_subscr.3 = getitem(value=basic_lb, index=i, fn=<built-in function getitem>) ['$176binary_subscr.3', 'basic_lb', 'i']
    final_lb[i] = $176binary_subscr.3        ['$176binary_subscr.3', 'final_lb', 'i']
    jump 202                                 []
label 186:
    $const190.3.1 = const(int, 1)            ['$const190.3.1']
    $192binary_subtract.4 = i - $const190.3.1 ['$192binary_subtract.4', '$const190.3.1', 'i']
    $194binary_subscr.5 = getitem(value=final_lb, index=$192binary_subtract.4, fn=<built-in function getitem>) ['$192binary_subtract.4', '$194binary_subscr.5', 'final_lb']
    final_lb[i] = $194binary_subscr.5        ['$194binary_subscr.5', 'final_lb', 'i']
    jump 202                                 []
label 202:
    $const206.3.1 = const(int, 1)            ['$const206.3.1']
    $208binary_subtract.4 = i - $const206.3.1 ['$208binary_subtract.4', '$const206.3.1', 'i']
    $210binary_subscr.5 = getitem(value=supertrend, index=$208binary_subtract.4, fn=<built-in function getitem>) ['$208binary_subtract.4', '$210binary_subscr.5', 'supertrend']
    $const216.8.1 = const(int, 1)            ['$const216.8.1']
    $218binary_subtract.9 = i - $const216.8.1 ['$218binary_subtract.9', '$const216.8.1', 'i']
    $220binary_subscr.10 = getitem(value=final_ub, index=$218binary_subtract.9, fn=<built-in function getitem>) ['$218binary_subtract.9', '$220binary_subscr.10', 'final_ub']
    $222compare_op.11 = $210binary_subscr.5 == $220binary_subscr.10 ['$210binary_subscr.5', '$220binary_subscr.10', '$222compare_op.11']
    bool224 = global(bool: <class 'bool'>)   ['bool224']
    $224pred = call bool224($222compare_op.11, func=bool224, args=(Var($222compare_op.11, helper_loops.py:123),), kws=(), vararg=None, varkwarg=None, target=None) ['$222compare_op.11', '$224pred', 'bool224']
    branch $224pred, 226, 256                ['$224pred']
label 226:
    $230binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>) ['$230binary_subscr.3', 'close', 'i']
    $236binary_subscr.6 = getitem(value=final_ub, index=i, fn=<built-in function getitem>) ['$236binary_subscr.6', 'final_ub', 'i']
    $238compare_op.7 = $230binary_subscr.3 <= $236binary_subscr.6 ['$230binary_subscr.3', '$236binary_subscr.6', '$238compare_op.7']
    bool240 = global(bool: <class 'bool'>)   ['bool240']
    $240pred = call bool240($238compare_op.7, func=bool240, args=(Var($238compare_op.7, helper_loops.py:123),), kws=(), vararg=None, varkwarg=None, target=None) ['$238compare_op.7', '$240pred', 'bool240']
    branch $240pred, 242, 256                ['$240pred']
label 242:
    $246binary_subscr.3 = getitem(value=final_ub, index=i, fn=<built-in function getitem>) ['$246binary_subscr.3', 'final_ub', 'i']
    supertrend[i] = $246binary_subscr.3      ['$246binary_subscr.3', 'i', 'supertrend']
    jump 50                                  []
label 256:
    $const260.3.1 = const(int, 1)            ['$const260.3.1']
    $262binary_subtract.4 = i - $const260.3.1 ['$262binary_subtract.4', '$const260.3.1', 'i']
    $264binary_subscr.5 = getitem(value=supertrend, index=$262binary_subtract.4, fn=<built-in function getitem>) ['$262binary_subtract.4', '$264binary_subscr.5', 'supertrend']
    $const270.8.1 = const(int, 1)            ['$const270.8.1']
    $272binary_subtract.9 = i - $const270.8.1 ['$272binary_subtract.9', '$const270.8.1', 'i']
    $274binary_subscr.10 = getitem(value=final_ub, index=$272binary_subtract.9, fn=<built-in function getitem>) ['$272binary_subtract.9', '$274binary_subscr.10', 'final_ub']
    $276compare_op.11 = $264binary_subscr.5 == $274binary_subscr.10 ['$264binary_subscr.5', '$274binary_subscr.10', '$276compare_op.11']
    bool278 = global(bool: <class 'bool'>)   ['bool278']
    $278pred = call bool278($276compare_op.11, func=bool278, args=(Var($276compare_op.11, helper_loops.py:125),), kws=(), vararg=None, varkwarg=None, target=None) ['$276compare_op.11', '$278pred', 'bool278']
    branch $278pred, 280, 310                ['$278pred']
label 280:
    $284binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>) ['$284binary_subscr.3', 'close', 'i']
    $290binary_subscr.6 = getitem(value=final_ub, index=i, fn=<built-in function getitem>) ['$290binary_subscr.6', 'final_ub', 'i']
    $292compare_op.7 = $284binary_subscr.3 > $290binary_subscr.6 ['$284binary_subscr.3', '$290binary_subscr.6', '$292compare_op.7']
    bool294 = global(bool: <class 'bool'>)   ['bool294']
    $294pred = call bool294($292compare_op.7, func=bool294, args=(Var($292compare_op.7, helper_loops.py:125),), kws=(), vararg=None, varkwarg=None, target=None) ['$292compare_op.7', '$294pred', 'bool294']
    branch $294pred, 296, 310                ['$294pred']
label 296:
    $300binary_subscr.3 = getitem(value=final_lb, index=i, fn=<built-in function getitem>) ['$300binary_subscr.3', 'final_lb', 'i']
    supertrend[i] = $300binary_subscr.3      ['$300binary_subscr.3', 'i', 'supertrend']
    jump 50                                  []
label 310:
    $const314.3.1 = const(int, 1)            ['$const314.3.1']
    $316binary_subtract.4 = i - $const314.3.1 ['$316binary_subtract.4', '$const314.3.1', 'i']
    $318binary_subscr.5 = getitem(value=supertrend, index=$316binary_subtract.4, fn=<built-in function getitem>) ['$316binary_subtract.4', '$318binary_subscr.5', 'supertrend']
    $const324.8.1 = const(int, 1)            ['$const324.8.1']
    $326binary_subtract.9 = i - $const324.8.1 ['$326binary_subtract.9', '$const324.8.1', 'i']
    $328binary_subscr.10 = getitem(value=final_lb, index=$326binary_subtract.9, fn=<built-in function getitem>) ['$326binary_subtract.9', '$328binary_subscr.10', 'final_lb']
    $330compare_op.11 = $318binary_subscr.5 == $328binary_subscr.10 ['$318binary_subscr.5', '$328binary_subscr.10', '$330compare_op.11']
    bool332 = global(bool: <class 'bool'>)   ['bool332']
    $332pred = call bool332($330compare_op.11, func=bool332, args=(Var($330compare_op.11, helper_loops.py:127),), kws=(), vararg=None, varkwarg=None, target=None) ['$330compare_op.11', '$332pred', 'bool332']
    branch $332pred, 334, 364                ['$332pred']
label 334:
    $338binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>) ['$338binary_subscr.3', 'close', 'i']
    $344binary_subscr.6 = getitem(value=final_lb, index=i, fn=<built-in function getitem>) ['$344binary_subscr.6', 'final_lb', 'i']
    $346compare_op.7 = $338binary_subscr.3 >= $344binary_subscr.6 ['$338binary_subscr.3', '$344binary_subscr.6', '$346compare_op.7']
    bool348 = global(bool: <class 'bool'>)   ['bool348']
    $348pred = call bool348($346compare_op.7, func=bool348, args=(Var($346compare_op.7, helper_loops.py:127),), kws=(), vararg=None, varkwarg=None, target=None) ['$346compare_op.7', '$348pred', 'bool348']
    branch $348pred, 350, 364                ['$348pred']
label 350:
    $354binary_subscr.3 = getitem(value=final_lb, index=i, fn=<built-in function getitem>) ['$354binary_subscr.3', 'final_lb', 'i']
    supertrend[i] = $354binary_subscr.3      ['$354binary_subscr.3', 'i', 'supertrend']
    jump 50                                  []
label 364:
    $const368.3.1 = const(int, 1)            ['$const368.3.1']
    $370binary_subtract.4 = i - $const368.3.1 ['$370binary_subtract.4', '$const368.3.1', 'i']
    $372binary_subscr.5 = getitem(value=supertrend, index=$370binary_subtract.4, fn=<built-in function getitem>) ['$370binary_subtract.4', '$372binary_subscr.5', 'supertrend']
    $const378.8.1 = const(int, 1)            ['$const378.8.1']
    $380binary_subtract.9 = i - $const378.8.1 ['$380binary_subtract.9', '$const378.8.1', 'i']
    $382binary_subscr.10 = getitem(value=final_lb, index=$380binary_subtract.9, fn=<built-in function getitem>) ['$380binary_subtract.9', '$382binary_subscr.10', 'final_lb']
    $384compare_op.11 = $372binary_subscr.5 == $382binary_subscr.10 ['$372binary_subscr.5', '$382binary_subscr.10', '$384compare_op.11']
    bool386 = global(bool: <class 'bool'>)   ['bool386']
    $386pred = call bool386($384compare_op.11, func=bool386, args=(Var($384compare_op.11, helper_loops.py:129),), kws=(), vararg=None, varkwarg=None, target=None) ['$384compare_op.11', '$386pred', 'bool386']
    branch $386pred, 388, 418                ['$386pred']
label 388:
    $392binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>) ['$392binary_subscr.3', 'close', 'i']
    $398binary_subscr.6 = getitem(value=final_lb, index=i, fn=<built-in function getitem>) ['$398binary_subscr.6', 'final_lb', 'i']
    $400compare_op.7 = $392binary_subscr.3 < $398binary_subscr.6 ['$392binary_subscr.3', '$398binary_subscr.6', '$400compare_op.7']
    bool402 = global(bool: <class 'bool'>)   ['bool402']
    $402pred = call bool402($400compare_op.7, func=bool402, args=(Var($400compare_op.7, helper_loops.py:129),), kws=(), vararg=None, varkwarg=None, target=None) ['$400compare_op.7', '$402pred', 'bool402']
    branch $402pred, 404, 418                ['$402pred']
label 404:
    $408binary_subscr.3 = getitem(value=final_ub, index=i, fn=<built-in function getitem>) ['$408binary_subscr.3', 'final_ub', 'i']
    supertrend[i] = $408binary_subscr.3      ['$408binary_subscr.3', 'i', 'supertrend']
    jump 50                                  []
label 418:
    $const418.1.2 = const(float, 0.0)        ['$const418.1.2']
    supertrend[i] = $const418.1.2            ['$const418.1.2', 'i', 'supertrend']
    jump 50                                  []
label 428:
    $430return_value.1 = cast(value=supertrend) ['$430return_value.1', 'supertrend']
    return $430return_value.1                ['$430return_value.1']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c61b3757ee0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: close = arg(0, name=close)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: basic_ub = arg(1, name=basic_ub)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: basic_lb = arg(2, name=basic_lb)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: n = arg(3, name=n)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(len: <built-in function len>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: length = call $2load_global.0(close, func=$2load_global.0, args=[Var(close, helper_loops.py:99)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $10load_global.3 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $12load_method.4 = getattr(value=$10load_global.3, attr=zeros)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_ub = call $12load_method.4(length, func=$12load_method.4, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $20load_global.7 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $22load_method.8 = getattr(value=$20load_global.7, attr=zeros)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_lb = call $22load_method.8(length, func=$22load_method.8, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $30load_global.11 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $32load_method.12 = getattr(value=$30load_global.11, attr=zeros)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend = call $32load_method.12(length, func=$32load_method.12, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $40load_global.15 = global(range: <class 'range'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $46call_function.18 = call $40load_global.15(n, length, func=$40load_global.15, args=[Var(n, helper_loops.py:99), Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $48get_iter.19 = getiter(value=$46call_function.18)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $phi50.0 = $48get_iter.19
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 50
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 50
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c61b3757ee0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $50for_iter.1 = iternext(value=$phi50.0)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $phi52.1 = $50for_iter.2
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $50for_iter.3, 52, 428
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 52
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c61b3757ee0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: i = $phi52.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $58binary_subscr.4 = getitem(value=basic_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const64.7.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $66binary_subtract.8 = i - $const64.7.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $68binary_subscr.9 = getitem(value=final_ub, index=$66binary_subtract.8, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $70compare_op.10 = $58binary_subscr.4 < $68binary_subscr.9
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool72 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $72pred = call bool72($70compare_op.10, func=bool72, args=(Var($70compare_op.10, helper_loops.py:113),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $72pred, 98, 74
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 74
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c61b3757ee0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const78.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $80binary_subtract.4 = i - $const78.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $82binary_subscr.5 = getitem(value=close, index=$80binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const88.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $90binary_subtract.9 = i - $const88.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $92binary_subscr.10 = getitem(value=final_ub, index=$90binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $94compare_op.11 = $82binary_subscr.5 > $92binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool96 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $96pred = call bool96($94compare_op.11, func=bool96, args=(Var($94compare_op.11, helper_loops.py:113),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $96pred, 98, 112
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 98
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c61b3757ee0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $102binary_subscr.3 = getitem(value=basic_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_ub[i] = $102binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 128
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 112
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c61b3757ee0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const116.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $118binary_subtract.4 = i - $const116.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $120binary_subscr.5 = getitem(value=final_ub, index=$118binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_ub[i] = $120binary_subscr.5
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 128
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 128
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c61b3757ee0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $132binary_subscr.3 = getitem(value=basic_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const138.6.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $140binary_subtract.7 = i - $const138.6.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $142binary_subscr.8 = getitem(value=final_lb, index=$140binary_subtract.7, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $144compare_op.9 = $132binary_subscr.3 > $142binary_subscr.8
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool146 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $146pred = call bool146($144compare_op.9, func=bool146, args=(Var($144compare_op.9, helper_loops.py:118),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $146pred, 172, 148
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 148
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c61b3757ee0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const152.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $154binary_subtract.4 = i - $const152.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $156binary_subscr.5 = getitem(value=close, index=$154binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const162.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $164binary_subtract.9 = i - $const162.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $166binary_subscr.10 = getitem(value=final_lb, index=$164binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $168compare_op.11 = $156binary_subscr.5 < $166binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool170 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $170pred = call bool170($168compare_op.11, func=bool170, args=(Var($168compare_op.11, helper_loops.py:118),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $170pred, 172, 186
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 172
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c61b3757ee0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $176binary_subscr.3 = getitem(value=basic_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_lb[i] = $176binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 202
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 186
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c61b3757ee0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const190.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $192binary_subtract.4 = i - $const190.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $194binary_subscr.5 = getitem(value=final_lb, index=$192binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_lb[i] = $194binary_subscr.5
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 202
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 202
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c61b3757ee0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const206.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $208binary_subtract.4 = i - $const206.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $210binary_subscr.5 = getitem(value=supertrend, index=$208binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const216.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $218binary_subtract.9 = i - $const216.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $220binary_subscr.10 = getitem(value=final_ub, index=$218binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $222compare_op.11 = $210binary_subscr.5 == $220binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool224 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $224pred = call bool224($222compare_op.11, func=bool224, args=(Var($222compare_op.11, helper_loops.py:123),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $224pred, 226, 256
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 226
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c61b3757ee0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $230binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $236binary_subscr.6 = getitem(value=final_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $238compare_op.7 = $230binary_subscr.3 <= $236binary_subscr.6
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool240 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $240pred = call bool240($238compare_op.7, func=bool240, args=(Var($238compare_op.7, helper_loops.py:123),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $240pred, 242, 256
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 242
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c61b3757ee0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $246binary_subscr.3 = getitem(value=final_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $246binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 256
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c61b3757ee0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const260.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $262binary_subtract.4 = i - $const260.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $264binary_subscr.5 = getitem(value=supertrend, index=$262binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const270.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $272binary_subtract.9 = i - $const270.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $274binary_subscr.10 = getitem(value=final_ub, index=$272binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $276compare_op.11 = $264binary_subscr.5 == $274binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool278 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $278pred = call bool278($276compare_op.11, func=bool278, args=(Var($276compare_op.11, helper_loops.py:125),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $278pred, 280, 310
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 280
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c61b3757ee0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $284binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $290binary_subscr.6 = getitem(value=final_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $292compare_op.7 = $284binary_subscr.3 > $290binary_subscr.6
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool294 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $294pred = call bool294($292compare_op.7, func=bool294, args=(Var($292compare_op.7, helper_loops.py:125),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $294pred, 296, 310
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 296
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c61b3757ee0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $300binary_subscr.3 = getitem(value=final_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $300binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 310
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c61b3757ee0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const314.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $316binary_subtract.4 = i - $const314.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $318binary_subscr.5 = getitem(value=supertrend, index=$316binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const324.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $326binary_subtract.9 = i - $const324.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $328binary_subscr.10 = getitem(value=final_lb, index=$326binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $330compare_op.11 = $318binary_subscr.5 == $328binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool332 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $332pred = call bool332($330compare_op.11, func=bool332, args=(Var($330compare_op.11, helper_loops.py:127),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $332pred, 334, 364
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 334
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c61b3757ee0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $338binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $344binary_subscr.6 = getitem(value=final_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $346compare_op.7 = $338binary_subscr.3 >= $344binary_subscr.6
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool348 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $348pred = call bool348($346compare_op.7, func=bool348, args=(Var($346compare_op.7, helper_loops.py:127),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $348pred, 350, 364
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 350
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c61b3757ee0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $354binary_subscr.3 = getitem(value=final_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $354binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 364
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c61b3757ee0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const368.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $370binary_subtract.4 = i - $const368.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $372binary_subscr.5 = getitem(value=supertrend, index=$370binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const378.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $380binary_subtract.9 = i - $const378.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $382binary_subscr.10 = getitem(value=final_lb, index=$380binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $384compare_op.11 = $372binary_subscr.5 == $382binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool386 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $386pred = call bool386($384compare_op.11, func=bool386, args=(Var($384compare_op.11, helper_loops.py:129),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $386pred, 388, 418
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 388
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c61b3757ee0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $392binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $398binary_subscr.6 = getitem(value=final_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $400compare_op.7 = $392binary_subscr.3 < $398binary_subscr.6
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool402 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $402pred = call bool402($400compare_op.7, func=bool402, args=(Var($400compare_op.7, helper_loops.py:129),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $402pred, 404, 418
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 404
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c61b3757ee0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $408binary_subscr.3 = getitem(value=final_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $408binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 418
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c61b3757ee0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const418.1.2 = const(float, 0.0)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $const418.1.2
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 428
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c61b3757ee0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $430return_value.1 = cast(value=supertrend)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $430return_value.1
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 429
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c61b3757ee0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 50
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$102binary_subscr.3': [(<numba.core.ir.Assign object at 0x7c61b3739510>,
                                      98)],
             '$10load_global.3': [(<numba.core.ir.Assign object at 0x7c61b38e1300>,
                                   0)],
             '$118binary_subtract.4': [(<numba.core.ir.Assign object at 0x7c61b3739d50>,
                                        112)],
             '$120binary_subscr.5': [(<numba.core.ir.Assign object at 0x7c61b3739ed0>,
                                      112)],
             '$12load_method.4': [(<numba.core.ir.Assign object at 0x7c61b38e1480>,
                                   0)],
             '$132binary_subscr.3': [(<numba.core.ir.Assign object at 0x7c61b373a530>,
                                      128)],
             '$140binary_subtract.7': [(<numba.core.ir.Assign object at 0x7c61b373aa70>,
                                        128)],
             '$142binary_subscr.8': [(<numba.core.ir.Assign object at 0x7c61b373abf0>,
                                      128)],
             '$144compare_op.9': [(<numba.core.ir.Assign object at 0x7c61b373ad70>,
                                   128)],
             '$146pred': [(<numba.core.ir.Assign object at 0x7c61b373afe0>,
                           128)],
             '$154binary_subtract.4': [(<numba.core.ir.Assign object at 0x7c61b373b4f0>,
                                        148)],
             '$156binary_subscr.5': [(<numba.core.ir.Assign object at 0x7c61b373b670>,
                                      148)],
             '$164binary_subtract.9': [(<numba.core.ir.Assign object at 0x7c61b373bbb0>,
                                        148)],
             '$166binary_subscr.10': [(<numba.core.ir.Assign object at 0x7c61b373bd30>,
                                       148)],
             '$168compare_op.11': [(<numba.core.ir.Assign object at 0x7c61b373beb0>,
                                    148)],
             '$170pred': [(<numba.core.ir.Assign object at 0x7c61b3744160>,
                           148)],
             '$176binary_subscr.3': [(<numba.core.ir.Assign object at 0x7c61b37444f0>,
                                      172)],
             '$192binary_subtract.4': [(<numba.core.ir.Assign object at 0x7c61b3744d30>,
                                        186)],
             '$194binary_subscr.5': [(<numba.core.ir.Assign object at 0x7c61b3744eb0>,
                                      186)],
             '$208binary_subtract.4': [(<numba.core.ir.Assign object at 0x7c61b3745690>,
                                        202)],
             '$20load_global.7': [(<numba.core.ir.Assign object at 0x7c61b38e19c0>,
                                   0)],
             '$210binary_subscr.5': [(<numba.core.ir.Assign object at 0x7c61b3745810>,
                                      202)],
             '$218binary_subtract.9': [(<numba.core.ir.Assign object at 0x7c61b3745d50>,
                                        202)],
             '$220binary_subscr.10': [(<numba.core.ir.Assign object at 0x7c61b3745ed0>,
                                       202)],
             '$222compare_op.11': [(<numba.core.ir.Assign object at 0x7c61b3746050>,
                                    202)],
             '$224pred': [(<numba.core.ir.Assign object at 0x7c61b37462c0>,
                           202)],
             '$22load_method.8': [(<numba.core.ir.Assign object at 0x7c61b38e1b40>,
                                   0)],
             '$230binary_subscr.3': [(<numba.core.ir.Assign object at 0x7c61b3746650>,
                                      226)],
             '$236binary_subscr.6': [(<numba.core.ir.Assign object at 0x7c61b3746a10>,
                                      226)],
             '$238compare_op.7': [(<numba.core.ir.Assign object at 0x7c61b3746b90>,
                                   226)],
             '$240pred': [(<numba.core.ir.Assign object at 0x7c61b3746e00>,
                           226)],
             '$246binary_subscr.3': [(<numba.core.ir.Assign object at 0x7c61b3747190>,
                                      242)],
             '$262binary_subtract.4': [(<numba.core.ir.Assign object at 0x7c61b37479d0>,
                                        256)],
             '$264binary_subscr.5': [(<numba.core.ir.Assign object at 0x7c61b3747b50>,
                                      256)],
             '$272binary_subtract.9': [(<numba.core.ir.Assign object at 0x7c61b374c0d0>,
                                        256)],
             '$274binary_subscr.10': [(<numba.core.ir.Assign object at 0x7c61b374c250>,
                                       256)],
             '$276compare_op.11': [(<numba.core.ir.Assign object at 0x7c61b374c3d0>,
                                    256)],
             '$278pred': [(<numba.core.ir.Assign object at 0x7c61b374c640>,
                           256)],
             '$284binary_subscr.3': [(<numba.core.ir.Assign object at 0x7c61b374c9d0>,
                                      280)],
             '$290binary_subscr.6': [(<numba.core.ir.Assign object at 0x7c61b374cd90>,
                                      280)],
             '$292compare_op.7': [(<numba.core.ir.Assign object at 0x7c61b374cf10>,
                                   280)],
             '$294pred': [(<numba.core.ir.Assign object at 0x7c61b374d180>,
                           280)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7c61b38e0dc0>,
                                  0)],
             '$300binary_subscr.3': [(<numba.core.ir.Assign object at 0x7c61b374d510>,
                                      296)],
             '$30load_global.11': [(<numba.core.ir.Assign object at 0x7c61b38e2080>,
                                    0)],
             '$316binary_subtract.4': [(<numba.core.ir.Assign object at 0x7c61b374dd50>,
                                        310)],
             '$318binary_subscr.5': [(<numba.core.ir.Assign object at 0x7c61b374ded0>,
                                      310)],
             '$326binary_subtract.9': [(<numba.core.ir.Assign object at 0x7c61b374e410>,
                                        310)],
             '$328binary_subscr.10': [(<numba.core.ir.Assign object at 0x7c61b374e590>,
                                       310)],
             '$32load_method.12': [(<numba.core.ir.Assign object at 0x7c61b38e2200>,
                                    0)],
             '$330compare_op.11': [(<numba.core.ir.Assign object at 0x7c61b374e710>,
                                    310)],
             '$332pred': [(<numba.core.ir.Assign object at 0x7c61b374e980>,
                           310)],
             '$338binary_subscr.3': [(<numba.core.ir.Assign object at 0x7c61b374ed10>,
                                      334)],
             '$344binary_subscr.6': [(<numba.core.ir.Assign object at 0x7c61b374f0d0>,
                                      334)],
             '$346compare_op.7': [(<numba.core.ir.Assign object at 0x7c61b374f250>,
                                   334)],
             '$348pred': [(<numba.core.ir.Assign object at 0x7c61b374f4c0>,
                           334)],
             '$354binary_subscr.3': [(<numba.core.ir.Assign object at 0x7c61b374f850>,
                                      350)],
             '$370binary_subtract.4': [(<numba.core.ir.Assign object at 0x7c61b37540d0>,
                                        364)],
             '$372binary_subscr.5': [(<numba.core.ir.Assign object at 0x7c61b3754250>,
                                      364)],
             '$380binary_subtract.9': [(<numba.core.ir.Assign object at 0x7c61b3754790>,
                                        364)],
             '$382binary_subscr.10': [(<numba.core.ir.Assign object at 0x7c61b3754910>,
                                       364)],
             '$384compare_op.11': [(<numba.core.ir.Assign object at 0x7c61b3754a90>,
                                    364)],
             '$386pred': [(<numba.core.ir.Assign object at 0x7c61b3754d00>,
                           364)],
             '$392binary_subscr.3': [(<numba.core.ir.Assign object at 0x7c61b3755090>,
                                      388)],
             '$398binary_subscr.6': [(<numba.core.ir.Assign object at 0x7c61b3755450>,
                                      388)],
             '$400compare_op.7': [(<numba.core.ir.Assign object at 0x7c61b37555d0>,
                                   388)],
             '$402pred': [(<numba.core.ir.Assign object at 0x7c61b3755840>,
                           388)],
             '$408binary_subscr.3': [(<numba.core.ir.Assign object at 0x7c61b3755bd0>,
                                      404)],
             '$40load_global.15': [(<numba.core.ir.Assign object at 0x7c61b38e2740>,
                                    0)],
             '$430return_value.1': [(<numba.core.ir.Assign object at 0x7c61b3756680>,
                                     428)],
             '$46call_function.18': [(<numba.core.ir.Assign object at 0x7c61b38e2b60>,
                                      0)],
             '$48get_iter.19': [(<numba.core.ir.Assign object at 0x7c61b38e2c80>,
                                 0)],
             '$50for_iter.1': [(<numba.core.ir.Assign object at 0x7c61b38e28f0>,
                                50)],
             '$50for_iter.2': [(<numba.core.ir.Assign object at 0x7c61b38e2d70>,
                                50)],
             '$50for_iter.3': [(<numba.core.ir.Assign object at 0x7c61b38e2e90>,
                                50)],
             '$58binary_subscr.4': [(<numba.core.ir.Assign object at 0x7c61b38e3550>,
                                     52)],
             '$66binary_subtract.8': [(<numba.core.ir.Assign object at 0x7c61b38e3a90>,
                                       52)],
             '$68binary_subscr.9': [(<numba.core.ir.Assign object at 0x7c61b38e3c10>,
                                     52)],
             '$70compare_op.10': [(<numba.core.ir.Assign object at 0x7c61b38e3d90>,
                                   52)],
             '$72pred': [(<numba.core.ir.Assign object at 0x7c61b3738040>, 52)],
             '$80binary_subtract.4': [(<numba.core.ir.Assign object at 0x7c61b3738550>,
                                       74)],
             '$82binary_subscr.5': [(<numba.core.ir.Assign object at 0x7c61b37386d0>,
                                     74)],
             '$90binary_subtract.9': [(<numba.core.ir.Assign object at 0x7c61b3738c10>,
                                       74)],
             '$92binary_subscr.10': [(<numba.core.ir.Assign object at 0x7c61b3738d90>,
                                      74)],
             '$94compare_op.11': [(<numba.core.ir.Assign object at 0x7c61b3738f10>,
                                   74)],
             '$96pred': [(<numba.core.ir.Assign object at 0x7c61b3739180>, 74)],
             '$const116.3.1': [(<numba.core.ir.Assign object at 0x7c61b3739ba0>,
                                112)],
             '$const138.6.1': [(<numba.core.ir.Assign object at 0x7c61b373a8c0>,
                                128)],
             '$const152.3.1': [(<numba.core.ir.Assign object at 0x7c61b373b340>,
                                148)],
             '$const162.8.1': [(<numba.core.ir.Assign object at 0x7c61b373ba00>,
                                148)],
             '$const190.3.1': [(<numba.core.ir.Assign object at 0x7c61b3744b80>,
                                186)],
             '$const206.3.1': [(<numba.core.ir.Assign object at 0x7c61b37454e0>,
                                202)],
             '$const216.8.1': [(<numba.core.ir.Assign object at 0x7c61b3745ba0>,
                                202)],
             '$const260.3.1': [(<numba.core.ir.Assign object at 0x7c61b3747820>,
                                256)],
             '$const270.8.1': [(<numba.core.ir.Assign object at 0x7c61b3747ee0>,
                                256)],
             '$const314.3.1': [(<numba.core.ir.Assign object at 0x7c61b374dba0>,
                                310)],
             '$const324.8.1': [(<numba.core.ir.Assign object at 0x7c61b374e260>,
                                310)],
             '$const368.3.1': [(<numba.core.ir.Assign object at 0x7c61b374fee0>,
                                364)],
             '$const378.8.1': [(<numba.core.ir.Assign object at 0x7c61b37545e0>,
                                364)],
             '$const418.1.2': [(<numba.core.ir.Assign object at 0x7c61b3756020>,
                                418)],
             '$const64.7.1': [(<numba.core.ir.Assign object at 0x7c61b38e38e0>,
                               52)],
             '$const78.3.1': [(<numba.core.ir.Assign object at 0x7c61b37383a0>,
                               74)],
             '$const88.8.1': [(<numba.core.ir.Assign object at 0x7c61b3738a60>,
                               74)],
             '$phi50.0': [(<numba.core.ir.Assign object at 0x7c61b38e0f70>, 0)],
             '$phi52.1': [(<numba.core.ir.Assign object at 0x7c61b38e23b0>,
                           50)],
             'basic_lb': [(<numba.core.ir.Assign object at 0x7c61b38e08e0>, 0)],
             'basic_ub': [(<numba.core.ir.Assign object at 0x7c61b38e0ac0>, 0)],
             'bool146': [(<numba.core.ir.Assign object at 0x7c61b373aec0>,
                          128)],
             'bool170': [(<numba.core.ir.Assign object at 0x7c61b3744040>,
                          148)],
             'bool224': [(<numba.core.ir.Assign object at 0x7c61b37461a0>,
                          202)],
             'bool240': [(<numba.core.ir.Assign object at 0x7c61b3746ce0>,
                          226)],
             'bool278': [(<numba.core.ir.Assign object at 0x7c61b374c520>,
                          256)],
             'bool294': [(<numba.core.ir.Assign object at 0x7c61b374d060>,
                          280)],
             'bool332': [(<numba.core.ir.Assign object at 0x7c61b374e860>,
                          310)],
             'bool348': [(<numba.core.ir.Assign object at 0x7c61b374f3a0>,
                          334)],
             'bool386': [(<numba.core.ir.Assign object at 0x7c61b3754be0>,
                          364)],
             'bool402': [(<numba.core.ir.Assign object at 0x7c61b3755720>,
                          388)],
             'bool72': [(<numba.core.ir.Assign object at 0x7c61b38e3ee0>, 52)],
             'bool96': [(<numba.core.ir.Assign object at 0x7c61b3739060>, 74)],
             'close': [(<numba.core.ir.Assign object at 0x7c61b38e03a0>, 0)],
             'final_lb': [(<numba.core.ir.Assign object at 0x7c61b38e1e70>, 0)],
             'final_ub': [(<numba.core.ir.Assign object at 0x7c61b38e17b0>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x7c61b38e3160>, 52)],
             'length': [(<numba.core.ir.Assign object at 0x7c61b38e10c0>, 0)],
             'n': [(<numba.core.ir.Assign object at 0x7c61b38e0c40>, 0)],
             'supertrend': [(<numba.core.ir.Assign object at 0x7c61b38e2530>,
                             0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x7c61b374fc10>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4522)
           2	LOAD_GLOBAL(arg=0, lineno=4523)
           4	LOAD_ATTR(arg=1, lineno=4523)
           6	LOAD_FAST(arg=0, lineno=4523)
           8	LOAD_FAST(arg=1, lineno=4523)
          10	LOAD_CONST(arg=1, lineno=4523)
          12	CALL_FUNCTION_KW(arg=2, lineno=4523)
          14	STORE_FAST(arg=2, lineno=4523)
          16	LOAD_FAST(arg=2, lineno=4524)
          18	LOAD_METHOD(arg=2, lineno=4524)
          20	CALL_METHOD(arg=0, lineno=4524)
          22	POP_TOP(arg=None, lineno=4524)
          24	LOAD_FAST(arg=2, lineno=4525)
          26	RETURN_VALUE(arg=None, lineno=4525)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4522)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_attr.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_attr.1', '$shape6.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_attr.1', '$shape6.2', '$dtype8.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=CALL_FUNCTION_KW(arg=2, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_attr.1', '$shape6.2', '$dtype8.3', '$const10.4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=14, inst=STORE_FAST(arg=2, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$12call_function_kw.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=4524)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=4524)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$arr16.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=20, inst=CALL_METHOD(arg=0, lineno=4524)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$18load_method.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=22, inst=POP_TOP(arg=None, lineno=4524)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$20call_method.8']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=24, inst=LOAD_FAST(arg=2, lineno=4525)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=26, inst=RETURN_VALUE(arg=None, lineno=4525)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$arr24.9']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'res': '$shape6.2'}), (8, {'res': '$dtype8.3'}), (10, {'res': '$const10.4.1'}), (12, {'func': '$4load_attr.1', 'args': ['$shape6.2', '$dtype8.3'], 'names': '$const10.4.1', 'res': '$12call_function_kw.5'}), (14, {'value': '$12call_function_kw.5'}), (16, {'res': '$arr16.6'}), (18, {'item': '$arr16.6', 'res': '$18load_method.7'}), (20, {'func': '$18load_method.7', 'args': [], 'res': '$20call_method.8'}), (24, {'res': '$arr24.9'}), (26, {'retval': '$arr24.9', 'castval': '$26return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=empty) ['$2load_global.0', '$4load_attr.1']
    arr = call $4load_attr.1(shape, func=$4load_attr.1, args=[Var(shape, arrayobj.py:4522)], kws=[('dtype', Var(dtype, arrayobj.py:4522))], vararg=None, varkwarg=None, target=None) ['$4load_attr.1', 'arr', 'dtype', 'shape']
    $18load_method.7 = getattr(value=arr, attr=_zero_fill) ['$18load_method.7', 'arr']
    $20call_method.8 = call $18load_method.7(func=$18load_method.7, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_method.7', '$20call_method.8']
    $26return_value.10 = cast(value=arr)     ['$26return_value.10', 'arr']
    return $26return_value.10                ['$26return_value.10']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c61b37a5d80>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: shape = arg(0, name=shape)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: dtype = arg(1, name=dtype)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: arr = call $4load_attr.1(shape, func=$4load_attr.1, args=[Var(shape, arrayobj.py:4522)], kws=[('dtype', Var(dtype, arrayobj.py:4522))], vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $18load_method.7 = getattr(value=arr, attr=_zero_fill)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $20call_method.8 = call $18load_method.7(func=$18load_method.7, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $26return_value.10 = cast(value=arr)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $26return_value.10
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$18load_method.7': [(<numba.core.ir.Assign object at 0x7c61b37a75e0>,
                                   0)],
             '$20call_method.8': [(<numba.core.ir.Assign object at 0x7c61b37a77f0>,
                                   0)],
             '$26return_value.10': [(<numba.core.ir.Assign object at 0x7c61b37a7a00>,
                                     0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7c61b37a6b00>,
                                  0)],
             '$4load_attr.1': [(<numba.core.ir.Assign object at 0x7c61b37a6c80>,
                                0)],
             'arr': [(<numba.core.ir.Assign object at 0x7c61b37a7340>, 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x7c61b37a6980>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x7c61b37a6860>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x7c61b37a5d80>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4454)
           2	LOAD_GLOBAL(arg=0, lineno=4455)
           4	LOAD_FAST(arg=0, lineno=4455)
           6	LOAD_FAST(arg=1, lineno=4455)
           8	LOAD_DEREF(arg=0, lineno=4455)
          10	CALL_FUNCTION(arg=3, lineno=4455)
          12	RETURN_VALUE(arg=None, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4454)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$shape4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=LOAD_DEREF(arg=0, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$shape4.1', '$dtype6.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=CALL_FUNCTION(arg=3, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$shape4.1', '$dtype6.2', '$8load_deref.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$10call_function.4']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'res': '$dtype6.2'}), (8, {'res': '$8load_deref.3'}), (10, {'func': '$2load_global.0', 'args': ['$shape4.1', '$dtype6.2', '$8load_deref.3'], 'res': '$10call_function.4'}), (12, {'retval': '$10call_function.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$2load_global.0']
    $8load_deref.3 = freevar(retty: array(float64, 1d, C)) ['$8load_deref.3']
    $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4454), Var(dtype, arrayobj.py:4454), Var($8load_deref.3, arrayobj.py:4455)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_deref.3', 'dtype', 'shape']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c61b36713f0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: shape = arg(0, name=shape)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: dtype = arg(1, name=dtype)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $8load_deref.3 = freevar(retty: array(float64, 1d, C))
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4454), Var(dtype, arrayobj.py:4454), Var($8load_deref.3, arrayobj.py:4455)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $12return_value.5 = cast(value=$10call_function.4)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $12return_value.5
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$10call_function.4': [(<numba.core.ir.Assign object at 0x7c61b3671660>,
                                     0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x7c61b3671540>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7c61b3671b10>,
                                  0)],
             '$8load_deref.3': [(<numba.core.ir.Assign object at 0x7c61b3671840>,
                                 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x7c61b3671990>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x7c61b3670b80>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x7c61b36713f0>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4330)
           2	LOAD_FAST(arg=0, lineno=4333)
           4	LOAD_METHOD(arg=0, lineno=4333)
           6	LOAD_FAST(arg=1, lineno=4333)
           8	LOAD_FAST(arg=2, lineno=4333)
          10	CALL_METHOD(arg=2, lineno=4333)
          12	RETURN_VALUE(arg=None, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4330)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_METHOD(arg=0, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$arrtype2.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_method.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_method.1', '$size6.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=CALL_METHOD(arg=2, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_method.1', '$size6.2', '$align8.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$10call_method.4']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$arrtype2.0'}), (4, {'item': '$arrtype2.0', 'res': '$4load_method.1'}), (6, {'res': '$size6.2'}), (8, {'res': '$align8.3'}), (10, {'func': '$4load_method.1', 'args': ['$size6.2', '$align8.3'], 'res': '$10call_method.4'}), (12, {'retval': '$10call_method.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    arrtype = arg(0, name=arrtype)           ['arrtype']
    size = arg(1, name=size)                 ['size']
    align = arg(2, name=align)               ['align']
    $4load_method.1 = getattr(value=arrtype, attr=_allocate) ['$4load_method.1', 'arrtype']
    $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:4330), Var(align, arrayobj.py:4330)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', 'align', 'size']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c61b37a6470>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: arrtype = arg(0, name=arrtype)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: size = arg(1, name=size)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: align = arg(2, name=align)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $4load_method.1 = getattr(value=arrtype, attr=_allocate)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:4330), Var(align, arrayobj.py:4330)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $12return_value.5 = cast(value=$10call_method.4)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $12return_value.5
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$10call_method.4': [(<numba.core.ir.Assign object at 0x7c61b36d0ee0>,
                                   0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x7c61b36d0fd0>,
                                    0)],
             '$4load_method.1': [(<numba.core.ir.Assign object at 0x7c61b36d0a90>,
                                  0)],
             'align': [(<numba.core.ir.Assign object at 0x7c61b36d07f0>, 0)],
             'arrtype': [(<numba.core.ir.Assign object at 0x7c61b36d0100>, 0)],
             'size': [(<numba.core.ir.Assign object at 0x7c61b36d06d0>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x7c61b37a6470>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4325)
           2	LOAD_GLOBAL(arg=0, lineno=4326)
           4	LOAD_FAST(arg=1, lineno=4326)
           6	LOAD_FAST(arg=2, lineno=4326)
           8	CALL_FUNCTION(arg=2, lineno=4326)
          10	RETURN_VALUE(arg=None, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4325)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=LOAD_FAST(arg=2, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$allocsize4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$allocsize4.1', '$align6.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=RETURN_VALUE(arg=None, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$8call_function.3']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$allocsize4.1'}), (6, {'res': '$align6.2'}), (8, {'func': '$2load_global.0', 'args': ['$allocsize4.1', '$align6.2'], 'res': '$8call_function.3'}), (10, {'retval': '$8call_function.3', 'castval': '$10return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    cls = arg(0, name=cls)                   ['cls']
    allocsize = arg(1, name=allocsize)       ['allocsize']
    align = arg(2, name=align)               ['align']
    $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:4325), Var(align, arrayobj.py:4325)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'align', 'allocsize']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c61b36d1cc0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: cls = arg(0, name=cls)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: allocsize = arg(1, name=allocsize)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: align = arg(2, name=align)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:4325), Var(align, arrayobj.py:4325)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $10return_value.4 = cast(value=$8call_function.3)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $10return_value.4
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$10return_value.4': [(<numba.core.ir.Assign object at 0x7c61b36d30a0>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7c61b36d2b60>,
                                  0)],
             '$8call_function.3': [(<numba.core.ir.Assign object at 0x7c61b36d2f80>,
                                    0)],
             'align': [(<numba.core.ir.Assign object at 0x7c61b36d29e0>, 0)],
             'allocsize': [(<numba.core.ir.Assign object at 0x7c61b36d28c0>,
                            0)],
             'cls': [(<numba.core.ir.Assign object at 0x7c61b36d27a0>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x7c61b36d1cc0>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4513)
           2	LOAD_GLOBAL(arg=0, lineno=4514)
           4	LOAD_FAST(arg=0, lineno=4514)
           6	CALL_FUNCTION(arg=1, lineno=4514)
           8	POP_TOP(arg=None, lineno=4514)
          10	LOAD_CONST(arg=0, lineno=4514)
          12	RETURN_VALUE(arg=None, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4513)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$self4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=POP_TOP(arg=None, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$6call_function.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=LOAD_CONST(arg=0, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$const10.3.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$self4.1'}), (6, {'func': '$2load_global.0', 'args': ['$self4.1'], 'res': '$6call_function.2'}), (10, {'res': '$const10.3.0'}), (12, {'retval': '$const10.3.0', 'castval': '$12return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    self = arg(0, name=self)                 ['self']
    $2load_global.0 = global(_zero_fill_array_method: <intrinsic _zero_fill_array_method>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(self, func=$2load_global.0, args=[Var(self, arrayobj.py:4513)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'self']
    $const10.3.0 = const(NoneType, None)     ['$const10.3.0']
    $12return_value.4 = cast(value=$const10.3.0) ['$12return_value.4', '$const10.3.0']
    return $12return_value.4                 ['$12return_value.4']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c61b357e800>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: self = arg(0, name=self)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(_zero_fill_array_method: <intrinsic _zero_fill_array_method>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $6call_function.2 = call $2load_global.0(self, func=$2load_global.0, args=[Var(self, arrayobj.py:4513)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const10.3.0 = const(NoneType, None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $12return_value.4 = cast(value=$const10.3.0)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $12return_value.4
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$12return_value.4': [(<numba.core.ir.Assign object at 0x7c61b357ec80>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7c61b357df30>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x7c61b357e080>,
                                    0)],
             '$const10.3.0': [(<numba.core.ir.Assign object at 0x7c61b357eb00>,
                               0)],
             'self': [(<numba.core.ir.Assign object at 0x7c61b357dd80>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x7c61b357e800>
yfinance - [DEBUG]{MainThread} - wrapper() - Entering history()
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NQ=F', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -  Entering history()
yfinance - [DEBUG]{MainThread} - history() - NQ=F: Yahoo GET parameters: {'range': '60d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -   Entering get()
yfinance - [DEBUG]{MainThread} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{MainThread} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/NQ=F
yfinance - [DEBUG]{MainThread} - _make_request() - params={'range': '60d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{MainThread} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - _get_crumb_basic() - reusing crumb
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _make_request() - response code=200
yfinance - [DEBUG]{MainThread} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{MainThread} - wrapper() -   Exiting get()
yfinance - [DEBUG]{MainThread} - history() - NQ=F: yfinance received OHLC data: 2025-04-22 04:00:00 -> 2025-06-30 06:16:10
yfinance - [DEBUG]{MainThread} - history() - NQ=F: OHLC after cleaning: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:16:10-04:00
yfinance - [DEBUG]{MainThread} - history() - NQ=F: OHLC after combining events: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:16:10-04:00
yfinance - [DEBUG]{MainThread} - history() - NQ=F: yfinance returning OHLC: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:15:00-04:00
yfinance - [DEBUG]{MainThread} - wrapper() -  Exiting history()
yfinance - [DEBUG]{MainThread} - wrapper() - Exiting history()
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
h5py._conv - [DEBUG]{MainThread} - <module>() - Creating converter from 7 to 5
h5py._conv - [DEBUG]{MainThread} - <module>() - Creating converter from 5 to 7
h5py._conv - [DEBUG]{MainThread} - <module>() - Creating converter from 7 to 5
h5py._conv - [DEBUG]{MainThread} - <module>() - Creating converter from 5 to 7
matplotlib - [DEBUG]{MainThread} - wrapper() - matplotlib data path: /opt/conda/lib/python3.10/site-packages/matplotlib/mpl-data
matplotlib - [DEBUG]{MainThread} - wrapper() - CONFIGDIR=/root/.config/matplotlib
matplotlib - [DEBUG]{MainThread} - <module>() - interactive is False
matplotlib - [DEBUG]{MainThread} - <module>() - platform is linux
matplotlib - [DEBUG]{MainThread} - wrapper() - CACHEDIR=/root/.cache/matplotlib
matplotlib.font_manager - [DEBUG]{MainThread} - _load_fontmanager() - Using fontManager instance from /root/.cache/matplotlib/fontlist-v390.json
yfinance - [DEBUG]{MainThread} - wrapper() - Entering history()
peewee - [DEBUG]{MainThread} - execute_sql() - ('CREATE TABLE IF NOT EXISTS "_tz_kv" ("key" VARCHAR(255) NOT NULL PRIMARY KEY, "value" VARCHAR(255)) WITHOUT ROWID', [])
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['UBER', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -  Entering history()
yfinance - [DEBUG]{MainThread} - history() - UBER: Yahoo GET parameters: {'range': '60d', 'interval': '15m', 'includePrePost': True, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -   Entering get()
yfinance - [DEBUG]{MainThread} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{MainThread} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/UBER
yfinance - [DEBUG]{MainThread} - _make_request() - params={'range': '60d', 'interval': '15m', 'includePrePost': True, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{MainThread} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -        Entering _load_cookie_curlCffi()
peewee - [DEBUG]{MainThread} - execute_sql() - ('CREATE TABLE IF NOT EXISTS "_cookieschema" ("strategy" VARCHAR(255) NOT NULL PRIMARY KEY, "fetch_date" DATETIME NOT NULL, "cookie_bytes" BLOB NOT NULL) WITHOUT ROWID', [])
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -        Exiting _load_cookie_curlCffi()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing persistent cookie
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -        Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{MainThread} - wrapper() -        Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_crumb_basic() - crumb = 'dK3IG/1ev6r'
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _make_request() - response code=200
yfinance - [DEBUG]{MainThread} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{MainThread} - wrapper() -   Exiting get()
yfinance - [DEBUG]{MainThread} - history() - UBER: yfinance received OHLC data: 2025-04-02 08:00:00 -> 2025-06-27 23:59:53
yfinance - [DEBUG]{MainThread} - history() - UBER: OHLC after cleaning: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:59:53-04:00
yfinance - [DEBUG]{MainThread} - history() - UBER: OHLC after combining events: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:59:53-04:00
yfinance - [DEBUG]{MainThread} - history() - UBER: yfinance returning OHLC: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:45:00-04:00
yfinance - [DEBUG]{MainThread} - wrapper() -  Exiting history()
yfinance - [DEBUG]{MainThread} - wrapper() - Exiting history()
root - [INFO]{MainThread} - get_buy_sell_points_Roll() - Parameters of acquisition "buy_sell_points" for this stock is set to POSITIVE (units) 	92%: 1.123 	98%: 1.8743 NEGATIVE (units) 	93%: 1.252 	98%: 1.9188
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=99)
           2	LOAD_GLOBAL(arg=0, lineno=106)
           4	LOAD_FAST(arg=0, lineno=106)
           6	CALL_FUNCTION(arg=1, lineno=106)
           8	STORE_FAST(arg=4, lineno=106)
          10	LOAD_GLOBAL(arg=1, lineno=107)
          12	LOAD_METHOD(arg=2, lineno=107)
          14	LOAD_FAST(arg=4, lineno=107)
          16	CALL_METHOD(arg=1, lineno=107)
          18	STORE_FAST(arg=5, lineno=107)
          20	LOAD_GLOBAL(arg=1, lineno=108)
          22	LOAD_METHOD(arg=2, lineno=108)
          24	LOAD_FAST(arg=4, lineno=108)
          26	CALL_METHOD(arg=1, lineno=108)
          28	STORE_FAST(arg=6, lineno=108)
          30	LOAD_GLOBAL(arg=1, lineno=109)
          32	LOAD_METHOD(arg=2, lineno=109)
          34	LOAD_FAST(arg=4, lineno=109)
          36	CALL_METHOD(arg=1, lineno=109)
          38	STORE_FAST(arg=7, lineno=109)
          40	LOAD_GLOBAL(arg=3, lineno=111)
          42	LOAD_FAST(arg=3, lineno=111)
          44	LOAD_FAST(arg=4, lineno=111)
          46	CALL_FUNCTION(arg=2, lineno=111)
          48	GET_ITER(arg=None, lineno=111)
>         50	FOR_ITER(arg=188, lineno=111)
          52	STORE_FAST(arg=8, lineno=111)
          54	LOAD_FAST(arg=1, lineno=113)
          56	LOAD_FAST(arg=8, lineno=113)
          58	BINARY_SUBSCR(arg=None, lineno=113)
          60	LOAD_FAST(arg=5, lineno=113)
          62	LOAD_FAST(arg=8, lineno=113)
          64	LOAD_CONST(arg=1, lineno=113)
          66	BINARY_SUBTRACT(arg=None, lineno=113)
          68	BINARY_SUBSCR(arg=None, lineno=113)
          70	COMPARE_OP(arg=0, lineno=113)
          72	POP_JUMP_IF_TRUE(arg=50, lineno=113)
          74	LOAD_FAST(arg=0, lineno=113)
          76	LOAD_FAST(arg=8, lineno=113)
          78	LOAD_CONST(arg=1, lineno=113)
          80	BINARY_SUBTRACT(arg=None, lineno=113)
          82	BINARY_SUBSCR(arg=None, lineno=113)
          84	LOAD_FAST(arg=5, lineno=113)
          86	LOAD_FAST(arg=8, lineno=113)
          88	LOAD_CONST(arg=1, lineno=113)
          90	BINARY_SUBTRACT(arg=None, lineno=113)
          92	BINARY_SUBSCR(arg=None, lineno=113)
          94	COMPARE_OP(arg=4, lineno=113)
          96	POP_JUMP_IF_FALSE(arg=57, lineno=113)
>         98	LOAD_FAST(arg=1, lineno=114)
         100	LOAD_FAST(arg=8, lineno=114)
         102	BINARY_SUBSCR(arg=None, lineno=114)
         104	LOAD_FAST(arg=5, lineno=114)
         106	LOAD_FAST(arg=8, lineno=114)
         108	STORE_SUBSCR(arg=None, lineno=114)
         110	JUMP_FORWARD(arg=8, lineno=114)
>        112	LOAD_FAST(arg=5, lineno=116)
         114	LOAD_FAST(arg=8, lineno=116)
         116	LOAD_CONST(arg=1, lineno=116)
         118	BINARY_SUBTRACT(arg=None, lineno=116)
         120	BINARY_SUBSCR(arg=None, lineno=116)
         122	LOAD_FAST(arg=5, lineno=116)
         124	LOAD_FAST(arg=8, lineno=116)
         126	STORE_SUBSCR(arg=None, lineno=116)
>        128	LOAD_FAST(arg=2, lineno=118)
         130	LOAD_FAST(arg=8, lineno=118)
         132	BINARY_SUBSCR(arg=None, lineno=118)
         134	LOAD_FAST(arg=6, lineno=118)
         136	LOAD_FAST(arg=8, lineno=118)
         138	LOAD_CONST(arg=1, lineno=118)
         140	BINARY_SUBTRACT(arg=None, lineno=118)
         142	BINARY_SUBSCR(arg=None, lineno=118)
         144	COMPARE_OP(arg=4, lineno=118)
         146	POP_JUMP_IF_TRUE(arg=87, lineno=118)
         148	LOAD_FAST(arg=0, lineno=118)
         150	LOAD_FAST(arg=8, lineno=118)
         152	LOAD_CONST(arg=1, lineno=118)
         154	BINARY_SUBTRACT(arg=None, lineno=118)
         156	BINARY_SUBSCR(arg=None, lineno=118)
         158	LOAD_FAST(arg=6, lineno=118)
         160	LOAD_FAST(arg=8, lineno=118)
         162	LOAD_CONST(arg=1, lineno=118)
         164	BINARY_SUBTRACT(arg=None, lineno=118)
         166	BINARY_SUBSCR(arg=None, lineno=118)
         168	COMPARE_OP(arg=0, lineno=118)
         170	POP_JUMP_IF_FALSE(arg=94, lineno=118)
>        172	LOAD_FAST(arg=2, lineno=119)
         174	LOAD_FAST(arg=8, lineno=119)
         176	BINARY_SUBSCR(arg=None, lineno=119)
         178	LOAD_FAST(arg=6, lineno=119)
         180	LOAD_FAST(arg=8, lineno=119)
         182	STORE_SUBSCR(arg=None, lineno=119)
         184	JUMP_FORWARD(arg=8, lineno=119)
>        186	LOAD_FAST(arg=6, lineno=121)
         188	LOAD_FAST(arg=8, lineno=121)
         190	LOAD_CONST(arg=1, lineno=121)
         192	BINARY_SUBTRACT(arg=None, lineno=121)
         194	BINARY_SUBSCR(arg=None, lineno=121)
         196	LOAD_FAST(arg=6, lineno=121)
         198	LOAD_FAST(arg=8, lineno=121)
         200	STORE_SUBSCR(arg=None, lineno=121)
>        202	LOAD_FAST(arg=7, lineno=123)
         204	LOAD_FAST(arg=8, lineno=123)
         206	LOAD_CONST(arg=1, lineno=123)
         208	BINARY_SUBTRACT(arg=None, lineno=123)
         210	BINARY_SUBSCR(arg=None, lineno=123)
         212	LOAD_FAST(arg=5, lineno=123)
         214	LOAD_FAST(arg=8, lineno=123)
         216	LOAD_CONST(arg=1, lineno=123)
         218	BINARY_SUBTRACT(arg=None, lineno=123)
         220	BINARY_SUBSCR(arg=None, lineno=123)
         222	COMPARE_OP(arg=2, lineno=123)
         224	POP_JUMP_IF_FALSE(arg=129, lineno=123)
         226	LOAD_FAST(arg=0, lineno=123)
         228	LOAD_FAST(arg=8, lineno=123)
         230	BINARY_SUBSCR(arg=None, lineno=123)
         232	LOAD_FAST(arg=5, lineno=123)
         234	LOAD_FAST(arg=8, lineno=123)
         236	BINARY_SUBSCR(arg=None, lineno=123)
         238	COMPARE_OP(arg=1, lineno=123)
         240	POP_JUMP_IF_FALSE(arg=129, lineno=123)
         242	LOAD_FAST(arg=5, lineno=124)
         244	LOAD_FAST(arg=8, lineno=124)
         246	BINARY_SUBSCR(arg=None, lineno=124)
         248	LOAD_FAST(arg=7, lineno=124)
         250	LOAD_FAST(arg=8, lineno=124)
         252	STORE_SUBSCR(arg=None, lineno=124)
         254	JUMP_ABSOLUTE(arg=26, lineno=124)
>        256	LOAD_FAST(arg=7, lineno=125)
         258	LOAD_FAST(arg=8, lineno=125)
         260	LOAD_CONST(arg=1, lineno=125)
         262	BINARY_SUBTRACT(arg=None, lineno=125)
         264	BINARY_SUBSCR(arg=None, lineno=125)
         266	LOAD_FAST(arg=5, lineno=125)
         268	LOAD_FAST(arg=8, lineno=125)
         270	LOAD_CONST(arg=1, lineno=125)
         272	BINARY_SUBTRACT(arg=None, lineno=125)
         274	BINARY_SUBSCR(arg=None, lineno=125)
         276	COMPARE_OP(arg=2, lineno=125)
         278	POP_JUMP_IF_FALSE(arg=156, lineno=125)
         280	LOAD_FAST(arg=0, lineno=125)
         282	LOAD_FAST(arg=8, lineno=125)
         284	BINARY_SUBSCR(arg=None, lineno=125)
         286	LOAD_FAST(arg=5, lineno=125)
         288	LOAD_FAST(arg=8, lineno=125)
         290	BINARY_SUBSCR(arg=None, lineno=125)
         292	COMPARE_OP(arg=4, lineno=125)
         294	POP_JUMP_IF_FALSE(arg=156, lineno=125)
         296	LOAD_FAST(arg=6, lineno=126)
         298	LOAD_FAST(arg=8, lineno=126)
         300	BINARY_SUBSCR(arg=None, lineno=126)
         302	LOAD_FAST(arg=7, lineno=126)
         304	LOAD_FAST(arg=8, lineno=126)
         306	STORE_SUBSCR(arg=None, lineno=126)
         308	JUMP_ABSOLUTE(arg=26, lineno=126)
>        310	LOAD_FAST(arg=7, lineno=127)
         312	LOAD_FAST(arg=8, lineno=127)
         314	LOAD_CONST(arg=1, lineno=127)
         316	BINARY_SUBTRACT(arg=None, lineno=127)
         318	BINARY_SUBSCR(arg=None, lineno=127)
         320	LOAD_FAST(arg=6, lineno=127)
         322	LOAD_FAST(arg=8, lineno=127)
         324	LOAD_CONST(arg=1, lineno=127)
         326	BINARY_SUBTRACT(arg=None, lineno=127)
         328	BINARY_SUBSCR(arg=None, lineno=127)
         330	COMPARE_OP(arg=2, lineno=127)
         332	POP_JUMP_IF_FALSE(arg=183, lineno=127)
         334	LOAD_FAST(arg=0, lineno=127)
         336	LOAD_FAST(arg=8, lineno=127)
         338	BINARY_SUBSCR(arg=None, lineno=127)
         340	LOAD_FAST(arg=6, lineno=127)
         342	LOAD_FAST(arg=8, lineno=127)
         344	BINARY_SUBSCR(arg=None, lineno=127)
         346	COMPARE_OP(arg=5, lineno=127)
         348	POP_JUMP_IF_FALSE(arg=183, lineno=127)
         350	LOAD_FAST(arg=6, lineno=128)
         352	LOAD_FAST(arg=8, lineno=128)
         354	BINARY_SUBSCR(arg=None, lineno=128)
         356	LOAD_FAST(arg=7, lineno=128)
         358	LOAD_FAST(arg=8, lineno=128)
         360	STORE_SUBSCR(arg=None, lineno=128)
         362	JUMP_ABSOLUTE(arg=26, lineno=128)
>        364	LOAD_FAST(arg=7, lineno=129)
         366	LOAD_FAST(arg=8, lineno=129)
         368	LOAD_CONST(arg=1, lineno=129)
         370	BINARY_SUBTRACT(arg=None, lineno=129)
         372	BINARY_SUBSCR(arg=None, lineno=129)
         374	LOAD_FAST(arg=6, lineno=129)
         376	LOAD_FAST(arg=8, lineno=129)
         378	LOAD_CONST(arg=1, lineno=129)
         380	BINARY_SUBTRACT(arg=None, lineno=129)
         382	BINARY_SUBSCR(arg=None, lineno=129)
         384	COMPARE_OP(arg=2, lineno=129)
         386	POP_JUMP_IF_FALSE(arg=210, lineno=129)
         388	LOAD_FAST(arg=0, lineno=129)
         390	LOAD_FAST(arg=8, lineno=129)
         392	BINARY_SUBSCR(arg=None, lineno=129)
         394	LOAD_FAST(arg=6, lineno=129)
         396	LOAD_FAST(arg=8, lineno=129)
         398	BINARY_SUBSCR(arg=None, lineno=129)
         400	COMPARE_OP(arg=0, lineno=129)
         402	POP_JUMP_IF_FALSE(arg=210, lineno=129)
         404	LOAD_FAST(arg=5, lineno=130)
         406	LOAD_FAST(arg=8, lineno=130)
         408	BINARY_SUBSCR(arg=None, lineno=130)
         410	LOAD_FAST(arg=7, lineno=130)
         412	LOAD_FAST(arg=8, lineno=130)
         414	STORE_SUBSCR(arg=None, lineno=130)
         416	JUMP_ABSOLUTE(arg=26, lineno=130)
>        418	LOAD_CONST(arg=2, lineno=132)
         420	LOAD_FAST(arg=7, lineno=132)
         422	LOAD_FAST(arg=8, lineno=132)
         424	STORE_SUBSCR(arg=None, lineno=132)
         426	JUMP_ABSOLUTE(arg=26, lineno=132)
>        428	LOAD_FAST(arg=7, lineno=134)
         430	RETURN_VALUE(arg=None, lineno=134)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=99)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=106)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=106)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=106)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$close4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=STORE_FAST(arg=4, lineno=106)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$6call_function.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=LOAD_METHOD(arg=2, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$10load_global.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=14, inst=LOAD_FAST(arg=4, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$12load_method.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=16, inst=CALL_METHOD(arg=1, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$12load_method.4', '$length14.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=18, inst=STORE_FAST(arg=5, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$16call_method.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=20, inst=LOAD_GLOBAL(arg=1, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=22, inst=LOAD_METHOD(arg=2, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$20load_global.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=24, inst=LOAD_FAST(arg=4, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$22load_method.8']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=26, inst=CALL_METHOD(arg=1, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$22load_method.8', '$length24.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=28, inst=STORE_FAST(arg=6, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$26call_method.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=30, inst=LOAD_GLOBAL(arg=1, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=32, inst=LOAD_METHOD(arg=2, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$30load_global.11']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=34, inst=LOAD_FAST(arg=4, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$32load_method.12']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=36, inst=CALL_METHOD(arg=1, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$32load_method.12', '$length34.13']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=38, inst=STORE_FAST(arg=7, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$36call_method.14']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=40, inst=LOAD_GLOBAL(arg=3, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=42, inst=LOAD_FAST(arg=3, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$40load_global.15']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=44, inst=LOAD_FAST(arg=4, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$40load_global.15', '$n42.16']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=46, inst=CALL_FUNCTION(arg=2, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$40load_global.15', '$n42.16', '$length44.17']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=48, inst=GET_ITER(arg=None, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$46call_function.18']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$48get_iter.19',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi50.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=50 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=50, inst=FOR_ITER(arg=188, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi50.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=428, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=('$phi50.0', '$50for_iter.2'), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=428 nstack_initial=0), State(pc_initial=52 nstack_initial=2)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=428 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=428, inst=LOAD_FAST(arg=7, lineno=134)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=430, inst=RETURN_VALUE(arg=None, lineno=134)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$supertrend428.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=52 nstack_initial=2)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi52.0', '$phi52.1']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=52 nstack_initial=2)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=52, inst=STORE_FAST(arg=8, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$phi52.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=54, inst=LOAD_FAST(arg=1, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=56, inst=LOAD_FAST(arg=8, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$basic_ub54.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=58, inst=BINARY_SUBSCR(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$basic_ub54.2', '$i56.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=60, inst=LOAD_FAST(arg=5, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=62, inst=LOAD_FAST(arg=8, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$final_ub60.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$final_ub60.5', '$i62.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=66, inst=BINARY_SUBTRACT(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$final_ub60.5', '$i62.6', '$const64.7.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=68, inst=BINARY_SUBSCR(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$final_ub60.5', '$66binary_subtract.8']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=70, inst=COMPARE_OP(arg=0, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$68binary_subscr.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=72, inst=POP_JUMP_IF_TRUE(arg=50, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$70compare_op.10']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=74, stack=('$phi52.0',), blockstack=(), npush=0), Edge(pc=98, stack=('$phi52.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=74 nstack_initial=1), State(pc_initial=98 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi74.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=74 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=74, inst=LOAD_FAST(arg=0, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=76, inst=LOAD_FAST(arg=8, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$close74.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$close74.1', '$i76.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=80, inst=BINARY_SUBTRACT(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$close74.1', '$i76.2', '$const78.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$close74.1', '$80binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=84, inst=LOAD_FAST(arg=5, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=86, inst=LOAD_FAST(arg=8, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$final_ub84.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=88, inst=LOAD_CONST(arg=1, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$final_ub84.6', '$i86.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=90, inst=BINARY_SUBTRACT(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$final_ub84.6', '$i86.7', '$const88.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=92, inst=BINARY_SUBSCR(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$final_ub84.6', '$90binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=94, inst=COMPARE_OP(arg=4, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$92binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=96, inst=POP_JUMP_IF_FALSE(arg=57, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$94compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=98, stack=('$phi74.0',), blockstack=(), npush=0), Edge(pc=112, stack=('$phi74.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=98 nstack_initial=1), State(pc_initial=98 nstack_initial=1), State(pc_initial=112 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi98.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=98 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=98, inst=LOAD_FAST(arg=1, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=100, inst=LOAD_FAST(arg=8, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$basic_ub98.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=102, inst=BINARY_SUBSCR(arg=None, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$basic_ub98.1', '$i100.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=104, inst=LOAD_FAST(arg=5, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$102binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=106, inst=LOAD_FAST(arg=8, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$102binary_subscr.3', '$final_ub104.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=108, inst=STORE_SUBSCR(arg=None, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$102binary_subscr.3', '$final_ub104.4', '$i106.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=110, inst=JUMP_FORWARD(arg=8, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=128, stack=('$phi98.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=98 nstack_initial=1), State(pc_initial=112 nstack_initial=1), State(pc_initial=128 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=112 nstack_initial=1), State(pc_initial=128 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi112.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=112 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=112, inst=LOAD_FAST(arg=5, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=114, inst=LOAD_FAST(arg=8, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$final_ub112.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=116, inst=LOAD_CONST(arg=1, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$final_ub112.1', '$i114.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=118, inst=BINARY_SUBTRACT(arg=None, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$final_ub112.1', '$i114.2', '$const116.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=120, inst=BINARY_SUBSCR(arg=None, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$final_ub112.1', '$118binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=122, inst=LOAD_FAST(arg=5, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$120binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=124, inst=LOAD_FAST(arg=8, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$120binary_subscr.5', '$final_ub122.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=126, inst=STORE_SUBSCR(arg=None, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$120binary_subscr.5', '$final_ub122.6', '$i124.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=128, stack=('$phi112.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=128 nstack_initial=1), State(pc_initial=128 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi128.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=128 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=128, inst=LOAD_FAST(arg=2, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=130, inst=LOAD_FAST(arg=8, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$basic_lb128.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=132, inst=BINARY_SUBSCR(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$basic_lb128.1', '$i130.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=134, inst=LOAD_FAST(arg=6, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=136, inst=LOAD_FAST(arg=8, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$final_lb134.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=138, inst=LOAD_CONST(arg=1, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$final_lb134.4', '$i136.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=140, inst=BINARY_SUBTRACT(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$final_lb134.4', '$i136.5', '$const138.6.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=142, inst=BINARY_SUBSCR(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$final_lb134.4', '$140binary_subtract.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=144, inst=COMPARE_OP(arg=4, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$142binary_subscr.8']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=146, inst=POP_JUMP_IF_TRUE(arg=87, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$144compare_op.9']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=148, stack=('$phi128.0',), blockstack=(), npush=0), Edge(pc=172, stack=('$phi128.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=128 nstack_initial=1), State(pc_initial=148 nstack_initial=1), State(pc_initial=172 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=148 nstack_initial=1), State(pc_initial=172 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi148.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=148 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=150, inst=LOAD_FAST(arg=8, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$close148.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=152, inst=LOAD_CONST(arg=1, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$close148.1', '$i150.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=154, inst=BINARY_SUBTRACT(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$close148.1', '$i150.2', '$const152.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=156, inst=BINARY_SUBSCR(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$close148.1', '$154binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=158, inst=LOAD_FAST(arg=6, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=160, inst=LOAD_FAST(arg=8, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$final_lb158.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=162, inst=LOAD_CONST(arg=1, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$final_lb158.6', '$i160.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=164, inst=BINARY_SUBTRACT(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$final_lb158.6', '$i160.7', '$const162.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=166, inst=BINARY_SUBSCR(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$final_lb158.6', '$164binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=168, inst=COMPARE_OP(arg=0, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$166binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=170, inst=POP_JUMP_IF_FALSE(arg=94, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$168compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=172, stack=('$phi148.0',), blockstack=(), npush=0), Edge(pc=186, stack=('$phi148.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=172 nstack_initial=1), State(pc_initial=172 nstack_initial=1), State(pc_initial=186 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi172.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=172 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=172, inst=LOAD_FAST(arg=2, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=174, inst=LOAD_FAST(arg=8, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$basic_lb172.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=176, inst=BINARY_SUBSCR(arg=None, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$basic_lb172.1', '$i174.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=178, inst=LOAD_FAST(arg=6, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$176binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=180, inst=LOAD_FAST(arg=8, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$176binary_subscr.3', '$final_lb178.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=182, inst=STORE_SUBSCR(arg=None, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$176binary_subscr.3', '$final_lb178.4', '$i180.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=184, inst=JUMP_FORWARD(arg=8, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=202, stack=('$phi172.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=172 nstack_initial=1), State(pc_initial=186 nstack_initial=1), State(pc_initial=202 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=186 nstack_initial=1), State(pc_initial=202 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi186.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=186 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=186, inst=LOAD_FAST(arg=6, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=188, inst=LOAD_FAST(arg=8, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$final_lb186.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=190, inst=LOAD_CONST(arg=1, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$final_lb186.1', '$i188.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=192, inst=BINARY_SUBTRACT(arg=None, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$final_lb186.1', '$i188.2', '$const190.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=194, inst=BINARY_SUBSCR(arg=None, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$final_lb186.1', '$192binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=196, inst=LOAD_FAST(arg=6, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$194binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=198, inst=LOAD_FAST(arg=8, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$194binary_subscr.5', '$final_lb196.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=200, inst=STORE_SUBSCR(arg=None, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$194binary_subscr.5', '$final_lb196.6', '$i198.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=202, stack=('$phi186.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=202 nstack_initial=1), State(pc_initial=202 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi202.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=202 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=202, inst=LOAD_FAST(arg=7, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=204, inst=LOAD_FAST(arg=8, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$supertrend202.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=206, inst=LOAD_CONST(arg=1, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$supertrend202.1', '$i204.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=208, inst=BINARY_SUBTRACT(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$supertrend202.1', '$i204.2', '$const206.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=210, inst=BINARY_SUBSCR(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$supertrend202.1', '$208binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=212, inst=LOAD_FAST(arg=5, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=214, inst=LOAD_FAST(arg=8, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$final_ub212.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=216, inst=LOAD_CONST(arg=1, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$final_ub212.6', '$i214.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=218, inst=BINARY_SUBTRACT(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$final_ub212.6', '$i214.7', '$const216.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=220, inst=BINARY_SUBSCR(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$final_ub212.6', '$218binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=222, inst=COMPARE_OP(arg=2, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$220binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=224, inst=POP_JUMP_IF_FALSE(arg=129, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$222compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=226, stack=('$phi202.0',), blockstack=(), npush=0), Edge(pc=256, stack=('$phi202.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=202 nstack_initial=1), State(pc_initial=226 nstack_initial=1), State(pc_initial=256 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=226 nstack_initial=1), State(pc_initial=256 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi226.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=226 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=226, inst=LOAD_FAST(arg=0, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=228, inst=LOAD_FAST(arg=8, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$close226.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=230, inst=BINARY_SUBSCR(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$close226.1', '$i228.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=232, inst=LOAD_FAST(arg=5, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$230binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=234, inst=LOAD_FAST(arg=8, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$230binary_subscr.3', '$final_ub232.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=236, inst=BINARY_SUBSCR(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$230binary_subscr.3', '$final_ub232.4', '$i234.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=238, inst=COMPARE_OP(arg=1, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$230binary_subscr.3', '$236binary_subscr.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=240, inst=POP_JUMP_IF_FALSE(arg=129, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$238compare_op.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=242, stack=('$phi226.0',), blockstack=(), npush=0), Edge(pc=256, stack=('$phi226.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=256 nstack_initial=1), State(pc_initial=242 nstack_initial=1), State(pc_initial=256 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi256.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=256 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=256, inst=LOAD_FAST(arg=7, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=258, inst=LOAD_FAST(arg=8, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$supertrend256.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=260, inst=LOAD_CONST(arg=1, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$supertrend256.1', '$i258.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=262, inst=BINARY_SUBTRACT(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$supertrend256.1', '$i258.2', '$const260.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=264, inst=BINARY_SUBSCR(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$supertrend256.1', '$262binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=266, inst=LOAD_FAST(arg=5, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=268, inst=LOAD_FAST(arg=8, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$final_ub266.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=270, inst=LOAD_CONST(arg=1, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$final_ub266.6', '$i268.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=272, inst=BINARY_SUBTRACT(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$final_ub266.6', '$i268.7', '$const270.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=274, inst=BINARY_SUBSCR(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$final_ub266.6', '$272binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=276, inst=COMPARE_OP(arg=2, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$274binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=278, inst=POP_JUMP_IF_FALSE(arg=156, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$276compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=280, stack=('$phi256.0',), blockstack=(), npush=0), Edge(pc=310, stack=('$phi256.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=242 nstack_initial=1), State(pc_initial=256 nstack_initial=1), State(pc_initial=280 nstack_initial=1), State(pc_initial=310 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi242.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=242 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=242, inst=LOAD_FAST(arg=5, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=244, inst=LOAD_FAST(arg=8, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$final_ub242.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=246, inst=BINARY_SUBSCR(arg=None, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$final_ub242.1', '$i244.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=248, inst=LOAD_FAST(arg=7, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$246binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=250, inst=LOAD_FAST(arg=8, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$246binary_subscr.3', '$supertrend248.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=252, inst=STORE_SUBSCR(arg=None, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$246binary_subscr.3', '$supertrend248.4', '$i250.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=254, inst=JUMP_ABSOLUTE(arg=26, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi242.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=256 nstack_initial=1), State(pc_initial=280 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=280 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi280.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=280 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=280, inst=LOAD_FAST(arg=0, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=282, inst=LOAD_FAST(arg=8, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$close280.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=284, inst=BINARY_SUBSCR(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$close280.1', '$i282.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=286, inst=LOAD_FAST(arg=5, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$284binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=288, inst=LOAD_FAST(arg=8, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$284binary_subscr.3', '$final_ub286.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=290, inst=BINARY_SUBSCR(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$284binary_subscr.3', '$final_ub286.4', '$i288.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=292, inst=COMPARE_OP(arg=4, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$284binary_subscr.3', '$290binary_subscr.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=294, inst=POP_JUMP_IF_FALSE(arg=156, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$292compare_op.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=296, stack=('$phi280.0',), blockstack=(), npush=0), Edge(pc=310, stack=('$phi280.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=310 nstack_initial=1), State(pc_initial=50 nstack_initial=1), State(pc_initial=296 nstack_initial=1), State(pc_initial=310 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi310.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=310 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=310, inst=LOAD_FAST(arg=7, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=312, inst=LOAD_FAST(arg=8, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$supertrend310.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=314, inst=LOAD_CONST(arg=1, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$supertrend310.1', '$i312.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=316, inst=BINARY_SUBTRACT(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$supertrend310.1', '$i312.2', '$const314.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=318, inst=BINARY_SUBSCR(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$supertrend310.1', '$316binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=320, inst=LOAD_FAST(arg=6, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=322, inst=LOAD_FAST(arg=8, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$final_lb320.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=324, inst=LOAD_CONST(arg=1, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$final_lb320.6', '$i322.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=326, inst=BINARY_SUBTRACT(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$final_lb320.6', '$i322.7', '$const324.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=328, inst=BINARY_SUBSCR(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$final_lb320.6', '$326binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=330, inst=COMPARE_OP(arg=2, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$328binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=332, inst=POP_JUMP_IF_FALSE(arg=183, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$330compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=334, stack=('$phi310.0',), blockstack=(), npush=0), Edge(pc=364, stack=('$phi310.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=296 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=334 nstack_initial=1), State(pc_initial=364 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=296 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=334 nstack_initial=1), State(pc_initial=364 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi296.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=296 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=296, inst=LOAD_FAST(arg=6, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=298, inst=LOAD_FAST(arg=8, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$final_lb296.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=300, inst=BINARY_SUBSCR(arg=None, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$final_lb296.1', '$i298.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=302, inst=LOAD_FAST(arg=7, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$300binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=304, inst=LOAD_FAST(arg=8, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$300binary_subscr.3', '$supertrend302.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=306, inst=STORE_SUBSCR(arg=None, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$300binary_subscr.3', '$supertrend302.4', '$i304.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=308, inst=JUMP_ABSOLUTE(arg=26, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi296.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=310 nstack_initial=1), State(pc_initial=334 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=334 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi334.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=334 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=334, inst=LOAD_FAST(arg=0, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=336, inst=LOAD_FAST(arg=8, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$close334.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=338, inst=BINARY_SUBSCR(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$close334.1', '$i336.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=340, inst=LOAD_FAST(arg=6, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$338binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=342, inst=LOAD_FAST(arg=8, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$338binary_subscr.3', '$final_lb340.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=344, inst=BINARY_SUBSCR(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$338binary_subscr.3', '$final_lb340.4', '$i342.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=346, inst=COMPARE_OP(arg=5, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$338binary_subscr.3', '$344binary_subscr.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=348, inst=POP_JUMP_IF_FALSE(arg=183, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$346compare_op.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=350, stack=('$phi334.0',), blockstack=(), npush=0), Edge(pc=364, stack=('$phi334.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=364 nstack_initial=1), State(pc_initial=50 nstack_initial=1), State(pc_initial=350 nstack_initial=1), State(pc_initial=364 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi364.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=364 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=364, inst=LOAD_FAST(arg=7, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=366, inst=LOAD_FAST(arg=8, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$supertrend364.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=368, inst=LOAD_CONST(arg=1, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$supertrend364.1', '$i366.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=370, inst=BINARY_SUBTRACT(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$supertrend364.1', '$i366.2', '$const368.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=372, inst=BINARY_SUBSCR(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$supertrend364.1', '$370binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=374, inst=LOAD_FAST(arg=6, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=376, inst=LOAD_FAST(arg=8, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$final_lb374.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=378, inst=LOAD_CONST(arg=1, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$final_lb374.6', '$i376.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=380, inst=BINARY_SUBTRACT(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$final_lb374.6', '$i376.7', '$const378.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=382, inst=BINARY_SUBSCR(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$final_lb374.6', '$380binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=384, inst=COMPARE_OP(arg=2, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$382binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=386, inst=POP_JUMP_IF_FALSE(arg=210, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$384compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=388, stack=('$phi364.0',), blockstack=(), npush=0), Edge(pc=418, stack=('$phi364.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=350 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=388 nstack_initial=1), State(pc_initial=418 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=350 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=388 nstack_initial=1), State(pc_initial=418 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi350.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=350 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=350, inst=LOAD_FAST(arg=6, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=352, inst=LOAD_FAST(arg=8, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$final_lb350.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=354, inst=BINARY_SUBSCR(arg=None, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$final_lb350.1', '$i352.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=356, inst=LOAD_FAST(arg=7, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$354binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=358, inst=LOAD_FAST(arg=8, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$354binary_subscr.3', '$supertrend356.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=360, inst=STORE_SUBSCR(arg=None, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$354binary_subscr.3', '$supertrend356.4', '$i358.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=362, inst=JUMP_ABSOLUTE(arg=26, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi350.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=364 nstack_initial=1), State(pc_initial=388 nstack_initial=1), State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=388 nstack_initial=1), State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi388.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=388 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=388, inst=LOAD_FAST(arg=0, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=390, inst=LOAD_FAST(arg=8, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$close388.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=392, inst=BINARY_SUBSCR(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$close388.1', '$i390.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=394, inst=LOAD_FAST(arg=6, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$392binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=396, inst=LOAD_FAST(arg=8, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$392binary_subscr.3', '$final_lb394.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=398, inst=BINARY_SUBSCR(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$392binary_subscr.3', '$final_lb394.4', '$i396.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=400, inst=COMPARE_OP(arg=0, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$392binary_subscr.3', '$398binary_subscr.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=402, inst=POP_JUMP_IF_FALSE(arg=210, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$400compare_op.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=404, stack=('$phi388.0',), blockstack=(), npush=0), Edge(pc=418, stack=('$phi388.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1), State(pc_initial=404 nstack_initial=1), State(pc_initial=418 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi418.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=418 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=418, inst=LOAD_CONST(arg=2, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=420, inst=LOAD_FAST(arg=7, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0', '$const418.1.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=422, inst=LOAD_FAST(arg=8, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0', '$const418.1.2', '$supertrend420.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=424, inst=STORE_SUBSCR(arg=None, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0', '$const418.1.2', '$supertrend420.2', '$i422.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=426, inst=JUMP_ABSOLUTE(arg=26, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi418.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=404 nstack_initial=1), State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=404 nstack_initial=1), State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi404.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=404 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=404, inst=LOAD_FAST(arg=5, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=406, inst=LOAD_FAST(arg=8, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$final_ub404.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=408, inst=BINARY_SUBSCR(arg=None, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$final_ub404.1', '$i406.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=410, inst=LOAD_FAST(arg=7, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$408binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=412, inst=LOAD_FAST(arg=8, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$408binary_subscr.3', '$supertrend410.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=414, inst=STORE_SUBSCR(arg=None, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$408binary_subscr.3', '$supertrend410.4', '$i412.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=416, inst=JUMP_ABSOLUTE(arg=26, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi404.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): {'$phi50.0'},
             State(pc_initial=52 nstack_initial=2): {'$phi52.1'},
             State(pc_initial=74 nstack_initial=1): set(),
             State(pc_initial=98 nstack_initial=1): set(),
             State(pc_initial=112 nstack_initial=1): set(),
             State(pc_initial=128 nstack_initial=1): set(),
             State(pc_initial=148 nstack_initial=1): set(),
             State(pc_initial=172 nstack_initial=1): set(),
             State(pc_initial=186 nstack_initial=1): set(),
             State(pc_initial=202 nstack_initial=1): set(),
             State(pc_initial=226 nstack_initial=1): set(),
             State(pc_initial=242 nstack_initial=1): set(),
             State(pc_initial=256 nstack_initial=1): set(),
             State(pc_initial=280 nstack_initial=1): set(),
             State(pc_initial=296 nstack_initial=1): set(),
             State(pc_initial=310 nstack_initial=1): set(),
             State(pc_initial=334 nstack_initial=1): set(),
             State(pc_initial=350 nstack_initial=1): set(),
             State(pc_initial=364 nstack_initial=1): set(),
             State(pc_initial=388 nstack_initial=1): set(),
             State(pc_initial=404 nstack_initial=1): set(),
             State(pc_initial=418 nstack_initial=1): set(),
             State(pc_initial=428 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {'$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi52.1': State(pc_initial=50 nstack_initial=1)}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi128.0': {('$phi112.0',
                            State(pc_initial=112 nstack_initial=1)),
                           ('$phi98.0', State(pc_initial=98 nstack_initial=1))},
             '$phi148.0': {('$phi128.0',
                            State(pc_initial=128 nstack_initial=1))},
             '$phi172.0': {('$phi128.0',
                            State(pc_initial=128 nstack_initial=1)),
                           ('$phi148.0',
                            State(pc_initial=148 nstack_initial=1))},
             '$phi186.0': {('$phi148.0',
                            State(pc_initial=148 nstack_initial=1))},
             '$phi202.0': {('$phi172.0',
                            State(pc_initial=172 nstack_initial=1)),
                           ('$phi186.0',
                            State(pc_initial=186 nstack_initial=1))},
             '$phi226.0': {('$phi202.0',
                            State(pc_initial=202 nstack_initial=1))},
             '$phi242.0': {('$phi226.0',
                            State(pc_initial=226 nstack_initial=1))},
             '$phi256.0': {('$phi202.0',
                            State(pc_initial=202 nstack_initial=1)),
                           ('$phi226.0',
                            State(pc_initial=226 nstack_initial=1))},
             '$phi280.0': {('$phi256.0',
                            State(pc_initial=256 nstack_initial=1))},
             '$phi296.0': {('$phi280.0',
                            State(pc_initial=280 nstack_initial=1))},
             '$phi310.0': {('$phi256.0',
                            State(pc_initial=256 nstack_initial=1)),
                           ('$phi280.0',
                            State(pc_initial=280 nstack_initial=1))},
             '$phi334.0': {('$phi310.0',
                            State(pc_initial=310 nstack_initial=1))},
             '$phi350.0': {('$phi334.0',
                            State(pc_initial=334 nstack_initial=1))},
             '$phi364.0': {('$phi310.0',
                            State(pc_initial=310 nstack_initial=1)),
                           ('$phi334.0',
                            State(pc_initial=334 nstack_initial=1))},
             '$phi388.0': {('$phi364.0',
                            State(pc_initial=364 nstack_initial=1))},
             '$phi404.0': {('$phi388.0',
                            State(pc_initial=388 nstack_initial=1))},
             '$phi418.0': {('$phi364.0',
                            State(pc_initial=364 nstack_initial=1)),
                           ('$phi388.0',
                            State(pc_initial=388 nstack_initial=1))},
             '$phi50.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi242.0', State(pc_initial=242 nstack_initial=1)),
                          ('$phi296.0', State(pc_initial=296 nstack_initial=1)),
                          ('$phi350.0', State(pc_initial=350 nstack_initial=1)),
                          ('$phi404.0', State(pc_initial=404 nstack_initial=1)),
                          ('$phi418.0',
                           State(pc_initial=418 nstack_initial=1))},
             '$phi52.0': {('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))},
             '$phi74.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi98.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))}})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi128.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi148.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi172.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi186.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi202.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi226.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi242.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi256.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi280.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi296.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi310.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi334.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi350.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi364.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi388.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi404.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi418.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi50.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi52.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))},
             '$phi74.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi98.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))}})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi128.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi148.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi172.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi186.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi202.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi226.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi242.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi256.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi280.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi296.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi310.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi334.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi350.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi364.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi388.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi404.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi418.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))},
             '$phi74.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))}})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi128.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi148.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi172.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi186.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi202.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi226.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi242.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi256.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi280.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi296.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi310.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi334.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi350.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi364.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi388.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi404.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi418.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))},
             '$phi74.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))}})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {'$phi50.0': {('$48get_iter.19', State(pc_initial=0 nstack_initial=0))},
 '$phi52.1': {('$50for_iter.2', State(pc_initial=50 nstack_initial=1))}}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi50.0': '$48get_iter.19'},
             State(pc_initial=50 nstack_initial=1): {'$phi52.1': '$50for_iter.2'}})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$close4.1'}), (6, {'func': '$2load_global.0', 'args': ['$close4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_global.3'}), (12, {'item': '$10load_global.3', 'res': '$12load_method.4'}), (14, {'res': '$length14.5'}), (16, {'func': '$12load_method.4', 'args': ['$length14.5'], 'res': '$16call_method.6'}), (18, {'value': '$16call_method.6'}), (20, {'res': '$20load_global.7'}), (22, {'item': '$20load_global.7', 'res': '$22load_method.8'}), (24, {'res': '$length24.9'}), (26, {'func': '$22load_method.8', 'args': ['$length24.9'], 'res': '$26call_method.10'}), (28, {'value': '$26call_method.10'}), (30, {'res': '$30load_global.11'}), (32, {'item': '$30load_global.11', 'res': '$32load_method.12'}), (34, {'res': '$length34.13'}), (36, {'func': '$32load_method.12', 'args': ['$length34.13'], 'res': '$36call_method.14'}), (38, {'value': '$36call_method.14'}), (40, {'res': '$40load_global.15'}), (42, {'res': '$n42.16'}), (44, {'res': '$length44.17'}), (46, {'func': '$40load_global.15', 'args': ['$n42.16', '$length44.17'], 'res': '$46call_function.18'}), (48, {'value': '$46call_function.18', 'res': '$48get_iter.19'})), outgoing_phis={'$phi50.0': '$48get_iter.19'}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$48get_iter.19',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((50, {'iterator': '$phi50.0', 'pair': '$50for_iter.1', 'indval': '$50for_iter.2', 'pred': '$50for_iter.3'}),), outgoing_phis={'$phi52.1': '$50for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={428: (), 52: ('$phi50.0', '$50for_iter.2')})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=52 nstack_initial=2):
AdaptBlockInfo(insts=((52, {'value': '$phi52.1'}), (54, {'res': '$basic_ub54.2'}), (56, {'res': '$i56.3'}), (58, {'index': '$i56.3', 'target': '$basic_ub54.2', 'res': '$58binary_subscr.4'}), (60, {'res': '$final_ub60.5'}), (62, {'res': '$i62.6'}), (64, {'res': '$const64.7.1'}), (66, {'lhs': '$i62.6', 'rhs': '$const64.7.1', 'res': '$66binary_subtract.8'}), (68, {'index': '$66binary_subtract.8', 'target': '$final_ub60.5', 'res': '$68binary_subscr.9'}), (70, {'lhs': '$58binary_subscr.4', 'rhs': '$68binary_subscr.9', 'res': '$70compare_op.10'}), (72, {'pred': '$70compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ('$phi52.0',), 98: ('$phi52.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=74 nstack_initial=1):
AdaptBlockInfo(insts=((74, {'res': '$close74.1'}), (76, {'res': '$i76.2'}), (78, {'res': '$const78.3.1'}), (80, {'lhs': '$i76.2', 'rhs': '$const78.3.1', 'res': '$80binary_subtract.4'}), (82, {'index': '$80binary_subtract.4', 'target': '$close74.1', 'res': '$82binary_subscr.5'}), (84, {'res': '$final_ub84.6'}), (86, {'res': '$i86.7'}), (88, {'res': '$const88.8.1'}), (90, {'lhs': '$i86.7', 'rhs': '$const88.8.1', 'res': '$90binary_subtract.9'}), (92, {'index': '$90binary_subtract.9', 'target': '$final_ub84.6', 'res': '$92binary_subscr.10'}), (94, {'lhs': '$82binary_subscr.5', 'rhs': '$92binary_subscr.10', 'res': '$94compare_op.11'}), (96, {'pred': '$94compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: ('$phi74.0',), 112: ('$phi74.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=98 nstack_initial=1):
AdaptBlockInfo(insts=((98, {'res': '$basic_ub98.1'}), (100, {'res': '$i100.2'}), (102, {'index': '$i100.2', 'target': '$basic_ub98.1', 'res': '$102binary_subscr.3'}), (104, {'res': '$final_ub104.4'}), (106, {'res': '$i106.5'}), (108, {'target': '$final_ub104.4', 'index': '$i106.5', 'value': '$102binary_subscr.3'}), (110, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={128: ('$phi98.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=112 nstack_initial=1):
AdaptBlockInfo(insts=((112, {'res': '$final_ub112.1'}), (114, {'res': '$i114.2'}), (116, {'res': '$const116.3.1'}), (118, {'lhs': '$i114.2', 'rhs': '$const116.3.1', 'res': '$118binary_subtract.4'}), (120, {'index': '$118binary_subtract.4', 'target': '$final_ub112.1', 'res': '$120binary_subscr.5'}), (122, {'res': '$final_ub122.6'}), (124, {'res': '$i124.7'}), (126, {'target': '$final_ub122.6', 'index': '$i124.7', 'value': '$120binary_subscr.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={128: ('$phi112.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=128 nstack_initial=1):
AdaptBlockInfo(insts=((128, {'res': '$basic_lb128.1'}), (130, {'res': '$i130.2'}), (132, {'index': '$i130.2', 'target': '$basic_lb128.1', 'res': '$132binary_subscr.3'}), (134, {'res': '$final_lb134.4'}), (136, {'res': '$i136.5'}), (138, {'res': '$const138.6.1'}), (140, {'lhs': '$i136.5', 'rhs': '$const138.6.1', 'res': '$140binary_subtract.7'}), (142, {'index': '$140binary_subtract.7', 'target': '$final_lb134.4', 'res': '$142binary_subscr.8'}), (144, {'lhs': '$132binary_subscr.3', 'rhs': '$142binary_subscr.8', 'res': '$144compare_op.9'}), (146, {'pred': '$144compare_op.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={148: ('$phi128.0',), 172: ('$phi128.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=148 nstack_initial=1):
AdaptBlockInfo(insts=((148, {'res': '$close148.1'}), (150, {'res': '$i150.2'}), (152, {'res': '$const152.3.1'}), (154, {'lhs': '$i150.2', 'rhs': '$const152.3.1', 'res': '$154binary_subtract.4'}), (156, {'index': '$154binary_subtract.4', 'target': '$close148.1', 'res': '$156binary_subscr.5'}), (158, {'res': '$final_lb158.6'}), (160, {'res': '$i160.7'}), (162, {'res': '$const162.8.1'}), (164, {'lhs': '$i160.7', 'rhs': '$const162.8.1', 'res': '$164binary_subtract.9'}), (166, {'index': '$164binary_subtract.9', 'target': '$final_lb158.6', 'res': '$166binary_subscr.10'}), (168, {'lhs': '$156binary_subscr.5', 'rhs': '$166binary_subscr.10', 'res': '$168compare_op.11'}), (170, {'pred': '$168compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={172: ('$phi148.0',), 186: ('$phi148.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=172 nstack_initial=1):
AdaptBlockInfo(insts=((172, {'res': '$basic_lb172.1'}), (174, {'res': '$i174.2'}), (176, {'index': '$i174.2', 'target': '$basic_lb172.1', 'res': '$176binary_subscr.3'}), (178, {'res': '$final_lb178.4'}), (180, {'res': '$i180.5'}), (182, {'target': '$final_lb178.4', 'index': '$i180.5', 'value': '$176binary_subscr.3'}), (184, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={202: ('$phi172.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=186 nstack_initial=1):
AdaptBlockInfo(insts=((186, {'res': '$final_lb186.1'}), (188, {'res': '$i188.2'}), (190, {'res': '$const190.3.1'}), (192, {'lhs': '$i188.2', 'rhs': '$const190.3.1', 'res': '$192binary_subtract.4'}), (194, {'index': '$192binary_subtract.4', 'target': '$final_lb186.1', 'res': '$194binary_subscr.5'}), (196, {'res': '$final_lb196.6'}), (198, {'res': '$i198.7'}), (200, {'target': '$final_lb196.6', 'index': '$i198.7', 'value': '$194binary_subscr.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={202: ('$phi186.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=202 nstack_initial=1):
AdaptBlockInfo(insts=((202, {'res': '$supertrend202.1'}), (204, {'res': '$i204.2'}), (206, {'res': '$const206.3.1'}), (208, {'lhs': '$i204.2', 'rhs': '$const206.3.1', 'res': '$208binary_subtract.4'}), (210, {'index': '$208binary_subtract.4', 'target': '$supertrend202.1', 'res': '$210binary_subscr.5'}), (212, {'res': '$final_ub212.6'}), (214, {'res': '$i214.7'}), (216, {'res': '$const216.8.1'}), (218, {'lhs': '$i214.7', 'rhs': '$const216.8.1', 'res': '$218binary_subtract.9'}), (220, {'index': '$218binary_subtract.9', 'target': '$final_ub212.6', 'res': '$220binary_subscr.10'}), (222, {'lhs': '$210binary_subscr.5', 'rhs': '$220binary_subscr.10', 'res': '$222compare_op.11'}), (224, {'pred': '$222compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={226: ('$phi202.0',), 256: ('$phi202.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=226 nstack_initial=1):
AdaptBlockInfo(insts=((226, {'res': '$close226.1'}), (228, {'res': '$i228.2'}), (230, {'index': '$i228.2', 'target': '$close226.1', 'res': '$230binary_subscr.3'}), (232, {'res': '$final_ub232.4'}), (234, {'res': '$i234.5'}), (236, {'index': '$i234.5', 'target': '$final_ub232.4', 'res': '$236binary_subscr.6'}), (238, {'lhs': '$230binary_subscr.3', 'rhs': '$236binary_subscr.6', 'res': '$238compare_op.7'}), (240, {'pred': '$238compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={242: ('$phi226.0',), 256: ('$phi226.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=242 nstack_initial=1):
AdaptBlockInfo(insts=((242, {'res': '$final_ub242.1'}), (244, {'res': '$i244.2'}), (246, {'index': '$i244.2', 'target': '$final_ub242.1', 'res': '$246binary_subscr.3'}), (248, {'res': '$supertrend248.4'}), (250, {'res': '$i250.5'}), (252, {'target': '$supertrend248.4', 'index': '$i250.5', 'value': '$246binary_subscr.3'}), (254, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi242.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=256 nstack_initial=1):
AdaptBlockInfo(insts=((256, {'res': '$supertrend256.1'}), (258, {'res': '$i258.2'}), (260, {'res': '$const260.3.1'}), (262, {'lhs': '$i258.2', 'rhs': '$const260.3.1', 'res': '$262binary_subtract.4'}), (264, {'index': '$262binary_subtract.4', 'target': '$supertrend256.1', 'res': '$264binary_subscr.5'}), (266, {'res': '$final_ub266.6'}), (268, {'res': '$i268.7'}), (270, {'res': '$const270.8.1'}), (272, {'lhs': '$i268.7', 'rhs': '$const270.8.1', 'res': '$272binary_subtract.9'}), (274, {'index': '$272binary_subtract.9', 'target': '$final_ub266.6', 'res': '$274binary_subscr.10'}), (276, {'lhs': '$264binary_subscr.5', 'rhs': '$274binary_subscr.10', 'res': '$276compare_op.11'}), (278, {'pred': '$276compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={280: ('$phi256.0',), 310: ('$phi256.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=280 nstack_initial=1):
AdaptBlockInfo(insts=((280, {'res': '$close280.1'}), (282, {'res': '$i282.2'}), (284, {'index': '$i282.2', 'target': '$close280.1', 'res': '$284binary_subscr.3'}), (286, {'res': '$final_ub286.4'}), (288, {'res': '$i288.5'}), (290, {'index': '$i288.5', 'target': '$final_ub286.4', 'res': '$290binary_subscr.6'}), (292, {'lhs': '$284binary_subscr.3', 'rhs': '$290binary_subscr.6', 'res': '$292compare_op.7'}), (294, {'pred': '$292compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={296: ('$phi280.0',), 310: ('$phi280.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=296 nstack_initial=1):
AdaptBlockInfo(insts=((296, {'res': '$final_lb296.1'}), (298, {'res': '$i298.2'}), (300, {'index': '$i298.2', 'target': '$final_lb296.1', 'res': '$300binary_subscr.3'}), (302, {'res': '$supertrend302.4'}), (304, {'res': '$i304.5'}), (306, {'target': '$supertrend302.4', 'index': '$i304.5', 'value': '$300binary_subscr.3'}), (308, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi296.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=310 nstack_initial=1):
AdaptBlockInfo(insts=((310, {'res': '$supertrend310.1'}), (312, {'res': '$i312.2'}), (314, {'res': '$const314.3.1'}), (316, {'lhs': '$i312.2', 'rhs': '$const314.3.1', 'res': '$316binary_subtract.4'}), (318, {'index': '$316binary_subtract.4', 'target': '$supertrend310.1', 'res': '$318binary_subscr.5'}), (320, {'res': '$final_lb320.6'}), (322, {'res': '$i322.7'}), (324, {'res': '$const324.8.1'}), (326, {'lhs': '$i322.7', 'rhs': '$const324.8.1', 'res': '$326binary_subtract.9'}), (328, {'index': '$326binary_subtract.9', 'target': '$final_lb320.6', 'res': '$328binary_subscr.10'}), (330, {'lhs': '$318binary_subscr.5', 'rhs': '$328binary_subscr.10', 'res': '$330compare_op.11'}), (332, {'pred': '$330compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={334: ('$phi310.0',), 364: ('$phi310.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=334 nstack_initial=1):
AdaptBlockInfo(insts=((334, {'res': '$close334.1'}), (336, {'res': '$i336.2'}), (338, {'index': '$i336.2', 'target': '$close334.1', 'res': '$338binary_subscr.3'}), (340, {'res': '$final_lb340.4'}), (342, {'res': '$i342.5'}), (344, {'index': '$i342.5', 'target': '$final_lb340.4', 'res': '$344binary_subscr.6'}), (346, {'lhs': '$338binary_subscr.3', 'rhs': '$344binary_subscr.6', 'res': '$346compare_op.7'}), (348, {'pred': '$346compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={350: ('$phi334.0',), 364: ('$phi334.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=350 nstack_initial=1):
AdaptBlockInfo(insts=((350, {'res': '$final_lb350.1'}), (352, {'res': '$i352.2'}), (354, {'index': '$i352.2', 'target': '$final_lb350.1', 'res': '$354binary_subscr.3'}), (356, {'res': '$supertrend356.4'}), (358, {'res': '$i358.5'}), (360, {'target': '$supertrend356.4', 'index': '$i358.5', 'value': '$354binary_subscr.3'}), (362, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi350.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=364 nstack_initial=1):
AdaptBlockInfo(insts=((364, {'res': '$supertrend364.1'}), (366, {'res': '$i366.2'}), (368, {'res': '$const368.3.1'}), (370, {'lhs': '$i366.2', 'rhs': '$const368.3.1', 'res': '$370binary_subtract.4'}), (372, {'index': '$370binary_subtract.4', 'target': '$supertrend364.1', 'res': '$372binary_subscr.5'}), (374, {'res': '$final_lb374.6'}), (376, {'res': '$i376.7'}), (378, {'res': '$const378.8.1'}), (380, {'lhs': '$i376.7', 'rhs': '$const378.8.1', 'res': '$380binary_subtract.9'}), (382, {'index': '$380binary_subtract.9', 'target': '$final_lb374.6', 'res': '$382binary_subscr.10'}), (384, {'lhs': '$372binary_subscr.5', 'rhs': '$382binary_subscr.10', 'res': '$384compare_op.11'}), (386, {'pred': '$384compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={388: ('$phi364.0',), 418: ('$phi364.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=388 nstack_initial=1):
AdaptBlockInfo(insts=((388, {'res': '$close388.1'}), (390, {'res': '$i390.2'}), (392, {'index': '$i390.2', 'target': '$close388.1', 'res': '$392binary_subscr.3'}), (394, {'res': '$final_lb394.4'}), (396, {'res': '$i396.5'}), (398, {'index': '$i396.5', 'target': '$final_lb394.4', 'res': '$398binary_subscr.6'}), (400, {'lhs': '$392binary_subscr.3', 'rhs': '$398binary_subscr.6', 'res': '$400compare_op.7'}), (402, {'pred': '$400compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={404: ('$phi388.0',), 418: ('$phi388.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=404 nstack_initial=1):
AdaptBlockInfo(insts=((404, {'res': '$final_ub404.1'}), (406, {'res': '$i406.2'}), (408, {'index': '$i406.2', 'target': '$final_ub404.1', 'res': '$408binary_subscr.3'}), (410, {'res': '$supertrend410.4'}), (412, {'res': '$i412.5'}), (414, {'target': '$supertrend410.4', 'index': '$i412.5', 'value': '$408binary_subscr.3'}), (416, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi404.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=418 nstack_initial=1):
AdaptBlockInfo(insts=((418, {'res': '$const418.1.2'}), (420, {'res': '$supertrend420.2'}), (422, {'res': '$i422.3'}), (424, {'target': '$supertrend420.2', 'index': '$i422.3', 'value': '$const418.1.2'}), (426, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi418.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=428 nstack_initial=0):
AdaptBlockInfo(insts=((428, {'res': '$supertrend428.0'}), (430, {'retval': '$supertrend428.0', 'castval': '$430return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    close = arg(0, name=close)               ['close']
    basic_ub = arg(1, name=basic_ub)         ['basic_ub']
    basic_lb = arg(2, name=basic_lb)         ['basic_lb']
    n = arg(3, name=n)                       ['n']
    $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
    length = call $2load_global.0(close, func=$2load_global.0, args=[Var(close, helper_loops.py:99)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'close', 'length']
    $10load_global.3 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>) ['$10load_global.3']
    $12load_method.4 = getattr(value=$10load_global.3, attr=zeros) ['$10load_global.3', '$12load_method.4']
    final_ub = call $12load_method.4(length, func=$12load_method.4, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_method.4', 'final_ub', 'length']
    $20load_global.7 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.7']
    $22load_method.8 = getattr(value=$20load_global.7, attr=zeros) ['$20load_global.7', '$22load_method.8']
    final_lb = call $22load_method.8(length, func=$22load_method.8, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.8', 'final_lb', 'length']
    $30load_global.11 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>) ['$30load_global.11']
    $32load_method.12 = getattr(value=$30load_global.11, attr=zeros) ['$30load_global.11', '$32load_method.12']
    supertrend = call $32load_method.12(length, func=$32load_method.12, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$32load_method.12', 'length', 'supertrend']
    $40load_global.15 = global(range: <class 'range'>) ['$40load_global.15']
    $46call_function.18 = call $40load_global.15(n, length, func=$40load_global.15, args=[Var(n, helper_loops.py:99), Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_global.15', '$46call_function.18', 'length', 'n']
    $48get_iter.19 = getiter(value=$46call_function.18) ['$46call_function.18', '$48get_iter.19']
    $phi50.0 = $48get_iter.19                ['$48get_iter.19', '$phi50.0']
    jump 50                                  []
label 50:
    $50for_iter.1 = iternext(value=$phi50.0) ['$50for_iter.1', '$phi50.0']
    $50for_iter.2 = pair_first(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.2']
    $50for_iter.3 = pair_second(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.3']
    $phi52.1 = $50for_iter.2                 ['$50for_iter.2', '$phi52.1']
    branch $50for_iter.3, 52, 428            ['$50for_iter.3']
label 52:
    i = $phi52.1                             ['$phi52.1', 'i']
    $58binary_subscr.4 = getitem(value=basic_ub, index=i, fn=<built-in function getitem>) ['$58binary_subscr.4', 'basic_ub', 'i']
    $const64.7.1 = const(int, 1)             ['$const64.7.1']
    $66binary_subtract.8 = i - $const64.7.1  ['$66binary_subtract.8', '$const64.7.1', 'i']
    $68binary_subscr.9 = getitem(value=final_ub, index=$66binary_subtract.8, fn=<built-in function getitem>) ['$66binary_subtract.8', '$68binary_subscr.9', 'final_ub']
    $70compare_op.10 = $58binary_subscr.4 < $68binary_subscr.9 ['$58binary_subscr.4', '$68binary_subscr.9', '$70compare_op.10']
    bool72 = global(bool: <class 'bool'>)    ['bool72']
    $72pred = call bool72($70compare_op.10, func=bool72, args=(Var($70compare_op.10, helper_loops.py:113),), kws=(), vararg=None, varkwarg=None, target=None) ['$70compare_op.10', '$72pred', 'bool72']
    branch $72pred, 98, 74                   ['$72pred']
label 74:
    $const78.3.1 = const(int, 1)             ['$const78.3.1']
    $80binary_subtract.4 = i - $const78.3.1  ['$80binary_subtract.4', '$const78.3.1', 'i']
    $82binary_subscr.5 = getitem(value=close, index=$80binary_subtract.4, fn=<built-in function getitem>) ['$80binary_subtract.4', '$82binary_subscr.5', 'close']
    $const88.8.1 = const(int, 1)             ['$const88.8.1']
    $90binary_subtract.9 = i - $const88.8.1  ['$90binary_subtract.9', '$const88.8.1', 'i']
    $92binary_subscr.10 = getitem(value=final_ub, index=$90binary_subtract.9, fn=<built-in function getitem>) ['$90binary_subtract.9', '$92binary_subscr.10', 'final_ub']
    $94compare_op.11 = $82binary_subscr.5 > $92binary_subscr.10 ['$82binary_subscr.5', '$92binary_subscr.10', '$94compare_op.11']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
    $96pred = call bool96($94compare_op.11, func=bool96, args=(Var($94compare_op.11, helper_loops.py:113),), kws=(), vararg=None, varkwarg=None, target=None) ['$94compare_op.11', '$96pred', 'bool96']
    branch $96pred, 98, 112                  ['$96pred']
label 98:
    $102binary_subscr.3 = getitem(value=basic_ub, index=i, fn=<built-in function getitem>) ['$102binary_subscr.3', 'basic_ub', 'i']
    final_ub[i] = $102binary_subscr.3        ['$102binary_subscr.3', 'final_ub', 'i']
    jump 128                                 []
label 112:
    $const116.3.1 = const(int, 1)            ['$const116.3.1']
    $118binary_subtract.4 = i - $const116.3.1 ['$118binary_subtract.4', '$const116.3.1', 'i']
    $120binary_subscr.5 = getitem(value=final_ub, index=$118binary_subtract.4, fn=<built-in function getitem>) ['$118binary_subtract.4', '$120binary_subscr.5', 'final_ub']
    final_ub[i] = $120binary_subscr.5        ['$120binary_subscr.5', 'final_ub', 'i']
    jump 128                                 []
label 128:
    $132binary_subscr.3 = getitem(value=basic_lb, index=i, fn=<built-in function getitem>) ['$132binary_subscr.3', 'basic_lb', 'i']
    $const138.6.1 = const(int, 1)            ['$const138.6.1']
    $140binary_subtract.7 = i - $const138.6.1 ['$140binary_subtract.7', '$const138.6.1', 'i']
    $142binary_subscr.8 = getitem(value=final_lb, index=$140binary_subtract.7, fn=<built-in function getitem>) ['$140binary_subtract.7', '$142binary_subscr.8', 'final_lb']
    $144compare_op.9 = $132binary_subscr.3 > $142binary_subscr.8 ['$132binary_subscr.3', '$142binary_subscr.8', '$144compare_op.9']
    bool146 = global(bool: <class 'bool'>)   ['bool146']
    $146pred = call bool146($144compare_op.9, func=bool146, args=(Var($144compare_op.9, helper_loops.py:118),), kws=(), vararg=None, varkwarg=None, target=None) ['$144compare_op.9', '$146pred', 'bool146']
    branch $146pred, 172, 148                ['$146pred']
label 148:
    $const152.3.1 = const(int, 1)            ['$const152.3.1']
    $154binary_subtract.4 = i - $const152.3.1 ['$154binary_subtract.4', '$const152.3.1', 'i']
    $156binary_subscr.5 = getitem(value=close, index=$154binary_subtract.4, fn=<built-in function getitem>) ['$154binary_subtract.4', '$156binary_subscr.5', 'close']
    $const162.8.1 = const(int, 1)            ['$const162.8.1']
    $164binary_subtract.9 = i - $const162.8.1 ['$164binary_subtract.9', '$const162.8.1', 'i']
    $166binary_subscr.10 = getitem(value=final_lb, index=$164binary_subtract.9, fn=<built-in function getitem>) ['$164binary_subtract.9', '$166binary_subscr.10', 'final_lb']
    $168compare_op.11 = $156binary_subscr.5 < $166binary_subscr.10 ['$156binary_subscr.5', '$166binary_subscr.10', '$168compare_op.11']
    bool170 = global(bool: <class 'bool'>)   ['bool170']
    $170pred = call bool170($168compare_op.11, func=bool170, args=(Var($168compare_op.11, helper_loops.py:118),), kws=(), vararg=None, varkwarg=None, target=None) ['$168compare_op.11', '$170pred', 'bool170']
    branch $170pred, 172, 186                ['$170pred']
label 172:
    $176binary_subscr.3 = getitem(value=basic_lb, index=i, fn=<built-in function getitem>) ['$176binary_subscr.3', 'basic_lb', 'i']
    final_lb[i] = $176binary_subscr.3        ['$176binary_subscr.3', 'final_lb', 'i']
    jump 202                                 []
label 186:
    $const190.3.1 = const(int, 1)            ['$const190.3.1']
    $192binary_subtract.4 = i - $const190.3.1 ['$192binary_subtract.4', '$const190.3.1', 'i']
    $194binary_subscr.5 = getitem(value=final_lb, index=$192binary_subtract.4, fn=<built-in function getitem>) ['$192binary_subtract.4', '$194binary_subscr.5', 'final_lb']
    final_lb[i] = $194binary_subscr.5        ['$194binary_subscr.5', 'final_lb', 'i']
    jump 202                                 []
label 202:
    $const206.3.1 = const(int, 1)            ['$const206.3.1']
    $208binary_subtract.4 = i - $const206.3.1 ['$208binary_subtract.4', '$const206.3.1', 'i']
    $210binary_subscr.5 = getitem(value=supertrend, index=$208binary_subtract.4, fn=<built-in function getitem>) ['$208binary_subtract.4', '$210binary_subscr.5', 'supertrend']
    $const216.8.1 = const(int, 1)            ['$const216.8.1']
    $218binary_subtract.9 = i - $const216.8.1 ['$218binary_subtract.9', '$const216.8.1', 'i']
    $220binary_subscr.10 = getitem(value=final_ub, index=$218binary_subtract.9, fn=<built-in function getitem>) ['$218binary_subtract.9', '$220binary_subscr.10', 'final_ub']
    $222compare_op.11 = $210binary_subscr.5 == $220binary_subscr.10 ['$210binary_subscr.5', '$220binary_subscr.10', '$222compare_op.11']
    bool224 = global(bool: <class 'bool'>)   ['bool224']
    $224pred = call bool224($222compare_op.11, func=bool224, args=(Var($222compare_op.11, helper_loops.py:123),), kws=(), vararg=None, varkwarg=None, target=None) ['$222compare_op.11', '$224pred', 'bool224']
    branch $224pred, 226, 256                ['$224pred']
label 226:
    $230binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>) ['$230binary_subscr.3', 'close', 'i']
    $236binary_subscr.6 = getitem(value=final_ub, index=i, fn=<built-in function getitem>) ['$236binary_subscr.6', 'final_ub', 'i']
    $238compare_op.7 = $230binary_subscr.3 <= $236binary_subscr.6 ['$230binary_subscr.3', '$236binary_subscr.6', '$238compare_op.7']
    bool240 = global(bool: <class 'bool'>)   ['bool240']
    $240pred = call bool240($238compare_op.7, func=bool240, args=(Var($238compare_op.7, helper_loops.py:123),), kws=(), vararg=None, varkwarg=None, target=None) ['$238compare_op.7', '$240pred', 'bool240']
    branch $240pred, 242, 256                ['$240pred']
label 242:
    $246binary_subscr.3 = getitem(value=final_ub, index=i, fn=<built-in function getitem>) ['$246binary_subscr.3', 'final_ub', 'i']
    supertrend[i] = $246binary_subscr.3      ['$246binary_subscr.3', 'i', 'supertrend']
    jump 50                                  []
label 256:
    $const260.3.1 = const(int, 1)            ['$const260.3.1']
    $262binary_subtract.4 = i - $const260.3.1 ['$262binary_subtract.4', '$const260.3.1', 'i']
    $264binary_subscr.5 = getitem(value=supertrend, index=$262binary_subtract.4, fn=<built-in function getitem>) ['$262binary_subtract.4', '$264binary_subscr.5', 'supertrend']
    $const270.8.1 = const(int, 1)            ['$const270.8.1']
    $272binary_subtract.9 = i - $const270.8.1 ['$272binary_subtract.9', '$const270.8.1', 'i']
    $274binary_subscr.10 = getitem(value=final_ub, index=$272binary_subtract.9, fn=<built-in function getitem>) ['$272binary_subtract.9', '$274binary_subscr.10', 'final_ub']
    $276compare_op.11 = $264binary_subscr.5 == $274binary_subscr.10 ['$264binary_subscr.5', '$274binary_subscr.10', '$276compare_op.11']
    bool278 = global(bool: <class 'bool'>)   ['bool278']
    $278pred = call bool278($276compare_op.11, func=bool278, args=(Var($276compare_op.11, helper_loops.py:125),), kws=(), vararg=None, varkwarg=None, target=None) ['$276compare_op.11', '$278pred', 'bool278']
    branch $278pred, 280, 310                ['$278pred']
label 280:
    $284binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>) ['$284binary_subscr.3', 'close', 'i']
    $290binary_subscr.6 = getitem(value=final_ub, index=i, fn=<built-in function getitem>) ['$290binary_subscr.6', 'final_ub', 'i']
    $292compare_op.7 = $284binary_subscr.3 > $290binary_subscr.6 ['$284binary_subscr.3', '$290binary_subscr.6', '$292compare_op.7']
    bool294 = global(bool: <class 'bool'>)   ['bool294']
    $294pred = call bool294($292compare_op.7, func=bool294, args=(Var($292compare_op.7, helper_loops.py:125),), kws=(), vararg=None, varkwarg=None, target=None) ['$292compare_op.7', '$294pred', 'bool294']
    branch $294pred, 296, 310                ['$294pred']
label 296:
    $300binary_subscr.3 = getitem(value=final_lb, index=i, fn=<built-in function getitem>) ['$300binary_subscr.3', 'final_lb', 'i']
    supertrend[i] = $300binary_subscr.3      ['$300binary_subscr.3', 'i', 'supertrend']
    jump 50                                  []
label 310:
    $const314.3.1 = const(int, 1)            ['$const314.3.1']
    $316binary_subtract.4 = i - $const314.3.1 ['$316binary_subtract.4', '$const314.3.1', 'i']
    $318binary_subscr.5 = getitem(value=supertrend, index=$316binary_subtract.4, fn=<built-in function getitem>) ['$316binary_subtract.4', '$318binary_subscr.5', 'supertrend']
    $const324.8.1 = const(int, 1)            ['$const324.8.1']
    $326binary_subtract.9 = i - $const324.8.1 ['$326binary_subtract.9', '$const324.8.1', 'i']
    $328binary_subscr.10 = getitem(value=final_lb, index=$326binary_subtract.9, fn=<built-in function getitem>) ['$326binary_subtract.9', '$328binary_subscr.10', 'final_lb']
    $330compare_op.11 = $318binary_subscr.5 == $328binary_subscr.10 ['$318binary_subscr.5', '$328binary_subscr.10', '$330compare_op.11']
    bool332 = global(bool: <class 'bool'>)   ['bool332']
    $332pred = call bool332($330compare_op.11, func=bool332, args=(Var($330compare_op.11, helper_loops.py:127),), kws=(), vararg=None, varkwarg=None, target=None) ['$330compare_op.11', '$332pred', 'bool332']
    branch $332pred, 334, 364                ['$332pred']
label 334:
    $338binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>) ['$338binary_subscr.3', 'close', 'i']
    $344binary_subscr.6 = getitem(value=final_lb, index=i, fn=<built-in function getitem>) ['$344binary_subscr.6', 'final_lb', 'i']
    $346compare_op.7 = $338binary_subscr.3 >= $344binary_subscr.6 ['$338binary_subscr.3', '$344binary_subscr.6', '$346compare_op.7']
    bool348 = global(bool: <class 'bool'>)   ['bool348']
    $348pred = call bool348($346compare_op.7, func=bool348, args=(Var($346compare_op.7, helper_loops.py:127),), kws=(), vararg=None, varkwarg=None, target=None) ['$346compare_op.7', '$348pred', 'bool348']
    branch $348pred, 350, 364                ['$348pred']
label 350:
    $354binary_subscr.3 = getitem(value=final_lb, index=i, fn=<built-in function getitem>) ['$354binary_subscr.3', 'final_lb', 'i']
    supertrend[i] = $354binary_subscr.3      ['$354binary_subscr.3', 'i', 'supertrend']
    jump 50                                  []
label 364:
    $const368.3.1 = const(int, 1)            ['$const368.3.1']
    $370binary_subtract.4 = i - $const368.3.1 ['$370binary_subtract.4', '$const368.3.1', 'i']
    $372binary_subscr.5 = getitem(value=supertrend, index=$370binary_subtract.4, fn=<built-in function getitem>) ['$370binary_subtract.4', '$372binary_subscr.5', 'supertrend']
    $const378.8.1 = const(int, 1)            ['$const378.8.1']
    $380binary_subtract.9 = i - $const378.8.1 ['$380binary_subtract.9', '$const378.8.1', 'i']
    $382binary_subscr.10 = getitem(value=final_lb, index=$380binary_subtract.9, fn=<built-in function getitem>) ['$380binary_subtract.9', '$382binary_subscr.10', 'final_lb']
    $384compare_op.11 = $372binary_subscr.5 == $382binary_subscr.10 ['$372binary_subscr.5', '$382binary_subscr.10', '$384compare_op.11']
    bool386 = global(bool: <class 'bool'>)   ['bool386']
    $386pred = call bool386($384compare_op.11, func=bool386, args=(Var($384compare_op.11, helper_loops.py:129),), kws=(), vararg=None, varkwarg=None, target=None) ['$384compare_op.11', '$386pred', 'bool386']
    branch $386pred, 388, 418                ['$386pred']
label 388:
    $392binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>) ['$392binary_subscr.3', 'close', 'i']
    $398binary_subscr.6 = getitem(value=final_lb, index=i, fn=<built-in function getitem>) ['$398binary_subscr.6', 'final_lb', 'i']
    $400compare_op.7 = $392binary_subscr.3 < $398binary_subscr.6 ['$392binary_subscr.3', '$398binary_subscr.6', '$400compare_op.7']
    bool402 = global(bool: <class 'bool'>)   ['bool402']
    $402pred = call bool402($400compare_op.7, func=bool402, args=(Var($400compare_op.7, helper_loops.py:129),), kws=(), vararg=None, varkwarg=None, target=None) ['$400compare_op.7', '$402pred', 'bool402']
    branch $402pred, 404, 418                ['$402pred']
label 404:
    $408binary_subscr.3 = getitem(value=final_ub, index=i, fn=<built-in function getitem>) ['$408binary_subscr.3', 'final_ub', 'i']
    supertrend[i] = $408binary_subscr.3      ['$408binary_subscr.3', 'i', 'supertrend']
    jump 50                                  []
label 418:
    $const418.1.2 = const(float, 0.0)        ['$const418.1.2']
    supertrend[i] = $const418.1.2            ['$const418.1.2', 'i', 'supertrend']
    jump 50                                  []
label 428:
    $430return_value.1 = cast(value=supertrend) ['$430return_value.1', 'supertrend']
    return $430return_value.1                ['$430return_value.1']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c277f547a00>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: close = arg(0, name=close)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: basic_ub = arg(1, name=basic_ub)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: basic_lb = arg(2, name=basic_lb)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: n = arg(3, name=n)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(len: <built-in function len>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: length = call $2load_global.0(close, func=$2load_global.0, args=[Var(close, helper_loops.py:99)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $10load_global.3 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $12load_method.4 = getattr(value=$10load_global.3, attr=zeros)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_ub = call $12load_method.4(length, func=$12load_method.4, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $20load_global.7 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $22load_method.8 = getattr(value=$20load_global.7, attr=zeros)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_lb = call $22load_method.8(length, func=$22load_method.8, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $30load_global.11 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $32load_method.12 = getattr(value=$30load_global.11, attr=zeros)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend = call $32load_method.12(length, func=$32load_method.12, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $40load_global.15 = global(range: <class 'range'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $46call_function.18 = call $40load_global.15(n, length, func=$40load_global.15, args=[Var(n, helper_loops.py:99), Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $48get_iter.19 = getiter(value=$46call_function.18)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $phi50.0 = $48get_iter.19
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 50
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 50
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c277f547a00>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $50for_iter.1 = iternext(value=$phi50.0)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $phi52.1 = $50for_iter.2
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $50for_iter.3, 52, 428
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 52
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c277f547a00>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: i = $phi52.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $58binary_subscr.4 = getitem(value=basic_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const64.7.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $66binary_subtract.8 = i - $const64.7.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $68binary_subscr.9 = getitem(value=final_ub, index=$66binary_subtract.8, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $70compare_op.10 = $58binary_subscr.4 < $68binary_subscr.9
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool72 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $72pred = call bool72($70compare_op.10, func=bool72, args=(Var($70compare_op.10, helper_loops.py:113),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $72pred, 98, 74
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 74
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c277f547a00>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const78.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $80binary_subtract.4 = i - $const78.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $82binary_subscr.5 = getitem(value=close, index=$80binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const88.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $90binary_subtract.9 = i - $const88.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $92binary_subscr.10 = getitem(value=final_ub, index=$90binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $94compare_op.11 = $82binary_subscr.5 > $92binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool96 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $96pred = call bool96($94compare_op.11, func=bool96, args=(Var($94compare_op.11, helper_loops.py:113),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $96pred, 98, 112
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 98
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c277f547a00>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $102binary_subscr.3 = getitem(value=basic_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_ub[i] = $102binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 128
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 112
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c277f547a00>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const116.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $118binary_subtract.4 = i - $const116.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $120binary_subscr.5 = getitem(value=final_ub, index=$118binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_ub[i] = $120binary_subscr.5
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 128
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 128
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c277f547a00>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $132binary_subscr.3 = getitem(value=basic_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const138.6.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $140binary_subtract.7 = i - $const138.6.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $142binary_subscr.8 = getitem(value=final_lb, index=$140binary_subtract.7, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $144compare_op.9 = $132binary_subscr.3 > $142binary_subscr.8
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool146 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $146pred = call bool146($144compare_op.9, func=bool146, args=(Var($144compare_op.9, helper_loops.py:118),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $146pred, 172, 148
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 148
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c277f547a00>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const152.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $154binary_subtract.4 = i - $const152.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $156binary_subscr.5 = getitem(value=close, index=$154binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const162.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $164binary_subtract.9 = i - $const162.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $166binary_subscr.10 = getitem(value=final_lb, index=$164binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $168compare_op.11 = $156binary_subscr.5 < $166binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool170 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $170pred = call bool170($168compare_op.11, func=bool170, args=(Var($168compare_op.11, helper_loops.py:118),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $170pred, 172, 186
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 172
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c277f547a00>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $176binary_subscr.3 = getitem(value=basic_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_lb[i] = $176binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 202
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 186
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c277f547a00>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const190.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $192binary_subtract.4 = i - $const190.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $194binary_subscr.5 = getitem(value=final_lb, index=$192binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_lb[i] = $194binary_subscr.5
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 202
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 202
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c277f547a00>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const206.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $208binary_subtract.4 = i - $const206.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $210binary_subscr.5 = getitem(value=supertrend, index=$208binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const216.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $218binary_subtract.9 = i - $const216.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $220binary_subscr.10 = getitem(value=final_ub, index=$218binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $222compare_op.11 = $210binary_subscr.5 == $220binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool224 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $224pred = call bool224($222compare_op.11, func=bool224, args=(Var($222compare_op.11, helper_loops.py:123),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $224pred, 226, 256
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 226
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c277f547a00>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $230binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $236binary_subscr.6 = getitem(value=final_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $238compare_op.7 = $230binary_subscr.3 <= $236binary_subscr.6
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool240 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $240pred = call bool240($238compare_op.7, func=bool240, args=(Var($238compare_op.7, helper_loops.py:123),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $240pred, 242, 256
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 242
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c277f547a00>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $246binary_subscr.3 = getitem(value=final_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $246binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 256
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c277f547a00>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const260.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $262binary_subtract.4 = i - $const260.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $264binary_subscr.5 = getitem(value=supertrend, index=$262binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const270.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $272binary_subtract.9 = i - $const270.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $274binary_subscr.10 = getitem(value=final_ub, index=$272binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $276compare_op.11 = $264binary_subscr.5 == $274binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool278 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $278pred = call bool278($276compare_op.11, func=bool278, args=(Var($276compare_op.11, helper_loops.py:125),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $278pred, 280, 310
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 280
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c277f547a00>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $284binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $290binary_subscr.6 = getitem(value=final_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $292compare_op.7 = $284binary_subscr.3 > $290binary_subscr.6
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool294 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $294pred = call bool294($292compare_op.7, func=bool294, args=(Var($292compare_op.7, helper_loops.py:125),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $294pred, 296, 310
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 296
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c277f547a00>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $300binary_subscr.3 = getitem(value=final_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $300binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 310
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c277f547a00>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const314.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $316binary_subtract.4 = i - $const314.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $318binary_subscr.5 = getitem(value=supertrend, index=$316binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const324.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $326binary_subtract.9 = i - $const324.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $328binary_subscr.10 = getitem(value=final_lb, index=$326binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $330compare_op.11 = $318binary_subscr.5 == $328binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool332 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $332pred = call bool332($330compare_op.11, func=bool332, args=(Var($330compare_op.11, helper_loops.py:127),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $332pred, 334, 364
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 334
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c277f547a00>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $338binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $344binary_subscr.6 = getitem(value=final_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $346compare_op.7 = $338binary_subscr.3 >= $344binary_subscr.6
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool348 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $348pred = call bool348($346compare_op.7, func=bool348, args=(Var($346compare_op.7, helper_loops.py:127),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $348pred, 350, 364
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 350
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c277f547a00>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $354binary_subscr.3 = getitem(value=final_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $354binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 364
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c277f547a00>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const368.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $370binary_subtract.4 = i - $const368.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $372binary_subscr.5 = getitem(value=supertrend, index=$370binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const378.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $380binary_subtract.9 = i - $const378.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $382binary_subscr.10 = getitem(value=final_lb, index=$380binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $384compare_op.11 = $372binary_subscr.5 == $382binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool386 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $386pred = call bool386($384compare_op.11, func=bool386, args=(Var($384compare_op.11, helper_loops.py:129),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $386pred, 388, 418
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 388
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c277f547a00>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $392binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $398binary_subscr.6 = getitem(value=final_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $400compare_op.7 = $392binary_subscr.3 < $398binary_subscr.6
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool402 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $402pred = call bool402($400compare_op.7, func=bool402, args=(Var($400compare_op.7, helper_loops.py:129),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $402pred, 404, 418
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 404
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c277f547a00>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $408binary_subscr.3 = getitem(value=final_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $408binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 418
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c277f547a00>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const418.1.2 = const(float, 0.0)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $const418.1.2
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 428
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c277f547a00>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $430return_value.1 = cast(value=supertrend)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $430return_value.1
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 429
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c277f547a00>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 50
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$102binary_subscr.3': [(<numba.core.ir.Assign object at 0x7c277f529210>,
                                      98)],
             '$10load_global.3': [(<numba.core.ir.Assign object at 0x7c277f6d1000>,
                                   0)],
             '$118binary_subtract.4': [(<numba.core.ir.Assign object at 0x7c277f529a50>,
                                        112)],
             '$120binary_subscr.5': [(<numba.core.ir.Assign object at 0x7c277f529bd0>,
                                      112)],
             '$12load_method.4': [(<numba.core.ir.Assign object at 0x7c277f6d1180>,
                                   0)],
             '$132binary_subscr.3': [(<numba.core.ir.Assign object at 0x7c277f52a230>,
                                      128)],
             '$140binary_subtract.7': [(<numba.core.ir.Assign object at 0x7c277f52a770>,
                                        128)],
             '$142binary_subscr.8': [(<numba.core.ir.Assign object at 0x7c277f52a8f0>,
                                      128)],
             '$144compare_op.9': [(<numba.core.ir.Assign object at 0x7c277f52aa70>,
                                   128)],
             '$146pred': [(<numba.core.ir.Assign object at 0x7c277f52ace0>,
                           128)],
             '$154binary_subtract.4': [(<numba.core.ir.Assign object at 0x7c277f52b1f0>,
                                        148)],
             '$156binary_subscr.5': [(<numba.core.ir.Assign object at 0x7c277f52b370>,
                                      148)],
             '$164binary_subtract.9': [(<numba.core.ir.Assign object at 0x7c277f52b8b0>,
                                        148)],
             '$166binary_subscr.10': [(<numba.core.ir.Assign object at 0x7c277f52ba30>,
                                       148)],
             '$168compare_op.11': [(<numba.core.ir.Assign object at 0x7c277f52bbb0>,
                                    148)],
             '$170pred': [(<numba.core.ir.Assign object at 0x7c277f52be20>,
                           148)],
             '$176binary_subscr.3': [(<numba.core.ir.Assign object at 0x7c277f5341f0>,
                                      172)],
             '$192binary_subtract.4': [(<numba.core.ir.Assign object at 0x7c277f534a30>,
                                        186)],
             '$194binary_subscr.5': [(<numba.core.ir.Assign object at 0x7c277f534bb0>,
                                      186)],
             '$208binary_subtract.4': [(<numba.core.ir.Assign object at 0x7c277f535390>,
                                        202)],
             '$20load_global.7': [(<numba.core.ir.Assign object at 0x7c277f6d16c0>,
                                   0)],
             '$210binary_subscr.5': [(<numba.core.ir.Assign object at 0x7c277f535510>,
                                      202)],
             '$218binary_subtract.9': [(<numba.core.ir.Assign object at 0x7c277f535a50>,
                                        202)],
             '$220binary_subscr.10': [(<numba.core.ir.Assign object at 0x7c277f535bd0>,
                                       202)],
             '$222compare_op.11': [(<numba.core.ir.Assign object at 0x7c277f535d50>,
                                    202)],
             '$224pred': [(<numba.core.ir.Assign object at 0x7c277f535fc0>,
                           202)],
             '$22load_method.8': [(<numba.core.ir.Assign object at 0x7c277f6d1840>,
                                   0)],
             '$230binary_subscr.3': [(<numba.core.ir.Assign object at 0x7c277f536350>,
                                      226)],
             '$236binary_subscr.6': [(<numba.core.ir.Assign object at 0x7c277f536710>,
                                      226)],
             '$238compare_op.7': [(<numba.core.ir.Assign object at 0x7c277f536890>,
                                   226)],
             '$240pred': [(<numba.core.ir.Assign object at 0x7c277f536b00>,
                           226)],
             '$246binary_subscr.3': [(<numba.core.ir.Assign object at 0x7c277f536e90>,
                                      242)],
             '$262binary_subtract.4': [(<numba.core.ir.Assign object at 0x7c277f5376d0>,
                                        256)],
             '$264binary_subscr.5': [(<numba.core.ir.Assign object at 0x7c277f537850>,
                                      256)],
             '$272binary_subtract.9': [(<numba.core.ir.Assign object at 0x7c277f537d90>,
                                        256)],
             '$274binary_subscr.10': [(<numba.core.ir.Assign object at 0x7c277f537f10>,
                                       256)],
             '$276compare_op.11': [(<numba.core.ir.Assign object at 0x7c277f53c0d0>,
                                    256)],
             '$278pred': [(<numba.core.ir.Assign object at 0x7c277f53c340>,
                           256)],
             '$284binary_subscr.3': [(<numba.core.ir.Assign object at 0x7c277f53c6d0>,
                                      280)],
             '$290binary_subscr.6': [(<numba.core.ir.Assign object at 0x7c277f53ca90>,
                                      280)],
             '$292compare_op.7': [(<numba.core.ir.Assign object at 0x7c277f53cc10>,
                                   280)],
             '$294pred': [(<numba.core.ir.Assign object at 0x7c277f53ce80>,
                           280)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7c277f6d0ac0>,
                                  0)],
             '$300binary_subscr.3': [(<numba.core.ir.Assign object at 0x7c277f53d210>,
                                      296)],
             '$30load_global.11': [(<numba.core.ir.Assign object at 0x7c277f6d1d80>,
                                    0)],
             '$316binary_subtract.4': [(<numba.core.ir.Assign object at 0x7c277f53da50>,
                                        310)],
             '$318binary_subscr.5': [(<numba.core.ir.Assign object at 0x7c277f53dbd0>,
                                      310)],
             '$326binary_subtract.9': [(<numba.core.ir.Assign object at 0x7c277f53e110>,
                                        310)],
             '$328binary_subscr.10': [(<numba.core.ir.Assign object at 0x7c277f53e290>,
                                       310)],
             '$32load_method.12': [(<numba.core.ir.Assign object at 0x7c277f6d1f00>,
                                    0)],
             '$330compare_op.11': [(<numba.core.ir.Assign object at 0x7c277f53e410>,
                                    310)],
             '$332pred': [(<numba.core.ir.Assign object at 0x7c277f53e680>,
                           310)],
             '$338binary_subscr.3': [(<numba.core.ir.Assign object at 0x7c277f53ea10>,
                                      334)],
             '$344binary_subscr.6': [(<numba.core.ir.Assign object at 0x7c277f53edd0>,
                                      334)],
             '$346compare_op.7': [(<numba.core.ir.Assign object at 0x7c277f53ef50>,
                                   334)],
             '$348pred': [(<numba.core.ir.Assign object at 0x7c277f53f1c0>,
                           334)],
             '$354binary_subscr.3': [(<numba.core.ir.Assign object at 0x7c277f53f550>,
                                      350)],
             '$370binary_subtract.4': [(<numba.core.ir.Assign object at 0x7c277f53fd90>,
                                        364)],
             '$372binary_subscr.5': [(<numba.core.ir.Assign object at 0x7c277f53ff10>,
                                      364)],
             '$380binary_subtract.9': [(<numba.core.ir.Assign object at 0x7c277f544490>,
                                        364)],
             '$382binary_subscr.10': [(<numba.core.ir.Assign object at 0x7c277f544610>,
                                       364)],
             '$384compare_op.11': [(<numba.core.ir.Assign object at 0x7c277f544790>,
                                    364)],
             '$386pred': [(<numba.core.ir.Assign object at 0x7c277f544a00>,
                           364)],
             '$392binary_subscr.3': [(<numba.core.ir.Assign object at 0x7c277f544d90>,
                                      388)],
             '$398binary_subscr.6': [(<numba.core.ir.Assign object at 0x7c277f545150>,
                                      388)],
             '$400compare_op.7': [(<numba.core.ir.Assign object at 0x7c277f5452d0>,
                                   388)],
             '$402pred': [(<numba.core.ir.Assign object at 0x7c277f545540>,
                           388)],
             '$408binary_subscr.3': [(<numba.core.ir.Assign object at 0x7c277f5458d0>,
                                      404)],
             '$40load_global.15': [(<numba.core.ir.Assign object at 0x7c277f6d2440>,
                                    0)],
             '$430return_value.1': [(<numba.core.ir.Assign object at 0x7c277f546380>,
                                     428)],
             '$46call_function.18': [(<numba.core.ir.Assign object at 0x7c277f6d2860>,
                                      0)],
             '$48get_iter.19': [(<numba.core.ir.Assign object at 0x7c277f6d2980>,
                                 0)],
             '$50for_iter.1': [(<numba.core.ir.Assign object at 0x7c277f6d25f0>,
                                50)],
             '$50for_iter.2': [(<numba.core.ir.Assign object at 0x7c277f6d2a70>,
                                50)],
             '$50for_iter.3': [(<numba.core.ir.Assign object at 0x7c277f6d2b90>,
                                50)],
             '$58binary_subscr.4': [(<numba.core.ir.Assign object at 0x7c277f6d3250>,
                                     52)],
             '$66binary_subtract.8': [(<numba.core.ir.Assign object at 0x7c277f6d3790>,
                                       52)],
             '$68binary_subscr.9': [(<numba.core.ir.Assign object at 0x7c277f6d3910>,
                                     52)],
             '$70compare_op.10': [(<numba.core.ir.Assign object at 0x7c277f6d3a90>,
                                   52)],
             '$72pred': [(<numba.core.ir.Assign object at 0x7c277f6d3d00>, 52)],
             '$80binary_subtract.4': [(<numba.core.ir.Assign object at 0x7c277f528250>,
                                       74)],
             '$82binary_subscr.5': [(<numba.core.ir.Assign object at 0x7c277f5283d0>,
                                     74)],
             '$90binary_subtract.9': [(<numba.core.ir.Assign object at 0x7c277f528910>,
                                       74)],
             '$92binary_subscr.10': [(<numba.core.ir.Assign object at 0x7c277f528a90>,
                                      74)],
             '$94compare_op.11': [(<numba.core.ir.Assign object at 0x7c277f528c10>,
                                   74)],
             '$96pred': [(<numba.core.ir.Assign object at 0x7c277f528e80>, 74)],
             '$const116.3.1': [(<numba.core.ir.Assign object at 0x7c277f5298a0>,
                                112)],
             '$const138.6.1': [(<numba.core.ir.Assign object at 0x7c277f52a5c0>,
                                128)],
             '$const152.3.1': [(<numba.core.ir.Assign object at 0x7c277f52b040>,
                                148)],
             '$const162.8.1': [(<numba.core.ir.Assign object at 0x7c277f52b700>,
                                148)],
             '$const190.3.1': [(<numba.core.ir.Assign object at 0x7c277f534880>,
                                186)],
             '$const206.3.1': [(<numba.core.ir.Assign object at 0x7c277f5351e0>,
                                202)],
             '$const216.8.1': [(<numba.core.ir.Assign object at 0x7c277f5358a0>,
                                202)],
             '$const260.3.1': [(<numba.core.ir.Assign object at 0x7c277f537520>,
                                256)],
             '$const270.8.1': [(<numba.core.ir.Assign object at 0x7c277f537be0>,
                                256)],
             '$const314.3.1': [(<numba.core.ir.Assign object at 0x7c277f53d8a0>,
                                310)],
             '$const324.8.1': [(<numba.core.ir.Assign object at 0x7c277f53df60>,
                                310)],
             '$const368.3.1': [(<numba.core.ir.Assign object at 0x7c277f53fbe0>,
                                364)],
             '$const378.8.1': [(<numba.core.ir.Assign object at 0x7c277f5442e0>,
                                364)],
             '$const418.1.2': [(<numba.core.ir.Assign object at 0x7c277f545d20>,
                                418)],
             '$const64.7.1': [(<numba.core.ir.Assign object at 0x7c277f6d35e0>,
                               52)],
             '$const78.3.1': [(<numba.core.ir.Assign object at 0x7c277f5280a0>,
                               74)],
             '$const88.8.1': [(<numba.core.ir.Assign object at 0x7c277f528760>,
                               74)],
             '$phi50.0': [(<numba.core.ir.Assign object at 0x7c277f6d0c70>, 0)],
             '$phi52.1': [(<numba.core.ir.Assign object at 0x7c277f6d20b0>,
                           50)],
             'basic_lb': [(<numba.core.ir.Assign object at 0x7c277f6d05e0>, 0)],
             'basic_ub': [(<numba.core.ir.Assign object at 0x7c277f6d0160>, 0)],
             'bool146': [(<numba.core.ir.Assign object at 0x7c277f52abc0>,
                          128)],
             'bool170': [(<numba.core.ir.Assign object at 0x7c277f52bd00>,
                          148)],
             'bool224': [(<numba.core.ir.Assign object at 0x7c277f535ea0>,
                          202)],
             'bool240': [(<numba.core.ir.Assign object at 0x7c277f5369e0>,
                          226)],
             'bool278': [(<numba.core.ir.Assign object at 0x7c277f53c220>,
                          256)],
             'bool294': [(<numba.core.ir.Assign object at 0x7c277f53cd60>,
                          280)],
             'bool332': [(<numba.core.ir.Assign object at 0x7c277f53e560>,
                          310)],
             'bool348': [(<numba.core.ir.Assign object at 0x7c277f53f0a0>,
                          334)],
             'bool386': [(<numba.core.ir.Assign object at 0x7c277f5448e0>,
                          364)],
             'bool402': [(<numba.core.ir.Assign object at 0x7c277f545420>,
                          388)],
             'bool72': [(<numba.core.ir.Assign object at 0x7c277f6d3be0>, 52)],
             'bool96': [(<numba.core.ir.Assign object at 0x7c277f528d60>, 74)],
             'close': [(<numba.core.ir.Assign object at 0x7c277f6d0220>, 0)],
             'final_lb': [(<numba.core.ir.Assign object at 0x7c277f6d1b70>, 0)],
             'final_ub': [(<numba.core.ir.Assign object at 0x7c277f6d14b0>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x7c277f6d2e60>, 52)],
             'length': [(<numba.core.ir.Assign object at 0x7c277f6d0dc0>, 0)],
             'n': [(<numba.core.ir.Assign object at 0x7c277f6d0940>, 0)],
             'supertrend': [(<numba.core.ir.Assign object at 0x7c277f6d2230>,
                             0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x7c277f6bad10>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4522)
           2	LOAD_GLOBAL(arg=0, lineno=4523)
           4	LOAD_ATTR(arg=1, lineno=4523)
           6	LOAD_FAST(arg=0, lineno=4523)
           8	LOAD_FAST(arg=1, lineno=4523)
          10	LOAD_CONST(arg=1, lineno=4523)
          12	CALL_FUNCTION_KW(arg=2, lineno=4523)
          14	STORE_FAST(arg=2, lineno=4523)
          16	LOAD_FAST(arg=2, lineno=4524)
          18	LOAD_METHOD(arg=2, lineno=4524)
          20	CALL_METHOD(arg=0, lineno=4524)
          22	POP_TOP(arg=None, lineno=4524)
          24	LOAD_FAST(arg=2, lineno=4525)
          26	RETURN_VALUE(arg=None, lineno=4525)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4522)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_attr.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_attr.1', '$shape6.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_attr.1', '$shape6.2', '$dtype8.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=CALL_FUNCTION_KW(arg=2, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_attr.1', '$shape6.2', '$dtype8.3', '$const10.4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=14, inst=STORE_FAST(arg=2, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$12call_function_kw.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=4524)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=4524)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$arr16.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=20, inst=CALL_METHOD(arg=0, lineno=4524)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$18load_method.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=22, inst=POP_TOP(arg=None, lineno=4524)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$20call_method.8']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=24, inst=LOAD_FAST(arg=2, lineno=4525)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=26, inst=RETURN_VALUE(arg=None, lineno=4525)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$arr24.9']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'res': '$shape6.2'}), (8, {'res': '$dtype8.3'}), (10, {'res': '$const10.4.1'}), (12, {'func': '$4load_attr.1', 'args': ['$shape6.2', '$dtype8.3'], 'names': '$const10.4.1', 'res': '$12call_function_kw.5'}), (14, {'value': '$12call_function_kw.5'}), (16, {'res': '$arr16.6'}), (18, {'item': '$arr16.6', 'res': '$18load_method.7'}), (20, {'func': '$18load_method.7', 'args': [], 'res': '$20call_method.8'}), (24, {'res': '$arr24.9'}), (26, {'retval': '$arr24.9', 'castval': '$26return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=empty) ['$2load_global.0', '$4load_attr.1']
    arr = call $4load_attr.1(shape, func=$4load_attr.1, args=[Var(shape, arrayobj.py:4522)], kws=[('dtype', Var(dtype, arrayobj.py:4522))], vararg=None, varkwarg=None, target=None) ['$4load_attr.1', 'arr', 'dtype', 'shape']
    $18load_method.7 = getattr(value=arr, attr=_zero_fill) ['$18load_method.7', 'arr']
    $20call_method.8 = call $18load_method.7(func=$18load_method.7, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_method.7', '$20call_method.8']
    $26return_value.10 = cast(value=arr)     ['$26return_value.10', 'arr']
    return $26return_value.10                ['$26return_value.10']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c277f595a80>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: shape = arg(0, name=shape)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: dtype = arg(1, name=dtype)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: arr = call $4load_attr.1(shape, func=$4load_attr.1, args=[Var(shape, arrayobj.py:4522)], kws=[('dtype', Var(dtype, arrayobj.py:4522))], vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $18load_method.7 = getattr(value=arr, attr=_zero_fill)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $20call_method.8 = call $18load_method.7(func=$18load_method.7, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $26return_value.10 = cast(value=arr)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $26return_value.10
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$18load_method.7': [(<numba.core.ir.Assign object at 0x7c277f5972e0>,
                                   0)],
             '$20call_method.8': [(<numba.core.ir.Assign object at 0x7c277f5974f0>,
                                   0)],
             '$26return_value.10': [(<numba.core.ir.Assign object at 0x7c277f597700>,
                                     0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7c277f596800>,
                                  0)],
             '$4load_attr.1': [(<numba.core.ir.Assign object at 0x7c277f596980>,
                                0)],
             'arr': [(<numba.core.ir.Assign object at 0x7c277f597040>, 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x7c277f596680>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x7c277f596560>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x7c277f595a80>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4454)
           2	LOAD_GLOBAL(arg=0, lineno=4455)
           4	LOAD_FAST(arg=0, lineno=4455)
           6	LOAD_FAST(arg=1, lineno=4455)
           8	LOAD_DEREF(arg=0, lineno=4455)
          10	CALL_FUNCTION(arg=3, lineno=4455)
          12	RETURN_VALUE(arg=None, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4454)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$shape4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=LOAD_DEREF(arg=0, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$shape4.1', '$dtype6.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=CALL_FUNCTION(arg=3, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$shape4.1', '$dtype6.2', '$8load_deref.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$10call_function.4']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'res': '$dtype6.2'}), (8, {'res': '$8load_deref.3'}), (10, {'func': '$2load_global.0', 'args': ['$shape4.1', '$dtype6.2', '$8load_deref.3'], 'res': '$10call_function.4'}), (12, {'retval': '$10call_function.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$2load_global.0']
    $8load_deref.3 = freevar(retty: array(float64, 1d, C)) ['$8load_deref.3']
    $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4454), Var(dtype, arrayobj.py:4454), Var($8load_deref.3, arrayobj.py:4455)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_deref.3', 'dtype', 'shape']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c277f5d10f0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: shape = arg(0, name=shape)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: dtype = arg(1, name=dtype)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $8load_deref.3 = freevar(retty: array(float64, 1d, C))
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4454), Var(dtype, arrayobj.py:4454), Var($8load_deref.3, arrayobj.py:4455)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $12return_value.5 = cast(value=$10call_function.4)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $12return_value.5
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$10call_function.4': [(<numba.core.ir.Assign object at 0x7c277f5d1390>,
                                     0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x7c277f5d1270>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7c277f5d1810>,
                                  0)],
             '$8load_deref.3': [(<numba.core.ir.Assign object at 0x7c277f5d1570>,
                                 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x7c277f5d1690>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x7c277f5d0880>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x7c277f5d10f0>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4330)
           2	LOAD_FAST(arg=0, lineno=4333)
           4	LOAD_METHOD(arg=0, lineno=4333)
           6	LOAD_FAST(arg=1, lineno=4333)
           8	LOAD_FAST(arg=2, lineno=4333)
          10	CALL_METHOD(arg=2, lineno=4333)
          12	RETURN_VALUE(arg=None, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4330)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_METHOD(arg=0, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$arrtype2.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_method.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_method.1', '$size6.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=CALL_METHOD(arg=2, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_method.1', '$size6.2', '$align8.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$10call_method.4']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$arrtype2.0'}), (4, {'item': '$arrtype2.0', 'res': '$4load_method.1'}), (6, {'res': '$size6.2'}), (8, {'res': '$align8.3'}), (10, {'func': '$4load_method.1', 'args': ['$size6.2', '$align8.3'], 'res': '$10call_method.4'}), (12, {'retval': '$10call_method.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    arrtype = arg(0, name=arrtype)           ['arrtype']
    size = arg(1, name=size)                 ['size']
    align = arg(2, name=align)               ['align']
    $4load_method.1 = getattr(value=arrtype, attr=_allocate) ['$4load_method.1', 'arrtype']
    $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:4330), Var(align, arrayobj.py:4330)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', 'align', 'size']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c277f596290>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: arrtype = arg(0, name=arrtype)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: size = arg(1, name=size)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: align = arg(2, name=align)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $4load_method.1 = getattr(value=arrtype, attr=_allocate)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:4330), Var(align, arrayobj.py:4330)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $12return_value.5 = cast(value=$10call_method.4)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $12return_value.5
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$10call_method.4': [(<numba.core.ir.Assign object at 0x7c277f4c0be0>,
                                   0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x7c277f4c0cd0>,
                                    0)],
             '$4load_method.1': [(<numba.core.ir.Assign object at 0x7c277f4c0790>,
                                  0)],
             'align': [(<numba.core.ir.Assign object at 0x7c277f4c04f0>, 0)],
             'arrtype': [(<numba.core.ir.Assign object at 0x7c277f4a7580>, 0)],
             'size': [(<numba.core.ir.Assign object at 0x7c277f4c03d0>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x7c277f596290>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4325)
           2	LOAD_GLOBAL(arg=0, lineno=4326)
           4	LOAD_FAST(arg=1, lineno=4326)
           6	LOAD_FAST(arg=2, lineno=4326)
           8	CALL_FUNCTION(arg=2, lineno=4326)
          10	RETURN_VALUE(arg=None, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4325)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=LOAD_FAST(arg=2, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$allocsize4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$allocsize4.1', '$align6.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=RETURN_VALUE(arg=None, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$8call_function.3']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$allocsize4.1'}), (6, {'res': '$align6.2'}), (8, {'func': '$2load_global.0', 'args': ['$allocsize4.1', '$align6.2'], 'res': '$8call_function.3'}), (10, {'retval': '$8call_function.3', 'castval': '$10return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    cls = arg(0, name=cls)                   ['cls']
    allocsize = arg(1, name=allocsize)       ['allocsize']
    align = arg(2, name=align)               ['align']
    $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:4325), Var(align, arrayobj.py:4325)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'align', 'allocsize']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c277f4c19c0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: cls = arg(0, name=cls)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: allocsize = arg(1, name=allocsize)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: align = arg(2, name=align)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:4325), Var(align, arrayobj.py:4325)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $10return_value.4 = cast(value=$8call_function.3)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $10return_value.4
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$10return_value.4': [(<numba.core.ir.Assign object at 0x7c277f4c2da0>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7c277f4c2860>,
                                  0)],
             '$8call_function.3': [(<numba.core.ir.Assign object at 0x7c277f4c2c80>,
                                    0)],
             'align': [(<numba.core.ir.Assign object at 0x7c277f4c26e0>, 0)],
             'allocsize': [(<numba.core.ir.Assign object at 0x7c277f4c25c0>,
                            0)],
             'cls': [(<numba.core.ir.Assign object at 0x7c277f4c24a0>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x7c277f4c19c0>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4513)
           2	LOAD_GLOBAL(arg=0, lineno=4514)
           4	LOAD_FAST(arg=0, lineno=4514)
           6	CALL_FUNCTION(arg=1, lineno=4514)
           8	POP_TOP(arg=None, lineno=4514)
          10	LOAD_CONST(arg=0, lineno=4514)
          12	RETURN_VALUE(arg=None, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4513)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$self4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=POP_TOP(arg=None, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$6call_function.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=LOAD_CONST(arg=0, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$const10.3.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$self4.1'}), (6, {'func': '$2load_global.0', 'args': ['$self4.1'], 'res': '$6call_function.2'}), (10, {'res': '$const10.3.0'}), (12, {'retval': '$const10.3.0', 'castval': '$12return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    self = arg(0, name=self)                 ['self']
    $2load_global.0 = global(_zero_fill_array_method: <intrinsic _zero_fill_array_method>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(self, func=$2load_global.0, args=[Var(self, arrayobj.py:4513)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'self']
    $const10.3.0 = const(NoneType, None)     ['$const10.3.0']
    $12return_value.4 = cast(value=$const10.3.0) ['$12return_value.4', '$const10.3.0']
    return $12return_value.4                 ['$12return_value.4']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7c277f36e500>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: self = arg(0, name=self)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(_zero_fill_array_method: <intrinsic _zero_fill_array_method>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $6call_function.2 = call $2load_global.0(self, func=$2load_global.0, args=[Var(self, arrayobj.py:4513)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const10.3.0 = const(NoneType, None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $12return_value.4 = cast(value=$const10.3.0)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $12return_value.4
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$12return_value.4': [(<numba.core.ir.Assign object at 0x7c277f36e980>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7c277f36dc30>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x7c277f36dd80>,
                                    0)],
             '$const10.3.0': [(<numba.core.ir.Assign object at 0x7c277f36e800>,
                               0)],
             'self': [(<numba.core.ir.Assign object at 0x7c277f36da80>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x7c277f36e500>
yfinance - [DEBUG]{MainThread} - wrapper() - Entering history()
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NQ=F', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -  Entering history()
yfinance - [DEBUG]{MainThread} - history() - NQ=F: Yahoo GET parameters: {'range': '60d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -   Entering get()
yfinance - [DEBUG]{MainThread} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{MainThread} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/NQ=F
yfinance - [DEBUG]{MainThread} - _make_request() - params={'range': '60d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{MainThread} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - _get_crumb_basic() - reusing crumb
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _make_request() - response code=200
yfinance - [DEBUG]{MainThread} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{MainThread} - wrapper() -   Exiting get()
yfinance - [DEBUG]{MainThread} - history() - NQ=F: yfinance received OHLC data: 2025-04-22 04:00:00 -> 2025-06-30 06:22:11
yfinance - [DEBUG]{MainThread} - history() - NQ=F: OHLC after cleaning: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:22:11-04:00
yfinance - [DEBUG]{MainThread} - history() - NQ=F: OHLC after combining events: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:22:11-04:00
yfinance - [DEBUG]{MainThread} - history() - NQ=F: yfinance returning OHLC: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:15:00-04:00
yfinance - [DEBUG]{MainThread} - wrapper() -  Exiting history()
yfinance - [DEBUG]{MainThread} - wrapper() - Exiting history()
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
yfinance - [DEBUG]{MainThread} - wrapper() - Entering history()
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PYPL', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -  Entering history()
yfinance - [DEBUG]{MainThread} - history() - PYPL: Yahoo GET parameters: {'range': '60d', 'interval': '15m', 'includePrePost': True, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -   Entering get()
yfinance - [DEBUG]{MainThread} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{MainThread} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/PYPL
yfinance - [DEBUG]{MainThread} - _make_request() - params={'range': '60d', 'interval': '15m', 'includePrePost': True, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{MainThread} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - _get_crumb_basic() - reusing crumb
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _make_request() - response code=200
yfinance - [DEBUG]{MainThread} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{MainThread} - wrapper() -   Exiting get()
yfinance - [DEBUG]{MainThread} - history() - PYPL: yfinance received OHLC data: 2025-04-02 08:00:00 -> 2025-06-27 23:59:55
yfinance - [DEBUG]{MainThread} - history() - PYPL: OHLC after cleaning: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:59:55-04:00
yfinance - [DEBUG]{MainThread} - history() - PYPL: OHLC after combining events: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:59:55-04:00
yfinance - [DEBUG]{MainThread} - history() - PYPL: yfinance returning OHLC: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:45:00-04:00
yfinance - [DEBUG]{MainThread} - wrapper() -  Exiting history()
yfinance - [DEBUG]{MainThread} - wrapper() - Exiting history()
root - [INFO]{MainThread} - get_buy_sell_points_Roll() - Parameters of acquisition "buy_sell_points" for this stock is set to POSITIVE (units) 	92%: 0.8108 	98%: 1.5836 NEGATIVE (units) 	93%: 0.7986 	98%: 1.2999
yfinance - [DEBUG]{MainThread} - wrapper() - Entering history()
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NQ=F', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -  Entering history()
yfinance - [DEBUG]{MainThread} - history() - NQ=F: Yahoo GET parameters: {'range': '60d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -   Entering get()
yfinance - [DEBUG]{MainThread} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{MainThread} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/NQ=F
yfinance - [DEBUG]{MainThread} - _make_request() - params={'range': '60d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{MainThread} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - _get_crumb_basic() - reusing crumb
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _make_request() - response code=200
yfinance - [DEBUG]{MainThread} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{MainThread} - wrapper() -   Exiting get()
yfinance - [DEBUG]{MainThread} - history() - NQ=F: yfinance received OHLC data: 2025-04-22 04:00:00 -> 2025-06-30 06:23:00
yfinance - [DEBUG]{MainThread} - history() - NQ=F: OHLC after cleaning: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:23:00-04:00
yfinance - [DEBUG]{MainThread} - history() - NQ=F: OHLC after combining events: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:23:00-04:00
yfinance - [DEBUG]{MainThread} - history() - NQ=F: yfinance returning OHLC: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:15:00-04:00
yfinance - [DEBUG]{MainThread} - wrapper() -  Exiting history()
yfinance - [DEBUG]{MainThread} - wrapper() - Exiting history()
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
h5py._conv - [DEBUG]{MainThread} - <module>() - Creating converter from 7 to 5
h5py._conv - [DEBUG]{MainThread} - <module>() - Creating converter from 5 to 7
h5py._conv - [DEBUG]{MainThread} - <module>() - Creating converter from 7 to 5
h5py._conv - [DEBUG]{MainThread} - <module>() - Creating converter from 5 to 7
matplotlib - [DEBUG]{MainThread} - wrapper() - matplotlib data path: /opt/conda/lib/python3.10/site-packages/matplotlib/mpl-data
matplotlib - [DEBUG]{MainThread} - wrapper() - CONFIGDIR=/root/.config/matplotlib
matplotlib - [DEBUG]{MainThread} - <module>() - interactive is False
matplotlib - [DEBUG]{MainThread} - <module>() - platform is linux
matplotlib - [DEBUG]{MainThread} - wrapper() - CACHEDIR=/root/.cache/matplotlib
matplotlib.font_manager - [DEBUG]{MainThread} - _load_fontmanager() - Using fontManager instance from /root/.cache/matplotlib/fontlist-v390.json
yfinance - [DEBUG]{MainThread} - wrapper() - Entering history()
peewee - [DEBUG]{MainThread} - execute_sql() - ('CREATE TABLE IF NOT EXISTS "_tz_kv" ("key" VARCHAR(255) NOT NULL PRIMARY KEY, "value" VARCHAR(255)) WITHOUT ROWID', [])
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['UBER', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -  Entering history()
yfinance - [DEBUG]{MainThread} - history() - UBER: Yahoo GET parameters: {'range': '60d', 'interval': '15m', 'includePrePost': True, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -   Entering get()
yfinance - [DEBUG]{MainThread} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{MainThread} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/UBER
yfinance - [DEBUG]{MainThread} - _make_request() - params={'range': '60d', 'interval': '15m', 'includePrePost': True, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{MainThread} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -        Entering _load_cookie_curlCffi()
peewee - [DEBUG]{MainThread} - execute_sql() - ('CREATE TABLE IF NOT EXISTS "_cookieschema" ("strategy" VARCHAR(255) NOT NULL PRIMARY KEY, "fetch_date" DATETIME NOT NULL, "cookie_bytes" BLOB NOT NULL) WITHOUT ROWID', [])
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -        Exiting _load_cookie_curlCffi()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing persistent cookie
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -        Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{MainThread} - wrapper() -        Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_crumb_basic() - crumb = 'dK3IG/1ev6r'
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _make_request() - response code=200
yfinance - [DEBUG]{MainThread} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{MainThread} - wrapper() -   Exiting get()
yfinance - [DEBUG]{MainThread} - history() - UBER: yfinance received OHLC data: 2025-04-02 08:00:00 -> 2025-06-27 23:59:53
yfinance - [DEBUG]{MainThread} - history() - UBER: OHLC after cleaning: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:59:53-04:00
yfinance - [DEBUG]{MainThread} - history() - UBER: OHLC after combining events: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:59:53-04:00
yfinance - [DEBUG]{MainThread} - history() - UBER: yfinance returning OHLC: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:45:00-04:00
yfinance - [DEBUG]{MainThread} - wrapper() -  Exiting history()
yfinance - [DEBUG]{MainThread} - wrapper() - Exiting history()
root - [INFO]{MainThread} - get_buy_sell_points_Roll() - Parameters of acquisition "buy_sell_points" for this stock is set to POSITIVE (units) 	92%: 1.123 	98%: 1.8743 NEGATIVE (units) 	93%: 1.252 	98%: 1.9188
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=99)
           2	LOAD_GLOBAL(arg=0, lineno=106)
           4	LOAD_FAST(arg=0, lineno=106)
           6	CALL_FUNCTION(arg=1, lineno=106)
           8	STORE_FAST(arg=4, lineno=106)
          10	LOAD_GLOBAL(arg=1, lineno=107)
          12	LOAD_METHOD(arg=2, lineno=107)
          14	LOAD_FAST(arg=4, lineno=107)
          16	CALL_METHOD(arg=1, lineno=107)
          18	STORE_FAST(arg=5, lineno=107)
          20	LOAD_GLOBAL(arg=1, lineno=108)
          22	LOAD_METHOD(arg=2, lineno=108)
          24	LOAD_FAST(arg=4, lineno=108)
          26	CALL_METHOD(arg=1, lineno=108)
          28	STORE_FAST(arg=6, lineno=108)
          30	LOAD_GLOBAL(arg=1, lineno=109)
          32	LOAD_METHOD(arg=2, lineno=109)
          34	LOAD_FAST(arg=4, lineno=109)
          36	CALL_METHOD(arg=1, lineno=109)
          38	STORE_FAST(arg=7, lineno=109)
          40	LOAD_GLOBAL(arg=3, lineno=111)
          42	LOAD_FAST(arg=3, lineno=111)
          44	LOAD_FAST(arg=4, lineno=111)
          46	CALL_FUNCTION(arg=2, lineno=111)
          48	GET_ITER(arg=None, lineno=111)
>         50	FOR_ITER(arg=188, lineno=111)
          52	STORE_FAST(arg=8, lineno=111)
          54	LOAD_FAST(arg=1, lineno=113)
          56	LOAD_FAST(arg=8, lineno=113)
          58	BINARY_SUBSCR(arg=None, lineno=113)
          60	LOAD_FAST(arg=5, lineno=113)
          62	LOAD_FAST(arg=8, lineno=113)
          64	LOAD_CONST(arg=1, lineno=113)
          66	BINARY_SUBTRACT(arg=None, lineno=113)
          68	BINARY_SUBSCR(arg=None, lineno=113)
          70	COMPARE_OP(arg=0, lineno=113)
          72	POP_JUMP_IF_TRUE(arg=50, lineno=113)
          74	LOAD_FAST(arg=0, lineno=113)
          76	LOAD_FAST(arg=8, lineno=113)
          78	LOAD_CONST(arg=1, lineno=113)
          80	BINARY_SUBTRACT(arg=None, lineno=113)
          82	BINARY_SUBSCR(arg=None, lineno=113)
          84	LOAD_FAST(arg=5, lineno=113)
          86	LOAD_FAST(arg=8, lineno=113)
          88	LOAD_CONST(arg=1, lineno=113)
          90	BINARY_SUBTRACT(arg=None, lineno=113)
          92	BINARY_SUBSCR(arg=None, lineno=113)
          94	COMPARE_OP(arg=4, lineno=113)
          96	POP_JUMP_IF_FALSE(arg=57, lineno=113)
>         98	LOAD_FAST(arg=1, lineno=114)
         100	LOAD_FAST(arg=8, lineno=114)
         102	BINARY_SUBSCR(arg=None, lineno=114)
         104	LOAD_FAST(arg=5, lineno=114)
         106	LOAD_FAST(arg=8, lineno=114)
         108	STORE_SUBSCR(arg=None, lineno=114)
         110	JUMP_FORWARD(arg=8, lineno=114)
>        112	LOAD_FAST(arg=5, lineno=116)
         114	LOAD_FAST(arg=8, lineno=116)
         116	LOAD_CONST(arg=1, lineno=116)
         118	BINARY_SUBTRACT(arg=None, lineno=116)
         120	BINARY_SUBSCR(arg=None, lineno=116)
         122	LOAD_FAST(arg=5, lineno=116)
         124	LOAD_FAST(arg=8, lineno=116)
         126	STORE_SUBSCR(arg=None, lineno=116)
>        128	LOAD_FAST(arg=2, lineno=118)
         130	LOAD_FAST(arg=8, lineno=118)
         132	BINARY_SUBSCR(arg=None, lineno=118)
         134	LOAD_FAST(arg=6, lineno=118)
         136	LOAD_FAST(arg=8, lineno=118)
         138	LOAD_CONST(arg=1, lineno=118)
         140	BINARY_SUBTRACT(arg=None, lineno=118)
         142	BINARY_SUBSCR(arg=None, lineno=118)
         144	COMPARE_OP(arg=4, lineno=118)
         146	POP_JUMP_IF_TRUE(arg=87, lineno=118)
         148	LOAD_FAST(arg=0, lineno=118)
         150	LOAD_FAST(arg=8, lineno=118)
         152	LOAD_CONST(arg=1, lineno=118)
         154	BINARY_SUBTRACT(arg=None, lineno=118)
         156	BINARY_SUBSCR(arg=None, lineno=118)
         158	LOAD_FAST(arg=6, lineno=118)
         160	LOAD_FAST(arg=8, lineno=118)
         162	LOAD_CONST(arg=1, lineno=118)
         164	BINARY_SUBTRACT(arg=None, lineno=118)
         166	BINARY_SUBSCR(arg=None, lineno=118)
         168	COMPARE_OP(arg=0, lineno=118)
         170	POP_JUMP_IF_FALSE(arg=94, lineno=118)
>        172	LOAD_FAST(arg=2, lineno=119)
         174	LOAD_FAST(arg=8, lineno=119)
         176	BINARY_SUBSCR(arg=None, lineno=119)
         178	LOAD_FAST(arg=6, lineno=119)
         180	LOAD_FAST(arg=8, lineno=119)
         182	STORE_SUBSCR(arg=None, lineno=119)
         184	JUMP_FORWARD(arg=8, lineno=119)
>        186	LOAD_FAST(arg=6, lineno=121)
         188	LOAD_FAST(arg=8, lineno=121)
         190	LOAD_CONST(arg=1, lineno=121)
         192	BINARY_SUBTRACT(arg=None, lineno=121)
         194	BINARY_SUBSCR(arg=None, lineno=121)
         196	LOAD_FAST(arg=6, lineno=121)
         198	LOAD_FAST(arg=8, lineno=121)
         200	STORE_SUBSCR(arg=None, lineno=121)
>        202	LOAD_FAST(arg=7, lineno=123)
         204	LOAD_FAST(arg=8, lineno=123)
         206	LOAD_CONST(arg=1, lineno=123)
         208	BINARY_SUBTRACT(arg=None, lineno=123)
         210	BINARY_SUBSCR(arg=None, lineno=123)
         212	LOAD_FAST(arg=5, lineno=123)
         214	LOAD_FAST(arg=8, lineno=123)
         216	LOAD_CONST(arg=1, lineno=123)
         218	BINARY_SUBTRACT(arg=None, lineno=123)
         220	BINARY_SUBSCR(arg=None, lineno=123)
         222	COMPARE_OP(arg=2, lineno=123)
         224	POP_JUMP_IF_FALSE(arg=129, lineno=123)
         226	LOAD_FAST(arg=0, lineno=123)
         228	LOAD_FAST(arg=8, lineno=123)
         230	BINARY_SUBSCR(arg=None, lineno=123)
         232	LOAD_FAST(arg=5, lineno=123)
         234	LOAD_FAST(arg=8, lineno=123)
         236	BINARY_SUBSCR(arg=None, lineno=123)
         238	COMPARE_OP(arg=1, lineno=123)
         240	POP_JUMP_IF_FALSE(arg=129, lineno=123)
         242	LOAD_FAST(arg=5, lineno=124)
         244	LOAD_FAST(arg=8, lineno=124)
         246	BINARY_SUBSCR(arg=None, lineno=124)
         248	LOAD_FAST(arg=7, lineno=124)
         250	LOAD_FAST(arg=8, lineno=124)
         252	STORE_SUBSCR(arg=None, lineno=124)
         254	JUMP_ABSOLUTE(arg=26, lineno=124)
>        256	LOAD_FAST(arg=7, lineno=125)
         258	LOAD_FAST(arg=8, lineno=125)
         260	LOAD_CONST(arg=1, lineno=125)
         262	BINARY_SUBTRACT(arg=None, lineno=125)
         264	BINARY_SUBSCR(arg=None, lineno=125)
         266	LOAD_FAST(arg=5, lineno=125)
         268	LOAD_FAST(arg=8, lineno=125)
         270	LOAD_CONST(arg=1, lineno=125)
         272	BINARY_SUBTRACT(arg=None, lineno=125)
         274	BINARY_SUBSCR(arg=None, lineno=125)
         276	COMPARE_OP(arg=2, lineno=125)
         278	POP_JUMP_IF_FALSE(arg=156, lineno=125)
         280	LOAD_FAST(arg=0, lineno=125)
         282	LOAD_FAST(arg=8, lineno=125)
         284	BINARY_SUBSCR(arg=None, lineno=125)
         286	LOAD_FAST(arg=5, lineno=125)
         288	LOAD_FAST(arg=8, lineno=125)
         290	BINARY_SUBSCR(arg=None, lineno=125)
         292	COMPARE_OP(arg=4, lineno=125)
         294	POP_JUMP_IF_FALSE(arg=156, lineno=125)
         296	LOAD_FAST(arg=6, lineno=126)
         298	LOAD_FAST(arg=8, lineno=126)
         300	BINARY_SUBSCR(arg=None, lineno=126)
         302	LOAD_FAST(arg=7, lineno=126)
         304	LOAD_FAST(arg=8, lineno=126)
         306	STORE_SUBSCR(arg=None, lineno=126)
         308	JUMP_ABSOLUTE(arg=26, lineno=126)
>        310	LOAD_FAST(arg=7, lineno=127)
         312	LOAD_FAST(arg=8, lineno=127)
         314	LOAD_CONST(arg=1, lineno=127)
         316	BINARY_SUBTRACT(arg=None, lineno=127)
         318	BINARY_SUBSCR(arg=None, lineno=127)
         320	LOAD_FAST(arg=6, lineno=127)
         322	LOAD_FAST(arg=8, lineno=127)
         324	LOAD_CONST(arg=1, lineno=127)
         326	BINARY_SUBTRACT(arg=None, lineno=127)
         328	BINARY_SUBSCR(arg=None, lineno=127)
         330	COMPARE_OP(arg=2, lineno=127)
         332	POP_JUMP_IF_FALSE(arg=183, lineno=127)
         334	LOAD_FAST(arg=0, lineno=127)
         336	LOAD_FAST(arg=8, lineno=127)
         338	BINARY_SUBSCR(arg=None, lineno=127)
         340	LOAD_FAST(arg=6, lineno=127)
         342	LOAD_FAST(arg=8, lineno=127)
         344	BINARY_SUBSCR(arg=None, lineno=127)
         346	COMPARE_OP(arg=5, lineno=127)
         348	POP_JUMP_IF_FALSE(arg=183, lineno=127)
         350	LOAD_FAST(arg=6, lineno=128)
         352	LOAD_FAST(arg=8, lineno=128)
         354	BINARY_SUBSCR(arg=None, lineno=128)
         356	LOAD_FAST(arg=7, lineno=128)
         358	LOAD_FAST(arg=8, lineno=128)
         360	STORE_SUBSCR(arg=None, lineno=128)
         362	JUMP_ABSOLUTE(arg=26, lineno=128)
>        364	LOAD_FAST(arg=7, lineno=129)
         366	LOAD_FAST(arg=8, lineno=129)
         368	LOAD_CONST(arg=1, lineno=129)
         370	BINARY_SUBTRACT(arg=None, lineno=129)
         372	BINARY_SUBSCR(arg=None, lineno=129)
         374	LOAD_FAST(arg=6, lineno=129)
         376	LOAD_FAST(arg=8, lineno=129)
         378	LOAD_CONST(arg=1, lineno=129)
         380	BINARY_SUBTRACT(arg=None, lineno=129)
         382	BINARY_SUBSCR(arg=None, lineno=129)
         384	COMPARE_OP(arg=2, lineno=129)
         386	POP_JUMP_IF_FALSE(arg=210, lineno=129)
         388	LOAD_FAST(arg=0, lineno=129)
         390	LOAD_FAST(arg=8, lineno=129)
         392	BINARY_SUBSCR(arg=None, lineno=129)
         394	LOAD_FAST(arg=6, lineno=129)
         396	LOAD_FAST(arg=8, lineno=129)
         398	BINARY_SUBSCR(arg=None, lineno=129)
         400	COMPARE_OP(arg=0, lineno=129)
         402	POP_JUMP_IF_FALSE(arg=210, lineno=129)
         404	LOAD_FAST(arg=5, lineno=130)
         406	LOAD_FAST(arg=8, lineno=130)
         408	BINARY_SUBSCR(arg=None, lineno=130)
         410	LOAD_FAST(arg=7, lineno=130)
         412	LOAD_FAST(arg=8, lineno=130)
         414	STORE_SUBSCR(arg=None, lineno=130)
         416	JUMP_ABSOLUTE(arg=26, lineno=130)
>        418	LOAD_CONST(arg=2, lineno=132)
         420	LOAD_FAST(arg=7, lineno=132)
         422	LOAD_FAST(arg=8, lineno=132)
         424	STORE_SUBSCR(arg=None, lineno=132)
         426	JUMP_ABSOLUTE(arg=26, lineno=132)
>        428	LOAD_FAST(arg=7, lineno=134)
         430	RETURN_VALUE(arg=None, lineno=134)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=99)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=106)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=106)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=106)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$close4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=STORE_FAST(arg=4, lineno=106)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$6call_function.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=LOAD_METHOD(arg=2, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$10load_global.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=14, inst=LOAD_FAST(arg=4, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$12load_method.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=16, inst=CALL_METHOD(arg=1, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$12load_method.4', '$length14.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=18, inst=STORE_FAST(arg=5, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$16call_method.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=20, inst=LOAD_GLOBAL(arg=1, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=22, inst=LOAD_METHOD(arg=2, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$20load_global.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=24, inst=LOAD_FAST(arg=4, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$22load_method.8']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=26, inst=CALL_METHOD(arg=1, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$22load_method.8', '$length24.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=28, inst=STORE_FAST(arg=6, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$26call_method.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=30, inst=LOAD_GLOBAL(arg=1, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=32, inst=LOAD_METHOD(arg=2, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$30load_global.11']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=34, inst=LOAD_FAST(arg=4, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$32load_method.12']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=36, inst=CALL_METHOD(arg=1, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$32load_method.12', '$length34.13']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=38, inst=STORE_FAST(arg=7, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$36call_method.14']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=40, inst=LOAD_GLOBAL(arg=3, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=42, inst=LOAD_FAST(arg=3, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$40load_global.15']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=44, inst=LOAD_FAST(arg=4, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$40load_global.15', '$n42.16']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=46, inst=CALL_FUNCTION(arg=2, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$40load_global.15', '$n42.16', '$length44.17']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=48, inst=GET_ITER(arg=None, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$46call_function.18']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$48get_iter.19',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi50.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=50 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=50, inst=FOR_ITER(arg=188, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi50.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=428, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=('$phi50.0', '$50for_iter.2'), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=428 nstack_initial=0), State(pc_initial=52 nstack_initial=2)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=428 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=428, inst=LOAD_FAST(arg=7, lineno=134)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=430, inst=RETURN_VALUE(arg=None, lineno=134)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$supertrend428.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=52 nstack_initial=2)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi52.0', '$phi52.1']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=52 nstack_initial=2)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=52, inst=STORE_FAST(arg=8, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$phi52.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=54, inst=LOAD_FAST(arg=1, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=56, inst=LOAD_FAST(arg=8, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$basic_ub54.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=58, inst=BINARY_SUBSCR(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$basic_ub54.2', '$i56.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=60, inst=LOAD_FAST(arg=5, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=62, inst=LOAD_FAST(arg=8, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$final_ub60.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$final_ub60.5', '$i62.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=66, inst=BINARY_SUBTRACT(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$final_ub60.5', '$i62.6', '$const64.7.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=68, inst=BINARY_SUBSCR(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$final_ub60.5', '$66binary_subtract.8']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=70, inst=COMPARE_OP(arg=0, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$68binary_subscr.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=72, inst=POP_JUMP_IF_TRUE(arg=50, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$70compare_op.10']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=74, stack=('$phi52.0',), blockstack=(), npush=0), Edge(pc=98, stack=('$phi52.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=74 nstack_initial=1), State(pc_initial=98 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi74.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=74 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=74, inst=LOAD_FAST(arg=0, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=76, inst=LOAD_FAST(arg=8, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$close74.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$close74.1', '$i76.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=80, inst=BINARY_SUBTRACT(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$close74.1', '$i76.2', '$const78.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$close74.1', '$80binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=84, inst=LOAD_FAST(arg=5, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=86, inst=LOAD_FAST(arg=8, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$final_ub84.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=88, inst=LOAD_CONST(arg=1, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$final_ub84.6', '$i86.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=90, inst=BINARY_SUBTRACT(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$final_ub84.6', '$i86.7', '$const88.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=92, inst=BINARY_SUBSCR(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$final_ub84.6', '$90binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=94, inst=COMPARE_OP(arg=4, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$92binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=96, inst=POP_JUMP_IF_FALSE(arg=57, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$94compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=98, stack=('$phi74.0',), blockstack=(), npush=0), Edge(pc=112, stack=('$phi74.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=98 nstack_initial=1), State(pc_initial=98 nstack_initial=1), State(pc_initial=112 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi98.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=98 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=98, inst=LOAD_FAST(arg=1, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=100, inst=LOAD_FAST(arg=8, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$basic_ub98.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=102, inst=BINARY_SUBSCR(arg=None, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$basic_ub98.1', '$i100.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=104, inst=LOAD_FAST(arg=5, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$102binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=106, inst=LOAD_FAST(arg=8, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$102binary_subscr.3', '$final_ub104.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=108, inst=STORE_SUBSCR(arg=None, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$102binary_subscr.3', '$final_ub104.4', '$i106.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=110, inst=JUMP_FORWARD(arg=8, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=128, stack=('$phi98.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=98 nstack_initial=1), State(pc_initial=112 nstack_initial=1), State(pc_initial=128 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=112 nstack_initial=1), State(pc_initial=128 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi112.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=112 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=112, inst=LOAD_FAST(arg=5, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=114, inst=LOAD_FAST(arg=8, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$final_ub112.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=116, inst=LOAD_CONST(arg=1, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$final_ub112.1', '$i114.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=118, inst=BINARY_SUBTRACT(arg=None, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$final_ub112.1', '$i114.2', '$const116.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=120, inst=BINARY_SUBSCR(arg=None, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$final_ub112.1', '$118binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=122, inst=LOAD_FAST(arg=5, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$120binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=124, inst=LOAD_FAST(arg=8, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$120binary_subscr.5', '$final_ub122.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=126, inst=STORE_SUBSCR(arg=None, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$120binary_subscr.5', '$final_ub122.6', '$i124.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=128, stack=('$phi112.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=128 nstack_initial=1), State(pc_initial=128 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi128.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=128 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=128, inst=LOAD_FAST(arg=2, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=130, inst=LOAD_FAST(arg=8, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$basic_lb128.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=132, inst=BINARY_SUBSCR(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$basic_lb128.1', '$i130.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=134, inst=LOAD_FAST(arg=6, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=136, inst=LOAD_FAST(arg=8, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$final_lb134.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=138, inst=LOAD_CONST(arg=1, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$final_lb134.4', '$i136.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=140, inst=BINARY_SUBTRACT(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$final_lb134.4', '$i136.5', '$const138.6.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=142, inst=BINARY_SUBSCR(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$final_lb134.4', '$140binary_subtract.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=144, inst=COMPARE_OP(arg=4, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$142binary_subscr.8']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=146, inst=POP_JUMP_IF_TRUE(arg=87, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$144compare_op.9']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=148, stack=('$phi128.0',), blockstack=(), npush=0), Edge(pc=172, stack=('$phi128.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=128 nstack_initial=1), State(pc_initial=148 nstack_initial=1), State(pc_initial=172 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=148 nstack_initial=1), State(pc_initial=172 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi148.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=148 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=150, inst=LOAD_FAST(arg=8, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$close148.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=152, inst=LOAD_CONST(arg=1, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$close148.1', '$i150.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=154, inst=BINARY_SUBTRACT(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$close148.1', '$i150.2', '$const152.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=156, inst=BINARY_SUBSCR(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$close148.1', '$154binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=158, inst=LOAD_FAST(arg=6, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=160, inst=LOAD_FAST(arg=8, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$final_lb158.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=162, inst=LOAD_CONST(arg=1, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$final_lb158.6', '$i160.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=164, inst=BINARY_SUBTRACT(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$final_lb158.6', '$i160.7', '$const162.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=166, inst=BINARY_SUBSCR(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$final_lb158.6', '$164binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=168, inst=COMPARE_OP(arg=0, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$166binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=170, inst=POP_JUMP_IF_FALSE(arg=94, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$168compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=172, stack=('$phi148.0',), blockstack=(), npush=0), Edge(pc=186, stack=('$phi148.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=172 nstack_initial=1), State(pc_initial=172 nstack_initial=1), State(pc_initial=186 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi172.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=172 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=172, inst=LOAD_FAST(arg=2, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=174, inst=LOAD_FAST(arg=8, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$basic_lb172.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=176, inst=BINARY_SUBSCR(arg=None, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$basic_lb172.1', '$i174.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=178, inst=LOAD_FAST(arg=6, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$176binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=180, inst=LOAD_FAST(arg=8, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$176binary_subscr.3', '$final_lb178.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=182, inst=STORE_SUBSCR(arg=None, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$176binary_subscr.3', '$final_lb178.4', '$i180.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=184, inst=JUMP_FORWARD(arg=8, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=202, stack=('$phi172.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=172 nstack_initial=1), State(pc_initial=186 nstack_initial=1), State(pc_initial=202 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=186 nstack_initial=1), State(pc_initial=202 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi186.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=186 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=186, inst=LOAD_FAST(arg=6, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=188, inst=LOAD_FAST(arg=8, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$final_lb186.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=190, inst=LOAD_CONST(arg=1, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$final_lb186.1', '$i188.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=192, inst=BINARY_SUBTRACT(arg=None, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$final_lb186.1', '$i188.2', '$const190.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=194, inst=BINARY_SUBSCR(arg=None, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$final_lb186.1', '$192binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=196, inst=LOAD_FAST(arg=6, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$194binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=198, inst=LOAD_FAST(arg=8, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$194binary_subscr.5', '$final_lb196.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=200, inst=STORE_SUBSCR(arg=None, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$194binary_subscr.5', '$final_lb196.6', '$i198.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=202, stack=('$phi186.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=202 nstack_initial=1), State(pc_initial=202 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi202.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=202 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=202, inst=LOAD_FAST(arg=7, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=204, inst=LOAD_FAST(arg=8, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$supertrend202.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=206, inst=LOAD_CONST(arg=1, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$supertrend202.1', '$i204.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=208, inst=BINARY_SUBTRACT(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$supertrend202.1', '$i204.2', '$const206.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=210, inst=BINARY_SUBSCR(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$supertrend202.1', '$208binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=212, inst=LOAD_FAST(arg=5, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=214, inst=LOAD_FAST(arg=8, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$final_ub212.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=216, inst=LOAD_CONST(arg=1, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$final_ub212.6', '$i214.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=218, inst=BINARY_SUBTRACT(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$final_ub212.6', '$i214.7', '$const216.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=220, inst=BINARY_SUBSCR(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$final_ub212.6', '$218binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=222, inst=COMPARE_OP(arg=2, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$220binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=224, inst=POP_JUMP_IF_FALSE(arg=129, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$222compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=226, stack=('$phi202.0',), blockstack=(), npush=0), Edge(pc=256, stack=('$phi202.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=202 nstack_initial=1), State(pc_initial=226 nstack_initial=1), State(pc_initial=256 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=226 nstack_initial=1), State(pc_initial=256 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi226.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=226 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=226, inst=LOAD_FAST(arg=0, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=228, inst=LOAD_FAST(arg=8, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$close226.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=230, inst=BINARY_SUBSCR(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$close226.1', '$i228.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=232, inst=LOAD_FAST(arg=5, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$230binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=234, inst=LOAD_FAST(arg=8, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$230binary_subscr.3', '$final_ub232.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=236, inst=BINARY_SUBSCR(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$230binary_subscr.3', '$final_ub232.4', '$i234.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=238, inst=COMPARE_OP(arg=1, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$230binary_subscr.3', '$236binary_subscr.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=240, inst=POP_JUMP_IF_FALSE(arg=129, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$238compare_op.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=242, stack=('$phi226.0',), blockstack=(), npush=0), Edge(pc=256, stack=('$phi226.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=256 nstack_initial=1), State(pc_initial=242 nstack_initial=1), State(pc_initial=256 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi256.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=256 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=256, inst=LOAD_FAST(arg=7, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=258, inst=LOAD_FAST(arg=8, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$supertrend256.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=260, inst=LOAD_CONST(arg=1, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$supertrend256.1', '$i258.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=262, inst=BINARY_SUBTRACT(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$supertrend256.1', '$i258.2', '$const260.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=264, inst=BINARY_SUBSCR(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$supertrend256.1', '$262binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=266, inst=LOAD_FAST(arg=5, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=268, inst=LOAD_FAST(arg=8, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$final_ub266.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=270, inst=LOAD_CONST(arg=1, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$final_ub266.6', '$i268.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=272, inst=BINARY_SUBTRACT(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$final_ub266.6', '$i268.7', '$const270.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=274, inst=BINARY_SUBSCR(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$final_ub266.6', '$272binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=276, inst=COMPARE_OP(arg=2, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$274binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=278, inst=POP_JUMP_IF_FALSE(arg=156, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$276compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=280, stack=('$phi256.0',), blockstack=(), npush=0), Edge(pc=310, stack=('$phi256.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=242 nstack_initial=1), State(pc_initial=256 nstack_initial=1), State(pc_initial=280 nstack_initial=1), State(pc_initial=310 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi242.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=242 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=242, inst=LOAD_FAST(arg=5, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=244, inst=LOAD_FAST(arg=8, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$final_ub242.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=246, inst=BINARY_SUBSCR(arg=None, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$final_ub242.1', '$i244.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=248, inst=LOAD_FAST(arg=7, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$246binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=250, inst=LOAD_FAST(arg=8, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$246binary_subscr.3', '$supertrend248.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=252, inst=STORE_SUBSCR(arg=None, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$246binary_subscr.3', '$supertrend248.4', '$i250.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=254, inst=JUMP_ABSOLUTE(arg=26, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi242.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=256 nstack_initial=1), State(pc_initial=280 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=280 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi280.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=280 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=280, inst=LOAD_FAST(arg=0, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=282, inst=LOAD_FAST(arg=8, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$close280.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=284, inst=BINARY_SUBSCR(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$close280.1', '$i282.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=286, inst=LOAD_FAST(arg=5, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$284binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=288, inst=LOAD_FAST(arg=8, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$284binary_subscr.3', '$final_ub286.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=290, inst=BINARY_SUBSCR(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$284binary_subscr.3', '$final_ub286.4', '$i288.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=292, inst=COMPARE_OP(arg=4, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$284binary_subscr.3', '$290binary_subscr.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=294, inst=POP_JUMP_IF_FALSE(arg=156, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$292compare_op.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=296, stack=('$phi280.0',), blockstack=(), npush=0), Edge(pc=310, stack=('$phi280.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=310 nstack_initial=1), State(pc_initial=50 nstack_initial=1), State(pc_initial=296 nstack_initial=1), State(pc_initial=310 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi310.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=310 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=310, inst=LOAD_FAST(arg=7, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=312, inst=LOAD_FAST(arg=8, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$supertrend310.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=314, inst=LOAD_CONST(arg=1, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$supertrend310.1', '$i312.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=316, inst=BINARY_SUBTRACT(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$supertrend310.1', '$i312.2', '$const314.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=318, inst=BINARY_SUBSCR(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$supertrend310.1', '$316binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=320, inst=LOAD_FAST(arg=6, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=322, inst=LOAD_FAST(arg=8, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$final_lb320.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=324, inst=LOAD_CONST(arg=1, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$final_lb320.6', '$i322.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=326, inst=BINARY_SUBTRACT(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$final_lb320.6', '$i322.7', '$const324.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=328, inst=BINARY_SUBSCR(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$final_lb320.6', '$326binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=330, inst=COMPARE_OP(arg=2, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$328binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=332, inst=POP_JUMP_IF_FALSE(arg=183, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$330compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=334, stack=('$phi310.0',), blockstack=(), npush=0), Edge(pc=364, stack=('$phi310.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=296 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=334 nstack_initial=1), State(pc_initial=364 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=296 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=334 nstack_initial=1), State(pc_initial=364 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi296.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=296 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=296, inst=LOAD_FAST(arg=6, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=298, inst=LOAD_FAST(arg=8, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$final_lb296.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=300, inst=BINARY_SUBSCR(arg=None, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$final_lb296.1', '$i298.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=302, inst=LOAD_FAST(arg=7, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$300binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=304, inst=LOAD_FAST(arg=8, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$300binary_subscr.3', '$supertrend302.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=306, inst=STORE_SUBSCR(arg=None, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$300binary_subscr.3', '$supertrend302.4', '$i304.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=308, inst=JUMP_ABSOLUTE(arg=26, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi296.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=310 nstack_initial=1), State(pc_initial=334 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=334 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi334.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=334 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=334, inst=LOAD_FAST(arg=0, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=336, inst=LOAD_FAST(arg=8, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$close334.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=338, inst=BINARY_SUBSCR(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$close334.1', '$i336.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=340, inst=LOAD_FAST(arg=6, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$338binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=342, inst=LOAD_FAST(arg=8, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$338binary_subscr.3', '$final_lb340.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=344, inst=BINARY_SUBSCR(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$338binary_subscr.3', '$final_lb340.4', '$i342.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=346, inst=COMPARE_OP(arg=5, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$338binary_subscr.3', '$344binary_subscr.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=348, inst=POP_JUMP_IF_FALSE(arg=183, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$346compare_op.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=350, stack=('$phi334.0',), blockstack=(), npush=0), Edge(pc=364, stack=('$phi334.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=364 nstack_initial=1), State(pc_initial=50 nstack_initial=1), State(pc_initial=350 nstack_initial=1), State(pc_initial=364 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi364.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=364 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=364, inst=LOAD_FAST(arg=7, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=366, inst=LOAD_FAST(arg=8, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$supertrend364.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=368, inst=LOAD_CONST(arg=1, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$supertrend364.1', '$i366.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=370, inst=BINARY_SUBTRACT(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$supertrend364.1', '$i366.2', '$const368.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=372, inst=BINARY_SUBSCR(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$supertrend364.1', '$370binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=374, inst=LOAD_FAST(arg=6, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=376, inst=LOAD_FAST(arg=8, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$final_lb374.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=378, inst=LOAD_CONST(arg=1, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$final_lb374.6', '$i376.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=380, inst=BINARY_SUBTRACT(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$final_lb374.6', '$i376.7', '$const378.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=382, inst=BINARY_SUBSCR(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$final_lb374.6', '$380binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=384, inst=COMPARE_OP(arg=2, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$382binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=386, inst=POP_JUMP_IF_FALSE(arg=210, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$384compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=388, stack=('$phi364.0',), blockstack=(), npush=0), Edge(pc=418, stack=('$phi364.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=350 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=388 nstack_initial=1), State(pc_initial=418 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=350 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=388 nstack_initial=1), State(pc_initial=418 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi350.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=350 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=350, inst=LOAD_FAST(arg=6, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=352, inst=LOAD_FAST(arg=8, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$final_lb350.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=354, inst=BINARY_SUBSCR(arg=None, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$final_lb350.1', '$i352.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=356, inst=LOAD_FAST(arg=7, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$354binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=358, inst=LOAD_FAST(arg=8, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$354binary_subscr.3', '$supertrend356.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=360, inst=STORE_SUBSCR(arg=None, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$354binary_subscr.3', '$supertrend356.4', '$i358.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=362, inst=JUMP_ABSOLUTE(arg=26, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi350.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=364 nstack_initial=1), State(pc_initial=388 nstack_initial=1), State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=388 nstack_initial=1), State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi388.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=388 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=388, inst=LOAD_FAST(arg=0, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=390, inst=LOAD_FAST(arg=8, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$close388.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=392, inst=BINARY_SUBSCR(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$close388.1', '$i390.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=394, inst=LOAD_FAST(arg=6, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$392binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=396, inst=LOAD_FAST(arg=8, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$392binary_subscr.3', '$final_lb394.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=398, inst=BINARY_SUBSCR(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$392binary_subscr.3', '$final_lb394.4', '$i396.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=400, inst=COMPARE_OP(arg=0, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$392binary_subscr.3', '$398binary_subscr.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=402, inst=POP_JUMP_IF_FALSE(arg=210, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$400compare_op.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=404, stack=('$phi388.0',), blockstack=(), npush=0), Edge(pc=418, stack=('$phi388.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1), State(pc_initial=404 nstack_initial=1), State(pc_initial=418 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi418.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=418 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=418, inst=LOAD_CONST(arg=2, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=420, inst=LOAD_FAST(arg=7, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0', '$const418.1.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=422, inst=LOAD_FAST(arg=8, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0', '$const418.1.2', '$supertrend420.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=424, inst=STORE_SUBSCR(arg=None, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0', '$const418.1.2', '$supertrend420.2', '$i422.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=426, inst=JUMP_ABSOLUTE(arg=26, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi418.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=404 nstack_initial=1), State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=404 nstack_initial=1), State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi404.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=404 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=404, inst=LOAD_FAST(arg=5, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=406, inst=LOAD_FAST(arg=8, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$final_ub404.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=408, inst=BINARY_SUBSCR(arg=None, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$final_ub404.1', '$i406.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=410, inst=LOAD_FAST(arg=7, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$408binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=412, inst=LOAD_FAST(arg=8, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$408binary_subscr.3', '$supertrend410.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=414, inst=STORE_SUBSCR(arg=None, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$408binary_subscr.3', '$supertrend410.4', '$i412.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=416, inst=JUMP_ABSOLUTE(arg=26, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi404.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): {'$phi50.0'},
             State(pc_initial=52 nstack_initial=2): {'$phi52.1'},
             State(pc_initial=74 nstack_initial=1): set(),
             State(pc_initial=98 nstack_initial=1): set(),
             State(pc_initial=112 nstack_initial=1): set(),
             State(pc_initial=128 nstack_initial=1): set(),
             State(pc_initial=148 nstack_initial=1): set(),
             State(pc_initial=172 nstack_initial=1): set(),
             State(pc_initial=186 nstack_initial=1): set(),
             State(pc_initial=202 nstack_initial=1): set(),
             State(pc_initial=226 nstack_initial=1): set(),
             State(pc_initial=242 nstack_initial=1): set(),
             State(pc_initial=256 nstack_initial=1): set(),
             State(pc_initial=280 nstack_initial=1): set(),
             State(pc_initial=296 nstack_initial=1): set(),
             State(pc_initial=310 nstack_initial=1): set(),
             State(pc_initial=334 nstack_initial=1): set(),
             State(pc_initial=350 nstack_initial=1): set(),
             State(pc_initial=364 nstack_initial=1): set(),
             State(pc_initial=388 nstack_initial=1): set(),
             State(pc_initial=404 nstack_initial=1): set(),
             State(pc_initial=418 nstack_initial=1): set(),
             State(pc_initial=428 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {'$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi52.1': State(pc_initial=50 nstack_initial=1)}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi128.0': {('$phi112.0',
                            State(pc_initial=112 nstack_initial=1)),
                           ('$phi98.0', State(pc_initial=98 nstack_initial=1))},
             '$phi148.0': {('$phi128.0',
                            State(pc_initial=128 nstack_initial=1))},
             '$phi172.0': {('$phi128.0',
                            State(pc_initial=128 nstack_initial=1)),
                           ('$phi148.0',
                            State(pc_initial=148 nstack_initial=1))},
             '$phi186.0': {('$phi148.0',
                            State(pc_initial=148 nstack_initial=1))},
             '$phi202.0': {('$phi172.0',
                            State(pc_initial=172 nstack_initial=1)),
                           ('$phi186.0',
                            State(pc_initial=186 nstack_initial=1))},
             '$phi226.0': {('$phi202.0',
                            State(pc_initial=202 nstack_initial=1))},
             '$phi242.0': {('$phi226.0',
                            State(pc_initial=226 nstack_initial=1))},
             '$phi256.0': {('$phi202.0',
                            State(pc_initial=202 nstack_initial=1)),
                           ('$phi226.0',
                            State(pc_initial=226 nstack_initial=1))},
             '$phi280.0': {('$phi256.0',
                            State(pc_initial=256 nstack_initial=1))},
             '$phi296.0': {('$phi280.0',
                            State(pc_initial=280 nstack_initial=1))},
             '$phi310.0': {('$phi256.0',
                            State(pc_initial=256 nstack_initial=1)),
                           ('$phi280.0',
                            State(pc_initial=280 nstack_initial=1))},
             '$phi334.0': {('$phi310.0',
                            State(pc_initial=310 nstack_initial=1))},
             '$phi350.0': {('$phi334.0',
                            State(pc_initial=334 nstack_initial=1))},
             '$phi364.0': {('$phi310.0',
                            State(pc_initial=310 nstack_initial=1)),
                           ('$phi334.0',
                            State(pc_initial=334 nstack_initial=1))},
             '$phi388.0': {('$phi364.0',
                            State(pc_initial=364 nstack_initial=1))},
             '$phi404.0': {('$phi388.0',
                            State(pc_initial=388 nstack_initial=1))},
             '$phi418.0': {('$phi364.0',
                            State(pc_initial=364 nstack_initial=1)),
                           ('$phi388.0',
                            State(pc_initial=388 nstack_initial=1))},
             '$phi50.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi242.0', State(pc_initial=242 nstack_initial=1)),
                          ('$phi296.0', State(pc_initial=296 nstack_initial=1)),
                          ('$phi350.0', State(pc_initial=350 nstack_initial=1)),
                          ('$phi404.0', State(pc_initial=404 nstack_initial=1)),
                          ('$phi418.0',
                           State(pc_initial=418 nstack_initial=1))},
             '$phi52.0': {('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))},
             '$phi74.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi98.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))}})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi128.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi148.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi172.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi186.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi202.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi226.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi242.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi256.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi280.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi296.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi310.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi334.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi350.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi364.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi388.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi404.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi418.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi50.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi52.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))},
             '$phi74.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi98.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))}})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi128.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi148.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi172.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi186.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi202.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi226.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi242.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi256.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi280.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi296.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi310.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi334.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi350.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi364.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi388.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi404.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi418.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))},
             '$phi74.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))}})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi128.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi148.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi172.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi186.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi202.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi226.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi242.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi256.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi280.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi296.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi310.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi334.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi350.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi364.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi388.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi404.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi418.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))},
             '$phi74.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))}})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {'$phi50.0': {('$48get_iter.19', State(pc_initial=0 nstack_initial=0))},
 '$phi52.1': {('$50for_iter.2', State(pc_initial=50 nstack_initial=1))}}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi50.0': '$48get_iter.19'},
             State(pc_initial=50 nstack_initial=1): {'$phi52.1': '$50for_iter.2'}})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$close4.1'}), (6, {'func': '$2load_global.0', 'args': ['$close4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_global.3'}), (12, {'item': '$10load_global.3', 'res': '$12load_method.4'}), (14, {'res': '$length14.5'}), (16, {'func': '$12load_method.4', 'args': ['$length14.5'], 'res': '$16call_method.6'}), (18, {'value': '$16call_method.6'}), (20, {'res': '$20load_global.7'}), (22, {'item': '$20load_global.7', 'res': '$22load_method.8'}), (24, {'res': '$length24.9'}), (26, {'func': '$22load_method.8', 'args': ['$length24.9'], 'res': '$26call_method.10'}), (28, {'value': '$26call_method.10'}), (30, {'res': '$30load_global.11'}), (32, {'item': '$30load_global.11', 'res': '$32load_method.12'}), (34, {'res': '$length34.13'}), (36, {'func': '$32load_method.12', 'args': ['$length34.13'], 'res': '$36call_method.14'}), (38, {'value': '$36call_method.14'}), (40, {'res': '$40load_global.15'}), (42, {'res': '$n42.16'}), (44, {'res': '$length44.17'}), (46, {'func': '$40load_global.15', 'args': ['$n42.16', '$length44.17'], 'res': '$46call_function.18'}), (48, {'value': '$46call_function.18', 'res': '$48get_iter.19'})), outgoing_phis={'$phi50.0': '$48get_iter.19'}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$48get_iter.19',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((50, {'iterator': '$phi50.0', 'pair': '$50for_iter.1', 'indval': '$50for_iter.2', 'pred': '$50for_iter.3'}),), outgoing_phis={'$phi52.1': '$50for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={428: (), 52: ('$phi50.0', '$50for_iter.2')})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=52 nstack_initial=2):
AdaptBlockInfo(insts=((52, {'value': '$phi52.1'}), (54, {'res': '$basic_ub54.2'}), (56, {'res': '$i56.3'}), (58, {'index': '$i56.3', 'target': '$basic_ub54.2', 'res': '$58binary_subscr.4'}), (60, {'res': '$final_ub60.5'}), (62, {'res': '$i62.6'}), (64, {'res': '$const64.7.1'}), (66, {'lhs': '$i62.6', 'rhs': '$const64.7.1', 'res': '$66binary_subtract.8'}), (68, {'index': '$66binary_subtract.8', 'target': '$final_ub60.5', 'res': '$68binary_subscr.9'}), (70, {'lhs': '$58binary_subscr.4', 'rhs': '$68binary_subscr.9', 'res': '$70compare_op.10'}), (72, {'pred': '$70compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ('$phi52.0',), 98: ('$phi52.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=74 nstack_initial=1):
AdaptBlockInfo(insts=((74, {'res': '$close74.1'}), (76, {'res': '$i76.2'}), (78, {'res': '$const78.3.1'}), (80, {'lhs': '$i76.2', 'rhs': '$const78.3.1', 'res': '$80binary_subtract.4'}), (82, {'index': '$80binary_subtract.4', 'target': '$close74.1', 'res': '$82binary_subscr.5'}), (84, {'res': '$final_ub84.6'}), (86, {'res': '$i86.7'}), (88, {'res': '$const88.8.1'}), (90, {'lhs': '$i86.7', 'rhs': '$const88.8.1', 'res': '$90binary_subtract.9'}), (92, {'index': '$90binary_subtract.9', 'target': '$final_ub84.6', 'res': '$92binary_subscr.10'}), (94, {'lhs': '$82binary_subscr.5', 'rhs': '$92binary_subscr.10', 'res': '$94compare_op.11'}), (96, {'pred': '$94compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: ('$phi74.0',), 112: ('$phi74.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=98 nstack_initial=1):
AdaptBlockInfo(insts=((98, {'res': '$basic_ub98.1'}), (100, {'res': '$i100.2'}), (102, {'index': '$i100.2', 'target': '$basic_ub98.1', 'res': '$102binary_subscr.3'}), (104, {'res': '$final_ub104.4'}), (106, {'res': '$i106.5'}), (108, {'target': '$final_ub104.4', 'index': '$i106.5', 'value': '$102binary_subscr.3'}), (110, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={128: ('$phi98.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=112 nstack_initial=1):
AdaptBlockInfo(insts=((112, {'res': '$final_ub112.1'}), (114, {'res': '$i114.2'}), (116, {'res': '$const116.3.1'}), (118, {'lhs': '$i114.2', 'rhs': '$const116.3.1', 'res': '$118binary_subtract.4'}), (120, {'index': '$118binary_subtract.4', 'target': '$final_ub112.1', 'res': '$120binary_subscr.5'}), (122, {'res': '$final_ub122.6'}), (124, {'res': '$i124.7'}), (126, {'target': '$final_ub122.6', 'index': '$i124.7', 'value': '$120binary_subscr.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={128: ('$phi112.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=128 nstack_initial=1):
AdaptBlockInfo(insts=((128, {'res': '$basic_lb128.1'}), (130, {'res': '$i130.2'}), (132, {'index': '$i130.2', 'target': '$basic_lb128.1', 'res': '$132binary_subscr.3'}), (134, {'res': '$final_lb134.4'}), (136, {'res': '$i136.5'}), (138, {'res': '$const138.6.1'}), (140, {'lhs': '$i136.5', 'rhs': '$const138.6.1', 'res': '$140binary_subtract.7'}), (142, {'index': '$140binary_subtract.7', 'target': '$final_lb134.4', 'res': '$142binary_subscr.8'}), (144, {'lhs': '$132binary_subscr.3', 'rhs': '$142binary_subscr.8', 'res': '$144compare_op.9'}), (146, {'pred': '$144compare_op.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={148: ('$phi128.0',), 172: ('$phi128.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=148 nstack_initial=1):
AdaptBlockInfo(insts=((148, {'res': '$close148.1'}), (150, {'res': '$i150.2'}), (152, {'res': '$const152.3.1'}), (154, {'lhs': '$i150.2', 'rhs': '$const152.3.1', 'res': '$154binary_subtract.4'}), (156, {'index': '$154binary_subtract.4', 'target': '$close148.1', 'res': '$156binary_subscr.5'}), (158, {'res': '$final_lb158.6'}), (160, {'res': '$i160.7'}), (162, {'res': '$const162.8.1'}), (164, {'lhs': '$i160.7', 'rhs': '$const162.8.1', 'res': '$164binary_subtract.9'}), (166, {'index': '$164binary_subtract.9', 'target': '$final_lb158.6', 'res': '$166binary_subscr.10'}), (168, {'lhs': '$156binary_subscr.5', 'rhs': '$166binary_subscr.10', 'res': '$168compare_op.11'}), (170, {'pred': '$168compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={172: ('$phi148.0',), 186: ('$phi148.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=172 nstack_initial=1):
AdaptBlockInfo(insts=((172, {'res': '$basic_lb172.1'}), (174, {'res': '$i174.2'}), (176, {'index': '$i174.2', 'target': '$basic_lb172.1', 'res': '$176binary_subscr.3'}), (178, {'res': '$final_lb178.4'}), (180, {'res': '$i180.5'}), (182, {'target': '$final_lb178.4', 'index': '$i180.5', 'value': '$176binary_subscr.3'}), (184, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={202: ('$phi172.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=186 nstack_initial=1):
AdaptBlockInfo(insts=((186, {'res': '$final_lb186.1'}), (188, {'res': '$i188.2'}), (190, {'res': '$const190.3.1'}), (192, {'lhs': '$i188.2', 'rhs': '$const190.3.1', 'res': '$192binary_subtract.4'}), (194, {'index': '$192binary_subtract.4', 'target': '$final_lb186.1', 'res': '$194binary_subscr.5'}), (196, {'res': '$final_lb196.6'}), (198, {'res': '$i198.7'}), (200, {'target': '$final_lb196.6', 'index': '$i198.7', 'value': '$194binary_subscr.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={202: ('$phi186.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=202 nstack_initial=1):
AdaptBlockInfo(insts=((202, {'res': '$supertrend202.1'}), (204, {'res': '$i204.2'}), (206, {'res': '$const206.3.1'}), (208, {'lhs': '$i204.2', 'rhs': '$const206.3.1', 'res': '$208binary_subtract.4'}), (210, {'index': '$208binary_subtract.4', 'target': '$supertrend202.1', 'res': '$210binary_subscr.5'}), (212, {'res': '$final_ub212.6'}), (214, {'res': '$i214.7'}), (216, {'res': '$const216.8.1'}), (218, {'lhs': '$i214.7', 'rhs': '$const216.8.1', 'res': '$218binary_subtract.9'}), (220, {'index': '$218binary_subtract.9', 'target': '$final_ub212.6', 'res': '$220binary_subscr.10'}), (222, {'lhs': '$210binary_subscr.5', 'rhs': '$220binary_subscr.10', 'res': '$222compare_op.11'}), (224, {'pred': '$222compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={226: ('$phi202.0',), 256: ('$phi202.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=226 nstack_initial=1):
AdaptBlockInfo(insts=((226, {'res': '$close226.1'}), (228, {'res': '$i228.2'}), (230, {'index': '$i228.2', 'target': '$close226.1', 'res': '$230binary_subscr.3'}), (232, {'res': '$final_ub232.4'}), (234, {'res': '$i234.5'}), (236, {'index': '$i234.5', 'target': '$final_ub232.4', 'res': '$236binary_subscr.6'}), (238, {'lhs': '$230binary_subscr.3', 'rhs': '$236binary_subscr.6', 'res': '$238compare_op.7'}), (240, {'pred': '$238compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={242: ('$phi226.0',), 256: ('$phi226.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=242 nstack_initial=1):
AdaptBlockInfo(insts=((242, {'res': '$final_ub242.1'}), (244, {'res': '$i244.2'}), (246, {'index': '$i244.2', 'target': '$final_ub242.1', 'res': '$246binary_subscr.3'}), (248, {'res': '$supertrend248.4'}), (250, {'res': '$i250.5'}), (252, {'target': '$supertrend248.4', 'index': '$i250.5', 'value': '$246binary_subscr.3'}), (254, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi242.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=256 nstack_initial=1):
AdaptBlockInfo(insts=((256, {'res': '$supertrend256.1'}), (258, {'res': '$i258.2'}), (260, {'res': '$const260.3.1'}), (262, {'lhs': '$i258.2', 'rhs': '$const260.3.1', 'res': '$262binary_subtract.4'}), (264, {'index': '$262binary_subtract.4', 'target': '$supertrend256.1', 'res': '$264binary_subscr.5'}), (266, {'res': '$final_ub266.6'}), (268, {'res': '$i268.7'}), (270, {'res': '$const270.8.1'}), (272, {'lhs': '$i268.7', 'rhs': '$const270.8.1', 'res': '$272binary_subtract.9'}), (274, {'index': '$272binary_subtract.9', 'target': '$final_ub266.6', 'res': '$274binary_subscr.10'}), (276, {'lhs': '$264binary_subscr.5', 'rhs': '$274binary_subscr.10', 'res': '$276compare_op.11'}), (278, {'pred': '$276compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={280: ('$phi256.0',), 310: ('$phi256.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=280 nstack_initial=1):
AdaptBlockInfo(insts=((280, {'res': '$close280.1'}), (282, {'res': '$i282.2'}), (284, {'index': '$i282.2', 'target': '$close280.1', 'res': '$284binary_subscr.3'}), (286, {'res': '$final_ub286.4'}), (288, {'res': '$i288.5'}), (290, {'index': '$i288.5', 'target': '$final_ub286.4', 'res': '$290binary_subscr.6'}), (292, {'lhs': '$284binary_subscr.3', 'rhs': '$290binary_subscr.6', 'res': '$292compare_op.7'}), (294, {'pred': '$292compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={296: ('$phi280.0',), 310: ('$phi280.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=296 nstack_initial=1):
AdaptBlockInfo(insts=((296, {'res': '$final_lb296.1'}), (298, {'res': '$i298.2'}), (300, {'index': '$i298.2', 'target': '$final_lb296.1', 'res': '$300binary_subscr.3'}), (302, {'res': '$supertrend302.4'}), (304, {'res': '$i304.5'}), (306, {'target': '$supertrend302.4', 'index': '$i304.5', 'value': '$300binary_subscr.3'}), (308, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi296.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=310 nstack_initial=1):
AdaptBlockInfo(insts=((310, {'res': '$supertrend310.1'}), (312, {'res': '$i312.2'}), (314, {'res': '$const314.3.1'}), (316, {'lhs': '$i312.2', 'rhs': '$const314.3.1', 'res': '$316binary_subtract.4'}), (318, {'index': '$316binary_subtract.4', 'target': '$supertrend310.1', 'res': '$318binary_subscr.5'}), (320, {'res': '$final_lb320.6'}), (322, {'res': '$i322.7'}), (324, {'res': '$const324.8.1'}), (326, {'lhs': '$i322.7', 'rhs': '$const324.8.1', 'res': '$326binary_subtract.9'}), (328, {'index': '$326binary_subtract.9', 'target': '$final_lb320.6', 'res': '$328binary_subscr.10'}), (330, {'lhs': '$318binary_subscr.5', 'rhs': '$328binary_subscr.10', 'res': '$330compare_op.11'}), (332, {'pred': '$330compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={334: ('$phi310.0',), 364: ('$phi310.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=334 nstack_initial=1):
AdaptBlockInfo(insts=((334, {'res': '$close334.1'}), (336, {'res': '$i336.2'}), (338, {'index': '$i336.2', 'target': '$close334.1', 'res': '$338binary_subscr.3'}), (340, {'res': '$final_lb340.4'}), (342, {'res': '$i342.5'}), (344, {'index': '$i342.5', 'target': '$final_lb340.4', 'res': '$344binary_subscr.6'}), (346, {'lhs': '$338binary_subscr.3', 'rhs': '$344binary_subscr.6', 'res': '$346compare_op.7'}), (348, {'pred': '$346compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={350: ('$phi334.0',), 364: ('$phi334.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=350 nstack_initial=1):
AdaptBlockInfo(insts=((350, {'res': '$final_lb350.1'}), (352, {'res': '$i352.2'}), (354, {'index': '$i352.2', 'target': '$final_lb350.1', 'res': '$354binary_subscr.3'}), (356, {'res': '$supertrend356.4'}), (358, {'res': '$i358.5'}), (360, {'target': '$supertrend356.4', 'index': '$i358.5', 'value': '$354binary_subscr.3'}), (362, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi350.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=364 nstack_initial=1):
AdaptBlockInfo(insts=((364, {'res': '$supertrend364.1'}), (366, {'res': '$i366.2'}), (368, {'res': '$const368.3.1'}), (370, {'lhs': '$i366.2', 'rhs': '$const368.3.1', 'res': '$370binary_subtract.4'}), (372, {'index': '$370binary_subtract.4', 'target': '$supertrend364.1', 'res': '$372binary_subscr.5'}), (374, {'res': '$final_lb374.6'}), (376, {'res': '$i376.7'}), (378, {'res': '$const378.8.1'}), (380, {'lhs': '$i376.7', 'rhs': '$const378.8.1', 'res': '$380binary_subtract.9'}), (382, {'index': '$380binary_subtract.9', 'target': '$final_lb374.6', 'res': '$382binary_subscr.10'}), (384, {'lhs': '$372binary_subscr.5', 'rhs': '$382binary_subscr.10', 'res': '$384compare_op.11'}), (386, {'pred': '$384compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={388: ('$phi364.0',), 418: ('$phi364.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=388 nstack_initial=1):
AdaptBlockInfo(insts=((388, {'res': '$close388.1'}), (390, {'res': '$i390.2'}), (392, {'index': '$i390.2', 'target': '$close388.1', 'res': '$392binary_subscr.3'}), (394, {'res': '$final_lb394.4'}), (396, {'res': '$i396.5'}), (398, {'index': '$i396.5', 'target': '$final_lb394.4', 'res': '$398binary_subscr.6'}), (400, {'lhs': '$392binary_subscr.3', 'rhs': '$398binary_subscr.6', 'res': '$400compare_op.7'}), (402, {'pred': '$400compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={404: ('$phi388.0',), 418: ('$phi388.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=404 nstack_initial=1):
AdaptBlockInfo(insts=((404, {'res': '$final_ub404.1'}), (406, {'res': '$i406.2'}), (408, {'index': '$i406.2', 'target': '$final_ub404.1', 'res': '$408binary_subscr.3'}), (410, {'res': '$supertrend410.4'}), (412, {'res': '$i412.5'}), (414, {'target': '$supertrend410.4', 'index': '$i412.5', 'value': '$408binary_subscr.3'}), (416, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi404.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=418 nstack_initial=1):
AdaptBlockInfo(insts=((418, {'res': '$const418.1.2'}), (420, {'res': '$supertrend420.2'}), (422, {'res': '$i422.3'}), (424, {'target': '$supertrend420.2', 'index': '$i422.3', 'value': '$const418.1.2'}), (426, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi418.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=428 nstack_initial=0):
AdaptBlockInfo(insts=((428, {'res': '$supertrend428.0'}), (430, {'retval': '$supertrend428.0', 'castval': '$430return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    close = arg(0, name=close)               ['close']
    basic_ub = arg(1, name=basic_ub)         ['basic_ub']
    basic_lb = arg(2, name=basic_lb)         ['basic_lb']
    n = arg(3, name=n)                       ['n']
    $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
    length = call $2load_global.0(close, func=$2load_global.0, args=[Var(close, helper_loops.py:99)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'close', 'length']
    $10load_global.3 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>) ['$10load_global.3']
    $12load_method.4 = getattr(value=$10load_global.3, attr=zeros) ['$10load_global.3', '$12load_method.4']
    final_ub = call $12load_method.4(length, func=$12load_method.4, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_method.4', 'final_ub', 'length']
    $20load_global.7 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.7']
    $22load_method.8 = getattr(value=$20load_global.7, attr=zeros) ['$20load_global.7', '$22load_method.8']
    final_lb = call $22load_method.8(length, func=$22load_method.8, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.8', 'final_lb', 'length']
    $30load_global.11 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>) ['$30load_global.11']
    $32load_method.12 = getattr(value=$30load_global.11, attr=zeros) ['$30load_global.11', '$32load_method.12']
    supertrend = call $32load_method.12(length, func=$32load_method.12, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$32load_method.12', 'length', 'supertrend']
    $40load_global.15 = global(range: <class 'range'>) ['$40load_global.15']
    $46call_function.18 = call $40load_global.15(n, length, func=$40load_global.15, args=[Var(n, helper_loops.py:99), Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_global.15', '$46call_function.18', 'length', 'n']
    $48get_iter.19 = getiter(value=$46call_function.18) ['$46call_function.18', '$48get_iter.19']
    $phi50.0 = $48get_iter.19                ['$48get_iter.19', '$phi50.0']
    jump 50                                  []
label 50:
    $50for_iter.1 = iternext(value=$phi50.0) ['$50for_iter.1', '$phi50.0']
    $50for_iter.2 = pair_first(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.2']
    $50for_iter.3 = pair_second(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.3']
    $phi52.1 = $50for_iter.2                 ['$50for_iter.2', '$phi52.1']
    branch $50for_iter.3, 52, 428            ['$50for_iter.3']
label 52:
    i = $phi52.1                             ['$phi52.1', 'i']
    $58binary_subscr.4 = getitem(value=basic_ub, index=i, fn=<built-in function getitem>) ['$58binary_subscr.4', 'basic_ub', 'i']
    $const64.7.1 = const(int, 1)             ['$const64.7.1']
    $66binary_subtract.8 = i - $const64.7.1  ['$66binary_subtract.8', '$const64.7.1', 'i']
    $68binary_subscr.9 = getitem(value=final_ub, index=$66binary_subtract.8, fn=<built-in function getitem>) ['$66binary_subtract.8', '$68binary_subscr.9', 'final_ub']
    $70compare_op.10 = $58binary_subscr.4 < $68binary_subscr.9 ['$58binary_subscr.4', '$68binary_subscr.9', '$70compare_op.10']
    bool72 = global(bool: <class 'bool'>)    ['bool72']
    $72pred = call bool72($70compare_op.10, func=bool72, args=(Var($70compare_op.10, helper_loops.py:113),), kws=(), vararg=None, varkwarg=None, target=None) ['$70compare_op.10', '$72pred', 'bool72']
    branch $72pred, 98, 74                   ['$72pred']
label 74:
    $const78.3.1 = const(int, 1)             ['$const78.3.1']
    $80binary_subtract.4 = i - $const78.3.1  ['$80binary_subtract.4', '$const78.3.1', 'i']
    $82binary_subscr.5 = getitem(value=close, index=$80binary_subtract.4, fn=<built-in function getitem>) ['$80binary_subtract.4', '$82binary_subscr.5', 'close']
    $const88.8.1 = const(int, 1)             ['$const88.8.1']
    $90binary_subtract.9 = i - $const88.8.1  ['$90binary_subtract.9', '$const88.8.1', 'i']
    $92binary_subscr.10 = getitem(value=final_ub, index=$90binary_subtract.9, fn=<built-in function getitem>) ['$90binary_subtract.9', '$92binary_subscr.10', 'final_ub']
    $94compare_op.11 = $82binary_subscr.5 > $92binary_subscr.10 ['$82binary_subscr.5', '$92binary_subscr.10', '$94compare_op.11']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
    $96pred = call bool96($94compare_op.11, func=bool96, args=(Var($94compare_op.11, helper_loops.py:113),), kws=(), vararg=None, varkwarg=None, target=None) ['$94compare_op.11', '$96pred', 'bool96']
    branch $96pred, 98, 112                  ['$96pred']
label 98:
    $102binary_subscr.3 = getitem(value=basic_ub, index=i, fn=<built-in function getitem>) ['$102binary_subscr.3', 'basic_ub', 'i']
    final_ub[i] = $102binary_subscr.3        ['$102binary_subscr.3', 'final_ub', 'i']
    jump 128                                 []
label 112:
    $const116.3.1 = const(int, 1)            ['$const116.3.1']
    $118binary_subtract.4 = i - $const116.3.1 ['$118binary_subtract.4', '$const116.3.1', 'i']
    $120binary_subscr.5 = getitem(value=final_ub, index=$118binary_subtract.4, fn=<built-in function getitem>) ['$118binary_subtract.4', '$120binary_subscr.5', 'final_ub']
    final_ub[i] = $120binary_subscr.5        ['$120binary_subscr.5', 'final_ub', 'i']
    jump 128                                 []
label 128:
    $132binary_subscr.3 = getitem(value=basic_lb, index=i, fn=<built-in function getitem>) ['$132binary_subscr.3', 'basic_lb', 'i']
    $const138.6.1 = const(int, 1)            ['$const138.6.1']
    $140binary_subtract.7 = i - $const138.6.1 ['$140binary_subtract.7', '$const138.6.1', 'i']
    $142binary_subscr.8 = getitem(value=final_lb, index=$140binary_subtract.7, fn=<built-in function getitem>) ['$140binary_subtract.7', '$142binary_subscr.8', 'final_lb']
    $144compare_op.9 = $132binary_subscr.3 > $142binary_subscr.8 ['$132binary_subscr.3', '$142binary_subscr.8', '$144compare_op.9']
    bool146 = global(bool: <class 'bool'>)   ['bool146']
    $146pred = call bool146($144compare_op.9, func=bool146, args=(Var($144compare_op.9, helper_loops.py:118),), kws=(), vararg=None, varkwarg=None, target=None) ['$144compare_op.9', '$146pred', 'bool146']
    branch $146pred, 172, 148                ['$146pred']
label 148:
    $const152.3.1 = const(int, 1)            ['$const152.3.1']
    $154binary_subtract.4 = i - $const152.3.1 ['$154binary_subtract.4', '$const152.3.1', 'i']
    $156binary_subscr.5 = getitem(value=close, index=$154binary_subtract.4, fn=<built-in function getitem>) ['$154binary_subtract.4', '$156binary_subscr.5', 'close']
    $const162.8.1 = const(int, 1)            ['$const162.8.1']
    $164binary_subtract.9 = i - $const162.8.1 ['$164binary_subtract.9', '$const162.8.1', 'i']
    $166binary_subscr.10 = getitem(value=final_lb, index=$164binary_subtract.9, fn=<built-in function getitem>) ['$164binary_subtract.9', '$166binary_subscr.10', 'final_lb']
    $168compare_op.11 = $156binary_subscr.5 < $166binary_subscr.10 ['$156binary_subscr.5', '$166binary_subscr.10', '$168compare_op.11']
    bool170 = global(bool: <class 'bool'>)   ['bool170']
    $170pred = call bool170($168compare_op.11, func=bool170, args=(Var($168compare_op.11, helper_loops.py:118),), kws=(), vararg=None, varkwarg=None, target=None) ['$168compare_op.11', '$170pred', 'bool170']
    branch $170pred, 172, 186                ['$170pred']
label 172:
    $176binary_subscr.3 = getitem(value=basic_lb, index=i, fn=<built-in function getitem>) ['$176binary_subscr.3', 'basic_lb', 'i']
    final_lb[i] = $176binary_subscr.3        ['$176binary_subscr.3', 'final_lb', 'i']
    jump 202                                 []
label 186:
    $const190.3.1 = const(int, 1)            ['$const190.3.1']
    $192binary_subtract.4 = i - $const190.3.1 ['$192binary_subtract.4', '$const190.3.1', 'i']
    $194binary_subscr.5 = getitem(value=final_lb, index=$192binary_subtract.4, fn=<built-in function getitem>) ['$192binary_subtract.4', '$194binary_subscr.5', 'final_lb']
    final_lb[i] = $194binary_subscr.5        ['$194binary_subscr.5', 'final_lb', 'i']
    jump 202                                 []
label 202:
    $const206.3.1 = const(int, 1)            ['$const206.3.1']
    $208binary_subtract.4 = i - $const206.3.1 ['$208binary_subtract.4', '$const206.3.1', 'i']
    $210binary_subscr.5 = getitem(value=supertrend, index=$208binary_subtract.4, fn=<built-in function getitem>) ['$208binary_subtract.4', '$210binary_subscr.5', 'supertrend']
    $const216.8.1 = const(int, 1)            ['$const216.8.1']
    $218binary_subtract.9 = i - $const216.8.1 ['$218binary_subtract.9', '$const216.8.1', 'i']
    $220binary_subscr.10 = getitem(value=final_ub, index=$218binary_subtract.9, fn=<built-in function getitem>) ['$218binary_subtract.9', '$220binary_subscr.10', 'final_ub']
    $222compare_op.11 = $210binary_subscr.5 == $220binary_subscr.10 ['$210binary_subscr.5', '$220binary_subscr.10', '$222compare_op.11']
    bool224 = global(bool: <class 'bool'>)   ['bool224']
    $224pred = call bool224($222compare_op.11, func=bool224, args=(Var($222compare_op.11, helper_loops.py:123),), kws=(), vararg=None, varkwarg=None, target=None) ['$222compare_op.11', '$224pred', 'bool224']
    branch $224pred, 226, 256                ['$224pred']
label 226:
    $230binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>) ['$230binary_subscr.3', 'close', 'i']
    $236binary_subscr.6 = getitem(value=final_ub, index=i, fn=<built-in function getitem>) ['$236binary_subscr.6', 'final_ub', 'i']
    $238compare_op.7 = $230binary_subscr.3 <= $236binary_subscr.6 ['$230binary_subscr.3', '$236binary_subscr.6', '$238compare_op.7']
    bool240 = global(bool: <class 'bool'>)   ['bool240']
    $240pred = call bool240($238compare_op.7, func=bool240, args=(Var($238compare_op.7, helper_loops.py:123),), kws=(), vararg=None, varkwarg=None, target=None) ['$238compare_op.7', '$240pred', 'bool240']
    branch $240pred, 242, 256                ['$240pred']
label 242:
    $246binary_subscr.3 = getitem(value=final_ub, index=i, fn=<built-in function getitem>) ['$246binary_subscr.3', 'final_ub', 'i']
    supertrend[i] = $246binary_subscr.3      ['$246binary_subscr.3', 'i', 'supertrend']
    jump 50                                  []
label 256:
    $const260.3.1 = const(int, 1)            ['$const260.3.1']
    $262binary_subtract.4 = i - $const260.3.1 ['$262binary_subtract.4', '$const260.3.1', 'i']
    $264binary_subscr.5 = getitem(value=supertrend, index=$262binary_subtract.4, fn=<built-in function getitem>) ['$262binary_subtract.4', '$264binary_subscr.5', 'supertrend']
    $const270.8.1 = const(int, 1)            ['$const270.8.1']
    $272binary_subtract.9 = i - $const270.8.1 ['$272binary_subtract.9', '$const270.8.1', 'i']
    $274binary_subscr.10 = getitem(value=final_ub, index=$272binary_subtract.9, fn=<built-in function getitem>) ['$272binary_subtract.9', '$274binary_subscr.10', 'final_ub']
    $276compare_op.11 = $264binary_subscr.5 == $274binary_subscr.10 ['$264binary_subscr.5', '$274binary_subscr.10', '$276compare_op.11']
    bool278 = global(bool: <class 'bool'>)   ['bool278']
    $278pred = call bool278($276compare_op.11, func=bool278, args=(Var($276compare_op.11, helper_loops.py:125),), kws=(), vararg=None, varkwarg=None, target=None) ['$276compare_op.11', '$278pred', 'bool278']
    branch $278pred, 280, 310                ['$278pred']
label 280:
    $284binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>) ['$284binary_subscr.3', 'close', 'i']
    $290binary_subscr.6 = getitem(value=final_ub, index=i, fn=<built-in function getitem>) ['$290binary_subscr.6', 'final_ub', 'i']
    $292compare_op.7 = $284binary_subscr.3 > $290binary_subscr.6 ['$284binary_subscr.3', '$290binary_subscr.6', '$292compare_op.7']
    bool294 = global(bool: <class 'bool'>)   ['bool294']
    $294pred = call bool294($292compare_op.7, func=bool294, args=(Var($292compare_op.7, helper_loops.py:125),), kws=(), vararg=None, varkwarg=None, target=None) ['$292compare_op.7', '$294pred', 'bool294']
    branch $294pred, 296, 310                ['$294pred']
label 296:
    $300binary_subscr.3 = getitem(value=final_lb, index=i, fn=<built-in function getitem>) ['$300binary_subscr.3', 'final_lb', 'i']
    supertrend[i] = $300binary_subscr.3      ['$300binary_subscr.3', 'i', 'supertrend']
    jump 50                                  []
label 310:
    $const314.3.1 = const(int, 1)            ['$const314.3.1']
    $316binary_subtract.4 = i - $const314.3.1 ['$316binary_subtract.4', '$const314.3.1', 'i']
    $318binary_subscr.5 = getitem(value=supertrend, index=$316binary_subtract.4, fn=<built-in function getitem>) ['$316binary_subtract.4', '$318binary_subscr.5', 'supertrend']
    $const324.8.1 = const(int, 1)            ['$const324.8.1']
    $326binary_subtract.9 = i - $const324.8.1 ['$326binary_subtract.9', '$const324.8.1', 'i']
    $328binary_subscr.10 = getitem(value=final_lb, index=$326binary_subtract.9, fn=<built-in function getitem>) ['$326binary_subtract.9', '$328binary_subscr.10', 'final_lb']
    $330compare_op.11 = $318binary_subscr.5 == $328binary_subscr.10 ['$318binary_subscr.5', '$328binary_subscr.10', '$330compare_op.11']
    bool332 = global(bool: <class 'bool'>)   ['bool332']
    $332pred = call bool332($330compare_op.11, func=bool332, args=(Var($330compare_op.11, helper_loops.py:127),), kws=(), vararg=None, varkwarg=None, target=None) ['$330compare_op.11', '$332pred', 'bool332']
    branch $332pred, 334, 364                ['$332pred']
label 334:
    $338binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>) ['$338binary_subscr.3', 'close', 'i']
    $344binary_subscr.6 = getitem(value=final_lb, index=i, fn=<built-in function getitem>) ['$344binary_subscr.6', 'final_lb', 'i']
    $346compare_op.7 = $338binary_subscr.3 >= $344binary_subscr.6 ['$338binary_subscr.3', '$344binary_subscr.6', '$346compare_op.7']
    bool348 = global(bool: <class 'bool'>)   ['bool348']
    $348pred = call bool348($346compare_op.7, func=bool348, args=(Var($346compare_op.7, helper_loops.py:127),), kws=(), vararg=None, varkwarg=None, target=None) ['$346compare_op.7', '$348pred', 'bool348']
    branch $348pred, 350, 364                ['$348pred']
label 350:
    $354binary_subscr.3 = getitem(value=final_lb, index=i, fn=<built-in function getitem>) ['$354binary_subscr.3', 'final_lb', 'i']
    supertrend[i] = $354binary_subscr.3      ['$354binary_subscr.3', 'i', 'supertrend']
    jump 50                                  []
label 364:
    $const368.3.1 = const(int, 1)            ['$const368.3.1']
    $370binary_subtract.4 = i - $const368.3.1 ['$370binary_subtract.4', '$const368.3.1', 'i']
    $372binary_subscr.5 = getitem(value=supertrend, index=$370binary_subtract.4, fn=<built-in function getitem>) ['$370binary_subtract.4', '$372binary_subscr.5', 'supertrend']
    $const378.8.1 = const(int, 1)            ['$const378.8.1']
    $380binary_subtract.9 = i - $const378.8.1 ['$380binary_subtract.9', '$const378.8.1', 'i']
    $382binary_subscr.10 = getitem(value=final_lb, index=$380binary_subtract.9, fn=<built-in function getitem>) ['$380binary_subtract.9', '$382binary_subscr.10', 'final_lb']
    $384compare_op.11 = $372binary_subscr.5 == $382binary_subscr.10 ['$372binary_subscr.5', '$382binary_subscr.10', '$384compare_op.11']
    bool386 = global(bool: <class 'bool'>)   ['bool386']
    $386pred = call bool386($384compare_op.11, func=bool386, args=(Var($384compare_op.11, helper_loops.py:129),), kws=(), vararg=None, varkwarg=None, target=None) ['$384compare_op.11', '$386pred', 'bool386']
    branch $386pred, 388, 418                ['$386pred']
label 388:
    $392binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>) ['$392binary_subscr.3', 'close', 'i']
    $398binary_subscr.6 = getitem(value=final_lb, index=i, fn=<built-in function getitem>) ['$398binary_subscr.6', 'final_lb', 'i']
    $400compare_op.7 = $392binary_subscr.3 < $398binary_subscr.6 ['$392binary_subscr.3', '$398binary_subscr.6', '$400compare_op.7']
    bool402 = global(bool: <class 'bool'>)   ['bool402']
    $402pred = call bool402($400compare_op.7, func=bool402, args=(Var($400compare_op.7, helper_loops.py:129),), kws=(), vararg=None, varkwarg=None, target=None) ['$400compare_op.7', '$402pred', 'bool402']
    branch $402pred, 404, 418                ['$402pred']
label 404:
    $408binary_subscr.3 = getitem(value=final_ub, index=i, fn=<built-in function getitem>) ['$408binary_subscr.3', 'final_ub', 'i']
    supertrend[i] = $408binary_subscr.3      ['$408binary_subscr.3', 'i', 'supertrend']
    jump 50                                  []
label 418:
    $const418.1.2 = const(float, 0.0)        ['$const418.1.2']
    supertrend[i] = $const418.1.2            ['$const418.1.2', 'i', 'supertrend']
    jump 50                                  []
label 428:
    $430return_value.1 = cast(value=supertrend) ['$430return_value.1', 'supertrend']
    return $430return_value.1                ['$430return_value.1']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x794539e9fd90>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: close = arg(0, name=close)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: basic_ub = arg(1, name=basic_ub)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: basic_lb = arg(2, name=basic_lb)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: n = arg(3, name=n)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(len: <built-in function len>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: length = call $2load_global.0(close, func=$2load_global.0, args=[Var(close, helper_loops.py:99)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $10load_global.3 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $12load_method.4 = getattr(value=$10load_global.3, attr=zeros)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_ub = call $12load_method.4(length, func=$12load_method.4, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $20load_global.7 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $22load_method.8 = getattr(value=$20load_global.7, attr=zeros)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_lb = call $22load_method.8(length, func=$22load_method.8, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $30load_global.11 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $32load_method.12 = getattr(value=$30load_global.11, attr=zeros)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend = call $32load_method.12(length, func=$32load_method.12, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $40load_global.15 = global(range: <class 'range'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $46call_function.18 = call $40load_global.15(n, length, func=$40load_global.15, args=[Var(n, helper_loops.py:99), Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $48get_iter.19 = getiter(value=$46call_function.18)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $phi50.0 = $48get_iter.19
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 50
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 50
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x794539e9fd90>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $50for_iter.1 = iternext(value=$phi50.0)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $phi52.1 = $50for_iter.2
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $50for_iter.3, 52, 428
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 52
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x794539e9fd90>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: i = $phi52.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $58binary_subscr.4 = getitem(value=basic_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const64.7.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $66binary_subtract.8 = i - $const64.7.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $68binary_subscr.9 = getitem(value=final_ub, index=$66binary_subtract.8, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $70compare_op.10 = $58binary_subscr.4 < $68binary_subscr.9
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool72 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $72pred = call bool72($70compare_op.10, func=bool72, args=(Var($70compare_op.10, helper_loops.py:113),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $72pred, 98, 74
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 74
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x794539e9fd90>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const78.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $80binary_subtract.4 = i - $const78.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $82binary_subscr.5 = getitem(value=close, index=$80binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const88.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $90binary_subtract.9 = i - $const88.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $92binary_subscr.10 = getitem(value=final_ub, index=$90binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $94compare_op.11 = $82binary_subscr.5 > $92binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool96 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $96pred = call bool96($94compare_op.11, func=bool96, args=(Var($94compare_op.11, helper_loops.py:113),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $96pred, 98, 112
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 98
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x794539e9fd90>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $102binary_subscr.3 = getitem(value=basic_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_ub[i] = $102binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 128
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 112
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x794539e9fd90>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const116.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $118binary_subtract.4 = i - $const116.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $120binary_subscr.5 = getitem(value=final_ub, index=$118binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_ub[i] = $120binary_subscr.5
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 128
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 128
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x794539e9fd90>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $132binary_subscr.3 = getitem(value=basic_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const138.6.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $140binary_subtract.7 = i - $const138.6.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $142binary_subscr.8 = getitem(value=final_lb, index=$140binary_subtract.7, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $144compare_op.9 = $132binary_subscr.3 > $142binary_subscr.8
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool146 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $146pred = call bool146($144compare_op.9, func=bool146, args=(Var($144compare_op.9, helper_loops.py:118),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $146pred, 172, 148
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 148
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x794539e9fd90>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const152.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $154binary_subtract.4 = i - $const152.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $156binary_subscr.5 = getitem(value=close, index=$154binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const162.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $164binary_subtract.9 = i - $const162.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $166binary_subscr.10 = getitem(value=final_lb, index=$164binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $168compare_op.11 = $156binary_subscr.5 < $166binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool170 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $170pred = call bool170($168compare_op.11, func=bool170, args=(Var($168compare_op.11, helper_loops.py:118),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $170pred, 172, 186
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 172
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x794539e9fd90>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $176binary_subscr.3 = getitem(value=basic_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_lb[i] = $176binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 202
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 186
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x794539e9fd90>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const190.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $192binary_subtract.4 = i - $const190.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $194binary_subscr.5 = getitem(value=final_lb, index=$192binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_lb[i] = $194binary_subscr.5
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 202
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 202
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x794539e9fd90>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const206.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $208binary_subtract.4 = i - $const206.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $210binary_subscr.5 = getitem(value=supertrend, index=$208binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const216.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $218binary_subtract.9 = i - $const216.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $220binary_subscr.10 = getitem(value=final_ub, index=$218binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $222compare_op.11 = $210binary_subscr.5 == $220binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool224 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $224pred = call bool224($222compare_op.11, func=bool224, args=(Var($222compare_op.11, helper_loops.py:123),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $224pred, 226, 256
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 226
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x794539e9fd90>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $230binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $236binary_subscr.6 = getitem(value=final_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $238compare_op.7 = $230binary_subscr.3 <= $236binary_subscr.6
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool240 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $240pred = call bool240($238compare_op.7, func=bool240, args=(Var($238compare_op.7, helper_loops.py:123),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $240pred, 242, 256
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 242
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x794539e9fd90>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $246binary_subscr.3 = getitem(value=final_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $246binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 256
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x794539e9fd90>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const260.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $262binary_subtract.4 = i - $const260.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $264binary_subscr.5 = getitem(value=supertrend, index=$262binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const270.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $272binary_subtract.9 = i - $const270.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $274binary_subscr.10 = getitem(value=final_ub, index=$272binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $276compare_op.11 = $264binary_subscr.5 == $274binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool278 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $278pred = call bool278($276compare_op.11, func=bool278, args=(Var($276compare_op.11, helper_loops.py:125),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $278pred, 280, 310
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 280
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x794539e9fd90>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $284binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $290binary_subscr.6 = getitem(value=final_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $292compare_op.7 = $284binary_subscr.3 > $290binary_subscr.6
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool294 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $294pred = call bool294($292compare_op.7, func=bool294, args=(Var($292compare_op.7, helper_loops.py:125),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $294pred, 296, 310
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 296
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x794539e9fd90>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $300binary_subscr.3 = getitem(value=final_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $300binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 310
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x794539e9fd90>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const314.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $316binary_subtract.4 = i - $const314.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $318binary_subscr.5 = getitem(value=supertrend, index=$316binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const324.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $326binary_subtract.9 = i - $const324.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $328binary_subscr.10 = getitem(value=final_lb, index=$326binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $330compare_op.11 = $318binary_subscr.5 == $328binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool332 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $332pred = call bool332($330compare_op.11, func=bool332, args=(Var($330compare_op.11, helper_loops.py:127),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $332pred, 334, 364
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 334
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x794539e9fd90>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $338binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $344binary_subscr.6 = getitem(value=final_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $346compare_op.7 = $338binary_subscr.3 >= $344binary_subscr.6
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool348 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $348pred = call bool348($346compare_op.7, func=bool348, args=(Var($346compare_op.7, helper_loops.py:127),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $348pred, 350, 364
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 350
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x794539e9fd90>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $354binary_subscr.3 = getitem(value=final_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $354binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 364
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x794539e9fd90>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const368.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $370binary_subtract.4 = i - $const368.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $372binary_subscr.5 = getitem(value=supertrend, index=$370binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const378.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $380binary_subtract.9 = i - $const378.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $382binary_subscr.10 = getitem(value=final_lb, index=$380binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $384compare_op.11 = $372binary_subscr.5 == $382binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool386 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $386pred = call bool386($384compare_op.11, func=bool386, args=(Var($384compare_op.11, helper_loops.py:129),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $386pred, 388, 418
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 388
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x794539e9fd90>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $392binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $398binary_subscr.6 = getitem(value=final_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $400compare_op.7 = $392binary_subscr.3 < $398binary_subscr.6
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool402 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $402pred = call bool402($400compare_op.7, func=bool402, args=(Var($400compare_op.7, helper_loops.py:129),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $402pred, 404, 418
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 404
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x794539e9fd90>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $408binary_subscr.3 = getitem(value=final_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $408binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 418
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x794539e9fd90>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const418.1.2 = const(float, 0.0)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $const418.1.2
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 428
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x794539e9fd90>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $430return_value.1 = cast(value=supertrend)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $430return_value.1
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 429
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x794539e9fd90>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 50
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$102binary_subscr.3': [(<numba.core.ir.Assign object at 0x794539e81420>,
                                      98)],
             '$10load_global.3': [(<numba.core.ir.Assign object at 0x79453a02d210>,
                                   0)],
             '$118binary_subtract.4': [(<numba.core.ir.Assign object at 0x794539e81c60>,
                                        112)],
             '$120binary_subscr.5': [(<numba.core.ir.Assign object at 0x794539e81de0>,
                                      112)],
             '$12load_method.4': [(<numba.core.ir.Assign object at 0x79453a02d390>,
                                   0)],
             '$132binary_subscr.3': [(<numba.core.ir.Assign object at 0x794539e82440>,
                                      128)],
             '$140binary_subtract.7': [(<numba.core.ir.Assign object at 0x794539e82980>,
                                        128)],
             '$142binary_subscr.8': [(<numba.core.ir.Assign object at 0x794539e82b00>,
                                      128)],
             '$144compare_op.9': [(<numba.core.ir.Assign object at 0x794539e82c80>,
                                   128)],
             '$146pred': [(<numba.core.ir.Assign object at 0x794539e82ef0>,
                           128)],
             '$154binary_subtract.4': [(<numba.core.ir.Assign object at 0x794539e83400>,
                                        148)],
             '$156binary_subscr.5': [(<numba.core.ir.Assign object at 0x794539e83580>,
                                      148)],
             '$164binary_subtract.9': [(<numba.core.ir.Assign object at 0x794539e83ac0>,
                                        148)],
             '$166binary_subscr.10': [(<numba.core.ir.Assign object at 0x794539e83c40>,
                                       148)],
             '$168compare_op.11': [(<numba.core.ir.Assign object at 0x794539e83dc0>,
                                    148)],
             '$170pred': [(<numba.core.ir.Assign object at 0x794539e8c070>,
                           148)],
             '$176binary_subscr.3': [(<numba.core.ir.Assign object at 0x794539e8c400>,
                                      172)],
             '$192binary_subtract.4': [(<numba.core.ir.Assign object at 0x794539e8cc40>,
                                        186)],
             '$194binary_subscr.5': [(<numba.core.ir.Assign object at 0x794539e8cdc0>,
                                      186)],
             '$208binary_subtract.4': [(<numba.core.ir.Assign object at 0x794539e8d5a0>,
                                        202)],
             '$20load_global.7': [(<numba.core.ir.Assign object at 0x79453a02d8d0>,
                                   0)],
             '$210binary_subscr.5': [(<numba.core.ir.Assign object at 0x794539e8d720>,
                                      202)],
             '$218binary_subtract.9': [(<numba.core.ir.Assign object at 0x794539e8dc60>,
                                        202)],
             '$220binary_subscr.10': [(<numba.core.ir.Assign object at 0x794539e8dde0>,
                                       202)],
             '$222compare_op.11': [(<numba.core.ir.Assign object at 0x794539e8df60>,
                                    202)],
             '$224pred': [(<numba.core.ir.Assign object at 0x794539e8e1d0>,
                           202)],
             '$22load_method.8': [(<numba.core.ir.Assign object at 0x79453a02da50>,
                                   0)],
             '$230binary_subscr.3': [(<numba.core.ir.Assign object at 0x794539e8e560>,
                                      226)],
             '$236binary_subscr.6': [(<numba.core.ir.Assign object at 0x794539e8e920>,
                                      226)],
             '$238compare_op.7': [(<numba.core.ir.Assign object at 0x794539e8eaa0>,
                                   226)],
             '$240pred': [(<numba.core.ir.Assign object at 0x794539e8ed10>,
                           226)],
             '$246binary_subscr.3': [(<numba.core.ir.Assign object at 0x794539e8f0a0>,
                                      242)],
             '$262binary_subtract.4': [(<numba.core.ir.Assign object at 0x794539e8f8e0>,
                                        256)],
             '$264binary_subscr.5': [(<numba.core.ir.Assign object at 0x794539e8fa60>,
                                      256)],
             '$272binary_subtract.9': [(<numba.core.ir.Assign object at 0x794539e8ffa0>,
                                        256)],
             '$274binary_subscr.10': [(<numba.core.ir.Assign object at 0x794539e94160>,
                                       256)],
             '$276compare_op.11': [(<numba.core.ir.Assign object at 0x794539e942e0>,
                                    256)],
             '$278pred': [(<numba.core.ir.Assign object at 0x794539e94550>,
                           256)],
             '$284binary_subscr.3': [(<numba.core.ir.Assign object at 0x794539e948e0>,
                                      280)],
             '$290binary_subscr.6': [(<numba.core.ir.Assign object at 0x794539e94ca0>,
                                      280)],
             '$292compare_op.7': [(<numba.core.ir.Assign object at 0x794539e94e20>,
                                   280)],
             '$294pred': [(<numba.core.ir.Assign object at 0x794539e95090>,
                           280)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x79453a02ccd0>,
                                  0)],
             '$300binary_subscr.3': [(<numba.core.ir.Assign object at 0x794539e95420>,
                                      296)],
             '$30load_global.11': [(<numba.core.ir.Assign object at 0x79453a02df90>,
                                    0)],
             '$316binary_subtract.4': [(<numba.core.ir.Assign object at 0x794539e95c60>,
                                        310)],
             '$318binary_subscr.5': [(<numba.core.ir.Assign object at 0x794539e95de0>,
                                      310)],
             '$326binary_subtract.9': [(<numba.core.ir.Assign object at 0x794539e96320>,
                                        310)],
             '$328binary_subscr.10': [(<numba.core.ir.Assign object at 0x794539e964a0>,
                                       310)],
             '$32load_method.12': [(<numba.core.ir.Assign object at 0x79453a02e110>,
                                    0)],
             '$330compare_op.11': [(<numba.core.ir.Assign object at 0x794539e96620>,
                                    310)],
             '$332pred': [(<numba.core.ir.Assign object at 0x794539e96890>,
                           310)],
             '$338binary_subscr.3': [(<numba.core.ir.Assign object at 0x794539e96c20>,
                                      334)],
             '$344binary_subscr.6': [(<numba.core.ir.Assign object at 0x794539e96fe0>,
                                      334)],
             '$346compare_op.7': [(<numba.core.ir.Assign object at 0x794539e97160>,
                                   334)],
             '$348pred': [(<numba.core.ir.Assign object at 0x794539e973d0>,
                           334)],
             '$354binary_subscr.3': [(<numba.core.ir.Assign object at 0x794539e97760>,
                                      350)],
             '$370binary_subtract.4': [(<numba.core.ir.Assign object at 0x794539e97fa0>,
                                        364)],
             '$372binary_subscr.5': [(<numba.core.ir.Assign object at 0x794539e9c160>,
                                      364)],
             '$380binary_subtract.9': [(<numba.core.ir.Assign object at 0x794539e9c6a0>,
                                        364)],
             '$382binary_subscr.10': [(<numba.core.ir.Assign object at 0x794539e9c820>,
                                       364)],
             '$384compare_op.11': [(<numba.core.ir.Assign object at 0x794539e9c9a0>,
                                    364)],
             '$386pred': [(<numba.core.ir.Assign object at 0x794539e9cc10>,
                           364)],
             '$392binary_subscr.3': [(<numba.core.ir.Assign object at 0x794539e9cfa0>,
                                      388)],
             '$398binary_subscr.6': [(<numba.core.ir.Assign object at 0x794539e9d360>,
                                      388)],
             '$400compare_op.7': [(<numba.core.ir.Assign object at 0x794539e9d4e0>,
                                   388)],
             '$402pred': [(<numba.core.ir.Assign object at 0x794539e9d750>,
                           388)],
             '$408binary_subscr.3': [(<numba.core.ir.Assign object at 0x794539e9dae0>,
                                      404)],
             '$40load_global.15': [(<numba.core.ir.Assign object at 0x79453a02e650>,
                                    0)],
             '$430return_value.1': [(<numba.core.ir.Assign object at 0x794539e9e590>,
                                     428)],
             '$46call_function.18': [(<numba.core.ir.Assign object at 0x79453a02ea70>,
                                      0)],
             '$48get_iter.19': [(<numba.core.ir.Assign object at 0x79453a02eb90>,
                                 0)],
             '$50for_iter.1': [(<numba.core.ir.Assign object at 0x79453a02e800>,
                                50)],
             '$50for_iter.2': [(<numba.core.ir.Assign object at 0x79453a02ec80>,
                                50)],
             '$50for_iter.3': [(<numba.core.ir.Assign object at 0x79453a02eda0>,
                                50)],
             '$58binary_subscr.4': [(<numba.core.ir.Assign object at 0x79453a02f460>,
                                     52)],
             '$66binary_subtract.8': [(<numba.core.ir.Assign object at 0x79453a02f9a0>,
                                       52)],
             '$68binary_subscr.9': [(<numba.core.ir.Assign object at 0x79453a02fb20>,
                                     52)],
             '$70compare_op.10': [(<numba.core.ir.Assign object at 0x79453a02fca0>,
                                   52)],
             '$72pred': [(<numba.core.ir.Assign object at 0x79453a02ff10>, 52)],
             '$80binary_subtract.4': [(<numba.core.ir.Assign object at 0x794539e80460>,
                                       74)],
             '$82binary_subscr.5': [(<numba.core.ir.Assign object at 0x794539e805e0>,
                                     74)],
             '$90binary_subtract.9': [(<numba.core.ir.Assign object at 0x794539e80b20>,
                                       74)],
             '$92binary_subscr.10': [(<numba.core.ir.Assign object at 0x794539e80ca0>,
                                      74)],
             '$94compare_op.11': [(<numba.core.ir.Assign object at 0x794539e80e20>,
                                   74)],
             '$96pred': [(<numba.core.ir.Assign object at 0x794539e81090>, 74)],
             '$const116.3.1': [(<numba.core.ir.Assign object at 0x794539e81ab0>,
                                112)],
             '$const138.6.1': [(<numba.core.ir.Assign object at 0x794539e827d0>,
                                128)],
             '$const152.3.1': [(<numba.core.ir.Assign object at 0x794539e83250>,
                                148)],
             '$const162.8.1': [(<numba.core.ir.Assign object at 0x794539e83910>,
                                148)],
             '$const190.3.1': [(<numba.core.ir.Assign object at 0x794539e8ca90>,
                                186)],
             '$const206.3.1': [(<numba.core.ir.Assign object at 0x794539e8d3f0>,
                                202)],
             '$const216.8.1': [(<numba.core.ir.Assign object at 0x794539e8dab0>,
                                202)],
             '$const260.3.1': [(<numba.core.ir.Assign object at 0x794539e8f730>,
                                256)],
             '$const270.8.1': [(<numba.core.ir.Assign object at 0x794539e8fdf0>,
                                256)],
             '$const314.3.1': [(<numba.core.ir.Assign object at 0x794539e95ab0>,
                                310)],
             '$const324.8.1': [(<numba.core.ir.Assign object at 0x794539e96170>,
                                310)],
             '$const368.3.1': [(<numba.core.ir.Assign object at 0x794539e97df0>,
                                364)],
             '$const378.8.1': [(<numba.core.ir.Assign object at 0x794539e9c4f0>,
                                364)],
             '$const418.1.2': [(<numba.core.ir.Assign object at 0x794539e9df30>,
                                418)],
             '$const64.7.1': [(<numba.core.ir.Assign object at 0x79453a02f7f0>,
                               52)],
             '$const78.3.1': [(<numba.core.ir.Assign object at 0x794539e802b0>,
                               74)],
             '$const88.8.1': [(<numba.core.ir.Assign object at 0x794539e80970>,
                               74)],
             '$phi50.0': [(<numba.core.ir.Assign object at 0x79453a02ce80>, 0)],
             '$phi52.1': [(<numba.core.ir.Assign object at 0x79453a02e2c0>,
                           50)],
             'basic_lb': [(<numba.core.ir.Assign object at 0x79453a02c3d0>, 0)],
             'basic_ub': [(<numba.core.ir.Assign object at 0x79453a02c8e0>, 0)],
             'bool146': [(<numba.core.ir.Assign object at 0x794539e82dd0>,
                          128)],
             'bool170': [(<numba.core.ir.Assign object at 0x794539e83f10>,
                          148)],
             'bool224': [(<numba.core.ir.Assign object at 0x794539e8e0b0>,
                          202)],
             'bool240': [(<numba.core.ir.Assign object at 0x794539e8ebf0>,
                          226)],
             'bool278': [(<numba.core.ir.Assign object at 0x794539e94430>,
                          256)],
             'bool294': [(<numba.core.ir.Assign object at 0x794539e94f70>,
                          280)],
             'bool332': [(<numba.core.ir.Assign object at 0x794539e96770>,
                          310)],
             'bool348': [(<numba.core.ir.Assign object at 0x794539e972b0>,
                          334)],
             'bool386': [(<numba.core.ir.Assign object at 0x794539e9caf0>,
                          364)],
             'bool402': [(<numba.core.ir.Assign object at 0x794539e9d630>,
                          388)],
             'bool72': [(<numba.core.ir.Assign object at 0x79453a02fdf0>, 52)],
             'bool96': [(<numba.core.ir.Assign object at 0x794539e80f70>, 74)],
             'close': [(<numba.core.ir.Assign object at 0x79453a02c0d0>, 0)],
             'final_lb': [(<numba.core.ir.Assign object at 0x79453a02dd80>, 0)],
             'final_ub': [(<numba.core.ir.Assign object at 0x79453a02d6c0>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x79453a02f070>, 52)],
             'length': [(<numba.core.ir.Assign object at 0x79453a02cfd0>, 0)],
             'n': [(<numba.core.ir.Assign object at 0x79453a02cb50>, 0)],
             'supertrend': [(<numba.core.ir.Assign object at 0x79453a02e440>,
                             0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x79453a0135b0>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4522)
           2	LOAD_GLOBAL(arg=0, lineno=4523)
           4	LOAD_ATTR(arg=1, lineno=4523)
           6	LOAD_FAST(arg=0, lineno=4523)
           8	LOAD_FAST(arg=1, lineno=4523)
          10	LOAD_CONST(arg=1, lineno=4523)
          12	CALL_FUNCTION_KW(arg=2, lineno=4523)
          14	STORE_FAST(arg=2, lineno=4523)
          16	LOAD_FAST(arg=2, lineno=4524)
          18	LOAD_METHOD(arg=2, lineno=4524)
          20	CALL_METHOD(arg=0, lineno=4524)
          22	POP_TOP(arg=None, lineno=4524)
          24	LOAD_FAST(arg=2, lineno=4525)
          26	RETURN_VALUE(arg=None, lineno=4525)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4522)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_attr.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_attr.1', '$shape6.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_attr.1', '$shape6.2', '$dtype8.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=CALL_FUNCTION_KW(arg=2, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_attr.1', '$shape6.2', '$dtype8.3', '$const10.4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=14, inst=STORE_FAST(arg=2, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$12call_function_kw.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=4524)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=4524)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$arr16.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=20, inst=CALL_METHOD(arg=0, lineno=4524)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$18load_method.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=22, inst=POP_TOP(arg=None, lineno=4524)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$20call_method.8']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=24, inst=LOAD_FAST(arg=2, lineno=4525)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=26, inst=RETURN_VALUE(arg=None, lineno=4525)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$arr24.9']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'res': '$shape6.2'}), (8, {'res': '$dtype8.3'}), (10, {'res': '$const10.4.1'}), (12, {'func': '$4load_attr.1', 'args': ['$shape6.2', '$dtype8.3'], 'names': '$const10.4.1', 'res': '$12call_function_kw.5'}), (14, {'value': '$12call_function_kw.5'}), (16, {'res': '$arr16.6'}), (18, {'item': '$arr16.6', 'res': '$18load_method.7'}), (20, {'func': '$18load_method.7', 'args': [], 'res': '$20call_method.8'}), (24, {'res': '$arr24.9'}), (26, {'retval': '$arr24.9', 'castval': '$26return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=empty) ['$2load_global.0', '$4load_attr.1']
    arr = call $4load_attr.1(shape, func=$4load_attr.1, args=[Var(shape, arrayobj.py:4522)], kws=[('dtype', Var(dtype, arrayobj.py:4522))], vararg=None, varkwarg=None, target=None) ['$4load_attr.1', 'arr', 'dtype', 'shape']
    $18load_method.7 = getattr(value=arr, attr=_zero_fill) ['$18load_method.7', 'arr']
    $20call_method.8 = call $18load_method.7(func=$18load_method.7, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_method.7', '$20call_method.8']
    $26return_value.10 = cast(value=arr)     ['$26return_value.10', 'arr']
    return $26return_value.10                ['$26return_value.10']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x794539ef1c90>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: shape = arg(0, name=shape)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: dtype = arg(1, name=dtype)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: arr = call $4load_attr.1(shape, func=$4load_attr.1, args=[Var(shape, arrayobj.py:4522)], kws=[('dtype', Var(dtype, arrayobj.py:4522))], vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $18load_method.7 = getattr(value=arr, attr=_zero_fill)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $20call_method.8 = call $18load_method.7(func=$18load_method.7, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $26return_value.10 = cast(value=arr)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $26return_value.10
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$18load_method.7': [(<numba.core.ir.Assign object at 0x794539ef34f0>,
                                   0)],
             '$20call_method.8': [(<numba.core.ir.Assign object at 0x794539ef3700>,
                                   0)],
             '$26return_value.10': [(<numba.core.ir.Assign object at 0x794539ef3910>,
                                     0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x794539ef2a10>,
                                  0)],
             '$4load_attr.1': [(<numba.core.ir.Assign object at 0x794539ef2b90>,
                                0)],
             'arr': [(<numba.core.ir.Assign object at 0x794539ef3250>, 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x794539ef2890>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x794539ef2770>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x794539ef1c90>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4454)
           2	LOAD_GLOBAL(arg=0, lineno=4455)
           4	LOAD_FAST(arg=0, lineno=4455)
           6	LOAD_FAST(arg=1, lineno=4455)
           8	LOAD_DEREF(arg=0, lineno=4455)
          10	CALL_FUNCTION(arg=3, lineno=4455)
          12	RETURN_VALUE(arg=None, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4454)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$shape4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=LOAD_DEREF(arg=0, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$shape4.1', '$dtype6.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=CALL_FUNCTION(arg=3, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$shape4.1', '$dtype6.2', '$8load_deref.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$10call_function.4']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'res': '$dtype6.2'}), (8, {'res': '$8load_deref.3'}), (10, {'func': '$2load_global.0', 'args': ['$shape4.1', '$dtype6.2', '$8load_deref.3'], 'res': '$10call_function.4'}), (12, {'retval': '$10call_function.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$2load_global.0']
    $8load_deref.3 = freevar(retty: array(float64, 1d, C)) ['$8load_deref.3']
    $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4454), Var(dtype, arrayobj.py:4454), Var($8load_deref.3, arrayobj.py:4455)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_deref.3', 'dtype', 'shape']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x794539f31300>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: shape = arg(0, name=shape)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: dtype = arg(1, name=dtype)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $8load_deref.3 = freevar(retty: array(float64, 1d, C))
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4454), Var(dtype, arrayobj.py:4454), Var($8load_deref.3, arrayobj.py:4455)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $12return_value.5 = cast(value=$10call_function.4)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $12return_value.5
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$10call_function.4': [(<numba.core.ir.Assign object at 0x794539f315a0>,
                                     0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x794539f31480>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x794539f31a20>,
                                  0)],
             '$8load_deref.3': [(<numba.core.ir.Assign object at 0x794539f31780>,
                                 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x794539f318a0>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x794539f30a90>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x794539f31300>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4330)
           2	LOAD_FAST(arg=0, lineno=4333)
           4	LOAD_METHOD(arg=0, lineno=4333)
           6	LOAD_FAST(arg=1, lineno=4333)
           8	LOAD_FAST(arg=2, lineno=4333)
          10	CALL_METHOD(arg=2, lineno=4333)
          12	RETURN_VALUE(arg=None, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4330)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_METHOD(arg=0, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$arrtype2.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_method.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_method.1', '$size6.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=CALL_METHOD(arg=2, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_method.1', '$size6.2', '$align8.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$10call_method.4']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$arrtype2.0'}), (4, {'item': '$arrtype2.0', 'res': '$4load_method.1'}), (6, {'res': '$size6.2'}), (8, {'res': '$align8.3'}), (10, {'func': '$4load_method.1', 'args': ['$size6.2', '$align8.3'], 'res': '$10call_method.4'}), (12, {'retval': '$10call_method.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    arrtype = arg(0, name=arrtype)           ['arrtype']
    size = arg(1, name=size)                 ['size']
    align = arg(2, name=align)               ['align']
    $4load_method.1 = getattr(value=arrtype, attr=_allocate) ['$4load_method.1', 'arrtype']
    $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:4330), Var(align, arrayobj.py:4330)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', 'align', 'size']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x794539ef2380>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: arrtype = arg(0, name=arrtype)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: size = arg(1, name=size)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: align = arg(2, name=align)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $4load_method.1 = getattr(value=arrtype, attr=_allocate)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:4330), Var(align, arrayobj.py:4330)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $12return_value.5 = cast(value=$10call_method.4)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $12return_value.5
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$10call_method.4': [(<numba.core.ir.Assign object at 0x794539e20df0>,
                                   0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x794539e20ee0>,
                                    0)],
             '$4load_method.1': [(<numba.core.ir.Assign object at 0x794539e209a0>,
                                  0)],
             'align': [(<numba.core.ir.Assign object at 0x794539e20700>, 0)],
             'arrtype': [(<numba.core.ir.Assign object at 0x794539e200a0>, 0)],
             'size': [(<numba.core.ir.Assign object at 0x794539e205e0>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x794539ef2380>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4325)
           2	LOAD_GLOBAL(arg=0, lineno=4326)
           4	LOAD_FAST(arg=1, lineno=4326)
           6	LOAD_FAST(arg=2, lineno=4326)
           8	CALL_FUNCTION(arg=2, lineno=4326)
          10	RETURN_VALUE(arg=None, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4325)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=LOAD_FAST(arg=2, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$allocsize4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$allocsize4.1', '$align6.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=RETURN_VALUE(arg=None, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$8call_function.3']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$allocsize4.1'}), (6, {'res': '$align6.2'}), (8, {'func': '$2load_global.0', 'args': ['$allocsize4.1', '$align6.2'], 'res': '$8call_function.3'}), (10, {'retval': '$8call_function.3', 'castval': '$10return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    cls = arg(0, name=cls)                   ['cls']
    allocsize = arg(1, name=allocsize)       ['allocsize']
    align = arg(2, name=align)               ['align']
    $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:4325), Var(align, arrayobj.py:4325)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'align', 'allocsize']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x794539e21bd0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: cls = arg(0, name=cls)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: allocsize = arg(1, name=allocsize)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: align = arg(2, name=align)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:4325), Var(align, arrayobj.py:4325)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $10return_value.4 = cast(value=$8call_function.3)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $10return_value.4
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$10return_value.4': [(<numba.core.ir.Assign object at 0x794539e22fb0>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x794539e22a70>,
                                  0)],
             '$8call_function.3': [(<numba.core.ir.Assign object at 0x794539e22e90>,
                                    0)],
             'align': [(<numba.core.ir.Assign object at 0x794539e228f0>, 0)],
             'allocsize': [(<numba.core.ir.Assign object at 0x794539e227d0>,
                            0)],
             'cls': [(<numba.core.ir.Assign object at 0x794539e226b0>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x794539e21bd0>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4513)
           2	LOAD_GLOBAL(arg=0, lineno=4514)
           4	LOAD_FAST(arg=0, lineno=4514)
           6	CALL_FUNCTION(arg=1, lineno=4514)
           8	POP_TOP(arg=None, lineno=4514)
          10	LOAD_CONST(arg=0, lineno=4514)
          12	RETURN_VALUE(arg=None, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4513)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$self4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=POP_TOP(arg=None, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$6call_function.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=LOAD_CONST(arg=0, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$const10.3.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$self4.1'}), (6, {'func': '$2load_global.0', 'args': ['$self4.1'], 'res': '$6call_function.2'}), (10, {'res': '$const10.3.0'}), (12, {'retval': '$const10.3.0', 'castval': '$12return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    self = arg(0, name=self)                 ['self']
    $2load_global.0 = global(_zero_fill_array_method: <intrinsic _zero_fill_array_method>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(self, func=$2load_global.0, args=[Var(self, arrayobj.py:4513)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'self']
    $const10.3.0 = const(NoneType, None)     ['$const10.3.0']
    $12return_value.4 = cast(value=$const10.3.0) ['$12return_value.4', '$const10.3.0']
    return $12return_value.4                 ['$12return_value.4']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x794539cd2710>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: self = arg(0, name=self)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(_zero_fill_array_method: <intrinsic _zero_fill_array_method>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $6call_function.2 = call $2load_global.0(self, func=$2load_global.0, args=[Var(self, arrayobj.py:4513)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const10.3.0 = const(NoneType, None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $12return_value.4 = cast(value=$const10.3.0)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $12return_value.4
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$12return_value.4': [(<numba.core.ir.Assign object at 0x794539cd2b90>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x794539cd1e40>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x794539cd1f90>,
                                    0)],
             '$const10.3.0': [(<numba.core.ir.Assign object at 0x794539cd2a10>,
                               0)],
             'self': [(<numba.core.ir.Assign object at 0x794539cd1c90>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x794539cd2710>
yfinance - [DEBUG]{MainThread} - wrapper() - Entering history()
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NQ=F', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -  Entering history()
yfinance - [DEBUG]{MainThread} - history() - NQ=F: Yahoo GET parameters: {'range': '60d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -   Entering get()
yfinance - [DEBUG]{MainThread} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{MainThread} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/NQ=F
yfinance - [DEBUG]{MainThread} - _make_request() - params={'range': '60d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{MainThread} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - _get_crumb_basic() - reusing crumb
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _make_request() - response code=200
yfinance - [DEBUG]{MainThread} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{MainThread} - wrapper() -   Exiting get()
yfinance - [DEBUG]{MainThread} - history() - NQ=F: yfinance received OHLC data: 2025-04-22 04:00:00 -> 2025-06-30 06:25:49
yfinance - [DEBUG]{MainThread} - history() - NQ=F: OHLC after cleaning: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:25:49-04:00
yfinance - [DEBUG]{MainThread} - history() - NQ=F: OHLC after combining events: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:25:49-04:00
yfinance - [DEBUG]{MainThread} - history() - NQ=F: yfinance returning OHLC: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:15:00-04:00
yfinance - [DEBUG]{MainThread} - wrapper() -  Exiting history()
yfinance - [DEBUG]{MainThread} - wrapper() - Exiting history()
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
yfinance - [DEBUG]{MainThread} - wrapper() - Entering history()
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PYPL', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -  Entering history()
yfinance - [DEBUG]{MainThread} - history() - PYPL: Yahoo GET parameters: {'range': '60d', 'interval': '15m', 'includePrePost': True, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -   Entering get()
yfinance - [DEBUG]{MainThread} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{MainThread} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/PYPL
yfinance - [DEBUG]{MainThread} - _make_request() - params={'range': '60d', 'interval': '15m', 'includePrePost': True, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{MainThread} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - _get_crumb_basic() - reusing crumb
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _make_request() - response code=200
yfinance - [DEBUG]{MainThread} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{MainThread} - wrapper() -   Exiting get()
yfinance - [DEBUG]{MainThread} - history() - PYPL: yfinance received OHLC data: 2025-04-02 08:00:00 -> 2025-06-27 23:59:55
yfinance - [DEBUG]{MainThread} - history() - PYPL: OHLC after cleaning: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:59:55-04:00
yfinance - [DEBUG]{MainThread} - history() - PYPL: OHLC after combining events: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:59:55-04:00
yfinance - [DEBUG]{MainThread} - history() - PYPL: yfinance returning OHLC: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:45:00-04:00
yfinance - [DEBUG]{MainThread} - wrapper() -  Exiting history()
yfinance - [DEBUG]{MainThread} - wrapper() - Exiting history()
root - [INFO]{MainThread} - get_buy_sell_points_Roll() - Parameters of acquisition "buy_sell_points" for this stock is set to POSITIVE (units) 	92%: 0.8108 	98%: 1.5836 NEGATIVE (units) 	93%: 0.7986 	98%: 1.2999
yfinance - [DEBUG]{MainThread} - wrapper() - Entering history()
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NQ=F', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -  Entering history()
yfinance - [DEBUG]{MainThread} - history() - NQ=F: Yahoo GET parameters: {'range': '60d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -   Entering get()
yfinance - [DEBUG]{MainThread} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{MainThread} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/NQ=F
yfinance - [DEBUG]{MainThread} - _make_request() - params={'range': '60d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{MainThread} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - _get_crumb_basic() - reusing crumb
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _make_request() - response code=200
yfinance - [DEBUG]{MainThread} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{MainThread} - wrapper() -   Exiting get()
yfinance - [DEBUG]{MainThread} - history() - NQ=F: yfinance received OHLC data: 2025-04-22 04:00:00 -> 2025-06-30 06:26:29
yfinance - [DEBUG]{MainThread} - history() - NQ=F: OHLC after cleaning: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:26:29-04:00
yfinance - [DEBUG]{MainThread} - history() - NQ=F: OHLC after combining events: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:26:29-04:00
yfinance - [DEBUG]{MainThread} - history() - NQ=F: yfinance returning OHLC: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:15:00-04:00
yfinance - [DEBUG]{MainThread} - wrapper() -  Exiting history()
yfinance - [DEBUG]{MainThread} - wrapper() - Exiting history()
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
h5py._conv - [DEBUG]{MainThread} - <module>() - Creating converter from 7 to 5
h5py._conv - [DEBUG]{MainThread} - <module>() - Creating converter from 5 to 7
h5py._conv - [DEBUG]{MainThread} - <module>() - Creating converter from 7 to 5
h5py._conv - [DEBUG]{MainThread} - <module>() - Creating converter from 5 to 7
matplotlib - [DEBUG]{MainThread} - wrapper() - matplotlib data path: /opt/conda/lib/python3.10/site-packages/matplotlib/mpl-data
matplotlib - [DEBUG]{MainThread} - wrapper() - CONFIGDIR=/root/.config/matplotlib
matplotlib - [DEBUG]{MainThread} - <module>() - interactive is False
matplotlib - [DEBUG]{MainThread} - <module>() - platform is linux
matplotlib - [DEBUG]{MainThread} - wrapper() - CACHEDIR=/root/.cache/matplotlib
matplotlib.font_manager - [DEBUG]{MainThread} - _load_fontmanager() - Using fontManager instance from /root/.cache/matplotlib/fontlist-v390.json
yfinance - [DEBUG]{MainThread} - wrapper() - Entering history()
peewee - [DEBUG]{MainThread} - execute_sql() - ('CREATE TABLE IF NOT EXISTS "_tz_kv" ("key" VARCHAR(255) NOT NULL PRIMARY KEY, "value" VARCHAR(255)) WITHOUT ROWID', [])
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['UBER', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -  Entering history()
yfinance - [DEBUG]{MainThread} - history() - UBER: Yahoo GET parameters: {'range': '60d', 'interval': '15m', 'includePrePost': True, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -   Entering get()
yfinance - [DEBUG]{MainThread} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{MainThread} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/UBER
yfinance - [DEBUG]{MainThread} - _make_request() - params={'range': '60d', 'interval': '15m', 'includePrePost': True, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{MainThread} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -        Entering _load_cookie_curlCffi()
peewee - [DEBUG]{MainThread} - execute_sql() - ('CREATE TABLE IF NOT EXISTS "_cookieschema" ("strategy" VARCHAR(255) NOT NULL PRIMARY KEY, "fetch_date" DATETIME NOT NULL, "cookie_bytes" BLOB NOT NULL) WITHOUT ROWID', [])
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -        Exiting _load_cookie_curlCffi()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing persistent cookie
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -        Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{MainThread} - wrapper() -        Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_crumb_basic() - crumb = 'dK3IG/1ev6r'
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _make_request() - response code=200
yfinance - [DEBUG]{MainThread} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{MainThread} - wrapper() -   Exiting get()
yfinance - [DEBUG]{MainThread} - history() - UBER: yfinance received OHLC data: 2025-04-02 08:00:00 -> 2025-06-27 23:59:53
yfinance - [DEBUG]{MainThread} - history() - UBER: OHLC after cleaning: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:59:53-04:00
yfinance - [DEBUG]{MainThread} - history() - UBER: OHLC after combining events: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:59:53-04:00
yfinance - [DEBUG]{MainThread} - history() - UBER: yfinance returning OHLC: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:45:00-04:00
yfinance - [DEBUG]{MainThread} - wrapper() -  Exiting history()
yfinance - [DEBUG]{MainThread} - wrapper() - Exiting history()
root - [INFO]{MainThread} - get_buy_sell_points_Roll() - Parameters of acquisition "buy_sell_points" for this stock is set to POSITIVE (units) 	92%: 1.123 	98%: 1.8743 NEGATIVE (units) 	93%: 1.2466 	98%: 1.9188
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=99)
           2	LOAD_GLOBAL(arg=0, lineno=106)
           4	LOAD_FAST(arg=0, lineno=106)
           6	CALL_FUNCTION(arg=1, lineno=106)
           8	STORE_FAST(arg=4, lineno=106)
          10	LOAD_GLOBAL(arg=1, lineno=107)
          12	LOAD_METHOD(arg=2, lineno=107)
          14	LOAD_FAST(arg=4, lineno=107)
          16	CALL_METHOD(arg=1, lineno=107)
          18	STORE_FAST(arg=5, lineno=107)
          20	LOAD_GLOBAL(arg=1, lineno=108)
          22	LOAD_METHOD(arg=2, lineno=108)
          24	LOAD_FAST(arg=4, lineno=108)
          26	CALL_METHOD(arg=1, lineno=108)
          28	STORE_FAST(arg=6, lineno=108)
          30	LOAD_GLOBAL(arg=1, lineno=109)
          32	LOAD_METHOD(arg=2, lineno=109)
          34	LOAD_FAST(arg=4, lineno=109)
          36	CALL_METHOD(arg=1, lineno=109)
          38	STORE_FAST(arg=7, lineno=109)
          40	LOAD_GLOBAL(arg=3, lineno=111)
          42	LOAD_FAST(arg=3, lineno=111)
          44	LOAD_FAST(arg=4, lineno=111)
          46	CALL_FUNCTION(arg=2, lineno=111)
          48	GET_ITER(arg=None, lineno=111)
>         50	FOR_ITER(arg=188, lineno=111)
          52	STORE_FAST(arg=8, lineno=111)
          54	LOAD_FAST(arg=1, lineno=113)
          56	LOAD_FAST(arg=8, lineno=113)
          58	BINARY_SUBSCR(arg=None, lineno=113)
          60	LOAD_FAST(arg=5, lineno=113)
          62	LOAD_FAST(arg=8, lineno=113)
          64	LOAD_CONST(arg=1, lineno=113)
          66	BINARY_SUBTRACT(arg=None, lineno=113)
          68	BINARY_SUBSCR(arg=None, lineno=113)
          70	COMPARE_OP(arg=0, lineno=113)
          72	POP_JUMP_IF_TRUE(arg=50, lineno=113)
          74	LOAD_FAST(arg=0, lineno=113)
          76	LOAD_FAST(arg=8, lineno=113)
          78	LOAD_CONST(arg=1, lineno=113)
          80	BINARY_SUBTRACT(arg=None, lineno=113)
          82	BINARY_SUBSCR(arg=None, lineno=113)
          84	LOAD_FAST(arg=5, lineno=113)
          86	LOAD_FAST(arg=8, lineno=113)
          88	LOAD_CONST(arg=1, lineno=113)
          90	BINARY_SUBTRACT(arg=None, lineno=113)
          92	BINARY_SUBSCR(arg=None, lineno=113)
          94	COMPARE_OP(arg=4, lineno=113)
          96	POP_JUMP_IF_FALSE(arg=57, lineno=113)
>         98	LOAD_FAST(arg=1, lineno=114)
         100	LOAD_FAST(arg=8, lineno=114)
         102	BINARY_SUBSCR(arg=None, lineno=114)
         104	LOAD_FAST(arg=5, lineno=114)
         106	LOAD_FAST(arg=8, lineno=114)
         108	STORE_SUBSCR(arg=None, lineno=114)
         110	JUMP_FORWARD(arg=8, lineno=114)
>        112	LOAD_FAST(arg=5, lineno=116)
         114	LOAD_FAST(arg=8, lineno=116)
         116	LOAD_CONST(arg=1, lineno=116)
         118	BINARY_SUBTRACT(arg=None, lineno=116)
         120	BINARY_SUBSCR(arg=None, lineno=116)
         122	LOAD_FAST(arg=5, lineno=116)
         124	LOAD_FAST(arg=8, lineno=116)
         126	STORE_SUBSCR(arg=None, lineno=116)
>        128	LOAD_FAST(arg=2, lineno=118)
         130	LOAD_FAST(arg=8, lineno=118)
         132	BINARY_SUBSCR(arg=None, lineno=118)
         134	LOAD_FAST(arg=6, lineno=118)
         136	LOAD_FAST(arg=8, lineno=118)
         138	LOAD_CONST(arg=1, lineno=118)
         140	BINARY_SUBTRACT(arg=None, lineno=118)
         142	BINARY_SUBSCR(arg=None, lineno=118)
         144	COMPARE_OP(arg=4, lineno=118)
         146	POP_JUMP_IF_TRUE(arg=87, lineno=118)
         148	LOAD_FAST(arg=0, lineno=118)
         150	LOAD_FAST(arg=8, lineno=118)
         152	LOAD_CONST(arg=1, lineno=118)
         154	BINARY_SUBTRACT(arg=None, lineno=118)
         156	BINARY_SUBSCR(arg=None, lineno=118)
         158	LOAD_FAST(arg=6, lineno=118)
         160	LOAD_FAST(arg=8, lineno=118)
         162	LOAD_CONST(arg=1, lineno=118)
         164	BINARY_SUBTRACT(arg=None, lineno=118)
         166	BINARY_SUBSCR(arg=None, lineno=118)
         168	COMPARE_OP(arg=0, lineno=118)
         170	POP_JUMP_IF_FALSE(arg=94, lineno=118)
>        172	LOAD_FAST(arg=2, lineno=119)
         174	LOAD_FAST(arg=8, lineno=119)
         176	BINARY_SUBSCR(arg=None, lineno=119)
         178	LOAD_FAST(arg=6, lineno=119)
         180	LOAD_FAST(arg=8, lineno=119)
         182	STORE_SUBSCR(arg=None, lineno=119)
         184	JUMP_FORWARD(arg=8, lineno=119)
>        186	LOAD_FAST(arg=6, lineno=121)
         188	LOAD_FAST(arg=8, lineno=121)
         190	LOAD_CONST(arg=1, lineno=121)
         192	BINARY_SUBTRACT(arg=None, lineno=121)
         194	BINARY_SUBSCR(arg=None, lineno=121)
         196	LOAD_FAST(arg=6, lineno=121)
         198	LOAD_FAST(arg=8, lineno=121)
         200	STORE_SUBSCR(arg=None, lineno=121)
>        202	LOAD_FAST(arg=7, lineno=123)
         204	LOAD_FAST(arg=8, lineno=123)
         206	LOAD_CONST(arg=1, lineno=123)
         208	BINARY_SUBTRACT(arg=None, lineno=123)
         210	BINARY_SUBSCR(arg=None, lineno=123)
         212	LOAD_FAST(arg=5, lineno=123)
         214	LOAD_FAST(arg=8, lineno=123)
         216	LOAD_CONST(arg=1, lineno=123)
         218	BINARY_SUBTRACT(arg=None, lineno=123)
         220	BINARY_SUBSCR(arg=None, lineno=123)
         222	COMPARE_OP(arg=2, lineno=123)
         224	POP_JUMP_IF_FALSE(arg=129, lineno=123)
         226	LOAD_FAST(arg=0, lineno=123)
         228	LOAD_FAST(arg=8, lineno=123)
         230	BINARY_SUBSCR(arg=None, lineno=123)
         232	LOAD_FAST(arg=5, lineno=123)
         234	LOAD_FAST(arg=8, lineno=123)
         236	BINARY_SUBSCR(arg=None, lineno=123)
         238	COMPARE_OP(arg=1, lineno=123)
         240	POP_JUMP_IF_FALSE(arg=129, lineno=123)
         242	LOAD_FAST(arg=5, lineno=124)
         244	LOAD_FAST(arg=8, lineno=124)
         246	BINARY_SUBSCR(arg=None, lineno=124)
         248	LOAD_FAST(arg=7, lineno=124)
         250	LOAD_FAST(arg=8, lineno=124)
         252	STORE_SUBSCR(arg=None, lineno=124)
         254	JUMP_ABSOLUTE(arg=26, lineno=124)
>        256	LOAD_FAST(arg=7, lineno=125)
         258	LOAD_FAST(arg=8, lineno=125)
         260	LOAD_CONST(arg=1, lineno=125)
         262	BINARY_SUBTRACT(arg=None, lineno=125)
         264	BINARY_SUBSCR(arg=None, lineno=125)
         266	LOAD_FAST(arg=5, lineno=125)
         268	LOAD_FAST(arg=8, lineno=125)
         270	LOAD_CONST(arg=1, lineno=125)
         272	BINARY_SUBTRACT(arg=None, lineno=125)
         274	BINARY_SUBSCR(arg=None, lineno=125)
         276	COMPARE_OP(arg=2, lineno=125)
         278	POP_JUMP_IF_FALSE(arg=156, lineno=125)
         280	LOAD_FAST(arg=0, lineno=125)
         282	LOAD_FAST(arg=8, lineno=125)
         284	BINARY_SUBSCR(arg=None, lineno=125)
         286	LOAD_FAST(arg=5, lineno=125)
         288	LOAD_FAST(arg=8, lineno=125)
         290	BINARY_SUBSCR(arg=None, lineno=125)
         292	COMPARE_OP(arg=4, lineno=125)
         294	POP_JUMP_IF_FALSE(arg=156, lineno=125)
         296	LOAD_FAST(arg=6, lineno=126)
         298	LOAD_FAST(arg=8, lineno=126)
         300	BINARY_SUBSCR(arg=None, lineno=126)
         302	LOAD_FAST(arg=7, lineno=126)
         304	LOAD_FAST(arg=8, lineno=126)
         306	STORE_SUBSCR(arg=None, lineno=126)
         308	JUMP_ABSOLUTE(arg=26, lineno=126)
>        310	LOAD_FAST(arg=7, lineno=127)
         312	LOAD_FAST(arg=8, lineno=127)
         314	LOAD_CONST(arg=1, lineno=127)
         316	BINARY_SUBTRACT(arg=None, lineno=127)
         318	BINARY_SUBSCR(arg=None, lineno=127)
         320	LOAD_FAST(arg=6, lineno=127)
         322	LOAD_FAST(arg=8, lineno=127)
         324	LOAD_CONST(arg=1, lineno=127)
         326	BINARY_SUBTRACT(arg=None, lineno=127)
         328	BINARY_SUBSCR(arg=None, lineno=127)
         330	COMPARE_OP(arg=2, lineno=127)
         332	POP_JUMP_IF_FALSE(arg=183, lineno=127)
         334	LOAD_FAST(arg=0, lineno=127)
         336	LOAD_FAST(arg=8, lineno=127)
         338	BINARY_SUBSCR(arg=None, lineno=127)
         340	LOAD_FAST(arg=6, lineno=127)
         342	LOAD_FAST(arg=8, lineno=127)
         344	BINARY_SUBSCR(arg=None, lineno=127)
         346	COMPARE_OP(arg=5, lineno=127)
         348	POP_JUMP_IF_FALSE(arg=183, lineno=127)
         350	LOAD_FAST(arg=6, lineno=128)
         352	LOAD_FAST(arg=8, lineno=128)
         354	BINARY_SUBSCR(arg=None, lineno=128)
         356	LOAD_FAST(arg=7, lineno=128)
         358	LOAD_FAST(arg=8, lineno=128)
         360	STORE_SUBSCR(arg=None, lineno=128)
         362	JUMP_ABSOLUTE(arg=26, lineno=128)
>        364	LOAD_FAST(arg=7, lineno=129)
         366	LOAD_FAST(arg=8, lineno=129)
         368	LOAD_CONST(arg=1, lineno=129)
         370	BINARY_SUBTRACT(arg=None, lineno=129)
         372	BINARY_SUBSCR(arg=None, lineno=129)
         374	LOAD_FAST(arg=6, lineno=129)
         376	LOAD_FAST(arg=8, lineno=129)
         378	LOAD_CONST(arg=1, lineno=129)
         380	BINARY_SUBTRACT(arg=None, lineno=129)
         382	BINARY_SUBSCR(arg=None, lineno=129)
         384	COMPARE_OP(arg=2, lineno=129)
         386	POP_JUMP_IF_FALSE(arg=210, lineno=129)
         388	LOAD_FAST(arg=0, lineno=129)
         390	LOAD_FAST(arg=8, lineno=129)
         392	BINARY_SUBSCR(arg=None, lineno=129)
         394	LOAD_FAST(arg=6, lineno=129)
         396	LOAD_FAST(arg=8, lineno=129)
         398	BINARY_SUBSCR(arg=None, lineno=129)
         400	COMPARE_OP(arg=0, lineno=129)
         402	POP_JUMP_IF_FALSE(arg=210, lineno=129)
         404	LOAD_FAST(arg=5, lineno=130)
         406	LOAD_FAST(arg=8, lineno=130)
         408	BINARY_SUBSCR(arg=None, lineno=130)
         410	LOAD_FAST(arg=7, lineno=130)
         412	LOAD_FAST(arg=8, lineno=130)
         414	STORE_SUBSCR(arg=None, lineno=130)
         416	JUMP_ABSOLUTE(arg=26, lineno=130)
>        418	LOAD_CONST(arg=2, lineno=132)
         420	LOAD_FAST(arg=7, lineno=132)
         422	LOAD_FAST(arg=8, lineno=132)
         424	STORE_SUBSCR(arg=None, lineno=132)
         426	JUMP_ABSOLUTE(arg=26, lineno=132)
>        428	LOAD_FAST(arg=7, lineno=134)
         430	RETURN_VALUE(arg=None, lineno=134)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=99)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=106)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=106)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=106)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$close4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=STORE_FAST(arg=4, lineno=106)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$6call_function.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=LOAD_METHOD(arg=2, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$10load_global.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=14, inst=LOAD_FAST(arg=4, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$12load_method.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=16, inst=CALL_METHOD(arg=1, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$12load_method.4', '$length14.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=18, inst=STORE_FAST(arg=5, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$16call_method.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=20, inst=LOAD_GLOBAL(arg=1, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=22, inst=LOAD_METHOD(arg=2, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$20load_global.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=24, inst=LOAD_FAST(arg=4, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$22load_method.8']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=26, inst=CALL_METHOD(arg=1, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$22load_method.8', '$length24.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=28, inst=STORE_FAST(arg=6, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$26call_method.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=30, inst=LOAD_GLOBAL(arg=1, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=32, inst=LOAD_METHOD(arg=2, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$30load_global.11']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=34, inst=LOAD_FAST(arg=4, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$32load_method.12']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=36, inst=CALL_METHOD(arg=1, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$32load_method.12', '$length34.13']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=38, inst=STORE_FAST(arg=7, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$36call_method.14']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=40, inst=LOAD_GLOBAL(arg=3, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=42, inst=LOAD_FAST(arg=3, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$40load_global.15']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=44, inst=LOAD_FAST(arg=4, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$40load_global.15', '$n42.16']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=46, inst=CALL_FUNCTION(arg=2, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$40load_global.15', '$n42.16', '$length44.17']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=48, inst=GET_ITER(arg=None, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$46call_function.18']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$48get_iter.19',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi50.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=50 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=50, inst=FOR_ITER(arg=188, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi50.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=428, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=('$phi50.0', '$50for_iter.2'), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=428 nstack_initial=0), State(pc_initial=52 nstack_initial=2)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=428 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=428, inst=LOAD_FAST(arg=7, lineno=134)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=430, inst=RETURN_VALUE(arg=None, lineno=134)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$supertrend428.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=52 nstack_initial=2)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi52.0', '$phi52.1']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=52 nstack_initial=2)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=52, inst=STORE_FAST(arg=8, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$phi52.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=54, inst=LOAD_FAST(arg=1, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=56, inst=LOAD_FAST(arg=8, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$basic_ub54.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=58, inst=BINARY_SUBSCR(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$basic_ub54.2', '$i56.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=60, inst=LOAD_FAST(arg=5, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=62, inst=LOAD_FAST(arg=8, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$final_ub60.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$final_ub60.5', '$i62.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=66, inst=BINARY_SUBTRACT(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$final_ub60.5', '$i62.6', '$const64.7.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=68, inst=BINARY_SUBSCR(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$final_ub60.5', '$66binary_subtract.8']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=70, inst=COMPARE_OP(arg=0, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$68binary_subscr.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=72, inst=POP_JUMP_IF_TRUE(arg=50, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$70compare_op.10']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=74, stack=('$phi52.0',), blockstack=(), npush=0), Edge(pc=98, stack=('$phi52.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=74 nstack_initial=1), State(pc_initial=98 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi74.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=74 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=74, inst=LOAD_FAST(arg=0, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=76, inst=LOAD_FAST(arg=8, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$close74.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$close74.1', '$i76.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=80, inst=BINARY_SUBTRACT(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$close74.1', '$i76.2', '$const78.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$close74.1', '$80binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=84, inst=LOAD_FAST(arg=5, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=86, inst=LOAD_FAST(arg=8, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$final_ub84.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=88, inst=LOAD_CONST(arg=1, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$final_ub84.6', '$i86.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=90, inst=BINARY_SUBTRACT(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$final_ub84.6', '$i86.7', '$const88.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=92, inst=BINARY_SUBSCR(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$final_ub84.6', '$90binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=94, inst=COMPARE_OP(arg=4, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$92binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=96, inst=POP_JUMP_IF_FALSE(arg=57, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$94compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=98, stack=('$phi74.0',), blockstack=(), npush=0), Edge(pc=112, stack=('$phi74.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=98 nstack_initial=1), State(pc_initial=98 nstack_initial=1), State(pc_initial=112 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi98.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=98 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=98, inst=LOAD_FAST(arg=1, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=100, inst=LOAD_FAST(arg=8, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$basic_ub98.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=102, inst=BINARY_SUBSCR(arg=None, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$basic_ub98.1', '$i100.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=104, inst=LOAD_FAST(arg=5, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$102binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=106, inst=LOAD_FAST(arg=8, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$102binary_subscr.3', '$final_ub104.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=108, inst=STORE_SUBSCR(arg=None, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$102binary_subscr.3', '$final_ub104.4', '$i106.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=110, inst=JUMP_FORWARD(arg=8, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=128, stack=('$phi98.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=98 nstack_initial=1), State(pc_initial=112 nstack_initial=1), State(pc_initial=128 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=112 nstack_initial=1), State(pc_initial=128 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi112.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=112 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=112, inst=LOAD_FAST(arg=5, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=114, inst=LOAD_FAST(arg=8, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$final_ub112.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=116, inst=LOAD_CONST(arg=1, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$final_ub112.1', '$i114.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=118, inst=BINARY_SUBTRACT(arg=None, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$final_ub112.1', '$i114.2', '$const116.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=120, inst=BINARY_SUBSCR(arg=None, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$final_ub112.1', '$118binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=122, inst=LOAD_FAST(arg=5, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$120binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=124, inst=LOAD_FAST(arg=8, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$120binary_subscr.5', '$final_ub122.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=126, inst=STORE_SUBSCR(arg=None, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$120binary_subscr.5', '$final_ub122.6', '$i124.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=128, stack=('$phi112.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=128 nstack_initial=1), State(pc_initial=128 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi128.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=128 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=128, inst=LOAD_FAST(arg=2, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=130, inst=LOAD_FAST(arg=8, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$basic_lb128.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=132, inst=BINARY_SUBSCR(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$basic_lb128.1', '$i130.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=134, inst=LOAD_FAST(arg=6, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=136, inst=LOAD_FAST(arg=8, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$final_lb134.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=138, inst=LOAD_CONST(arg=1, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$final_lb134.4', '$i136.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=140, inst=BINARY_SUBTRACT(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$final_lb134.4', '$i136.5', '$const138.6.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=142, inst=BINARY_SUBSCR(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$final_lb134.4', '$140binary_subtract.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=144, inst=COMPARE_OP(arg=4, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$142binary_subscr.8']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=146, inst=POP_JUMP_IF_TRUE(arg=87, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$144compare_op.9']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=148, stack=('$phi128.0',), blockstack=(), npush=0), Edge(pc=172, stack=('$phi128.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=128 nstack_initial=1), State(pc_initial=148 nstack_initial=1), State(pc_initial=172 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=148 nstack_initial=1), State(pc_initial=172 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi148.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=148 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=150, inst=LOAD_FAST(arg=8, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$close148.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=152, inst=LOAD_CONST(arg=1, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$close148.1', '$i150.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=154, inst=BINARY_SUBTRACT(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$close148.1', '$i150.2', '$const152.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=156, inst=BINARY_SUBSCR(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$close148.1', '$154binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=158, inst=LOAD_FAST(arg=6, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=160, inst=LOAD_FAST(arg=8, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$final_lb158.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=162, inst=LOAD_CONST(arg=1, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$final_lb158.6', '$i160.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=164, inst=BINARY_SUBTRACT(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$final_lb158.6', '$i160.7', '$const162.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=166, inst=BINARY_SUBSCR(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$final_lb158.6', '$164binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=168, inst=COMPARE_OP(arg=0, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$166binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=170, inst=POP_JUMP_IF_FALSE(arg=94, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$168compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=172, stack=('$phi148.0',), blockstack=(), npush=0), Edge(pc=186, stack=('$phi148.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=172 nstack_initial=1), State(pc_initial=172 nstack_initial=1), State(pc_initial=186 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi172.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=172 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=172, inst=LOAD_FAST(arg=2, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=174, inst=LOAD_FAST(arg=8, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$basic_lb172.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=176, inst=BINARY_SUBSCR(arg=None, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$basic_lb172.1', '$i174.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=178, inst=LOAD_FAST(arg=6, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$176binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=180, inst=LOAD_FAST(arg=8, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$176binary_subscr.3', '$final_lb178.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=182, inst=STORE_SUBSCR(arg=None, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$176binary_subscr.3', '$final_lb178.4', '$i180.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=184, inst=JUMP_FORWARD(arg=8, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=202, stack=('$phi172.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=172 nstack_initial=1), State(pc_initial=186 nstack_initial=1), State(pc_initial=202 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=186 nstack_initial=1), State(pc_initial=202 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi186.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=186 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=186, inst=LOAD_FAST(arg=6, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=188, inst=LOAD_FAST(arg=8, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$final_lb186.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=190, inst=LOAD_CONST(arg=1, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$final_lb186.1', '$i188.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=192, inst=BINARY_SUBTRACT(arg=None, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$final_lb186.1', '$i188.2', '$const190.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=194, inst=BINARY_SUBSCR(arg=None, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$final_lb186.1', '$192binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=196, inst=LOAD_FAST(arg=6, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$194binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=198, inst=LOAD_FAST(arg=8, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$194binary_subscr.5', '$final_lb196.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=200, inst=STORE_SUBSCR(arg=None, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$194binary_subscr.5', '$final_lb196.6', '$i198.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=202, stack=('$phi186.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=202 nstack_initial=1), State(pc_initial=202 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi202.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=202 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=202, inst=LOAD_FAST(arg=7, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=204, inst=LOAD_FAST(arg=8, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$supertrend202.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=206, inst=LOAD_CONST(arg=1, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$supertrend202.1', '$i204.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=208, inst=BINARY_SUBTRACT(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$supertrend202.1', '$i204.2', '$const206.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=210, inst=BINARY_SUBSCR(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$supertrend202.1', '$208binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=212, inst=LOAD_FAST(arg=5, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=214, inst=LOAD_FAST(arg=8, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$final_ub212.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=216, inst=LOAD_CONST(arg=1, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$final_ub212.6', '$i214.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=218, inst=BINARY_SUBTRACT(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$final_ub212.6', '$i214.7', '$const216.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=220, inst=BINARY_SUBSCR(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$final_ub212.6', '$218binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=222, inst=COMPARE_OP(arg=2, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$220binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=224, inst=POP_JUMP_IF_FALSE(arg=129, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$222compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=226, stack=('$phi202.0',), blockstack=(), npush=0), Edge(pc=256, stack=('$phi202.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=202 nstack_initial=1), State(pc_initial=226 nstack_initial=1), State(pc_initial=256 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=226 nstack_initial=1), State(pc_initial=256 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi226.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=226 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=226, inst=LOAD_FAST(arg=0, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=228, inst=LOAD_FAST(arg=8, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$close226.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=230, inst=BINARY_SUBSCR(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$close226.1', '$i228.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=232, inst=LOAD_FAST(arg=5, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$230binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=234, inst=LOAD_FAST(arg=8, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$230binary_subscr.3', '$final_ub232.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=236, inst=BINARY_SUBSCR(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$230binary_subscr.3', '$final_ub232.4', '$i234.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=238, inst=COMPARE_OP(arg=1, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$230binary_subscr.3', '$236binary_subscr.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=240, inst=POP_JUMP_IF_FALSE(arg=129, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$238compare_op.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=242, stack=('$phi226.0',), blockstack=(), npush=0), Edge(pc=256, stack=('$phi226.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=256 nstack_initial=1), State(pc_initial=242 nstack_initial=1), State(pc_initial=256 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi256.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=256 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=256, inst=LOAD_FAST(arg=7, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=258, inst=LOAD_FAST(arg=8, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$supertrend256.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=260, inst=LOAD_CONST(arg=1, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$supertrend256.1', '$i258.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=262, inst=BINARY_SUBTRACT(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$supertrend256.1', '$i258.2', '$const260.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=264, inst=BINARY_SUBSCR(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$supertrend256.1', '$262binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=266, inst=LOAD_FAST(arg=5, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=268, inst=LOAD_FAST(arg=8, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$final_ub266.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=270, inst=LOAD_CONST(arg=1, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$final_ub266.6', '$i268.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=272, inst=BINARY_SUBTRACT(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$final_ub266.6', '$i268.7', '$const270.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=274, inst=BINARY_SUBSCR(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$final_ub266.6', '$272binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=276, inst=COMPARE_OP(arg=2, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$274binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=278, inst=POP_JUMP_IF_FALSE(arg=156, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$276compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=280, stack=('$phi256.0',), blockstack=(), npush=0), Edge(pc=310, stack=('$phi256.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=242 nstack_initial=1), State(pc_initial=256 nstack_initial=1), State(pc_initial=280 nstack_initial=1), State(pc_initial=310 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi242.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=242 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=242, inst=LOAD_FAST(arg=5, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=244, inst=LOAD_FAST(arg=8, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$final_ub242.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=246, inst=BINARY_SUBSCR(arg=None, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$final_ub242.1', '$i244.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=248, inst=LOAD_FAST(arg=7, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$246binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=250, inst=LOAD_FAST(arg=8, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$246binary_subscr.3', '$supertrend248.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=252, inst=STORE_SUBSCR(arg=None, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$246binary_subscr.3', '$supertrend248.4', '$i250.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=254, inst=JUMP_ABSOLUTE(arg=26, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi242.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=256 nstack_initial=1), State(pc_initial=280 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=280 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi280.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=280 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=280, inst=LOAD_FAST(arg=0, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=282, inst=LOAD_FAST(arg=8, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$close280.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=284, inst=BINARY_SUBSCR(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$close280.1', '$i282.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=286, inst=LOAD_FAST(arg=5, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$284binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=288, inst=LOAD_FAST(arg=8, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$284binary_subscr.3', '$final_ub286.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=290, inst=BINARY_SUBSCR(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$284binary_subscr.3', '$final_ub286.4', '$i288.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=292, inst=COMPARE_OP(arg=4, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$284binary_subscr.3', '$290binary_subscr.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=294, inst=POP_JUMP_IF_FALSE(arg=156, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$292compare_op.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=296, stack=('$phi280.0',), blockstack=(), npush=0), Edge(pc=310, stack=('$phi280.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=310 nstack_initial=1), State(pc_initial=50 nstack_initial=1), State(pc_initial=296 nstack_initial=1), State(pc_initial=310 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi310.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=310 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=310, inst=LOAD_FAST(arg=7, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=312, inst=LOAD_FAST(arg=8, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$supertrend310.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=314, inst=LOAD_CONST(arg=1, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$supertrend310.1', '$i312.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=316, inst=BINARY_SUBTRACT(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$supertrend310.1', '$i312.2', '$const314.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=318, inst=BINARY_SUBSCR(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$supertrend310.1', '$316binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=320, inst=LOAD_FAST(arg=6, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=322, inst=LOAD_FAST(arg=8, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$final_lb320.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=324, inst=LOAD_CONST(arg=1, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$final_lb320.6', '$i322.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=326, inst=BINARY_SUBTRACT(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$final_lb320.6', '$i322.7', '$const324.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=328, inst=BINARY_SUBSCR(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$final_lb320.6', '$326binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=330, inst=COMPARE_OP(arg=2, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$328binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=332, inst=POP_JUMP_IF_FALSE(arg=183, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$330compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=334, stack=('$phi310.0',), blockstack=(), npush=0), Edge(pc=364, stack=('$phi310.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=296 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=334 nstack_initial=1), State(pc_initial=364 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=296 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=334 nstack_initial=1), State(pc_initial=364 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi296.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=296 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=296, inst=LOAD_FAST(arg=6, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=298, inst=LOAD_FAST(arg=8, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$final_lb296.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=300, inst=BINARY_SUBSCR(arg=None, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$final_lb296.1', '$i298.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=302, inst=LOAD_FAST(arg=7, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$300binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=304, inst=LOAD_FAST(arg=8, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$300binary_subscr.3', '$supertrend302.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=306, inst=STORE_SUBSCR(arg=None, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$300binary_subscr.3', '$supertrend302.4', '$i304.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=308, inst=JUMP_ABSOLUTE(arg=26, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi296.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=310 nstack_initial=1), State(pc_initial=334 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=334 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi334.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=334 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=334, inst=LOAD_FAST(arg=0, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=336, inst=LOAD_FAST(arg=8, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$close334.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=338, inst=BINARY_SUBSCR(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$close334.1', '$i336.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=340, inst=LOAD_FAST(arg=6, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$338binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=342, inst=LOAD_FAST(arg=8, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$338binary_subscr.3', '$final_lb340.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=344, inst=BINARY_SUBSCR(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$338binary_subscr.3', '$final_lb340.4', '$i342.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=346, inst=COMPARE_OP(arg=5, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$338binary_subscr.3', '$344binary_subscr.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=348, inst=POP_JUMP_IF_FALSE(arg=183, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$346compare_op.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=350, stack=('$phi334.0',), blockstack=(), npush=0), Edge(pc=364, stack=('$phi334.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=364 nstack_initial=1), State(pc_initial=50 nstack_initial=1), State(pc_initial=350 nstack_initial=1), State(pc_initial=364 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi364.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=364 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=364, inst=LOAD_FAST(arg=7, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=366, inst=LOAD_FAST(arg=8, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$supertrend364.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=368, inst=LOAD_CONST(arg=1, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$supertrend364.1', '$i366.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=370, inst=BINARY_SUBTRACT(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$supertrend364.1', '$i366.2', '$const368.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=372, inst=BINARY_SUBSCR(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$supertrend364.1', '$370binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=374, inst=LOAD_FAST(arg=6, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=376, inst=LOAD_FAST(arg=8, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$final_lb374.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=378, inst=LOAD_CONST(arg=1, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$final_lb374.6', '$i376.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=380, inst=BINARY_SUBTRACT(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$final_lb374.6', '$i376.7', '$const378.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=382, inst=BINARY_SUBSCR(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$final_lb374.6', '$380binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=384, inst=COMPARE_OP(arg=2, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$382binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=386, inst=POP_JUMP_IF_FALSE(arg=210, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$384compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=388, stack=('$phi364.0',), blockstack=(), npush=0), Edge(pc=418, stack=('$phi364.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=350 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=388 nstack_initial=1), State(pc_initial=418 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=350 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=388 nstack_initial=1), State(pc_initial=418 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi350.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=350 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=350, inst=LOAD_FAST(arg=6, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=352, inst=LOAD_FAST(arg=8, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$final_lb350.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=354, inst=BINARY_SUBSCR(arg=None, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$final_lb350.1', '$i352.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=356, inst=LOAD_FAST(arg=7, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$354binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=358, inst=LOAD_FAST(arg=8, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$354binary_subscr.3', '$supertrend356.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=360, inst=STORE_SUBSCR(arg=None, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$354binary_subscr.3', '$supertrend356.4', '$i358.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=362, inst=JUMP_ABSOLUTE(arg=26, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi350.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=364 nstack_initial=1), State(pc_initial=388 nstack_initial=1), State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=388 nstack_initial=1), State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi388.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=388 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=388, inst=LOAD_FAST(arg=0, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=390, inst=LOAD_FAST(arg=8, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$close388.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=392, inst=BINARY_SUBSCR(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$close388.1', '$i390.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=394, inst=LOAD_FAST(arg=6, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$392binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=396, inst=LOAD_FAST(arg=8, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$392binary_subscr.3', '$final_lb394.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=398, inst=BINARY_SUBSCR(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$392binary_subscr.3', '$final_lb394.4', '$i396.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=400, inst=COMPARE_OP(arg=0, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$392binary_subscr.3', '$398binary_subscr.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=402, inst=POP_JUMP_IF_FALSE(arg=210, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$400compare_op.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=404, stack=('$phi388.0',), blockstack=(), npush=0), Edge(pc=418, stack=('$phi388.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1), State(pc_initial=404 nstack_initial=1), State(pc_initial=418 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi418.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=418 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=418, inst=LOAD_CONST(arg=2, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=420, inst=LOAD_FAST(arg=7, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0', '$const418.1.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=422, inst=LOAD_FAST(arg=8, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0', '$const418.1.2', '$supertrend420.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=424, inst=STORE_SUBSCR(arg=None, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0', '$const418.1.2', '$supertrend420.2', '$i422.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=426, inst=JUMP_ABSOLUTE(arg=26, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi418.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=404 nstack_initial=1), State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=404 nstack_initial=1), State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi404.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=404 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=404, inst=LOAD_FAST(arg=5, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=406, inst=LOAD_FAST(arg=8, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$final_ub404.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=408, inst=BINARY_SUBSCR(arg=None, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$final_ub404.1', '$i406.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=410, inst=LOAD_FAST(arg=7, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$408binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=412, inst=LOAD_FAST(arg=8, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$408binary_subscr.3', '$supertrend410.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=414, inst=STORE_SUBSCR(arg=None, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$408binary_subscr.3', '$supertrend410.4', '$i412.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=416, inst=JUMP_ABSOLUTE(arg=26, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi404.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): {'$phi50.0'},
             State(pc_initial=52 nstack_initial=2): {'$phi52.1'},
             State(pc_initial=74 nstack_initial=1): set(),
             State(pc_initial=98 nstack_initial=1): set(),
             State(pc_initial=112 nstack_initial=1): set(),
             State(pc_initial=128 nstack_initial=1): set(),
             State(pc_initial=148 nstack_initial=1): set(),
             State(pc_initial=172 nstack_initial=1): set(),
             State(pc_initial=186 nstack_initial=1): set(),
             State(pc_initial=202 nstack_initial=1): set(),
             State(pc_initial=226 nstack_initial=1): set(),
             State(pc_initial=242 nstack_initial=1): set(),
             State(pc_initial=256 nstack_initial=1): set(),
             State(pc_initial=280 nstack_initial=1): set(),
             State(pc_initial=296 nstack_initial=1): set(),
             State(pc_initial=310 nstack_initial=1): set(),
             State(pc_initial=334 nstack_initial=1): set(),
             State(pc_initial=350 nstack_initial=1): set(),
             State(pc_initial=364 nstack_initial=1): set(),
             State(pc_initial=388 nstack_initial=1): set(),
             State(pc_initial=404 nstack_initial=1): set(),
             State(pc_initial=418 nstack_initial=1): set(),
             State(pc_initial=428 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {'$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi52.1': State(pc_initial=50 nstack_initial=1)}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi128.0': {('$phi112.0',
                            State(pc_initial=112 nstack_initial=1)),
                           ('$phi98.0', State(pc_initial=98 nstack_initial=1))},
             '$phi148.0': {('$phi128.0',
                            State(pc_initial=128 nstack_initial=1))},
             '$phi172.0': {('$phi128.0',
                            State(pc_initial=128 nstack_initial=1)),
                           ('$phi148.0',
                            State(pc_initial=148 nstack_initial=1))},
             '$phi186.0': {('$phi148.0',
                            State(pc_initial=148 nstack_initial=1))},
             '$phi202.0': {('$phi172.0',
                            State(pc_initial=172 nstack_initial=1)),
                           ('$phi186.0',
                            State(pc_initial=186 nstack_initial=1))},
             '$phi226.0': {('$phi202.0',
                            State(pc_initial=202 nstack_initial=1))},
             '$phi242.0': {('$phi226.0',
                            State(pc_initial=226 nstack_initial=1))},
             '$phi256.0': {('$phi202.0',
                            State(pc_initial=202 nstack_initial=1)),
                           ('$phi226.0',
                            State(pc_initial=226 nstack_initial=1))},
             '$phi280.0': {('$phi256.0',
                            State(pc_initial=256 nstack_initial=1))},
             '$phi296.0': {('$phi280.0',
                            State(pc_initial=280 nstack_initial=1))},
             '$phi310.0': {('$phi256.0',
                            State(pc_initial=256 nstack_initial=1)),
                           ('$phi280.0',
                            State(pc_initial=280 nstack_initial=1))},
             '$phi334.0': {('$phi310.0',
                            State(pc_initial=310 nstack_initial=1))},
             '$phi350.0': {('$phi334.0',
                            State(pc_initial=334 nstack_initial=1))},
             '$phi364.0': {('$phi310.0',
                            State(pc_initial=310 nstack_initial=1)),
                           ('$phi334.0',
                            State(pc_initial=334 nstack_initial=1))},
             '$phi388.0': {('$phi364.0',
                            State(pc_initial=364 nstack_initial=1))},
             '$phi404.0': {('$phi388.0',
                            State(pc_initial=388 nstack_initial=1))},
             '$phi418.0': {('$phi364.0',
                            State(pc_initial=364 nstack_initial=1)),
                           ('$phi388.0',
                            State(pc_initial=388 nstack_initial=1))},
             '$phi50.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi242.0', State(pc_initial=242 nstack_initial=1)),
                          ('$phi296.0', State(pc_initial=296 nstack_initial=1)),
                          ('$phi350.0', State(pc_initial=350 nstack_initial=1)),
                          ('$phi404.0', State(pc_initial=404 nstack_initial=1)),
                          ('$phi418.0',
                           State(pc_initial=418 nstack_initial=1))},
             '$phi52.0': {('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))},
             '$phi74.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi98.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))}})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi128.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi148.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi172.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi186.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi202.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi226.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi242.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi256.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi280.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi296.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi310.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi334.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi350.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi364.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi388.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi404.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi418.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi50.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi52.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))},
             '$phi74.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi98.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))}})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi128.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi148.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi172.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi186.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi202.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi226.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi242.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi256.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi280.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi296.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi310.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi334.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi350.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi364.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi388.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi404.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi418.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))},
             '$phi74.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))}})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi128.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi148.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi172.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi186.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi202.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi226.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi242.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi256.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi280.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi296.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi310.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi334.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi350.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi364.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi388.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi404.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi418.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))},
             '$phi74.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))}})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {'$phi50.0': {('$48get_iter.19', State(pc_initial=0 nstack_initial=0))},
 '$phi52.1': {('$50for_iter.2', State(pc_initial=50 nstack_initial=1))}}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi50.0': '$48get_iter.19'},
             State(pc_initial=50 nstack_initial=1): {'$phi52.1': '$50for_iter.2'}})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$close4.1'}), (6, {'func': '$2load_global.0', 'args': ['$close4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_global.3'}), (12, {'item': '$10load_global.3', 'res': '$12load_method.4'}), (14, {'res': '$length14.5'}), (16, {'func': '$12load_method.4', 'args': ['$length14.5'], 'res': '$16call_method.6'}), (18, {'value': '$16call_method.6'}), (20, {'res': '$20load_global.7'}), (22, {'item': '$20load_global.7', 'res': '$22load_method.8'}), (24, {'res': '$length24.9'}), (26, {'func': '$22load_method.8', 'args': ['$length24.9'], 'res': '$26call_method.10'}), (28, {'value': '$26call_method.10'}), (30, {'res': '$30load_global.11'}), (32, {'item': '$30load_global.11', 'res': '$32load_method.12'}), (34, {'res': '$length34.13'}), (36, {'func': '$32load_method.12', 'args': ['$length34.13'], 'res': '$36call_method.14'}), (38, {'value': '$36call_method.14'}), (40, {'res': '$40load_global.15'}), (42, {'res': '$n42.16'}), (44, {'res': '$length44.17'}), (46, {'func': '$40load_global.15', 'args': ['$n42.16', '$length44.17'], 'res': '$46call_function.18'}), (48, {'value': '$46call_function.18', 'res': '$48get_iter.19'})), outgoing_phis={'$phi50.0': '$48get_iter.19'}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$48get_iter.19',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((50, {'iterator': '$phi50.0', 'pair': '$50for_iter.1', 'indval': '$50for_iter.2', 'pred': '$50for_iter.3'}),), outgoing_phis={'$phi52.1': '$50for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={428: (), 52: ('$phi50.0', '$50for_iter.2')})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=52 nstack_initial=2):
AdaptBlockInfo(insts=((52, {'value': '$phi52.1'}), (54, {'res': '$basic_ub54.2'}), (56, {'res': '$i56.3'}), (58, {'index': '$i56.3', 'target': '$basic_ub54.2', 'res': '$58binary_subscr.4'}), (60, {'res': '$final_ub60.5'}), (62, {'res': '$i62.6'}), (64, {'res': '$const64.7.1'}), (66, {'lhs': '$i62.6', 'rhs': '$const64.7.1', 'res': '$66binary_subtract.8'}), (68, {'index': '$66binary_subtract.8', 'target': '$final_ub60.5', 'res': '$68binary_subscr.9'}), (70, {'lhs': '$58binary_subscr.4', 'rhs': '$68binary_subscr.9', 'res': '$70compare_op.10'}), (72, {'pred': '$70compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ('$phi52.0',), 98: ('$phi52.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=74 nstack_initial=1):
AdaptBlockInfo(insts=((74, {'res': '$close74.1'}), (76, {'res': '$i76.2'}), (78, {'res': '$const78.3.1'}), (80, {'lhs': '$i76.2', 'rhs': '$const78.3.1', 'res': '$80binary_subtract.4'}), (82, {'index': '$80binary_subtract.4', 'target': '$close74.1', 'res': '$82binary_subscr.5'}), (84, {'res': '$final_ub84.6'}), (86, {'res': '$i86.7'}), (88, {'res': '$const88.8.1'}), (90, {'lhs': '$i86.7', 'rhs': '$const88.8.1', 'res': '$90binary_subtract.9'}), (92, {'index': '$90binary_subtract.9', 'target': '$final_ub84.6', 'res': '$92binary_subscr.10'}), (94, {'lhs': '$82binary_subscr.5', 'rhs': '$92binary_subscr.10', 'res': '$94compare_op.11'}), (96, {'pred': '$94compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: ('$phi74.0',), 112: ('$phi74.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=98 nstack_initial=1):
AdaptBlockInfo(insts=((98, {'res': '$basic_ub98.1'}), (100, {'res': '$i100.2'}), (102, {'index': '$i100.2', 'target': '$basic_ub98.1', 'res': '$102binary_subscr.3'}), (104, {'res': '$final_ub104.4'}), (106, {'res': '$i106.5'}), (108, {'target': '$final_ub104.4', 'index': '$i106.5', 'value': '$102binary_subscr.3'}), (110, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={128: ('$phi98.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=112 nstack_initial=1):
AdaptBlockInfo(insts=((112, {'res': '$final_ub112.1'}), (114, {'res': '$i114.2'}), (116, {'res': '$const116.3.1'}), (118, {'lhs': '$i114.2', 'rhs': '$const116.3.1', 'res': '$118binary_subtract.4'}), (120, {'index': '$118binary_subtract.4', 'target': '$final_ub112.1', 'res': '$120binary_subscr.5'}), (122, {'res': '$final_ub122.6'}), (124, {'res': '$i124.7'}), (126, {'target': '$final_ub122.6', 'index': '$i124.7', 'value': '$120binary_subscr.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={128: ('$phi112.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=128 nstack_initial=1):
AdaptBlockInfo(insts=((128, {'res': '$basic_lb128.1'}), (130, {'res': '$i130.2'}), (132, {'index': '$i130.2', 'target': '$basic_lb128.1', 'res': '$132binary_subscr.3'}), (134, {'res': '$final_lb134.4'}), (136, {'res': '$i136.5'}), (138, {'res': '$const138.6.1'}), (140, {'lhs': '$i136.5', 'rhs': '$const138.6.1', 'res': '$140binary_subtract.7'}), (142, {'index': '$140binary_subtract.7', 'target': '$final_lb134.4', 'res': '$142binary_subscr.8'}), (144, {'lhs': '$132binary_subscr.3', 'rhs': '$142binary_subscr.8', 'res': '$144compare_op.9'}), (146, {'pred': '$144compare_op.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={148: ('$phi128.0',), 172: ('$phi128.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=148 nstack_initial=1):
AdaptBlockInfo(insts=((148, {'res': '$close148.1'}), (150, {'res': '$i150.2'}), (152, {'res': '$const152.3.1'}), (154, {'lhs': '$i150.2', 'rhs': '$const152.3.1', 'res': '$154binary_subtract.4'}), (156, {'index': '$154binary_subtract.4', 'target': '$close148.1', 'res': '$156binary_subscr.5'}), (158, {'res': '$final_lb158.6'}), (160, {'res': '$i160.7'}), (162, {'res': '$const162.8.1'}), (164, {'lhs': '$i160.7', 'rhs': '$const162.8.1', 'res': '$164binary_subtract.9'}), (166, {'index': '$164binary_subtract.9', 'target': '$final_lb158.6', 'res': '$166binary_subscr.10'}), (168, {'lhs': '$156binary_subscr.5', 'rhs': '$166binary_subscr.10', 'res': '$168compare_op.11'}), (170, {'pred': '$168compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={172: ('$phi148.0',), 186: ('$phi148.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=172 nstack_initial=1):
AdaptBlockInfo(insts=((172, {'res': '$basic_lb172.1'}), (174, {'res': '$i174.2'}), (176, {'index': '$i174.2', 'target': '$basic_lb172.1', 'res': '$176binary_subscr.3'}), (178, {'res': '$final_lb178.4'}), (180, {'res': '$i180.5'}), (182, {'target': '$final_lb178.4', 'index': '$i180.5', 'value': '$176binary_subscr.3'}), (184, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={202: ('$phi172.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=186 nstack_initial=1):
AdaptBlockInfo(insts=((186, {'res': '$final_lb186.1'}), (188, {'res': '$i188.2'}), (190, {'res': '$const190.3.1'}), (192, {'lhs': '$i188.2', 'rhs': '$const190.3.1', 'res': '$192binary_subtract.4'}), (194, {'index': '$192binary_subtract.4', 'target': '$final_lb186.1', 'res': '$194binary_subscr.5'}), (196, {'res': '$final_lb196.6'}), (198, {'res': '$i198.7'}), (200, {'target': '$final_lb196.6', 'index': '$i198.7', 'value': '$194binary_subscr.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={202: ('$phi186.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=202 nstack_initial=1):
AdaptBlockInfo(insts=((202, {'res': '$supertrend202.1'}), (204, {'res': '$i204.2'}), (206, {'res': '$const206.3.1'}), (208, {'lhs': '$i204.2', 'rhs': '$const206.3.1', 'res': '$208binary_subtract.4'}), (210, {'index': '$208binary_subtract.4', 'target': '$supertrend202.1', 'res': '$210binary_subscr.5'}), (212, {'res': '$final_ub212.6'}), (214, {'res': '$i214.7'}), (216, {'res': '$const216.8.1'}), (218, {'lhs': '$i214.7', 'rhs': '$const216.8.1', 'res': '$218binary_subtract.9'}), (220, {'index': '$218binary_subtract.9', 'target': '$final_ub212.6', 'res': '$220binary_subscr.10'}), (222, {'lhs': '$210binary_subscr.5', 'rhs': '$220binary_subscr.10', 'res': '$222compare_op.11'}), (224, {'pred': '$222compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={226: ('$phi202.0',), 256: ('$phi202.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=226 nstack_initial=1):
AdaptBlockInfo(insts=((226, {'res': '$close226.1'}), (228, {'res': '$i228.2'}), (230, {'index': '$i228.2', 'target': '$close226.1', 'res': '$230binary_subscr.3'}), (232, {'res': '$final_ub232.4'}), (234, {'res': '$i234.5'}), (236, {'index': '$i234.5', 'target': '$final_ub232.4', 'res': '$236binary_subscr.6'}), (238, {'lhs': '$230binary_subscr.3', 'rhs': '$236binary_subscr.6', 'res': '$238compare_op.7'}), (240, {'pred': '$238compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={242: ('$phi226.0',), 256: ('$phi226.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=242 nstack_initial=1):
AdaptBlockInfo(insts=((242, {'res': '$final_ub242.1'}), (244, {'res': '$i244.2'}), (246, {'index': '$i244.2', 'target': '$final_ub242.1', 'res': '$246binary_subscr.3'}), (248, {'res': '$supertrend248.4'}), (250, {'res': '$i250.5'}), (252, {'target': '$supertrend248.4', 'index': '$i250.5', 'value': '$246binary_subscr.3'}), (254, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi242.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=256 nstack_initial=1):
AdaptBlockInfo(insts=((256, {'res': '$supertrend256.1'}), (258, {'res': '$i258.2'}), (260, {'res': '$const260.3.1'}), (262, {'lhs': '$i258.2', 'rhs': '$const260.3.1', 'res': '$262binary_subtract.4'}), (264, {'index': '$262binary_subtract.4', 'target': '$supertrend256.1', 'res': '$264binary_subscr.5'}), (266, {'res': '$final_ub266.6'}), (268, {'res': '$i268.7'}), (270, {'res': '$const270.8.1'}), (272, {'lhs': '$i268.7', 'rhs': '$const270.8.1', 'res': '$272binary_subtract.9'}), (274, {'index': '$272binary_subtract.9', 'target': '$final_ub266.6', 'res': '$274binary_subscr.10'}), (276, {'lhs': '$264binary_subscr.5', 'rhs': '$274binary_subscr.10', 'res': '$276compare_op.11'}), (278, {'pred': '$276compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={280: ('$phi256.0',), 310: ('$phi256.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=280 nstack_initial=1):
AdaptBlockInfo(insts=((280, {'res': '$close280.1'}), (282, {'res': '$i282.2'}), (284, {'index': '$i282.2', 'target': '$close280.1', 'res': '$284binary_subscr.3'}), (286, {'res': '$final_ub286.4'}), (288, {'res': '$i288.5'}), (290, {'index': '$i288.5', 'target': '$final_ub286.4', 'res': '$290binary_subscr.6'}), (292, {'lhs': '$284binary_subscr.3', 'rhs': '$290binary_subscr.6', 'res': '$292compare_op.7'}), (294, {'pred': '$292compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={296: ('$phi280.0',), 310: ('$phi280.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=296 nstack_initial=1):
AdaptBlockInfo(insts=((296, {'res': '$final_lb296.1'}), (298, {'res': '$i298.2'}), (300, {'index': '$i298.2', 'target': '$final_lb296.1', 'res': '$300binary_subscr.3'}), (302, {'res': '$supertrend302.4'}), (304, {'res': '$i304.5'}), (306, {'target': '$supertrend302.4', 'index': '$i304.5', 'value': '$300binary_subscr.3'}), (308, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi296.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=310 nstack_initial=1):
AdaptBlockInfo(insts=((310, {'res': '$supertrend310.1'}), (312, {'res': '$i312.2'}), (314, {'res': '$const314.3.1'}), (316, {'lhs': '$i312.2', 'rhs': '$const314.3.1', 'res': '$316binary_subtract.4'}), (318, {'index': '$316binary_subtract.4', 'target': '$supertrend310.1', 'res': '$318binary_subscr.5'}), (320, {'res': '$final_lb320.6'}), (322, {'res': '$i322.7'}), (324, {'res': '$const324.8.1'}), (326, {'lhs': '$i322.7', 'rhs': '$const324.8.1', 'res': '$326binary_subtract.9'}), (328, {'index': '$326binary_subtract.9', 'target': '$final_lb320.6', 'res': '$328binary_subscr.10'}), (330, {'lhs': '$318binary_subscr.5', 'rhs': '$328binary_subscr.10', 'res': '$330compare_op.11'}), (332, {'pred': '$330compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={334: ('$phi310.0',), 364: ('$phi310.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=334 nstack_initial=1):
AdaptBlockInfo(insts=((334, {'res': '$close334.1'}), (336, {'res': '$i336.2'}), (338, {'index': '$i336.2', 'target': '$close334.1', 'res': '$338binary_subscr.3'}), (340, {'res': '$final_lb340.4'}), (342, {'res': '$i342.5'}), (344, {'index': '$i342.5', 'target': '$final_lb340.4', 'res': '$344binary_subscr.6'}), (346, {'lhs': '$338binary_subscr.3', 'rhs': '$344binary_subscr.6', 'res': '$346compare_op.7'}), (348, {'pred': '$346compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={350: ('$phi334.0',), 364: ('$phi334.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=350 nstack_initial=1):
AdaptBlockInfo(insts=((350, {'res': '$final_lb350.1'}), (352, {'res': '$i352.2'}), (354, {'index': '$i352.2', 'target': '$final_lb350.1', 'res': '$354binary_subscr.3'}), (356, {'res': '$supertrend356.4'}), (358, {'res': '$i358.5'}), (360, {'target': '$supertrend356.4', 'index': '$i358.5', 'value': '$354binary_subscr.3'}), (362, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi350.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=364 nstack_initial=1):
AdaptBlockInfo(insts=((364, {'res': '$supertrend364.1'}), (366, {'res': '$i366.2'}), (368, {'res': '$const368.3.1'}), (370, {'lhs': '$i366.2', 'rhs': '$const368.3.1', 'res': '$370binary_subtract.4'}), (372, {'index': '$370binary_subtract.4', 'target': '$supertrend364.1', 'res': '$372binary_subscr.5'}), (374, {'res': '$final_lb374.6'}), (376, {'res': '$i376.7'}), (378, {'res': '$const378.8.1'}), (380, {'lhs': '$i376.7', 'rhs': '$const378.8.1', 'res': '$380binary_subtract.9'}), (382, {'index': '$380binary_subtract.9', 'target': '$final_lb374.6', 'res': '$382binary_subscr.10'}), (384, {'lhs': '$372binary_subscr.5', 'rhs': '$382binary_subscr.10', 'res': '$384compare_op.11'}), (386, {'pred': '$384compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={388: ('$phi364.0',), 418: ('$phi364.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=388 nstack_initial=1):
AdaptBlockInfo(insts=((388, {'res': '$close388.1'}), (390, {'res': '$i390.2'}), (392, {'index': '$i390.2', 'target': '$close388.1', 'res': '$392binary_subscr.3'}), (394, {'res': '$final_lb394.4'}), (396, {'res': '$i396.5'}), (398, {'index': '$i396.5', 'target': '$final_lb394.4', 'res': '$398binary_subscr.6'}), (400, {'lhs': '$392binary_subscr.3', 'rhs': '$398binary_subscr.6', 'res': '$400compare_op.7'}), (402, {'pred': '$400compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={404: ('$phi388.0',), 418: ('$phi388.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=404 nstack_initial=1):
AdaptBlockInfo(insts=((404, {'res': '$final_ub404.1'}), (406, {'res': '$i406.2'}), (408, {'index': '$i406.2', 'target': '$final_ub404.1', 'res': '$408binary_subscr.3'}), (410, {'res': '$supertrend410.4'}), (412, {'res': '$i412.5'}), (414, {'target': '$supertrend410.4', 'index': '$i412.5', 'value': '$408binary_subscr.3'}), (416, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi404.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=418 nstack_initial=1):
AdaptBlockInfo(insts=((418, {'res': '$const418.1.2'}), (420, {'res': '$supertrend420.2'}), (422, {'res': '$i422.3'}), (424, {'target': '$supertrend420.2', 'index': '$i422.3', 'value': '$const418.1.2'}), (426, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi418.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=428 nstack_initial=0):
AdaptBlockInfo(insts=((428, {'res': '$supertrend428.0'}), (430, {'retval': '$supertrend428.0', 'castval': '$430return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    close = arg(0, name=close)               ['close']
    basic_ub = arg(1, name=basic_ub)         ['basic_ub']
    basic_lb = arg(2, name=basic_lb)         ['basic_lb']
    n = arg(3, name=n)                       ['n']
    $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
    length = call $2load_global.0(close, func=$2load_global.0, args=[Var(close, helper_loops.py:99)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'close', 'length']
    $10load_global.3 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>) ['$10load_global.3']
    $12load_method.4 = getattr(value=$10load_global.3, attr=zeros) ['$10load_global.3', '$12load_method.4']
    final_ub = call $12load_method.4(length, func=$12load_method.4, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_method.4', 'final_ub', 'length']
    $20load_global.7 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.7']
    $22load_method.8 = getattr(value=$20load_global.7, attr=zeros) ['$20load_global.7', '$22load_method.8']
    final_lb = call $22load_method.8(length, func=$22load_method.8, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.8', 'final_lb', 'length']
    $30load_global.11 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>) ['$30load_global.11']
    $32load_method.12 = getattr(value=$30load_global.11, attr=zeros) ['$30load_global.11', '$32load_method.12']
    supertrend = call $32load_method.12(length, func=$32load_method.12, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$32load_method.12', 'length', 'supertrend']
    $40load_global.15 = global(range: <class 'range'>) ['$40load_global.15']
    $46call_function.18 = call $40load_global.15(n, length, func=$40load_global.15, args=[Var(n, helper_loops.py:99), Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_global.15', '$46call_function.18', 'length', 'n']
    $48get_iter.19 = getiter(value=$46call_function.18) ['$46call_function.18', '$48get_iter.19']
    $phi50.0 = $48get_iter.19                ['$48get_iter.19', '$phi50.0']
    jump 50                                  []
label 50:
    $50for_iter.1 = iternext(value=$phi50.0) ['$50for_iter.1', '$phi50.0']
    $50for_iter.2 = pair_first(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.2']
    $50for_iter.3 = pair_second(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.3']
    $phi52.1 = $50for_iter.2                 ['$50for_iter.2', '$phi52.1']
    branch $50for_iter.3, 52, 428            ['$50for_iter.3']
label 52:
    i = $phi52.1                             ['$phi52.1', 'i']
    $58binary_subscr.4 = getitem(value=basic_ub, index=i, fn=<built-in function getitem>) ['$58binary_subscr.4', 'basic_ub', 'i']
    $const64.7.1 = const(int, 1)             ['$const64.7.1']
    $66binary_subtract.8 = i - $const64.7.1  ['$66binary_subtract.8', '$const64.7.1', 'i']
    $68binary_subscr.9 = getitem(value=final_ub, index=$66binary_subtract.8, fn=<built-in function getitem>) ['$66binary_subtract.8', '$68binary_subscr.9', 'final_ub']
    $70compare_op.10 = $58binary_subscr.4 < $68binary_subscr.9 ['$58binary_subscr.4', '$68binary_subscr.9', '$70compare_op.10']
    bool72 = global(bool: <class 'bool'>)    ['bool72']
    $72pred = call bool72($70compare_op.10, func=bool72, args=(Var($70compare_op.10, helper_loops.py:113),), kws=(), vararg=None, varkwarg=None, target=None) ['$70compare_op.10', '$72pred', 'bool72']
    branch $72pred, 98, 74                   ['$72pred']
label 74:
    $const78.3.1 = const(int, 1)             ['$const78.3.1']
    $80binary_subtract.4 = i - $const78.3.1  ['$80binary_subtract.4', '$const78.3.1', 'i']
    $82binary_subscr.5 = getitem(value=close, index=$80binary_subtract.4, fn=<built-in function getitem>) ['$80binary_subtract.4', '$82binary_subscr.5', 'close']
    $const88.8.1 = const(int, 1)             ['$const88.8.1']
    $90binary_subtract.9 = i - $const88.8.1  ['$90binary_subtract.9', '$const88.8.1', 'i']
    $92binary_subscr.10 = getitem(value=final_ub, index=$90binary_subtract.9, fn=<built-in function getitem>) ['$90binary_subtract.9', '$92binary_subscr.10', 'final_ub']
    $94compare_op.11 = $82binary_subscr.5 > $92binary_subscr.10 ['$82binary_subscr.5', '$92binary_subscr.10', '$94compare_op.11']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
    $96pred = call bool96($94compare_op.11, func=bool96, args=(Var($94compare_op.11, helper_loops.py:113),), kws=(), vararg=None, varkwarg=None, target=None) ['$94compare_op.11', '$96pred', 'bool96']
    branch $96pred, 98, 112                  ['$96pred']
label 98:
    $102binary_subscr.3 = getitem(value=basic_ub, index=i, fn=<built-in function getitem>) ['$102binary_subscr.3', 'basic_ub', 'i']
    final_ub[i] = $102binary_subscr.3        ['$102binary_subscr.3', 'final_ub', 'i']
    jump 128                                 []
label 112:
    $const116.3.1 = const(int, 1)            ['$const116.3.1']
    $118binary_subtract.4 = i - $const116.3.1 ['$118binary_subtract.4', '$const116.3.1', 'i']
    $120binary_subscr.5 = getitem(value=final_ub, index=$118binary_subtract.4, fn=<built-in function getitem>) ['$118binary_subtract.4', '$120binary_subscr.5', 'final_ub']
    final_ub[i] = $120binary_subscr.5        ['$120binary_subscr.5', 'final_ub', 'i']
    jump 128                                 []
label 128:
    $132binary_subscr.3 = getitem(value=basic_lb, index=i, fn=<built-in function getitem>) ['$132binary_subscr.3', 'basic_lb', 'i']
    $const138.6.1 = const(int, 1)            ['$const138.6.1']
    $140binary_subtract.7 = i - $const138.6.1 ['$140binary_subtract.7', '$const138.6.1', 'i']
    $142binary_subscr.8 = getitem(value=final_lb, index=$140binary_subtract.7, fn=<built-in function getitem>) ['$140binary_subtract.7', '$142binary_subscr.8', 'final_lb']
    $144compare_op.9 = $132binary_subscr.3 > $142binary_subscr.8 ['$132binary_subscr.3', '$142binary_subscr.8', '$144compare_op.9']
    bool146 = global(bool: <class 'bool'>)   ['bool146']
    $146pred = call bool146($144compare_op.9, func=bool146, args=(Var($144compare_op.9, helper_loops.py:118),), kws=(), vararg=None, varkwarg=None, target=None) ['$144compare_op.9', '$146pred', 'bool146']
    branch $146pred, 172, 148                ['$146pred']
label 148:
    $const152.3.1 = const(int, 1)            ['$const152.3.1']
    $154binary_subtract.4 = i - $const152.3.1 ['$154binary_subtract.4', '$const152.3.1', 'i']
    $156binary_subscr.5 = getitem(value=close, index=$154binary_subtract.4, fn=<built-in function getitem>) ['$154binary_subtract.4', '$156binary_subscr.5', 'close']
    $const162.8.1 = const(int, 1)            ['$const162.8.1']
    $164binary_subtract.9 = i - $const162.8.1 ['$164binary_subtract.9', '$const162.8.1', 'i']
    $166binary_subscr.10 = getitem(value=final_lb, index=$164binary_subtract.9, fn=<built-in function getitem>) ['$164binary_subtract.9', '$166binary_subscr.10', 'final_lb']
    $168compare_op.11 = $156binary_subscr.5 < $166binary_subscr.10 ['$156binary_subscr.5', '$166binary_subscr.10', '$168compare_op.11']
    bool170 = global(bool: <class 'bool'>)   ['bool170']
    $170pred = call bool170($168compare_op.11, func=bool170, args=(Var($168compare_op.11, helper_loops.py:118),), kws=(), vararg=None, varkwarg=None, target=None) ['$168compare_op.11', '$170pred', 'bool170']
    branch $170pred, 172, 186                ['$170pred']
label 172:
    $176binary_subscr.3 = getitem(value=basic_lb, index=i, fn=<built-in function getitem>) ['$176binary_subscr.3', 'basic_lb', 'i']
    final_lb[i] = $176binary_subscr.3        ['$176binary_subscr.3', 'final_lb', 'i']
    jump 202                                 []
label 186:
    $const190.3.1 = const(int, 1)            ['$const190.3.1']
    $192binary_subtract.4 = i - $const190.3.1 ['$192binary_subtract.4', '$const190.3.1', 'i']
    $194binary_subscr.5 = getitem(value=final_lb, index=$192binary_subtract.4, fn=<built-in function getitem>) ['$192binary_subtract.4', '$194binary_subscr.5', 'final_lb']
    final_lb[i] = $194binary_subscr.5        ['$194binary_subscr.5', 'final_lb', 'i']
    jump 202                                 []
label 202:
    $const206.3.1 = const(int, 1)            ['$const206.3.1']
    $208binary_subtract.4 = i - $const206.3.1 ['$208binary_subtract.4', '$const206.3.1', 'i']
    $210binary_subscr.5 = getitem(value=supertrend, index=$208binary_subtract.4, fn=<built-in function getitem>) ['$208binary_subtract.4', '$210binary_subscr.5', 'supertrend']
    $const216.8.1 = const(int, 1)            ['$const216.8.1']
    $218binary_subtract.9 = i - $const216.8.1 ['$218binary_subtract.9', '$const216.8.1', 'i']
    $220binary_subscr.10 = getitem(value=final_ub, index=$218binary_subtract.9, fn=<built-in function getitem>) ['$218binary_subtract.9', '$220binary_subscr.10', 'final_ub']
    $222compare_op.11 = $210binary_subscr.5 == $220binary_subscr.10 ['$210binary_subscr.5', '$220binary_subscr.10', '$222compare_op.11']
    bool224 = global(bool: <class 'bool'>)   ['bool224']
    $224pred = call bool224($222compare_op.11, func=bool224, args=(Var($222compare_op.11, helper_loops.py:123),), kws=(), vararg=None, varkwarg=None, target=None) ['$222compare_op.11', '$224pred', 'bool224']
    branch $224pred, 226, 256                ['$224pred']
label 226:
    $230binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>) ['$230binary_subscr.3', 'close', 'i']
    $236binary_subscr.6 = getitem(value=final_ub, index=i, fn=<built-in function getitem>) ['$236binary_subscr.6', 'final_ub', 'i']
    $238compare_op.7 = $230binary_subscr.3 <= $236binary_subscr.6 ['$230binary_subscr.3', '$236binary_subscr.6', '$238compare_op.7']
    bool240 = global(bool: <class 'bool'>)   ['bool240']
    $240pred = call bool240($238compare_op.7, func=bool240, args=(Var($238compare_op.7, helper_loops.py:123),), kws=(), vararg=None, varkwarg=None, target=None) ['$238compare_op.7', '$240pred', 'bool240']
    branch $240pred, 242, 256                ['$240pred']
label 242:
    $246binary_subscr.3 = getitem(value=final_ub, index=i, fn=<built-in function getitem>) ['$246binary_subscr.3', 'final_ub', 'i']
    supertrend[i] = $246binary_subscr.3      ['$246binary_subscr.3', 'i', 'supertrend']
    jump 50                                  []
label 256:
    $const260.3.1 = const(int, 1)            ['$const260.3.1']
    $262binary_subtract.4 = i - $const260.3.1 ['$262binary_subtract.4', '$const260.3.1', 'i']
    $264binary_subscr.5 = getitem(value=supertrend, index=$262binary_subtract.4, fn=<built-in function getitem>) ['$262binary_subtract.4', '$264binary_subscr.5', 'supertrend']
    $const270.8.1 = const(int, 1)            ['$const270.8.1']
    $272binary_subtract.9 = i - $const270.8.1 ['$272binary_subtract.9', '$const270.8.1', 'i']
    $274binary_subscr.10 = getitem(value=final_ub, index=$272binary_subtract.9, fn=<built-in function getitem>) ['$272binary_subtract.9', '$274binary_subscr.10', 'final_ub']
    $276compare_op.11 = $264binary_subscr.5 == $274binary_subscr.10 ['$264binary_subscr.5', '$274binary_subscr.10', '$276compare_op.11']
    bool278 = global(bool: <class 'bool'>)   ['bool278']
    $278pred = call bool278($276compare_op.11, func=bool278, args=(Var($276compare_op.11, helper_loops.py:125),), kws=(), vararg=None, varkwarg=None, target=None) ['$276compare_op.11', '$278pred', 'bool278']
    branch $278pred, 280, 310                ['$278pred']
label 280:
    $284binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>) ['$284binary_subscr.3', 'close', 'i']
    $290binary_subscr.6 = getitem(value=final_ub, index=i, fn=<built-in function getitem>) ['$290binary_subscr.6', 'final_ub', 'i']
    $292compare_op.7 = $284binary_subscr.3 > $290binary_subscr.6 ['$284binary_subscr.3', '$290binary_subscr.6', '$292compare_op.7']
    bool294 = global(bool: <class 'bool'>)   ['bool294']
    $294pred = call bool294($292compare_op.7, func=bool294, args=(Var($292compare_op.7, helper_loops.py:125),), kws=(), vararg=None, varkwarg=None, target=None) ['$292compare_op.7', '$294pred', 'bool294']
    branch $294pred, 296, 310                ['$294pred']
label 296:
    $300binary_subscr.3 = getitem(value=final_lb, index=i, fn=<built-in function getitem>) ['$300binary_subscr.3', 'final_lb', 'i']
    supertrend[i] = $300binary_subscr.3      ['$300binary_subscr.3', 'i', 'supertrend']
    jump 50                                  []
label 310:
    $const314.3.1 = const(int, 1)            ['$const314.3.1']
    $316binary_subtract.4 = i - $const314.3.1 ['$316binary_subtract.4', '$const314.3.1', 'i']
    $318binary_subscr.5 = getitem(value=supertrend, index=$316binary_subtract.4, fn=<built-in function getitem>) ['$316binary_subtract.4', '$318binary_subscr.5', 'supertrend']
    $const324.8.1 = const(int, 1)            ['$const324.8.1']
    $326binary_subtract.9 = i - $const324.8.1 ['$326binary_subtract.9', '$const324.8.1', 'i']
    $328binary_subscr.10 = getitem(value=final_lb, index=$326binary_subtract.9, fn=<built-in function getitem>) ['$326binary_subtract.9', '$328binary_subscr.10', 'final_lb']
    $330compare_op.11 = $318binary_subscr.5 == $328binary_subscr.10 ['$318binary_subscr.5', '$328binary_subscr.10', '$330compare_op.11']
    bool332 = global(bool: <class 'bool'>)   ['bool332']
    $332pred = call bool332($330compare_op.11, func=bool332, args=(Var($330compare_op.11, helper_loops.py:127),), kws=(), vararg=None, varkwarg=None, target=None) ['$330compare_op.11', '$332pred', 'bool332']
    branch $332pred, 334, 364                ['$332pred']
label 334:
    $338binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>) ['$338binary_subscr.3', 'close', 'i']
    $344binary_subscr.6 = getitem(value=final_lb, index=i, fn=<built-in function getitem>) ['$344binary_subscr.6', 'final_lb', 'i']
    $346compare_op.7 = $338binary_subscr.3 >= $344binary_subscr.6 ['$338binary_subscr.3', '$344binary_subscr.6', '$346compare_op.7']
    bool348 = global(bool: <class 'bool'>)   ['bool348']
    $348pred = call bool348($346compare_op.7, func=bool348, args=(Var($346compare_op.7, helper_loops.py:127),), kws=(), vararg=None, varkwarg=None, target=None) ['$346compare_op.7', '$348pred', 'bool348']
    branch $348pred, 350, 364                ['$348pred']
label 350:
    $354binary_subscr.3 = getitem(value=final_lb, index=i, fn=<built-in function getitem>) ['$354binary_subscr.3', 'final_lb', 'i']
    supertrend[i] = $354binary_subscr.3      ['$354binary_subscr.3', 'i', 'supertrend']
    jump 50                                  []
label 364:
    $const368.3.1 = const(int, 1)            ['$const368.3.1']
    $370binary_subtract.4 = i - $const368.3.1 ['$370binary_subtract.4', '$const368.3.1', 'i']
    $372binary_subscr.5 = getitem(value=supertrend, index=$370binary_subtract.4, fn=<built-in function getitem>) ['$370binary_subtract.4', '$372binary_subscr.5', 'supertrend']
    $const378.8.1 = const(int, 1)            ['$const378.8.1']
    $380binary_subtract.9 = i - $const378.8.1 ['$380binary_subtract.9', '$const378.8.1', 'i']
    $382binary_subscr.10 = getitem(value=final_lb, index=$380binary_subtract.9, fn=<built-in function getitem>) ['$380binary_subtract.9', '$382binary_subscr.10', 'final_lb']
    $384compare_op.11 = $372binary_subscr.5 == $382binary_subscr.10 ['$372binary_subscr.5', '$382binary_subscr.10', '$384compare_op.11']
    bool386 = global(bool: <class 'bool'>)   ['bool386']
    $386pred = call bool386($384compare_op.11, func=bool386, args=(Var($384compare_op.11, helper_loops.py:129),), kws=(), vararg=None, varkwarg=None, target=None) ['$384compare_op.11', '$386pred', 'bool386']
    branch $386pred, 388, 418                ['$386pred']
label 388:
    $392binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>) ['$392binary_subscr.3', 'close', 'i']
    $398binary_subscr.6 = getitem(value=final_lb, index=i, fn=<built-in function getitem>) ['$398binary_subscr.6', 'final_lb', 'i']
    $400compare_op.7 = $392binary_subscr.3 < $398binary_subscr.6 ['$392binary_subscr.3', '$398binary_subscr.6', '$400compare_op.7']
    bool402 = global(bool: <class 'bool'>)   ['bool402']
    $402pred = call bool402($400compare_op.7, func=bool402, args=(Var($400compare_op.7, helper_loops.py:129),), kws=(), vararg=None, varkwarg=None, target=None) ['$400compare_op.7', '$402pred', 'bool402']
    branch $402pred, 404, 418                ['$402pred']
label 404:
    $408binary_subscr.3 = getitem(value=final_ub, index=i, fn=<built-in function getitem>) ['$408binary_subscr.3', 'final_ub', 'i']
    supertrend[i] = $408binary_subscr.3      ['$408binary_subscr.3', 'i', 'supertrend']
    jump 50                                  []
label 418:
    $const418.1.2 = const(float, 0.0)        ['$const418.1.2']
    supertrend[i] = $const418.1.2            ['$const418.1.2', 'i', 'supertrend']
    jump 50                                  []
label 428:
    $430return_value.1 = cast(value=supertrend) ['$430return_value.1', 'supertrend']
    return $430return_value.1                ['$430return_value.1']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x749869757c70>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: close = arg(0, name=close)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: basic_ub = arg(1, name=basic_ub)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: basic_lb = arg(2, name=basic_lb)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: n = arg(3, name=n)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(len: <built-in function len>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: length = call $2load_global.0(close, func=$2load_global.0, args=[Var(close, helper_loops.py:99)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $10load_global.3 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $12load_method.4 = getattr(value=$10load_global.3, attr=zeros)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_ub = call $12load_method.4(length, func=$12load_method.4, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $20load_global.7 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $22load_method.8 = getattr(value=$20load_global.7, attr=zeros)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_lb = call $22load_method.8(length, func=$22load_method.8, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $30load_global.11 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $32load_method.12 = getattr(value=$30load_global.11, attr=zeros)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend = call $32load_method.12(length, func=$32load_method.12, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $40load_global.15 = global(range: <class 'range'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $46call_function.18 = call $40load_global.15(n, length, func=$40load_global.15, args=[Var(n, helper_loops.py:99), Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $48get_iter.19 = getiter(value=$46call_function.18)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $phi50.0 = $48get_iter.19
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 50
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 50
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x749869757c70>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $50for_iter.1 = iternext(value=$phi50.0)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $phi52.1 = $50for_iter.2
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $50for_iter.3, 52, 428
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 52
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x749869757c70>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: i = $phi52.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $58binary_subscr.4 = getitem(value=basic_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const64.7.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $66binary_subtract.8 = i - $const64.7.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $68binary_subscr.9 = getitem(value=final_ub, index=$66binary_subtract.8, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $70compare_op.10 = $58binary_subscr.4 < $68binary_subscr.9
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool72 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $72pred = call bool72($70compare_op.10, func=bool72, args=(Var($70compare_op.10, helper_loops.py:113),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $72pred, 98, 74
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 74
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x749869757c70>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const78.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $80binary_subtract.4 = i - $const78.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $82binary_subscr.5 = getitem(value=close, index=$80binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const88.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $90binary_subtract.9 = i - $const88.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $92binary_subscr.10 = getitem(value=final_ub, index=$90binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $94compare_op.11 = $82binary_subscr.5 > $92binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool96 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $96pred = call bool96($94compare_op.11, func=bool96, args=(Var($94compare_op.11, helper_loops.py:113),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $96pred, 98, 112
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 98
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x749869757c70>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $102binary_subscr.3 = getitem(value=basic_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_ub[i] = $102binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 128
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 112
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x749869757c70>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const116.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $118binary_subtract.4 = i - $const116.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $120binary_subscr.5 = getitem(value=final_ub, index=$118binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_ub[i] = $120binary_subscr.5
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 128
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 128
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x749869757c70>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $132binary_subscr.3 = getitem(value=basic_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const138.6.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $140binary_subtract.7 = i - $const138.6.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $142binary_subscr.8 = getitem(value=final_lb, index=$140binary_subtract.7, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $144compare_op.9 = $132binary_subscr.3 > $142binary_subscr.8
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool146 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $146pred = call bool146($144compare_op.9, func=bool146, args=(Var($144compare_op.9, helper_loops.py:118),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $146pred, 172, 148
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 148
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x749869757c70>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const152.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $154binary_subtract.4 = i - $const152.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $156binary_subscr.5 = getitem(value=close, index=$154binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const162.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $164binary_subtract.9 = i - $const162.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $166binary_subscr.10 = getitem(value=final_lb, index=$164binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $168compare_op.11 = $156binary_subscr.5 < $166binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool170 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $170pred = call bool170($168compare_op.11, func=bool170, args=(Var($168compare_op.11, helper_loops.py:118),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $170pred, 172, 186
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 172
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x749869757c70>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $176binary_subscr.3 = getitem(value=basic_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_lb[i] = $176binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 202
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 186
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x749869757c70>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const190.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $192binary_subtract.4 = i - $const190.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $194binary_subscr.5 = getitem(value=final_lb, index=$192binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_lb[i] = $194binary_subscr.5
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 202
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 202
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x749869757c70>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const206.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $208binary_subtract.4 = i - $const206.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $210binary_subscr.5 = getitem(value=supertrend, index=$208binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const216.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $218binary_subtract.9 = i - $const216.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $220binary_subscr.10 = getitem(value=final_ub, index=$218binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $222compare_op.11 = $210binary_subscr.5 == $220binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool224 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $224pred = call bool224($222compare_op.11, func=bool224, args=(Var($222compare_op.11, helper_loops.py:123),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $224pred, 226, 256
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 226
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x749869757c70>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $230binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $236binary_subscr.6 = getitem(value=final_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $238compare_op.7 = $230binary_subscr.3 <= $236binary_subscr.6
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool240 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $240pred = call bool240($238compare_op.7, func=bool240, args=(Var($238compare_op.7, helper_loops.py:123),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $240pred, 242, 256
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 242
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x749869757c70>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $246binary_subscr.3 = getitem(value=final_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $246binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 256
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x749869757c70>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const260.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $262binary_subtract.4 = i - $const260.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $264binary_subscr.5 = getitem(value=supertrend, index=$262binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const270.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $272binary_subtract.9 = i - $const270.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $274binary_subscr.10 = getitem(value=final_ub, index=$272binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $276compare_op.11 = $264binary_subscr.5 == $274binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool278 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $278pred = call bool278($276compare_op.11, func=bool278, args=(Var($276compare_op.11, helper_loops.py:125),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $278pred, 280, 310
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 280
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x749869757c70>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $284binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $290binary_subscr.6 = getitem(value=final_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $292compare_op.7 = $284binary_subscr.3 > $290binary_subscr.6
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool294 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $294pred = call bool294($292compare_op.7, func=bool294, args=(Var($292compare_op.7, helper_loops.py:125),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $294pred, 296, 310
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 296
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x749869757c70>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $300binary_subscr.3 = getitem(value=final_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $300binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 310
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x749869757c70>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const314.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $316binary_subtract.4 = i - $const314.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $318binary_subscr.5 = getitem(value=supertrend, index=$316binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const324.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $326binary_subtract.9 = i - $const324.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $328binary_subscr.10 = getitem(value=final_lb, index=$326binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $330compare_op.11 = $318binary_subscr.5 == $328binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool332 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $332pred = call bool332($330compare_op.11, func=bool332, args=(Var($330compare_op.11, helper_loops.py:127),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $332pred, 334, 364
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 334
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x749869757c70>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $338binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $344binary_subscr.6 = getitem(value=final_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $346compare_op.7 = $338binary_subscr.3 >= $344binary_subscr.6
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool348 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $348pred = call bool348($346compare_op.7, func=bool348, args=(Var($346compare_op.7, helper_loops.py:127),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $348pred, 350, 364
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 350
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x749869757c70>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $354binary_subscr.3 = getitem(value=final_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $354binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 364
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x749869757c70>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const368.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $370binary_subtract.4 = i - $const368.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $372binary_subscr.5 = getitem(value=supertrend, index=$370binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const378.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $380binary_subtract.9 = i - $const378.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $382binary_subscr.10 = getitem(value=final_lb, index=$380binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $384compare_op.11 = $372binary_subscr.5 == $382binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool386 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $386pred = call bool386($384compare_op.11, func=bool386, args=(Var($384compare_op.11, helper_loops.py:129),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $386pred, 388, 418
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 388
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x749869757c70>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $392binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $398binary_subscr.6 = getitem(value=final_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $400compare_op.7 = $392binary_subscr.3 < $398binary_subscr.6
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool402 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $402pred = call bool402($400compare_op.7, func=bool402, args=(Var($400compare_op.7, helper_loops.py:129),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $402pred, 404, 418
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 404
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x749869757c70>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $408binary_subscr.3 = getitem(value=final_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $408binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 418
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x749869757c70>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const418.1.2 = const(float, 0.0)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $const418.1.2
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 428
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x749869757c70>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $430return_value.1 = cast(value=supertrend)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $430return_value.1
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 429
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x749869757c70>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 50
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$102binary_subscr.3': [(<numba.core.ir.Assign object at 0x7498697391b0>,
                                      98)],
             '$10load_global.3': [(<numba.core.ir.Assign object at 0x7498698e8fa0>,
                                   0)],
             '$118binary_subtract.4': [(<numba.core.ir.Assign object at 0x7498697399f0>,
                                        112)],
             '$120binary_subscr.5': [(<numba.core.ir.Assign object at 0x749869739b70>,
                                      112)],
             '$12load_method.4': [(<numba.core.ir.Assign object at 0x7498698e9120>,
                                   0)],
             '$132binary_subscr.3': [(<numba.core.ir.Assign object at 0x74986973a1d0>,
                                      128)],
             '$140binary_subtract.7': [(<numba.core.ir.Assign object at 0x74986973a710>,
                                        128)],
             '$142binary_subscr.8': [(<numba.core.ir.Assign object at 0x74986973a890>,
                                      128)],
             '$144compare_op.9': [(<numba.core.ir.Assign object at 0x74986973aa10>,
                                   128)],
             '$146pred': [(<numba.core.ir.Assign object at 0x74986973ac80>,
                           128)],
             '$154binary_subtract.4': [(<numba.core.ir.Assign object at 0x74986973b190>,
                                        148)],
             '$156binary_subscr.5': [(<numba.core.ir.Assign object at 0x74986973b310>,
                                      148)],
             '$164binary_subtract.9': [(<numba.core.ir.Assign object at 0x74986973b850>,
                                        148)],
             '$166binary_subscr.10': [(<numba.core.ir.Assign object at 0x74986973b9d0>,
                                       148)],
             '$168compare_op.11': [(<numba.core.ir.Assign object at 0x74986973bb50>,
                                    148)],
             '$170pred': [(<numba.core.ir.Assign object at 0x74986973bdc0>,
                           148)],
             '$176binary_subscr.3': [(<numba.core.ir.Assign object at 0x749869744190>,
                                      172)],
             '$192binary_subtract.4': [(<numba.core.ir.Assign object at 0x7498697449d0>,
                                        186)],
             '$194binary_subscr.5': [(<numba.core.ir.Assign object at 0x749869744b50>,
                                      186)],
             '$208binary_subtract.4': [(<numba.core.ir.Assign object at 0x749869745330>,
                                        202)],
             '$20load_global.7': [(<numba.core.ir.Assign object at 0x7498698e9660>,
                                   0)],
             '$210binary_subscr.5': [(<numba.core.ir.Assign object at 0x7498697454b0>,
                                      202)],
             '$218binary_subtract.9': [(<numba.core.ir.Assign object at 0x7498697459f0>,
                                        202)],
             '$220binary_subscr.10': [(<numba.core.ir.Assign object at 0x749869745b70>,
                                       202)],
             '$222compare_op.11': [(<numba.core.ir.Assign object at 0x749869745cf0>,
                                    202)],
             '$224pred': [(<numba.core.ir.Assign object at 0x749869745f60>,
                           202)],
             '$22load_method.8': [(<numba.core.ir.Assign object at 0x7498698e97e0>,
                                   0)],
             '$230binary_subscr.3': [(<numba.core.ir.Assign object at 0x7498697462f0>,
                                      226)],
             '$236binary_subscr.6': [(<numba.core.ir.Assign object at 0x7498697466b0>,
                                      226)],
             '$238compare_op.7': [(<numba.core.ir.Assign object at 0x749869746830>,
                                   226)],
             '$240pred': [(<numba.core.ir.Assign object at 0x749869746aa0>,
                           226)],
             '$246binary_subscr.3': [(<numba.core.ir.Assign object at 0x749869746e30>,
                                      242)],
             '$262binary_subtract.4': [(<numba.core.ir.Assign object at 0x749869747670>,
                                        256)],
             '$264binary_subscr.5': [(<numba.core.ir.Assign object at 0x7498697477f0>,
                                      256)],
             '$272binary_subtract.9': [(<numba.core.ir.Assign object at 0x749869747d30>,
                                        256)],
             '$274binary_subscr.10': [(<numba.core.ir.Assign object at 0x749869747eb0>,
                                       256)],
             '$276compare_op.11': [(<numba.core.ir.Assign object at 0x74986974c070>,
                                    256)],
             '$278pred': [(<numba.core.ir.Assign object at 0x74986974c2e0>,
                           256)],
             '$284binary_subscr.3': [(<numba.core.ir.Assign object at 0x74986974c670>,
                                      280)],
             '$290binary_subscr.6': [(<numba.core.ir.Assign object at 0x74986974ca30>,
                                      280)],
             '$292compare_op.7': [(<numba.core.ir.Assign object at 0x74986974cbb0>,
                                   280)],
             '$294pred': [(<numba.core.ir.Assign object at 0x74986974ce20>,
                           280)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7498698e8a60>,
                                  0)],
             '$300binary_subscr.3': [(<numba.core.ir.Assign object at 0x74986974d1b0>,
                                      296)],
             '$30load_global.11': [(<numba.core.ir.Assign object at 0x7498698e9d20>,
                                    0)],
             '$316binary_subtract.4': [(<numba.core.ir.Assign object at 0x74986974d9f0>,
                                        310)],
             '$318binary_subscr.5': [(<numba.core.ir.Assign object at 0x74986974db70>,
                                      310)],
             '$326binary_subtract.9': [(<numba.core.ir.Assign object at 0x74986974e0b0>,
                                        310)],
             '$328binary_subscr.10': [(<numba.core.ir.Assign object at 0x74986974e230>,
                                       310)],
             '$32load_method.12': [(<numba.core.ir.Assign object at 0x7498698e9ea0>,
                                    0)],
             '$330compare_op.11': [(<numba.core.ir.Assign object at 0x74986974e3b0>,
                                    310)],
             '$332pred': [(<numba.core.ir.Assign object at 0x74986974e620>,
                           310)],
             '$338binary_subscr.3': [(<numba.core.ir.Assign object at 0x74986974e9b0>,
                                      334)],
             '$344binary_subscr.6': [(<numba.core.ir.Assign object at 0x74986974ed70>,
                                      334)],
             '$346compare_op.7': [(<numba.core.ir.Assign object at 0x74986974eef0>,
                                   334)],
             '$348pred': [(<numba.core.ir.Assign object at 0x74986974f160>,
                           334)],
             '$354binary_subscr.3': [(<numba.core.ir.Assign object at 0x74986974f4f0>,
                                      350)],
             '$370binary_subtract.4': [(<numba.core.ir.Assign object at 0x74986974fd30>,
                                        364)],
             '$372binary_subscr.5': [(<numba.core.ir.Assign object at 0x74986974feb0>,
                                      364)],
             '$380binary_subtract.9': [(<numba.core.ir.Assign object at 0x749869754430>,
                                        364)],
             '$382binary_subscr.10': [(<numba.core.ir.Assign object at 0x7498697545b0>,
                                       364)],
             '$384compare_op.11': [(<numba.core.ir.Assign object at 0x749869754730>,
                                    364)],
             '$386pred': [(<numba.core.ir.Assign object at 0x7498697549a0>,
                           364)],
             '$392binary_subscr.3': [(<numba.core.ir.Assign object at 0x749869754d30>,
                                      388)],
             '$398binary_subscr.6': [(<numba.core.ir.Assign object at 0x7498697550f0>,
                                      388)],
             '$400compare_op.7': [(<numba.core.ir.Assign object at 0x749869755270>,
                                   388)],
             '$402pred': [(<numba.core.ir.Assign object at 0x7498697554e0>,
                           388)],
             '$408binary_subscr.3': [(<numba.core.ir.Assign object at 0x749869755870>,
                                      404)],
             '$40load_global.15': [(<numba.core.ir.Assign object at 0x7498698ea3e0>,
                                    0)],
             '$430return_value.1': [(<numba.core.ir.Assign object at 0x749869756320>,
                                     428)],
             '$46call_function.18': [(<numba.core.ir.Assign object at 0x7498698ea800>,
                                      0)],
             '$48get_iter.19': [(<numba.core.ir.Assign object at 0x7498698ea920>,
                                 0)],
             '$50for_iter.1': [(<numba.core.ir.Assign object at 0x7498698ea590>,
                                50)],
             '$50for_iter.2': [(<numba.core.ir.Assign object at 0x7498698eaa10>,
                                50)],
             '$50for_iter.3': [(<numba.core.ir.Assign object at 0x7498698eab30>,
                                50)],
             '$58binary_subscr.4': [(<numba.core.ir.Assign object at 0x7498698eb1f0>,
                                     52)],
             '$66binary_subtract.8': [(<numba.core.ir.Assign object at 0x7498698eb730>,
                                       52)],
             '$68binary_subscr.9': [(<numba.core.ir.Assign object at 0x7498698eb8b0>,
                                     52)],
             '$70compare_op.10': [(<numba.core.ir.Assign object at 0x7498698eba30>,
                                   52)],
             '$72pred': [(<numba.core.ir.Assign object at 0x7498698ebca0>, 52)],
             '$80binary_subtract.4': [(<numba.core.ir.Assign object at 0x7498697381f0>,
                                       74)],
             '$82binary_subscr.5': [(<numba.core.ir.Assign object at 0x749869738370>,
                                     74)],
             '$90binary_subtract.9': [(<numba.core.ir.Assign object at 0x7498697388b0>,
                                       74)],
             '$92binary_subscr.10': [(<numba.core.ir.Assign object at 0x749869738a30>,
                                      74)],
             '$94compare_op.11': [(<numba.core.ir.Assign object at 0x749869738bb0>,
                                   74)],
             '$96pred': [(<numba.core.ir.Assign object at 0x749869738e20>, 74)],
             '$const116.3.1': [(<numba.core.ir.Assign object at 0x749869739840>,
                                112)],
             '$const138.6.1': [(<numba.core.ir.Assign object at 0x74986973a560>,
                                128)],
             '$const152.3.1': [(<numba.core.ir.Assign object at 0x74986973afe0>,
                                148)],
             '$const162.8.1': [(<numba.core.ir.Assign object at 0x74986973b6a0>,
                                148)],
             '$const190.3.1': [(<numba.core.ir.Assign object at 0x749869744820>,
                                186)],
             '$const206.3.1': [(<numba.core.ir.Assign object at 0x749869745180>,
                                202)],
             '$const216.8.1': [(<numba.core.ir.Assign object at 0x749869745840>,
                                202)],
             '$const260.3.1': [(<numba.core.ir.Assign object at 0x7498697474c0>,
                                256)],
             '$const270.8.1': [(<numba.core.ir.Assign object at 0x749869747b80>,
                                256)],
             '$const314.3.1': [(<numba.core.ir.Assign object at 0x74986974d840>,
                                310)],
             '$const324.8.1': [(<numba.core.ir.Assign object at 0x74986974df00>,
                                310)],
             '$const368.3.1': [(<numba.core.ir.Assign object at 0x74986974fb80>,
                                364)],
             '$const378.8.1': [(<numba.core.ir.Assign object at 0x749869754280>,
                                364)],
             '$const418.1.2': [(<numba.core.ir.Assign object at 0x749869755cc0>,
                                418)],
             '$const64.7.1': [(<numba.core.ir.Assign object at 0x7498698eb580>,
                               52)],
             '$const78.3.1': [(<numba.core.ir.Assign object at 0x749869738040>,
                               74)],
             '$const88.8.1': [(<numba.core.ir.Assign object at 0x749869738700>,
                               74)],
             '$phi50.0': [(<numba.core.ir.Assign object at 0x7498698e8c10>, 0)],
             '$phi52.1': [(<numba.core.ir.Assign object at 0x7498698ea050>,
                           50)],
             'basic_lb': [(<numba.core.ir.Assign object at 0x7498698e8700>, 0)],
             'basic_ub': [(<numba.core.ir.Assign object at 0x7498698e83a0>, 0)],
             'bool146': [(<numba.core.ir.Assign object at 0x74986973ab60>,
                          128)],
             'bool170': [(<numba.core.ir.Assign object at 0x74986973bca0>,
                          148)],
             'bool224': [(<numba.core.ir.Assign object at 0x749869745e40>,
                          202)],
             'bool240': [(<numba.core.ir.Assign object at 0x749869746980>,
                          226)],
             'bool278': [(<numba.core.ir.Assign object at 0x74986974c1c0>,
                          256)],
             'bool294': [(<numba.core.ir.Assign object at 0x74986974cd00>,
                          280)],
             'bool332': [(<numba.core.ir.Assign object at 0x74986974e500>,
                          310)],
             'bool348': [(<numba.core.ir.Assign object at 0x74986974f040>,
                          334)],
             'bool386': [(<numba.core.ir.Assign object at 0x749869754880>,
                          364)],
             'bool402': [(<numba.core.ir.Assign object at 0x7498697553c0>,
                          388)],
             'bool72': [(<numba.core.ir.Assign object at 0x7498698ebb80>, 52)],
             'bool96': [(<numba.core.ir.Assign object at 0x749869738d00>, 74)],
             'close': [(<numba.core.ir.Assign object at 0x7498698e82e0>, 0)],
             'final_lb': [(<numba.core.ir.Assign object at 0x7498698e9b10>, 0)],
             'final_ub': [(<numba.core.ir.Assign object at 0x7498698e9450>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x7498698eae00>, 52)],
             'length': [(<numba.core.ir.Assign object at 0x7498698e8d60>, 0)],
             'n': [(<numba.core.ir.Assign object at 0x7498698e88e0>, 0)],
             'supertrend': [(<numba.core.ir.Assign object at 0x7498698ea1d0>,
                             0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x7498698cfd60>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4522)
           2	LOAD_GLOBAL(arg=0, lineno=4523)
           4	LOAD_ATTR(arg=1, lineno=4523)
           6	LOAD_FAST(arg=0, lineno=4523)
           8	LOAD_FAST(arg=1, lineno=4523)
          10	LOAD_CONST(arg=1, lineno=4523)
          12	CALL_FUNCTION_KW(arg=2, lineno=4523)
          14	STORE_FAST(arg=2, lineno=4523)
          16	LOAD_FAST(arg=2, lineno=4524)
          18	LOAD_METHOD(arg=2, lineno=4524)
          20	CALL_METHOD(arg=0, lineno=4524)
          22	POP_TOP(arg=None, lineno=4524)
          24	LOAD_FAST(arg=2, lineno=4525)
          26	RETURN_VALUE(arg=None, lineno=4525)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4522)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_attr.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_attr.1', '$shape6.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_attr.1', '$shape6.2', '$dtype8.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=CALL_FUNCTION_KW(arg=2, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_attr.1', '$shape6.2', '$dtype8.3', '$const10.4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=14, inst=STORE_FAST(arg=2, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$12call_function_kw.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=4524)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=4524)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$arr16.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=20, inst=CALL_METHOD(arg=0, lineno=4524)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$18load_method.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=22, inst=POP_TOP(arg=None, lineno=4524)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$20call_method.8']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=24, inst=LOAD_FAST(arg=2, lineno=4525)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=26, inst=RETURN_VALUE(arg=None, lineno=4525)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$arr24.9']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'res': '$shape6.2'}), (8, {'res': '$dtype8.3'}), (10, {'res': '$const10.4.1'}), (12, {'func': '$4load_attr.1', 'args': ['$shape6.2', '$dtype8.3'], 'names': '$const10.4.1', 'res': '$12call_function_kw.5'}), (14, {'value': '$12call_function_kw.5'}), (16, {'res': '$arr16.6'}), (18, {'item': '$arr16.6', 'res': '$18load_method.7'}), (20, {'func': '$18load_method.7', 'args': [], 'res': '$20call_method.8'}), (24, {'res': '$arr24.9'}), (26, {'retval': '$arr24.9', 'castval': '$26return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=empty) ['$2load_global.0', '$4load_attr.1']
    arr = call $4load_attr.1(shape, func=$4load_attr.1, args=[Var(shape, arrayobj.py:4522)], kws=[('dtype', Var(dtype, arrayobj.py:4522))], vararg=None, varkwarg=None, target=None) ['$4load_attr.1', 'arr', 'dtype', 'shape']
    $18load_method.7 = getattr(value=arr, attr=_zero_fill) ['$18load_method.7', 'arr']
    $20call_method.8 = call $18load_method.7(func=$18load_method.7, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_method.7', '$20call_method.8']
    $26return_value.10 = cast(value=arr)     ['$26return_value.10', 'arr']
    return $26return_value.10                ['$26return_value.10']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7498697a9a20>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: shape = arg(0, name=shape)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: dtype = arg(1, name=dtype)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: arr = call $4load_attr.1(shape, func=$4load_attr.1, args=[Var(shape, arrayobj.py:4522)], kws=[('dtype', Var(dtype, arrayobj.py:4522))], vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $18load_method.7 = getattr(value=arr, attr=_zero_fill)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $20call_method.8 = call $18load_method.7(func=$18load_method.7, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $26return_value.10 = cast(value=arr)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $26return_value.10
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$18load_method.7': [(<numba.core.ir.Assign object at 0x7498697ab280>,
                                   0)],
             '$20call_method.8': [(<numba.core.ir.Assign object at 0x7498697ab490>,
                                   0)],
             '$26return_value.10': [(<numba.core.ir.Assign object at 0x7498697ab6a0>,
                                     0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7498697aa7a0>,
                                  0)],
             '$4load_attr.1': [(<numba.core.ir.Assign object at 0x7498697aa920>,
                                0)],
             'arr': [(<numba.core.ir.Assign object at 0x7498697aafe0>, 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x7498697aa620>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x7498697aa500>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x7498697a9a20>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4454)
           2	LOAD_GLOBAL(arg=0, lineno=4455)
           4	LOAD_FAST(arg=0, lineno=4455)
           6	LOAD_FAST(arg=1, lineno=4455)
           8	LOAD_DEREF(arg=0, lineno=4455)
          10	CALL_FUNCTION(arg=3, lineno=4455)
          12	RETURN_VALUE(arg=None, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4454)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$shape4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=LOAD_DEREF(arg=0, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$shape4.1', '$dtype6.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=CALL_FUNCTION(arg=3, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$shape4.1', '$dtype6.2', '$8load_deref.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$10call_function.4']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'res': '$dtype6.2'}), (8, {'res': '$8load_deref.3'}), (10, {'func': '$2load_global.0', 'args': ['$shape4.1', '$dtype6.2', '$8load_deref.3'], 'res': '$10call_function.4'}), (12, {'retval': '$10call_function.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$2load_global.0']
    $8load_deref.3 = freevar(retty: array(float64, 1d, C)) ['$8load_deref.3']
    $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4454), Var(dtype, arrayobj.py:4454), Var($8load_deref.3, arrayobj.py:4455)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_deref.3', 'dtype', 'shape']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7498697e5090>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: shape = arg(0, name=shape)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: dtype = arg(1, name=dtype)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $8load_deref.3 = freevar(retty: array(float64, 1d, C))
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4454), Var(dtype, arrayobj.py:4454), Var($8load_deref.3, arrayobj.py:4455)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $12return_value.5 = cast(value=$10call_function.4)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $12return_value.5
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$10call_function.4': [(<numba.core.ir.Assign object at 0x7498697e5330>,
                                     0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x7498697e5210>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7498697e57b0>,
                                  0)],
             '$8load_deref.3': [(<numba.core.ir.Assign object at 0x7498697e5510>,
                                 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x7498697e5630>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x7498697e4820>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x7498697e5090>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4330)
           2	LOAD_FAST(arg=0, lineno=4333)
           4	LOAD_METHOD(arg=0, lineno=4333)
           6	LOAD_FAST(arg=1, lineno=4333)
           8	LOAD_FAST(arg=2, lineno=4333)
          10	CALL_METHOD(arg=2, lineno=4333)
          12	RETURN_VALUE(arg=None, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4330)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_METHOD(arg=0, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$arrtype2.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_method.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_method.1', '$size6.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=CALL_METHOD(arg=2, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_method.1', '$size6.2', '$align8.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$10call_method.4']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$arrtype2.0'}), (4, {'item': '$arrtype2.0', 'res': '$4load_method.1'}), (6, {'res': '$size6.2'}), (8, {'res': '$align8.3'}), (10, {'func': '$4load_method.1', 'args': ['$size6.2', '$align8.3'], 'res': '$10call_method.4'}), (12, {'retval': '$10call_method.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    arrtype = arg(0, name=arrtype)           ['arrtype']
    size = arg(1, name=size)                 ['size']
    align = arg(2, name=align)               ['align']
    $4load_method.1 = getattr(value=arrtype, attr=_allocate) ['$4load_method.1', 'arrtype']
    $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:4330), Var(align, arrayobj.py:4330)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', 'align', 'size']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7498697aa230>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: arrtype = arg(0, name=arrtype)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: size = arg(1, name=size)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: align = arg(2, name=align)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $4load_method.1 = getattr(value=arrtype, attr=_allocate)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:4330), Var(align, arrayobj.py:4330)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $12return_value.5 = cast(value=$10call_method.4)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $12return_value.5
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$10call_method.4': [(<numba.core.ir.Assign object at 0x7498696d4b80>,
                                   0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x7498696d4c70>,
                                    0)],
             '$4load_method.1': [(<numba.core.ir.Assign object at 0x7498696d4730>,
                                  0)],
             'align': [(<numba.core.ir.Assign object at 0x7498696d4490>, 0)],
             'arrtype': [(<numba.core.ir.Assign object at 0x7498696bb520>, 0)],
             'size': [(<numba.core.ir.Assign object at 0x7498696d4370>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x7498697aa230>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4325)
           2	LOAD_GLOBAL(arg=0, lineno=4326)
           4	LOAD_FAST(arg=1, lineno=4326)
           6	LOAD_FAST(arg=2, lineno=4326)
           8	CALL_FUNCTION(arg=2, lineno=4326)
          10	RETURN_VALUE(arg=None, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4325)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=LOAD_FAST(arg=2, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$allocsize4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$allocsize4.1', '$align6.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=RETURN_VALUE(arg=None, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$8call_function.3']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$allocsize4.1'}), (6, {'res': '$align6.2'}), (8, {'func': '$2load_global.0', 'args': ['$allocsize4.1', '$align6.2'], 'res': '$8call_function.3'}), (10, {'retval': '$8call_function.3', 'castval': '$10return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    cls = arg(0, name=cls)                   ['cls']
    allocsize = arg(1, name=allocsize)       ['allocsize']
    align = arg(2, name=align)               ['align']
    $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:4325), Var(align, arrayobj.py:4325)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'align', 'allocsize']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7498696d5960>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: cls = arg(0, name=cls)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: allocsize = arg(1, name=allocsize)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: align = arg(2, name=align)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:4325), Var(align, arrayobj.py:4325)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $10return_value.4 = cast(value=$8call_function.3)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $10return_value.4
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$10return_value.4': [(<numba.core.ir.Assign object at 0x7498696d6d40>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7498696d6800>,
                                  0)],
             '$8call_function.3': [(<numba.core.ir.Assign object at 0x7498696d6c20>,
                                    0)],
             'align': [(<numba.core.ir.Assign object at 0x7498696d6680>, 0)],
             'allocsize': [(<numba.core.ir.Assign object at 0x7498696d6560>,
                            0)],
             'cls': [(<numba.core.ir.Assign object at 0x7498696d6440>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x7498696d5960>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4513)
           2	LOAD_GLOBAL(arg=0, lineno=4514)
           4	LOAD_FAST(arg=0, lineno=4514)
           6	CALL_FUNCTION(arg=1, lineno=4514)
           8	POP_TOP(arg=None, lineno=4514)
          10	LOAD_CONST(arg=0, lineno=4514)
          12	RETURN_VALUE(arg=None, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4513)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$self4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=POP_TOP(arg=None, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$6call_function.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=LOAD_CONST(arg=0, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$const10.3.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$self4.1'}), (6, {'func': '$2load_global.0', 'args': ['$self4.1'], 'res': '$6call_function.2'}), (10, {'res': '$const10.3.0'}), (12, {'retval': '$const10.3.0', 'castval': '$12return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    self = arg(0, name=self)                 ['self']
    $2load_global.0 = global(_zero_fill_array_method: <intrinsic _zero_fill_array_method>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(self, func=$2load_global.0, args=[Var(self, arrayobj.py:4513)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'self']
    $const10.3.0 = const(NoneType, None)     ['$const10.3.0']
    $12return_value.4 = cast(value=$const10.3.0) ['$12return_value.4', '$const10.3.0']
    return $12return_value.4                 ['$12return_value.4']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7498695824a0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: self = arg(0, name=self)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(_zero_fill_array_method: <intrinsic _zero_fill_array_method>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $6call_function.2 = call $2load_global.0(self, func=$2load_global.0, args=[Var(self, arrayobj.py:4513)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const10.3.0 = const(NoneType, None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $12return_value.4 = cast(value=$const10.3.0)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $12return_value.4
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$12return_value.4': [(<numba.core.ir.Assign object at 0x749869582920>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x749869581bd0>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x749869581d20>,
                                    0)],
             '$const10.3.0': [(<numba.core.ir.Assign object at 0x7498695827a0>,
                               0)],
             'self': [(<numba.core.ir.Assign object at 0x749869581a20>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x7498695824a0>
yfinance - [DEBUG]{MainThread} - wrapper() - Entering history()
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NQ=F', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -  Entering history()
yfinance - [DEBUG]{MainThread} - history() - NQ=F: Yahoo GET parameters: {'range': '60d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -   Entering get()
yfinance - [DEBUG]{MainThread} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{MainThread} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/NQ=F
yfinance - [DEBUG]{MainThread} - _make_request() - params={'range': '60d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{MainThread} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - _get_crumb_basic() - reusing crumb
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _make_request() - response code=200
yfinance - [DEBUG]{MainThread} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{MainThread} - wrapper() -   Exiting get()
yfinance - [DEBUG]{MainThread} - history() - NQ=F: yfinance received OHLC data: 2025-04-22 04:00:00 -> 2025-06-30 06:28:47
yfinance - [DEBUG]{MainThread} - history() - NQ=F: OHLC after cleaning: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:28:47-04:00
yfinance - [DEBUG]{MainThread} - history() - NQ=F: OHLC after combining events: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:28:47-04:00
yfinance - [DEBUG]{MainThread} - history() - NQ=F: yfinance returning OHLC: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:15:00-04:00
yfinance - [DEBUG]{MainThread} - wrapper() -  Exiting history()
yfinance - [DEBUG]{MainThread} - wrapper() - Exiting history()
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
yfinance - [DEBUG]{MainThread} - wrapper() - Entering history()
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PYPL', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -  Entering history()
yfinance - [DEBUG]{MainThread} - history() - PYPL: Yahoo GET parameters: {'range': '60d', 'interval': '15m', 'includePrePost': True, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -   Entering get()
yfinance - [DEBUG]{MainThread} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{MainThread} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/PYPL
yfinance - [DEBUG]{MainThread} - _make_request() - params={'range': '60d', 'interval': '15m', 'includePrePost': True, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{MainThread} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - _get_crumb_basic() - reusing crumb
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _make_request() - response code=200
yfinance - [DEBUG]{MainThread} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{MainThread} - wrapper() -   Exiting get()
yfinance - [DEBUG]{MainThread} - history() - PYPL: yfinance received OHLC data: 2025-04-02 08:00:00 -> 2025-06-27 23:59:55
yfinance - [DEBUG]{MainThread} - history() - PYPL: OHLC after cleaning: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:59:55-04:00
yfinance - [DEBUG]{MainThread} - history() - PYPL: OHLC after combining events: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:59:55-04:00
yfinance - [DEBUG]{MainThread} - history() - PYPL: yfinance returning OHLC: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:45:00-04:00
yfinance - [DEBUG]{MainThread} - wrapper() -  Exiting history()
yfinance - [DEBUG]{MainThread} - wrapper() - Exiting history()
root - [INFO]{MainThread} - get_buy_sell_points_Roll() - Parameters of acquisition "buy_sell_points" for this stock is set to POSITIVE (units) 	92%: 0.82 	98%: 1.582 NEGATIVE (units) 	93%: 0.7994 	98%: 1.3015
yfinance - [DEBUG]{MainThread} - wrapper() - Entering history()
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NQ=F', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -  Entering history()
yfinance - [DEBUG]{MainThread} - history() - NQ=F: Yahoo GET parameters: {'range': '60d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -   Entering get()
yfinance - [DEBUG]{MainThread} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{MainThread} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/NQ=F
yfinance - [DEBUG]{MainThread} - _make_request() - params={'range': '60d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{MainThread} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - _get_crumb_basic() - reusing crumb
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _make_request() - response code=200
yfinance - [DEBUG]{MainThread} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{MainThread} - wrapper() -   Exiting get()
yfinance - [DEBUG]{MainThread} - history() - NQ=F: yfinance received OHLC data: 2025-04-22 04:00:00 -> 2025-06-30 06:29:54
yfinance - [DEBUG]{MainThread} - history() - NQ=F: OHLC after cleaning: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:29:54-04:00
yfinance - [DEBUG]{MainThread} - history() - NQ=F: OHLC after combining events: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:29:54-04:00
yfinance - [DEBUG]{MainThread} - history() - NQ=F: yfinance returning OHLC: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:15:00-04:00
yfinance - [DEBUG]{MainThread} - wrapper() -  Exiting history()
yfinance - [DEBUG]{MainThread} - wrapper() - Exiting history()
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
root - [INFO]{MainThread} - get_correlation_corrwith() - Exception occurred: could not convert string to float: '2025-04-02 09:30:00'
h5py._conv - [DEBUG]{MainThread} - <module>() - Creating converter from 7 to 5
h5py._conv - [DEBUG]{MainThread} - <module>() - Creating converter from 5 to 7
h5py._conv - [DEBUG]{MainThread} - <module>() - Creating converter from 7 to 5
h5py._conv - [DEBUG]{MainThread} - <module>() - Creating converter from 5 to 7
matplotlib - [DEBUG]{MainThread} - wrapper() - matplotlib data path: /opt/conda/lib/python3.10/site-packages/matplotlib/mpl-data
matplotlib - [DEBUG]{MainThread} - wrapper() - CONFIGDIR=/root/.config/matplotlib
matplotlib - [DEBUG]{MainThread} - <module>() - interactive is False
matplotlib - [DEBUG]{MainThread} - <module>() - platform is linux
matplotlib - [DEBUG]{MainThread} - wrapper() - CACHEDIR=/root/.cache/matplotlib
matplotlib.font_manager - [DEBUG]{MainThread} - _load_fontmanager() - Using fontManager instance from /root/.cache/matplotlib/fontlist-v390.json
yfinance - [DEBUG]{MainThread} - wrapper() - Entering history()
peewee - [DEBUG]{MainThread} - execute_sql() - ('CREATE TABLE IF NOT EXISTS "_tz_kv" ("key" VARCHAR(255) NOT NULL PRIMARY KEY, "value" VARCHAR(255)) WITHOUT ROWID', [])
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['UBER', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -  Entering history()
yfinance - [DEBUG]{MainThread} - history() - UBER: Yahoo GET parameters: {'range': '60d', 'interval': '15m', 'includePrePost': True, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -   Entering get()
yfinance - [DEBUG]{MainThread} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{MainThread} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/UBER
yfinance - [DEBUG]{MainThread} - _make_request() - params={'range': '60d', 'interval': '15m', 'includePrePost': True, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{MainThread} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -        Entering _load_cookie_curlCffi()
peewee - [DEBUG]{MainThread} - execute_sql() - ('CREATE TABLE IF NOT EXISTS "_cookieschema" ("strategy" VARCHAR(255) NOT NULL PRIMARY KEY, "fetch_date" DATETIME NOT NULL, "cookie_bytes" BLOB NOT NULL) WITHOUT ROWID', [])
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -        Exiting _load_cookie_curlCffi()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing persistent cookie
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -        Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{MainThread} - wrapper() -        Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_crumb_basic() - crumb = 'dK3IG/1ev6r'
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _make_request() - response code=200
yfinance - [DEBUG]{MainThread} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{MainThread} - wrapper() -   Exiting get()
yfinance - [DEBUG]{MainThread} - history() - UBER: yfinance received OHLC data: 2025-04-02 08:00:00 -> 2025-06-27 23:59:53
yfinance - [DEBUG]{MainThread} - history() - UBER: OHLC after cleaning: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:59:53-04:00
yfinance - [DEBUG]{MainThread} - history() - UBER: OHLC after combining events: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:59:53-04:00
yfinance - [DEBUG]{MainThread} - history() - UBER: yfinance returning OHLC: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:45:00-04:00
yfinance - [DEBUG]{MainThread} - wrapper() -  Exiting history()
yfinance - [DEBUG]{MainThread} - wrapper() - Exiting history()
root - [INFO]{MainThread} - get_buy_sell_points_Roll() - Parameters of acquisition "buy_sell_points" for this stock is set to POSITIVE (units) 	92%: 1.123 	98%: 1.8743 NEGATIVE (units) 	93%: 1.252 	98%: 1.9188
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=99)
           2	LOAD_GLOBAL(arg=0, lineno=106)
           4	LOAD_FAST(arg=0, lineno=106)
           6	CALL_FUNCTION(arg=1, lineno=106)
           8	STORE_FAST(arg=4, lineno=106)
          10	LOAD_GLOBAL(arg=1, lineno=107)
          12	LOAD_METHOD(arg=2, lineno=107)
          14	LOAD_FAST(arg=4, lineno=107)
          16	CALL_METHOD(arg=1, lineno=107)
          18	STORE_FAST(arg=5, lineno=107)
          20	LOAD_GLOBAL(arg=1, lineno=108)
          22	LOAD_METHOD(arg=2, lineno=108)
          24	LOAD_FAST(arg=4, lineno=108)
          26	CALL_METHOD(arg=1, lineno=108)
          28	STORE_FAST(arg=6, lineno=108)
          30	LOAD_GLOBAL(arg=1, lineno=109)
          32	LOAD_METHOD(arg=2, lineno=109)
          34	LOAD_FAST(arg=4, lineno=109)
          36	CALL_METHOD(arg=1, lineno=109)
          38	STORE_FAST(arg=7, lineno=109)
          40	LOAD_GLOBAL(arg=3, lineno=111)
          42	LOAD_FAST(arg=3, lineno=111)
          44	LOAD_FAST(arg=4, lineno=111)
          46	CALL_FUNCTION(arg=2, lineno=111)
          48	GET_ITER(arg=None, lineno=111)
>         50	FOR_ITER(arg=188, lineno=111)
          52	STORE_FAST(arg=8, lineno=111)
          54	LOAD_FAST(arg=1, lineno=113)
          56	LOAD_FAST(arg=8, lineno=113)
          58	BINARY_SUBSCR(arg=None, lineno=113)
          60	LOAD_FAST(arg=5, lineno=113)
          62	LOAD_FAST(arg=8, lineno=113)
          64	LOAD_CONST(arg=1, lineno=113)
          66	BINARY_SUBTRACT(arg=None, lineno=113)
          68	BINARY_SUBSCR(arg=None, lineno=113)
          70	COMPARE_OP(arg=0, lineno=113)
          72	POP_JUMP_IF_TRUE(arg=50, lineno=113)
          74	LOAD_FAST(arg=0, lineno=113)
          76	LOAD_FAST(arg=8, lineno=113)
          78	LOAD_CONST(arg=1, lineno=113)
          80	BINARY_SUBTRACT(arg=None, lineno=113)
          82	BINARY_SUBSCR(arg=None, lineno=113)
          84	LOAD_FAST(arg=5, lineno=113)
          86	LOAD_FAST(arg=8, lineno=113)
          88	LOAD_CONST(arg=1, lineno=113)
          90	BINARY_SUBTRACT(arg=None, lineno=113)
          92	BINARY_SUBSCR(arg=None, lineno=113)
          94	COMPARE_OP(arg=4, lineno=113)
          96	POP_JUMP_IF_FALSE(arg=57, lineno=113)
>         98	LOAD_FAST(arg=1, lineno=114)
         100	LOAD_FAST(arg=8, lineno=114)
         102	BINARY_SUBSCR(arg=None, lineno=114)
         104	LOAD_FAST(arg=5, lineno=114)
         106	LOAD_FAST(arg=8, lineno=114)
         108	STORE_SUBSCR(arg=None, lineno=114)
         110	JUMP_FORWARD(arg=8, lineno=114)
>        112	LOAD_FAST(arg=5, lineno=116)
         114	LOAD_FAST(arg=8, lineno=116)
         116	LOAD_CONST(arg=1, lineno=116)
         118	BINARY_SUBTRACT(arg=None, lineno=116)
         120	BINARY_SUBSCR(arg=None, lineno=116)
         122	LOAD_FAST(arg=5, lineno=116)
         124	LOAD_FAST(arg=8, lineno=116)
         126	STORE_SUBSCR(arg=None, lineno=116)
>        128	LOAD_FAST(arg=2, lineno=118)
         130	LOAD_FAST(arg=8, lineno=118)
         132	BINARY_SUBSCR(arg=None, lineno=118)
         134	LOAD_FAST(arg=6, lineno=118)
         136	LOAD_FAST(arg=8, lineno=118)
         138	LOAD_CONST(arg=1, lineno=118)
         140	BINARY_SUBTRACT(arg=None, lineno=118)
         142	BINARY_SUBSCR(arg=None, lineno=118)
         144	COMPARE_OP(arg=4, lineno=118)
         146	POP_JUMP_IF_TRUE(arg=87, lineno=118)
         148	LOAD_FAST(arg=0, lineno=118)
         150	LOAD_FAST(arg=8, lineno=118)
         152	LOAD_CONST(arg=1, lineno=118)
         154	BINARY_SUBTRACT(arg=None, lineno=118)
         156	BINARY_SUBSCR(arg=None, lineno=118)
         158	LOAD_FAST(arg=6, lineno=118)
         160	LOAD_FAST(arg=8, lineno=118)
         162	LOAD_CONST(arg=1, lineno=118)
         164	BINARY_SUBTRACT(arg=None, lineno=118)
         166	BINARY_SUBSCR(arg=None, lineno=118)
         168	COMPARE_OP(arg=0, lineno=118)
         170	POP_JUMP_IF_FALSE(arg=94, lineno=118)
>        172	LOAD_FAST(arg=2, lineno=119)
         174	LOAD_FAST(arg=8, lineno=119)
         176	BINARY_SUBSCR(arg=None, lineno=119)
         178	LOAD_FAST(arg=6, lineno=119)
         180	LOAD_FAST(arg=8, lineno=119)
         182	STORE_SUBSCR(arg=None, lineno=119)
         184	JUMP_FORWARD(arg=8, lineno=119)
>        186	LOAD_FAST(arg=6, lineno=121)
         188	LOAD_FAST(arg=8, lineno=121)
         190	LOAD_CONST(arg=1, lineno=121)
         192	BINARY_SUBTRACT(arg=None, lineno=121)
         194	BINARY_SUBSCR(arg=None, lineno=121)
         196	LOAD_FAST(arg=6, lineno=121)
         198	LOAD_FAST(arg=8, lineno=121)
         200	STORE_SUBSCR(arg=None, lineno=121)
>        202	LOAD_FAST(arg=7, lineno=123)
         204	LOAD_FAST(arg=8, lineno=123)
         206	LOAD_CONST(arg=1, lineno=123)
         208	BINARY_SUBTRACT(arg=None, lineno=123)
         210	BINARY_SUBSCR(arg=None, lineno=123)
         212	LOAD_FAST(arg=5, lineno=123)
         214	LOAD_FAST(arg=8, lineno=123)
         216	LOAD_CONST(arg=1, lineno=123)
         218	BINARY_SUBTRACT(arg=None, lineno=123)
         220	BINARY_SUBSCR(arg=None, lineno=123)
         222	COMPARE_OP(arg=2, lineno=123)
         224	POP_JUMP_IF_FALSE(arg=129, lineno=123)
         226	LOAD_FAST(arg=0, lineno=123)
         228	LOAD_FAST(arg=8, lineno=123)
         230	BINARY_SUBSCR(arg=None, lineno=123)
         232	LOAD_FAST(arg=5, lineno=123)
         234	LOAD_FAST(arg=8, lineno=123)
         236	BINARY_SUBSCR(arg=None, lineno=123)
         238	COMPARE_OP(arg=1, lineno=123)
         240	POP_JUMP_IF_FALSE(arg=129, lineno=123)
         242	LOAD_FAST(arg=5, lineno=124)
         244	LOAD_FAST(arg=8, lineno=124)
         246	BINARY_SUBSCR(arg=None, lineno=124)
         248	LOAD_FAST(arg=7, lineno=124)
         250	LOAD_FAST(arg=8, lineno=124)
         252	STORE_SUBSCR(arg=None, lineno=124)
         254	JUMP_ABSOLUTE(arg=26, lineno=124)
>        256	LOAD_FAST(arg=7, lineno=125)
         258	LOAD_FAST(arg=8, lineno=125)
         260	LOAD_CONST(arg=1, lineno=125)
         262	BINARY_SUBTRACT(arg=None, lineno=125)
         264	BINARY_SUBSCR(arg=None, lineno=125)
         266	LOAD_FAST(arg=5, lineno=125)
         268	LOAD_FAST(arg=8, lineno=125)
         270	LOAD_CONST(arg=1, lineno=125)
         272	BINARY_SUBTRACT(arg=None, lineno=125)
         274	BINARY_SUBSCR(arg=None, lineno=125)
         276	COMPARE_OP(arg=2, lineno=125)
         278	POP_JUMP_IF_FALSE(arg=156, lineno=125)
         280	LOAD_FAST(arg=0, lineno=125)
         282	LOAD_FAST(arg=8, lineno=125)
         284	BINARY_SUBSCR(arg=None, lineno=125)
         286	LOAD_FAST(arg=5, lineno=125)
         288	LOAD_FAST(arg=8, lineno=125)
         290	BINARY_SUBSCR(arg=None, lineno=125)
         292	COMPARE_OP(arg=4, lineno=125)
         294	POP_JUMP_IF_FALSE(arg=156, lineno=125)
         296	LOAD_FAST(arg=6, lineno=126)
         298	LOAD_FAST(arg=8, lineno=126)
         300	BINARY_SUBSCR(arg=None, lineno=126)
         302	LOAD_FAST(arg=7, lineno=126)
         304	LOAD_FAST(arg=8, lineno=126)
         306	STORE_SUBSCR(arg=None, lineno=126)
         308	JUMP_ABSOLUTE(arg=26, lineno=126)
>        310	LOAD_FAST(arg=7, lineno=127)
         312	LOAD_FAST(arg=8, lineno=127)
         314	LOAD_CONST(arg=1, lineno=127)
         316	BINARY_SUBTRACT(arg=None, lineno=127)
         318	BINARY_SUBSCR(arg=None, lineno=127)
         320	LOAD_FAST(arg=6, lineno=127)
         322	LOAD_FAST(arg=8, lineno=127)
         324	LOAD_CONST(arg=1, lineno=127)
         326	BINARY_SUBTRACT(arg=None, lineno=127)
         328	BINARY_SUBSCR(arg=None, lineno=127)
         330	COMPARE_OP(arg=2, lineno=127)
         332	POP_JUMP_IF_FALSE(arg=183, lineno=127)
         334	LOAD_FAST(arg=0, lineno=127)
         336	LOAD_FAST(arg=8, lineno=127)
         338	BINARY_SUBSCR(arg=None, lineno=127)
         340	LOAD_FAST(arg=6, lineno=127)
         342	LOAD_FAST(arg=8, lineno=127)
         344	BINARY_SUBSCR(arg=None, lineno=127)
         346	COMPARE_OP(arg=5, lineno=127)
         348	POP_JUMP_IF_FALSE(arg=183, lineno=127)
         350	LOAD_FAST(arg=6, lineno=128)
         352	LOAD_FAST(arg=8, lineno=128)
         354	BINARY_SUBSCR(arg=None, lineno=128)
         356	LOAD_FAST(arg=7, lineno=128)
         358	LOAD_FAST(arg=8, lineno=128)
         360	STORE_SUBSCR(arg=None, lineno=128)
         362	JUMP_ABSOLUTE(arg=26, lineno=128)
>        364	LOAD_FAST(arg=7, lineno=129)
         366	LOAD_FAST(arg=8, lineno=129)
         368	LOAD_CONST(arg=1, lineno=129)
         370	BINARY_SUBTRACT(arg=None, lineno=129)
         372	BINARY_SUBSCR(arg=None, lineno=129)
         374	LOAD_FAST(arg=6, lineno=129)
         376	LOAD_FAST(arg=8, lineno=129)
         378	LOAD_CONST(arg=1, lineno=129)
         380	BINARY_SUBTRACT(arg=None, lineno=129)
         382	BINARY_SUBSCR(arg=None, lineno=129)
         384	COMPARE_OP(arg=2, lineno=129)
         386	POP_JUMP_IF_FALSE(arg=210, lineno=129)
         388	LOAD_FAST(arg=0, lineno=129)
         390	LOAD_FAST(arg=8, lineno=129)
         392	BINARY_SUBSCR(arg=None, lineno=129)
         394	LOAD_FAST(arg=6, lineno=129)
         396	LOAD_FAST(arg=8, lineno=129)
         398	BINARY_SUBSCR(arg=None, lineno=129)
         400	COMPARE_OP(arg=0, lineno=129)
         402	POP_JUMP_IF_FALSE(arg=210, lineno=129)
         404	LOAD_FAST(arg=5, lineno=130)
         406	LOAD_FAST(arg=8, lineno=130)
         408	BINARY_SUBSCR(arg=None, lineno=130)
         410	LOAD_FAST(arg=7, lineno=130)
         412	LOAD_FAST(arg=8, lineno=130)
         414	STORE_SUBSCR(arg=None, lineno=130)
         416	JUMP_ABSOLUTE(arg=26, lineno=130)
>        418	LOAD_CONST(arg=2, lineno=132)
         420	LOAD_FAST(arg=7, lineno=132)
         422	LOAD_FAST(arg=8, lineno=132)
         424	STORE_SUBSCR(arg=None, lineno=132)
         426	JUMP_ABSOLUTE(arg=26, lineno=132)
>        428	LOAD_FAST(arg=7, lineno=134)
         430	RETURN_VALUE(arg=None, lineno=134)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=99)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=106)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=106)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=106)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$close4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=STORE_FAST(arg=4, lineno=106)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$6call_function.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=LOAD_METHOD(arg=2, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$10load_global.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=14, inst=LOAD_FAST(arg=4, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$12load_method.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=16, inst=CALL_METHOD(arg=1, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$12load_method.4', '$length14.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=18, inst=STORE_FAST(arg=5, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$16call_method.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=20, inst=LOAD_GLOBAL(arg=1, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=22, inst=LOAD_METHOD(arg=2, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$20load_global.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=24, inst=LOAD_FAST(arg=4, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$22load_method.8']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=26, inst=CALL_METHOD(arg=1, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$22load_method.8', '$length24.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=28, inst=STORE_FAST(arg=6, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$26call_method.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=30, inst=LOAD_GLOBAL(arg=1, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=32, inst=LOAD_METHOD(arg=2, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$30load_global.11']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=34, inst=LOAD_FAST(arg=4, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$32load_method.12']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=36, inst=CALL_METHOD(arg=1, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$32load_method.12', '$length34.13']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=38, inst=STORE_FAST(arg=7, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$36call_method.14']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=40, inst=LOAD_GLOBAL(arg=3, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=42, inst=LOAD_FAST(arg=3, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$40load_global.15']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=44, inst=LOAD_FAST(arg=4, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$40load_global.15', '$n42.16']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=46, inst=CALL_FUNCTION(arg=2, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$40load_global.15', '$n42.16', '$length44.17']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=48, inst=GET_ITER(arg=None, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$46call_function.18']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$48get_iter.19',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi50.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=50 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=50, inst=FOR_ITER(arg=188, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi50.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=428, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=('$phi50.0', '$50for_iter.2'), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=428 nstack_initial=0), State(pc_initial=52 nstack_initial=2)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=428 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=428, inst=LOAD_FAST(arg=7, lineno=134)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=430, inst=RETURN_VALUE(arg=None, lineno=134)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$supertrend428.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=52 nstack_initial=2)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi52.0', '$phi52.1']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=52 nstack_initial=2)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=52, inst=STORE_FAST(arg=8, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$phi52.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=54, inst=LOAD_FAST(arg=1, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=56, inst=LOAD_FAST(arg=8, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$basic_ub54.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=58, inst=BINARY_SUBSCR(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$basic_ub54.2', '$i56.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=60, inst=LOAD_FAST(arg=5, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=62, inst=LOAD_FAST(arg=8, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$final_ub60.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$final_ub60.5', '$i62.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=66, inst=BINARY_SUBTRACT(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$final_ub60.5', '$i62.6', '$const64.7.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=68, inst=BINARY_SUBSCR(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$final_ub60.5', '$66binary_subtract.8']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=70, inst=COMPARE_OP(arg=0, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$68binary_subscr.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=72, inst=POP_JUMP_IF_TRUE(arg=50, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$70compare_op.10']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=74, stack=('$phi52.0',), blockstack=(), npush=0), Edge(pc=98, stack=('$phi52.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=74 nstack_initial=1), State(pc_initial=98 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi74.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=74 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=74, inst=LOAD_FAST(arg=0, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=76, inst=LOAD_FAST(arg=8, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$close74.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$close74.1', '$i76.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=80, inst=BINARY_SUBTRACT(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$close74.1', '$i76.2', '$const78.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$close74.1', '$80binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=84, inst=LOAD_FAST(arg=5, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=86, inst=LOAD_FAST(arg=8, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$final_ub84.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=88, inst=LOAD_CONST(arg=1, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$final_ub84.6', '$i86.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=90, inst=BINARY_SUBTRACT(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$final_ub84.6', '$i86.7', '$const88.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=92, inst=BINARY_SUBSCR(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$final_ub84.6', '$90binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=94, inst=COMPARE_OP(arg=4, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$92binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=96, inst=POP_JUMP_IF_FALSE(arg=57, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$94compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=98, stack=('$phi74.0',), blockstack=(), npush=0), Edge(pc=112, stack=('$phi74.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=98 nstack_initial=1), State(pc_initial=98 nstack_initial=1), State(pc_initial=112 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi98.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=98 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=98, inst=LOAD_FAST(arg=1, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=100, inst=LOAD_FAST(arg=8, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$basic_ub98.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=102, inst=BINARY_SUBSCR(arg=None, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$basic_ub98.1', '$i100.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=104, inst=LOAD_FAST(arg=5, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$102binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=106, inst=LOAD_FAST(arg=8, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$102binary_subscr.3', '$final_ub104.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=108, inst=STORE_SUBSCR(arg=None, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$102binary_subscr.3', '$final_ub104.4', '$i106.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=110, inst=JUMP_FORWARD(arg=8, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=128, stack=('$phi98.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=98 nstack_initial=1), State(pc_initial=112 nstack_initial=1), State(pc_initial=128 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=112 nstack_initial=1), State(pc_initial=128 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi112.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=112 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=112, inst=LOAD_FAST(arg=5, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=114, inst=LOAD_FAST(arg=8, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$final_ub112.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=116, inst=LOAD_CONST(arg=1, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$final_ub112.1', '$i114.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=118, inst=BINARY_SUBTRACT(arg=None, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$final_ub112.1', '$i114.2', '$const116.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=120, inst=BINARY_SUBSCR(arg=None, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$final_ub112.1', '$118binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=122, inst=LOAD_FAST(arg=5, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$120binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=124, inst=LOAD_FAST(arg=8, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$120binary_subscr.5', '$final_ub122.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=126, inst=STORE_SUBSCR(arg=None, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$120binary_subscr.5', '$final_ub122.6', '$i124.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=128, stack=('$phi112.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=128 nstack_initial=1), State(pc_initial=128 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi128.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=128 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=128, inst=LOAD_FAST(arg=2, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=130, inst=LOAD_FAST(arg=8, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$basic_lb128.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=132, inst=BINARY_SUBSCR(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$basic_lb128.1', '$i130.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=134, inst=LOAD_FAST(arg=6, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=136, inst=LOAD_FAST(arg=8, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$final_lb134.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=138, inst=LOAD_CONST(arg=1, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$final_lb134.4', '$i136.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=140, inst=BINARY_SUBTRACT(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$final_lb134.4', '$i136.5', '$const138.6.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=142, inst=BINARY_SUBSCR(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$final_lb134.4', '$140binary_subtract.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=144, inst=COMPARE_OP(arg=4, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$142binary_subscr.8']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=146, inst=POP_JUMP_IF_TRUE(arg=87, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$144compare_op.9']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=148, stack=('$phi128.0',), blockstack=(), npush=0), Edge(pc=172, stack=('$phi128.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=128 nstack_initial=1), State(pc_initial=148 nstack_initial=1), State(pc_initial=172 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=148 nstack_initial=1), State(pc_initial=172 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi148.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=148 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=150, inst=LOAD_FAST(arg=8, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$close148.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=152, inst=LOAD_CONST(arg=1, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$close148.1', '$i150.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=154, inst=BINARY_SUBTRACT(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$close148.1', '$i150.2', '$const152.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=156, inst=BINARY_SUBSCR(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$close148.1', '$154binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=158, inst=LOAD_FAST(arg=6, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=160, inst=LOAD_FAST(arg=8, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$final_lb158.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=162, inst=LOAD_CONST(arg=1, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$final_lb158.6', '$i160.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=164, inst=BINARY_SUBTRACT(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$final_lb158.6', '$i160.7', '$const162.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=166, inst=BINARY_SUBSCR(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$final_lb158.6', '$164binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=168, inst=COMPARE_OP(arg=0, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$166binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=170, inst=POP_JUMP_IF_FALSE(arg=94, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$168compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=172, stack=('$phi148.0',), blockstack=(), npush=0), Edge(pc=186, stack=('$phi148.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=172 nstack_initial=1), State(pc_initial=172 nstack_initial=1), State(pc_initial=186 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi172.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=172 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=172, inst=LOAD_FAST(arg=2, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=174, inst=LOAD_FAST(arg=8, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$basic_lb172.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=176, inst=BINARY_SUBSCR(arg=None, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$basic_lb172.1', '$i174.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=178, inst=LOAD_FAST(arg=6, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$176binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=180, inst=LOAD_FAST(arg=8, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$176binary_subscr.3', '$final_lb178.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=182, inst=STORE_SUBSCR(arg=None, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$176binary_subscr.3', '$final_lb178.4', '$i180.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=184, inst=JUMP_FORWARD(arg=8, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=202, stack=('$phi172.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=172 nstack_initial=1), State(pc_initial=186 nstack_initial=1), State(pc_initial=202 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=186 nstack_initial=1), State(pc_initial=202 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi186.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=186 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=186, inst=LOAD_FAST(arg=6, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=188, inst=LOAD_FAST(arg=8, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$final_lb186.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=190, inst=LOAD_CONST(arg=1, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$final_lb186.1', '$i188.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=192, inst=BINARY_SUBTRACT(arg=None, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$final_lb186.1', '$i188.2', '$const190.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=194, inst=BINARY_SUBSCR(arg=None, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$final_lb186.1', '$192binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=196, inst=LOAD_FAST(arg=6, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$194binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=198, inst=LOAD_FAST(arg=8, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$194binary_subscr.5', '$final_lb196.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=200, inst=STORE_SUBSCR(arg=None, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$194binary_subscr.5', '$final_lb196.6', '$i198.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=202, stack=('$phi186.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=202 nstack_initial=1), State(pc_initial=202 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi202.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=202 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=202, inst=LOAD_FAST(arg=7, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=204, inst=LOAD_FAST(arg=8, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$supertrend202.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=206, inst=LOAD_CONST(arg=1, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$supertrend202.1', '$i204.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=208, inst=BINARY_SUBTRACT(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$supertrend202.1', '$i204.2', '$const206.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=210, inst=BINARY_SUBSCR(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$supertrend202.1', '$208binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=212, inst=LOAD_FAST(arg=5, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=214, inst=LOAD_FAST(arg=8, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$final_ub212.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=216, inst=LOAD_CONST(arg=1, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$final_ub212.6', '$i214.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=218, inst=BINARY_SUBTRACT(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$final_ub212.6', '$i214.7', '$const216.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=220, inst=BINARY_SUBSCR(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$final_ub212.6', '$218binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=222, inst=COMPARE_OP(arg=2, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$220binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=224, inst=POP_JUMP_IF_FALSE(arg=129, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$222compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=226, stack=('$phi202.0',), blockstack=(), npush=0), Edge(pc=256, stack=('$phi202.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=202 nstack_initial=1), State(pc_initial=226 nstack_initial=1), State(pc_initial=256 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=226 nstack_initial=1), State(pc_initial=256 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi226.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=226 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=226, inst=LOAD_FAST(arg=0, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=228, inst=LOAD_FAST(arg=8, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$close226.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=230, inst=BINARY_SUBSCR(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$close226.1', '$i228.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=232, inst=LOAD_FAST(arg=5, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$230binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=234, inst=LOAD_FAST(arg=8, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$230binary_subscr.3', '$final_ub232.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=236, inst=BINARY_SUBSCR(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$230binary_subscr.3', '$final_ub232.4', '$i234.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=238, inst=COMPARE_OP(arg=1, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$230binary_subscr.3', '$236binary_subscr.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=240, inst=POP_JUMP_IF_FALSE(arg=129, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$238compare_op.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=242, stack=('$phi226.0',), blockstack=(), npush=0), Edge(pc=256, stack=('$phi226.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=256 nstack_initial=1), State(pc_initial=242 nstack_initial=1), State(pc_initial=256 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi256.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=256 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=256, inst=LOAD_FAST(arg=7, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=258, inst=LOAD_FAST(arg=8, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$supertrend256.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=260, inst=LOAD_CONST(arg=1, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$supertrend256.1', '$i258.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=262, inst=BINARY_SUBTRACT(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$supertrend256.1', '$i258.2', '$const260.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=264, inst=BINARY_SUBSCR(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$supertrend256.1', '$262binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=266, inst=LOAD_FAST(arg=5, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=268, inst=LOAD_FAST(arg=8, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$final_ub266.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=270, inst=LOAD_CONST(arg=1, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$final_ub266.6', '$i268.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=272, inst=BINARY_SUBTRACT(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$final_ub266.6', '$i268.7', '$const270.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=274, inst=BINARY_SUBSCR(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$final_ub266.6', '$272binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=276, inst=COMPARE_OP(arg=2, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$274binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=278, inst=POP_JUMP_IF_FALSE(arg=156, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$276compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=280, stack=('$phi256.0',), blockstack=(), npush=0), Edge(pc=310, stack=('$phi256.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=242 nstack_initial=1), State(pc_initial=256 nstack_initial=1), State(pc_initial=280 nstack_initial=1), State(pc_initial=310 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi242.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=242 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=242, inst=LOAD_FAST(arg=5, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=244, inst=LOAD_FAST(arg=8, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$final_ub242.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=246, inst=BINARY_SUBSCR(arg=None, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$final_ub242.1', '$i244.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=248, inst=LOAD_FAST(arg=7, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$246binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=250, inst=LOAD_FAST(arg=8, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$246binary_subscr.3', '$supertrend248.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=252, inst=STORE_SUBSCR(arg=None, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$246binary_subscr.3', '$supertrend248.4', '$i250.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=254, inst=JUMP_ABSOLUTE(arg=26, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi242.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=256 nstack_initial=1), State(pc_initial=280 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=280 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi280.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=280 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=280, inst=LOAD_FAST(arg=0, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=282, inst=LOAD_FAST(arg=8, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$close280.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=284, inst=BINARY_SUBSCR(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$close280.1', '$i282.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=286, inst=LOAD_FAST(arg=5, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$284binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=288, inst=LOAD_FAST(arg=8, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$284binary_subscr.3', '$final_ub286.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=290, inst=BINARY_SUBSCR(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$284binary_subscr.3', '$final_ub286.4', '$i288.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=292, inst=COMPARE_OP(arg=4, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$284binary_subscr.3', '$290binary_subscr.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=294, inst=POP_JUMP_IF_FALSE(arg=156, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$292compare_op.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=296, stack=('$phi280.0',), blockstack=(), npush=0), Edge(pc=310, stack=('$phi280.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=310 nstack_initial=1), State(pc_initial=50 nstack_initial=1), State(pc_initial=296 nstack_initial=1), State(pc_initial=310 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi310.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=310 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=310, inst=LOAD_FAST(arg=7, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=312, inst=LOAD_FAST(arg=8, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$supertrend310.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=314, inst=LOAD_CONST(arg=1, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$supertrend310.1', '$i312.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=316, inst=BINARY_SUBTRACT(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$supertrend310.1', '$i312.2', '$const314.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=318, inst=BINARY_SUBSCR(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$supertrend310.1', '$316binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=320, inst=LOAD_FAST(arg=6, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=322, inst=LOAD_FAST(arg=8, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$final_lb320.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=324, inst=LOAD_CONST(arg=1, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$final_lb320.6', '$i322.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=326, inst=BINARY_SUBTRACT(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$final_lb320.6', '$i322.7', '$const324.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=328, inst=BINARY_SUBSCR(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$final_lb320.6', '$326binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=330, inst=COMPARE_OP(arg=2, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$328binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=332, inst=POP_JUMP_IF_FALSE(arg=183, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$330compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=334, stack=('$phi310.0',), blockstack=(), npush=0), Edge(pc=364, stack=('$phi310.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=296 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=334 nstack_initial=1), State(pc_initial=364 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=296 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=334 nstack_initial=1), State(pc_initial=364 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi296.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=296 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=296, inst=LOAD_FAST(arg=6, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=298, inst=LOAD_FAST(arg=8, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$final_lb296.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=300, inst=BINARY_SUBSCR(arg=None, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$final_lb296.1', '$i298.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=302, inst=LOAD_FAST(arg=7, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$300binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=304, inst=LOAD_FAST(arg=8, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$300binary_subscr.3', '$supertrend302.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=306, inst=STORE_SUBSCR(arg=None, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$300binary_subscr.3', '$supertrend302.4', '$i304.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=308, inst=JUMP_ABSOLUTE(arg=26, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi296.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=310 nstack_initial=1), State(pc_initial=334 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=334 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi334.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=334 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=334, inst=LOAD_FAST(arg=0, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=336, inst=LOAD_FAST(arg=8, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$close334.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=338, inst=BINARY_SUBSCR(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$close334.1', '$i336.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=340, inst=LOAD_FAST(arg=6, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$338binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=342, inst=LOAD_FAST(arg=8, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$338binary_subscr.3', '$final_lb340.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=344, inst=BINARY_SUBSCR(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$338binary_subscr.3', '$final_lb340.4', '$i342.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=346, inst=COMPARE_OP(arg=5, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$338binary_subscr.3', '$344binary_subscr.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=348, inst=POP_JUMP_IF_FALSE(arg=183, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$346compare_op.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=350, stack=('$phi334.0',), blockstack=(), npush=0), Edge(pc=364, stack=('$phi334.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=364 nstack_initial=1), State(pc_initial=50 nstack_initial=1), State(pc_initial=350 nstack_initial=1), State(pc_initial=364 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi364.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=364 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=364, inst=LOAD_FAST(arg=7, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=366, inst=LOAD_FAST(arg=8, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$supertrend364.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=368, inst=LOAD_CONST(arg=1, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$supertrend364.1', '$i366.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=370, inst=BINARY_SUBTRACT(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$supertrend364.1', '$i366.2', '$const368.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=372, inst=BINARY_SUBSCR(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$supertrend364.1', '$370binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=374, inst=LOAD_FAST(arg=6, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=376, inst=LOAD_FAST(arg=8, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$final_lb374.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=378, inst=LOAD_CONST(arg=1, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$final_lb374.6', '$i376.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=380, inst=BINARY_SUBTRACT(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$final_lb374.6', '$i376.7', '$const378.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=382, inst=BINARY_SUBSCR(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$final_lb374.6', '$380binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=384, inst=COMPARE_OP(arg=2, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$382binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=386, inst=POP_JUMP_IF_FALSE(arg=210, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$384compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=388, stack=('$phi364.0',), blockstack=(), npush=0), Edge(pc=418, stack=('$phi364.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=350 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=388 nstack_initial=1), State(pc_initial=418 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=350 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=388 nstack_initial=1), State(pc_initial=418 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi350.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=350 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=350, inst=LOAD_FAST(arg=6, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=352, inst=LOAD_FAST(arg=8, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$final_lb350.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=354, inst=BINARY_SUBSCR(arg=None, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$final_lb350.1', '$i352.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=356, inst=LOAD_FAST(arg=7, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$354binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=358, inst=LOAD_FAST(arg=8, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$354binary_subscr.3', '$supertrend356.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=360, inst=STORE_SUBSCR(arg=None, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$354binary_subscr.3', '$supertrend356.4', '$i358.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=362, inst=JUMP_ABSOLUTE(arg=26, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi350.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=364 nstack_initial=1), State(pc_initial=388 nstack_initial=1), State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=388 nstack_initial=1), State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi388.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=388 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=388, inst=LOAD_FAST(arg=0, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=390, inst=LOAD_FAST(arg=8, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$close388.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=392, inst=BINARY_SUBSCR(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$close388.1', '$i390.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=394, inst=LOAD_FAST(arg=6, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$392binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=396, inst=LOAD_FAST(arg=8, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$392binary_subscr.3', '$final_lb394.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=398, inst=BINARY_SUBSCR(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$392binary_subscr.3', '$final_lb394.4', '$i396.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=400, inst=COMPARE_OP(arg=0, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$392binary_subscr.3', '$398binary_subscr.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=402, inst=POP_JUMP_IF_FALSE(arg=210, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$400compare_op.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=404, stack=('$phi388.0',), blockstack=(), npush=0), Edge(pc=418, stack=('$phi388.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1), State(pc_initial=404 nstack_initial=1), State(pc_initial=418 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi418.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=418 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=418, inst=LOAD_CONST(arg=2, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=420, inst=LOAD_FAST(arg=7, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0', '$const418.1.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=422, inst=LOAD_FAST(arg=8, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0', '$const418.1.2', '$supertrend420.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=424, inst=STORE_SUBSCR(arg=None, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0', '$const418.1.2', '$supertrend420.2', '$i422.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=426, inst=JUMP_ABSOLUTE(arg=26, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi418.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=404 nstack_initial=1), State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=404 nstack_initial=1), State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi404.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=404 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=404, inst=LOAD_FAST(arg=5, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=406, inst=LOAD_FAST(arg=8, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$final_ub404.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=408, inst=BINARY_SUBSCR(arg=None, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$final_ub404.1', '$i406.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=410, inst=LOAD_FAST(arg=7, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$408binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=412, inst=LOAD_FAST(arg=8, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$408binary_subscr.3', '$supertrend410.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=414, inst=STORE_SUBSCR(arg=None, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$408binary_subscr.3', '$supertrend410.4', '$i412.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=416, inst=JUMP_ABSOLUTE(arg=26, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi404.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): {'$phi50.0'},
             State(pc_initial=52 nstack_initial=2): {'$phi52.1'},
             State(pc_initial=74 nstack_initial=1): set(),
             State(pc_initial=98 nstack_initial=1): set(),
             State(pc_initial=112 nstack_initial=1): set(),
             State(pc_initial=128 nstack_initial=1): set(),
             State(pc_initial=148 nstack_initial=1): set(),
             State(pc_initial=172 nstack_initial=1): set(),
             State(pc_initial=186 nstack_initial=1): set(),
             State(pc_initial=202 nstack_initial=1): set(),
             State(pc_initial=226 nstack_initial=1): set(),
             State(pc_initial=242 nstack_initial=1): set(),
             State(pc_initial=256 nstack_initial=1): set(),
             State(pc_initial=280 nstack_initial=1): set(),
             State(pc_initial=296 nstack_initial=1): set(),
             State(pc_initial=310 nstack_initial=1): set(),
             State(pc_initial=334 nstack_initial=1): set(),
             State(pc_initial=350 nstack_initial=1): set(),
             State(pc_initial=364 nstack_initial=1): set(),
             State(pc_initial=388 nstack_initial=1): set(),
             State(pc_initial=404 nstack_initial=1): set(),
             State(pc_initial=418 nstack_initial=1): set(),
             State(pc_initial=428 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {'$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi52.1': State(pc_initial=50 nstack_initial=1)}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi128.0': {('$phi112.0',
                            State(pc_initial=112 nstack_initial=1)),
                           ('$phi98.0', State(pc_initial=98 nstack_initial=1))},
             '$phi148.0': {('$phi128.0',
                            State(pc_initial=128 nstack_initial=1))},
             '$phi172.0': {('$phi128.0',
                            State(pc_initial=128 nstack_initial=1)),
                           ('$phi148.0',
                            State(pc_initial=148 nstack_initial=1))},
             '$phi186.0': {('$phi148.0',
                            State(pc_initial=148 nstack_initial=1))},
             '$phi202.0': {('$phi172.0',
                            State(pc_initial=172 nstack_initial=1)),
                           ('$phi186.0',
                            State(pc_initial=186 nstack_initial=1))},
             '$phi226.0': {('$phi202.0',
                            State(pc_initial=202 nstack_initial=1))},
             '$phi242.0': {('$phi226.0',
                            State(pc_initial=226 nstack_initial=1))},
             '$phi256.0': {('$phi202.0',
                            State(pc_initial=202 nstack_initial=1)),
                           ('$phi226.0',
                            State(pc_initial=226 nstack_initial=1))},
             '$phi280.0': {('$phi256.0',
                            State(pc_initial=256 nstack_initial=1))},
             '$phi296.0': {('$phi280.0',
                            State(pc_initial=280 nstack_initial=1))},
             '$phi310.0': {('$phi256.0',
                            State(pc_initial=256 nstack_initial=1)),
                           ('$phi280.0',
                            State(pc_initial=280 nstack_initial=1))},
             '$phi334.0': {('$phi310.0',
                            State(pc_initial=310 nstack_initial=1))},
             '$phi350.0': {('$phi334.0',
                            State(pc_initial=334 nstack_initial=1))},
             '$phi364.0': {('$phi310.0',
                            State(pc_initial=310 nstack_initial=1)),
                           ('$phi334.0',
                            State(pc_initial=334 nstack_initial=1))},
             '$phi388.0': {('$phi364.0',
                            State(pc_initial=364 nstack_initial=1))},
             '$phi404.0': {('$phi388.0',
                            State(pc_initial=388 nstack_initial=1))},
             '$phi418.0': {('$phi364.0',
                            State(pc_initial=364 nstack_initial=1)),
                           ('$phi388.0',
                            State(pc_initial=388 nstack_initial=1))},
             '$phi50.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi242.0', State(pc_initial=242 nstack_initial=1)),
                          ('$phi296.0', State(pc_initial=296 nstack_initial=1)),
                          ('$phi350.0', State(pc_initial=350 nstack_initial=1)),
                          ('$phi404.0', State(pc_initial=404 nstack_initial=1)),
                          ('$phi418.0',
                           State(pc_initial=418 nstack_initial=1))},
             '$phi52.0': {('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))},
             '$phi74.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi98.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))}})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi128.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi148.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi172.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi186.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi202.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi226.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi242.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi256.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi280.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi296.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi310.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi334.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi350.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi364.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi388.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi404.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi418.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi50.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi52.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))},
             '$phi74.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi98.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))}})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi128.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi148.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi172.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi186.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi202.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi226.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi242.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi256.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi280.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi296.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi310.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi334.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi350.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi364.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi388.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi404.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi418.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))},
             '$phi74.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))}})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi128.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi148.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi172.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi186.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi202.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi226.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi242.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi256.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi280.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi296.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi310.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi334.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi350.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi364.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi388.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi404.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi418.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))},
             '$phi74.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))}})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {'$phi50.0': {('$48get_iter.19', State(pc_initial=0 nstack_initial=0))},
 '$phi52.1': {('$50for_iter.2', State(pc_initial=50 nstack_initial=1))}}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi50.0': '$48get_iter.19'},
             State(pc_initial=50 nstack_initial=1): {'$phi52.1': '$50for_iter.2'}})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$close4.1'}), (6, {'func': '$2load_global.0', 'args': ['$close4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_global.3'}), (12, {'item': '$10load_global.3', 'res': '$12load_method.4'}), (14, {'res': '$length14.5'}), (16, {'func': '$12load_method.4', 'args': ['$length14.5'], 'res': '$16call_method.6'}), (18, {'value': '$16call_method.6'}), (20, {'res': '$20load_global.7'}), (22, {'item': '$20load_global.7', 'res': '$22load_method.8'}), (24, {'res': '$length24.9'}), (26, {'func': '$22load_method.8', 'args': ['$length24.9'], 'res': '$26call_method.10'}), (28, {'value': '$26call_method.10'}), (30, {'res': '$30load_global.11'}), (32, {'item': '$30load_global.11', 'res': '$32load_method.12'}), (34, {'res': '$length34.13'}), (36, {'func': '$32load_method.12', 'args': ['$length34.13'], 'res': '$36call_method.14'}), (38, {'value': '$36call_method.14'}), (40, {'res': '$40load_global.15'}), (42, {'res': '$n42.16'}), (44, {'res': '$length44.17'}), (46, {'func': '$40load_global.15', 'args': ['$n42.16', '$length44.17'], 'res': '$46call_function.18'}), (48, {'value': '$46call_function.18', 'res': '$48get_iter.19'})), outgoing_phis={'$phi50.0': '$48get_iter.19'}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$48get_iter.19',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((50, {'iterator': '$phi50.0', 'pair': '$50for_iter.1', 'indval': '$50for_iter.2', 'pred': '$50for_iter.3'}),), outgoing_phis={'$phi52.1': '$50for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={428: (), 52: ('$phi50.0', '$50for_iter.2')})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=52 nstack_initial=2):
AdaptBlockInfo(insts=((52, {'value': '$phi52.1'}), (54, {'res': '$basic_ub54.2'}), (56, {'res': '$i56.3'}), (58, {'index': '$i56.3', 'target': '$basic_ub54.2', 'res': '$58binary_subscr.4'}), (60, {'res': '$final_ub60.5'}), (62, {'res': '$i62.6'}), (64, {'res': '$const64.7.1'}), (66, {'lhs': '$i62.6', 'rhs': '$const64.7.1', 'res': '$66binary_subtract.8'}), (68, {'index': '$66binary_subtract.8', 'target': '$final_ub60.5', 'res': '$68binary_subscr.9'}), (70, {'lhs': '$58binary_subscr.4', 'rhs': '$68binary_subscr.9', 'res': '$70compare_op.10'}), (72, {'pred': '$70compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ('$phi52.0',), 98: ('$phi52.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=74 nstack_initial=1):
AdaptBlockInfo(insts=((74, {'res': '$close74.1'}), (76, {'res': '$i76.2'}), (78, {'res': '$const78.3.1'}), (80, {'lhs': '$i76.2', 'rhs': '$const78.3.1', 'res': '$80binary_subtract.4'}), (82, {'index': '$80binary_subtract.4', 'target': '$close74.1', 'res': '$82binary_subscr.5'}), (84, {'res': '$final_ub84.6'}), (86, {'res': '$i86.7'}), (88, {'res': '$const88.8.1'}), (90, {'lhs': '$i86.7', 'rhs': '$const88.8.1', 'res': '$90binary_subtract.9'}), (92, {'index': '$90binary_subtract.9', 'target': '$final_ub84.6', 'res': '$92binary_subscr.10'}), (94, {'lhs': '$82binary_subscr.5', 'rhs': '$92binary_subscr.10', 'res': '$94compare_op.11'}), (96, {'pred': '$94compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: ('$phi74.0',), 112: ('$phi74.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=98 nstack_initial=1):
AdaptBlockInfo(insts=((98, {'res': '$basic_ub98.1'}), (100, {'res': '$i100.2'}), (102, {'index': '$i100.2', 'target': '$basic_ub98.1', 'res': '$102binary_subscr.3'}), (104, {'res': '$final_ub104.4'}), (106, {'res': '$i106.5'}), (108, {'target': '$final_ub104.4', 'index': '$i106.5', 'value': '$102binary_subscr.3'}), (110, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={128: ('$phi98.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=112 nstack_initial=1):
AdaptBlockInfo(insts=((112, {'res': '$final_ub112.1'}), (114, {'res': '$i114.2'}), (116, {'res': '$const116.3.1'}), (118, {'lhs': '$i114.2', 'rhs': '$const116.3.1', 'res': '$118binary_subtract.4'}), (120, {'index': '$118binary_subtract.4', 'target': '$final_ub112.1', 'res': '$120binary_subscr.5'}), (122, {'res': '$final_ub122.6'}), (124, {'res': '$i124.7'}), (126, {'target': '$final_ub122.6', 'index': '$i124.7', 'value': '$120binary_subscr.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={128: ('$phi112.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=128 nstack_initial=1):
AdaptBlockInfo(insts=((128, {'res': '$basic_lb128.1'}), (130, {'res': '$i130.2'}), (132, {'index': '$i130.2', 'target': '$basic_lb128.1', 'res': '$132binary_subscr.3'}), (134, {'res': '$final_lb134.4'}), (136, {'res': '$i136.5'}), (138, {'res': '$const138.6.1'}), (140, {'lhs': '$i136.5', 'rhs': '$const138.6.1', 'res': '$140binary_subtract.7'}), (142, {'index': '$140binary_subtract.7', 'target': '$final_lb134.4', 'res': '$142binary_subscr.8'}), (144, {'lhs': '$132binary_subscr.3', 'rhs': '$142binary_subscr.8', 'res': '$144compare_op.9'}), (146, {'pred': '$144compare_op.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={148: ('$phi128.0',), 172: ('$phi128.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=148 nstack_initial=1):
AdaptBlockInfo(insts=((148, {'res': '$close148.1'}), (150, {'res': '$i150.2'}), (152, {'res': '$const152.3.1'}), (154, {'lhs': '$i150.2', 'rhs': '$const152.3.1', 'res': '$154binary_subtract.4'}), (156, {'index': '$154binary_subtract.4', 'target': '$close148.1', 'res': '$156binary_subscr.5'}), (158, {'res': '$final_lb158.6'}), (160, {'res': '$i160.7'}), (162, {'res': '$const162.8.1'}), (164, {'lhs': '$i160.7', 'rhs': '$const162.8.1', 'res': '$164binary_subtract.9'}), (166, {'index': '$164binary_subtract.9', 'target': '$final_lb158.6', 'res': '$166binary_subscr.10'}), (168, {'lhs': '$156binary_subscr.5', 'rhs': '$166binary_subscr.10', 'res': '$168compare_op.11'}), (170, {'pred': '$168compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={172: ('$phi148.0',), 186: ('$phi148.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=172 nstack_initial=1):
AdaptBlockInfo(insts=((172, {'res': '$basic_lb172.1'}), (174, {'res': '$i174.2'}), (176, {'index': '$i174.2', 'target': '$basic_lb172.1', 'res': '$176binary_subscr.3'}), (178, {'res': '$final_lb178.4'}), (180, {'res': '$i180.5'}), (182, {'target': '$final_lb178.4', 'index': '$i180.5', 'value': '$176binary_subscr.3'}), (184, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={202: ('$phi172.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=186 nstack_initial=1):
AdaptBlockInfo(insts=((186, {'res': '$final_lb186.1'}), (188, {'res': '$i188.2'}), (190, {'res': '$const190.3.1'}), (192, {'lhs': '$i188.2', 'rhs': '$const190.3.1', 'res': '$192binary_subtract.4'}), (194, {'index': '$192binary_subtract.4', 'target': '$final_lb186.1', 'res': '$194binary_subscr.5'}), (196, {'res': '$final_lb196.6'}), (198, {'res': '$i198.7'}), (200, {'target': '$final_lb196.6', 'index': '$i198.7', 'value': '$194binary_subscr.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={202: ('$phi186.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=202 nstack_initial=1):
AdaptBlockInfo(insts=((202, {'res': '$supertrend202.1'}), (204, {'res': '$i204.2'}), (206, {'res': '$const206.3.1'}), (208, {'lhs': '$i204.2', 'rhs': '$const206.3.1', 'res': '$208binary_subtract.4'}), (210, {'index': '$208binary_subtract.4', 'target': '$supertrend202.1', 'res': '$210binary_subscr.5'}), (212, {'res': '$final_ub212.6'}), (214, {'res': '$i214.7'}), (216, {'res': '$const216.8.1'}), (218, {'lhs': '$i214.7', 'rhs': '$const216.8.1', 'res': '$218binary_subtract.9'}), (220, {'index': '$218binary_subtract.9', 'target': '$final_ub212.6', 'res': '$220binary_subscr.10'}), (222, {'lhs': '$210binary_subscr.5', 'rhs': '$220binary_subscr.10', 'res': '$222compare_op.11'}), (224, {'pred': '$222compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={226: ('$phi202.0',), 256: ('$phi202.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=226 nstack_initial=1):
AdaptBlockInfo(insts=((226, {'res': '$close226.1'}), (228, {'res': '$i228.2'}), (230, {'index': '$i228.2', 'target': '$close226.1', 'res': '$230binary_subscr.3'}), (232, {'res': '$final_ub232.4'}), (234, {'res': '$i234.5'}), (236, {'index': '$i234.5', 'target': '$final_ub232.4', 'res': '$236binary_subscr.6'}), (238, {'lhs': '$230binary_subscr.3', 'rhs': '$236binary_subscr.6', 'res': '$238compare_op.7'}), (240, {'pred': '$238compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={242: ('$phi226.0',), 256: ('$phi226.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=242 nstack_initial=1):
AdaptBlockInfo(insts=((242, {'res': '$final_ub242.1'}), (244, {'res': '$i244.2'}), (246, {'index': '$i244.2', 'target': '$final_ub242.1', 'res': '$246binary_subscr.3'}), (248, {'res': '$supertrend248.4'}), (250, {'res': '$i250.5'}), (252, {'target': '$supertrend248.4', 'index': '$i250.5', 'value': '$246binary_subscr.3'}), (254, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi242.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=256 nstack_initial=1):
AdaptBlockInfo(insts=((256, {'res': '$supertrend256.1'}), (258, {'res': '$i258.2'}), (260, {'res': '$const260.3.1'}), (262, {'lhs': '$i258.2', 'rhs': '$const260.3.1', 'res': '$262binary_subtract.4'}), (264, {'index': '$262binary_subtract.4', 'target': '$supertrend256.1', 'res': '$264binary_subscr.5'}), (266, {'res': '$final_ub266.6'}), (268, {'res': '$i268.7'}), (270, {'res': '$const270.8.1'}), (272, {'lhs': '$i268.7', 'rhs': '$const270.8.1', 'res': '$272binary_subtract.9'}), (274, {'index': '$272binary_subtract.9', 'target': '$final_ub266.6', 'res': '$274binary_subscr.10'}), (276, {'lhs': '$264binary_subscr.5', 'rhs': '$274binary_subscr.10', 'res': '$276compare_op.11'}), (278, {'pred': '$276compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={280: ('$phi256.0',), 310: ('$phi256.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=280 nstack_initial=1):
AdaptBlockInfo(insts=((280, {'res': '$close280.1'}), (282, {'res': '$i282.2'}), (284, {'index': '$i282.2', 'target': '$close280.1', 'res': '$284binary_subscr.3'}), (286, {'res': '$final_ub286.4'}), (288, {'res': '$i288.5'}), (290, {'index': '$i288.5', 'target': '$final_ub286.4', 'res': '$290binary_subscr.6'}), (292, {'lhs': '$284binary_subscr.3', 'rhs': '$290binary_subscr.6', 'res': '$292compare_op.7'}), (294, {'pred': '$292compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={296: ('$phi280.0',), 310: ('$phi280.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=296 nstack_initial=1):
AdaptBlockInfo(insts=((296, {'res': '$final_lb296.1'}), (298, {'res': '$i298.2'}), (300, {'index': '$i298.2', 'target': '$final_lb296.1', 'res': '$300binary_subscr.3'}), (302, {'res': '$supertrend302.4'}), (304, {'res': '$i304.5'}), (306, {'target': '$supertrend302.4', 'index': '$i304.5', 'value': '$300binary_subscr.3'}), (308, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi296.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=310 nstack_initial=1):
AdaptBlockInfo(insts=((310, {'res': '$supertrend310.1'}), (312, {'res': '$i312.2'}), (314, {'res': '$const314.3.1'}), (316, {'lhs': '$i312.2', 'rhs': '$const314.3.1', 'res': '$316binary_subtract.4'}), (318, {'index': '$316binary_subtract.4', 'target': '$supertrend310.1', 'res': '$318binary_subscr.5'}), (320, {'res': '$final_lb320.6'}), (322, {'res': '$i322.7'}), (324, {'res': '$const324.8.1'}), (326, {'lhs': '$i322.7', 'rhs': '$const324.8.1', 'res': '$326binary_subtract.9'}), (328, {'index': '$326binary_subtract.9', 'target': '$final_lb320.6', 'res': '$328binary_subscr.10'}), (330, {'lhs': '$318binary_subscr.5', 'rhs': '$328binary_subscr.10', 'res': '$330compare_op.11'}), (332, {'pred': '$330compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={334: ('$phi310.0',), 364: ('$phi310.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=334 nstack_initial=1):
AdaptBlockInfo(insts=((334, {'res': '$close334.1'}), (336, {'res': '$i336.2'}), (338, {'index': '$i336.2', 'target': '$close334.1', 'res': '$338binary_subscr.3'}), (340, {'res': '$final_lb340.4'}), (342, {'res': '$i342.5'}), (344, {'index': '$i342.5', 'target': '$final_lb340.4', 'res': '$344binary_subscr.6'}), (346, {'lhs': '$338binary_subscr.3', 'rhs': '$344binary_subscr.6', 'res': '$346compare_op.7'}), (348, {'pred': '$346compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={350: ('$phi334.0',), 364: ('$phi334.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=350 nstack_initial=1):
AdaptBlockInfo(insts=((350, {'res': '$final_lb350.1'}), (352, {'res': '$i352.2'}), (354, {'index': '$i352.2', 'target': '$final_lb350.1', 'res': '$354binary_subscr.3'}), (356, {'res': '$supertrend356.4'}), (358, {'res': '$i358.5'}), (360, {'target': '$supertrend356.4', 'index': '$i358.5', 'value': '$354binary_subscr.3'}), (362, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi350.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=364 nstack_initial=1):
AdaptBlockInfo(insts=((364, {'res': '$supertrend364.1'}), (366, {'res': '$i366.2'}), (368, {'res': '$const368.3.1'}), (370, {'lhs': '$i366.2', 'rhs': '$const368.3.1', 'res': '$370binary_subtract.4'}), (372, {'index': '$370binary_subtract.4', 'target': '$supertrend364.1', 'res': '$372binary_subscr.5'}), (374, {'res': '$final_lb374.6'}), (376, {'res': '$i376.7'}), (378, {'res': '$const378.8.1'}), (380, {'lhs': '$i376.7', 'rhs': '$const378.8.1', 'res': '$380binary_subtract.9'}), (382, {'index': '$380binary_subtract.9', 'target': '$final_lb374.6', 'res': '$382binary_subscr.10'}), (384, {'lhs': '$372binary_subscr.5', 'rhs': '$382binary_subscr.10', 'res': '$384compare_op.11'}), (386, {'pred': '$384compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={388: ('$phi364.0',), 418: ('$phi364.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=388 nstack_initial=1):
AdaptBlockInfo(insts=((388, {'res': '$close388.1'}), (390, {'res': '$i390.2'}), (392, {'index': '$i390.2', 'target': '$close388.1', 'res': '$392binary_subscr.3'}), (394, {'res': '$final_lb394.4'}), (396, {'res': '$i396.5'}), (398, {'index': '$i396.5', 'target': '$final_lb394.4', 'res': '$398binary_subscr.6'}), (400, {'lhs': '$392binary_subscr.3', 'rhs': '$398binary_subscr.6', 'res': '$400compare_op.7'}), (402, {'pred': '$400compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={404: ('$phi388.0',), 418: ('$phi388.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=404 nstack_initial=1):
AdaptBlockInfo(insts=((404, {'res': '$final_ub404.1'}), (406, {'res': '$i406.2'}), (408, {'index': '$i406.2', 'target': '$final_ub404.1', 'res': '$408binary_subscr.3'}), (410, {'res': '$supertrend410.4'}), (412, {'res': '$i412.5'}), (414, {'target': '$supertrend410.4', 'index': '$i412.5', 'value': '$408binary_subscr.3'}), (416, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi404.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=418 nstack_initial=1):
AdaptBlockInfo(insts=((418, {'res': '$const418.1.2'}), (420, {'res': '$supertrend420.2'}), (422, {'res': '$i422.3'}), (424, {'target': '$supertrend420.2', 'index': '$i422.3', 'value': '$const418.1.2'}), (426, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi418.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=428 nstack_initial=0):
AdaptBlockInfo(insts=((428, {'res': '$supertrend428.0'}), (430, {'retval': '$supertrend428.0', 'castval': '$430return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    close = arg(0, name=close)               ['close']
    basic_ub = arg(1, name=basic_ub)         ['basic_ub']
    basic_lb = arg(2, name=basic_lb)         ['basic_lb']
    n = arg(3, name=n)                       ['n']
    $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
    length = call $2load_global.0(close, func=$2load_global.0, args=[Var(close, helper_loops.py:99)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'close', 'length']
    $10load_global.3 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>) ['$10load_global.3']
    $12load_method.4 = getattr(value=$10load_global.3, attr=zeros) ['$10load_global.3', '$12load_method.4']
    final_ub = call $12load_method.4(length, func=$12load_method.4, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_method.4', 'final_ub', 'length']
    $20load_global.7 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.7']
    $22load_method.8 = getattr(value=$20load_global.7, attr=zeros) ['$20load_global.7', '$22load_method.8']
    final_lb = call $22load_method.8(length, func=$22load_method.8, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.8', 'final_lb', 'length']
    $30load_global.11 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>) ['$30load_global.11']
    $32load_method.12 = getattr(value=$30load_global.11, attr=zeros) ['$30load_global.11', '$32load_method.12']
    supertrend = call $32load_method.12(length, func=$32load_method.12, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$32load_method.12', 'length', 'supertrend']
    $40load_global.15 = global(range: <class 'range'>) ['$40load_global.15']
    $46call_function.18 = call $40load_global.15(n, length, func=$40load_global.15, args=[Var(n, helper_loops.py:99), Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_global.15', '$46call_function.18', 'length', 'n']
    $48get_iter.19 = getiter(value=$46call_function.18) ['$46call_function.18', '$48get_iter.19']
    $phi50.0 = $48get_iter.19                ['$48get_iter.19', '$phi50.0']
    jump 50                                  []
label 50:
    $50for_iter.1 = iternext(value=$phi50.0) ['$50for_iter.1', '$phi50.0']
    $50for_iter.2 = pair_first(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.2']
    $50for_iter.3 = pair_second(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.3']
    $phi52.1 = $50for_iter.2                 ['$50for_iter.2', '$phi52.1']
    branch $50for_iter.3, 52, 428            ['$50for_iter.3']
label 52:
    i = $phi52.1                             ['$phi52.1', 'i']
    $58binary_subscr.4 = getitem(value=basic_ub, index=i, fn=<built-in function getitem>) ['$58binary_subscr.4', 'basic_ub', 'i']
    $const64.7.1 = const(int, 1)             ['$const64.7.1']
    $66binary_subtract.8 = i - $const64.7.1  ['$66binary_subtract.8', '$const64.7.1', 'i']
    $68binary_subscr.9 = getitem(value=final_ub, index=$66binary_subtract.8, fn=<built-in function getitem>) ['$66binary_subtract.8', '$68binary_subscr.9', 'final_ub']
    $70compare_op.10 = $58binary_subscr.4 < $68binary_subscr.9 ['$58binary_subscr.4', '$68binary_subscr.9', '$70compare_op.10']
    bool72 = global(bool: <class 'bool'>)    ['bool72']
    $72pred = call bool72($70compare_op.10, func=bool72, args=(Var($70compare_op.10, helper_loops.py:113),), kws=(), vararg=None, varkwarg=None, target=None) ['$70compare_op.10', '$72pred', 'bool72']
    branch $72pred, 98, 74                   ['$72pred']
label 74:
    $const78.3.1 = const(int, 1)             ['$const78.3.1']
    $80binary_subtract.4 = i - $const78.3.1  ['$80binary_subtract.4', '$const78.3.1', 'i']
    $82binary_subscr.5 = getitem(value=close, index=$80binary_subtract.4, fn=<built-in function getitem>) ['$80binary_subtract.4', '$82binary_subscr.5', 'close']
    $const88.8.1 = const(int, 1)             ['$const88.8.1']
    $90binary_subtract.9 = i - $const88.8.1  ['$90binary_subtract.9', '$const88.8.1', 'i']
    $92binary_subscr.10 = getitem(value=final_ub, index=$90binary_subtract.9, fn=<built-in function getitem>) ['$90binary_subtract.9', '$92binary_subscr.10', 'final_ub']
    $94compare_op.11 = $82binary_subscr.5 > $92binary_subscr.10 ['$82binary_subscr.5', '$92binary_subscr.10', '$94compare_op.11']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
    $96pred = call bool96($94compare_op.11, func=bool96, args=(Var($94compare_op.11, helper_loops.py:113),), kws=(), vararg=None, varkwarg=None, target=None) ['$94compare_op.11', '$96pred', 'bool96']
    branch $96pred, 98, 112                  ['$96pred']
label 98:
    $102binary_subscr.3 = getitem(value=basic_ub, index=i, fn=<built-in function getitem>) ['$102binary_subscr.3', 'basic_ub', 'i']
    final_ub[i] = $102binary_subscr.3        ['$102binary_subscr.3', 'final_ub', 'i']
    jump 128                                 []
label 112:
    $const116.3.1 = const(int, 1)            ['$const116.3.1']
    $118binary_subtract.4 = i - $const116.3.1 ['$118binary_subtract.4', '$const116.3.1', 'i']
    $120binary_subscr.5 = getitem(value=final_ub, index=$118binary_subtract.4, fn=<built-in function getitem>) ['$118binary_subtract.4', '$120binary_subscr.5', 'final_ub']
    final_ub[i] = $120binary_subscr.5        ['$120binary_subscr.5', 'final_ub', 'i']
    jump 128                                 []
label 128:
    $132binary_subscr.3 = getitem(value=basic_lb, index=i, fn=<built-in function getitem>) ['$132binary_subscr.3', 'basic_lb', 'i']
    $const138.6.1 = const(int, 1)            ['$const138.6.1']
    $140binary_subtract.7 = i - $const138.6.1 ['$140binary_subtract.7', '$const138.6.1', 'i']
    $142binary_subscr.8 = getitem(value=final_lb, index=$140binary_subtract.7, fn=<built-in function getitem>) ['$140binary_subtract.7', '$142binary_subscr.8', 'final_lb']
    $144compare_op.9 = $132binary_subscr.3 > $142binary_subscr.8 ['$132binary_subscr.3', '$142binary_subscr.8', '$144compare_op.9']
    bool146 = global(bool: <class 'bool'>)   ['bool146']
    $146pred = call bool146($144compare_op.9, func=bool146, args=(Var($144compare_op.9, helper_loops.py:118),), kws=(), vararg=None, varkwarg=None, target=None) ['$144compare_op.9', '$146pred', 'bool146']
    branch $146pred, 172, 148                ['$146pred']
label 148:
    $const152.3.1 = const(int, 1)            ['$const152.3.1']
    $154binary_subtract.4 = i - $const152.3.1 ['$154binary_subtract.4', '$const152.3.1', 'i']
    $156binary_subscr.5 = getitem(value=close, index=$154binary_subtract.4, fn=<built-in function getitem>) ['$154binary_subtract.4', '$156binary_subscr.5', 'close']
    $const162.8.1 = const(int, 1)            ['$const162.8.1']
    $164binary_subtract.9 = i - $const162.8.1 ['$164binary_subtract.9', '$const162.8.1', 'i']
    $166binary_subscr.10 = getitem(value=final_lb, index=$164binary_subtract.9, fn=<built-in function getitem>) ['$164binary_subtract.9', '$166binary_subscr.10', 'final_lb']
    $168compare_op.11 = $156binary_subscr.5 < $166binary_subscr.10 ['$156binary_subscr.5', '$166binary_subscr.10', '$168compare_op.11']
    bool170 = global(bool: <class 'bool'>)   ['bool170']
    $170pred = call bool170($168compare_op.11, func=bool170, args=(Var($168compare_op.11, helper_loops.py:118),), kws=(), vararg=None, varkwarg=None, target=None) ['$168compare_op.11', '$170pred', 'bool170']
    branch $170pred, 172, 186                ['$170pred']
label 172:
    $176binary_subscr.3 = getitem(value=basic_lb, index=i, fn=<built-in function getitem>) ['$176binary_subscr.3', 'basic_lb', 'i']
    final_lb[i] = $176binary_subscr.3        ['$176binary_subscr.3', 'final_lb', 'i']
    jump 202                                 []
label 186:
    $const190.3.1 = const(int, 1)            ['$const190.3.1']
    $192binary_subtract.4 = i - $const190.3.1 ['$192binary_subtract.4', '$const190.3.1', 'i']
    $194binary_subscr.5 = getitem(value=final_lb, index=$192binary_subtract.4, fn=<built-in function getitem>) ['$192binary_subtract.4', '$194binary_subscr.5', 'final_lb']
    final_lb[i] = $194binary_subscr.5        ['$194binary_subscr.5', 'final_lb', 'i']
    jump 202                                 []
label 202:
    $const206.3.1 = const(int, 1)            ['$const206.3.1']
    $208binary_subtract.4 = i - $const206.3.1 ['$208binary_subtract.4', '$const206.3.1', 'i']
    $210binary_subscr.5 = getitem(value=supertrend, index=$208binary_subtract.4, fn=<built-in function getitem>) ['$208binary_subtract.4', '$210binary_subscr.5', 'supertrend']
    $const216.8.1 = const(int, 1)            ['$const216.8.1']
    $218binary_subtract.9 = i - $const216.8.1 ['$218binary_subtract.9', '$const216.8.1', 'i']
    $220binary_subscr.10 = getitem(value=final_ub, index=$218binary_subtract.9, fn=<built-in function getitem>) ['$218binary_subtract.9', '$220binary_subscr.10', 'final_ub']
    $222compare_op.11 = $210binary_subscr.5 == $220binary_subscr.10 ['$210binary_subscr.5', '$220binary_subscr.10', '$222compare_op.11']
    bool224 = global(bool: <class 'bool'>)   ['bool224']
    $224pred = call bool224($222compare_op.11, func=bool224, args=(Var($222compare_op.11, helper_loops.py:123),), kws=(), vararg=None, varkwarg=None, target=None) ['$222compare_op.11', '$224pred', 'bool224']
    branch $224pred, 226, 256                ['$224pred']
label 226:
    $230binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>) ['$230binary_subscr.3', 'close', 'i']
    $236binary_subscr.6 = getitem(value=final_ub, index=i, fn=<built-in function getitem>) ['$236binary_subscr.6', 'final_ub', 'i']
    $238compare_op.7 = $230binary_subscr.3 <= $236binary_subscr.6 ['$230binary_subscr.3', '$236binary_subscr.6', '$238compare_op.7']
    bool240 = global(bool: <class 'bool'>)   ['bool240']
    $240pred = call bool240($238compare_op.7, func=bool240, args=(Var($238compare_op.7, helper_loops.py:123),), kws=(), vararg=None, varkwarg=None, target=None) ['$238compare_op.7', '$240pred', 'bool240']
    branch $240pred, 242, 256                ['$240pred']
label 242:
    $246binary_subscr.3 = getitem(value=final_ub, index=i, fn=<built-in function getitem>) ['$246binary_subscr.3', 'final_ub', 'i']
    supertrend[i] = $246binary_subscr.3      ['$246binary_subscr.3', 'i', 'supertrend']
    jump 50                                  []
label 256:
    $const260.3.1 = const(int, 1)            ['$const260.3.1']
    $262binary_subtract.4 = i - $const260.3.1 ['$262binary_subtract.4', '$const260.3.1', 'i']
    $264binary_subscr.5 = getitem(value=supertrend, index=$262binary_subtract.4, fn=<built-in function getitem>) ['$262binary_subtract.4', '$264binary_subscr.5', 'supertrend']
    $const270.8.1 = const(int, 1)            ['$const270.8.1']
    $272binary_subtract.9 = i - $const270.8.1 ['$272binary_subtract.9', '$const270.8.1', 'i']
    $274binary_subscr.10 = getitem(value=final_ub, index=$272binary_subtract.9, fn=<built-in function getitem>) ['$272binary_subtract.9', '$274binary_subscr.10', 'final_ub']
    $276compare_op.11 = $264binary_subscr.5 == $274binary_subscr.10 ['$264binary_subscr.5', '$274binary_subscr.10', '$276compare_op.11']
    bool278 = global(bool: <class 'bool'>)   ['bool278']
    $278pred = call bool278($276compare_op.11, func=bool278, args=(Var($276compare_op.11, helper_loops.py:125),), kws=(), vararg=None, varkwarg=None, target=None) ['$276compare_op.11', '$278pred', 'bool278']
    branch $278pred, 280, 310                ['$278pred']
label 280:
    $284binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>) ['$284binary_subscr.3', 'close', 'i']
    $290binary_subscr.6 = getitem(value=final_ub, index=i, fn=<built-in function getitem>) ['$290binary_subscr.6', 'final_ub', 'i']
    $292compare_op.7 = $284binary_subscr.3 > $290binary_subscr.6 ['$284binary_subscr.3', '$290binary_subscr.6', '$292compare_op.7']
    bool294 = global(bool: <class 'bool'>)   ['bool294']
    $294pred = call bool294($292compare_op.7, func=bool294, args=(Var($292compare_op.7, helper_loops.py:125),), kws=(), vararg=None, varkwarg=None, target=None) ['$292compare_op.7', '$294pred', 'bool294']
    branch $294pred, 296, 310                ['$294pred']
label 296:
    $300binary_subscr.3 = getitem(value=final_lb, index=i, fn=<built-in function getitem>) ['$300binary_subscr.3', 'final_lb', 'i']
    supertrend[i] = $300binary_subscr.3      ['$300binary_subscr.3', 'i', 'supertrend']
    jump 50                                  []
label 310:
    $const314.3.1 = const(int, 1)            ['$const314.3.1']
    $316binary_subtract.4 = i - $const314.3.1 ['$316binary_subtract.4', '$const314.3.1', 'i']
    $318binary_subscr.5 = getitem(value=supertrend, index=$316binary_subtract.4, fn=<built-in function getitem>) ['$316binary_subtract.4', '$318binary_subscr.5', 'supertrend']
    $const324.8.1 = const(int, 1)            ['$const324.8.1']
    $326binary_subtract.9 = i - $const324.8.1 ['$326binary_subtract.9', '$const324.8.1', 'i']
    $328binary_subscr.10 = getitem(value=final_lb, index=$326binary_subtract.9, fn=<built-in function getitem>) ['$326binary_subtract.9', '$328binary_subscr.10', 'final_lb']
    $330compare_op.11 = $318binary_subscr.5 == $328binary_subscr.10 ['$318binary_subscr.5', '$328binary_subscr.10', '$330compare_op.11']
    bool332 = global(bool: <class 'bool'>)   ['bool332']
    $332pred = call bool332($330compare_op.11, func=bool332, args=(Var($330compare_op.11, helper_loops.py:127),), kws=(), vararg=None, varkwarg=None, target=None) ['$330compare_op.11', '$332pred', 'bool332']
    branch $332pred, 334, 364                ['$332pred']
label 334:
    $338binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>) ['$338binary_subscr.3', 'close', 'i']
    $344binary_subscr.6 = getitem(value=final_lb, index=i, fn=<built-in function getitem>) ['$344binary_subscr.6', 'final_lb', 'i']
    $346compare_op.7 = $338binary_subscr.3 >= $344binary_subscr.6 ['$338binary_subscr.3', '$344binary_subscr.6', '$346compare_op.7']
    bool348 = global(bool: <class 'bool'>)   ['bool348']
    $348pred = call bool348($346compare_op.7, func=bool348, args=(Var($346compare_op.7, helper_loops.py:127),), kws=(), vararg=None, varkwarg=None, target=None) ['$346compare_op.7', '$348pred', 'bool348']
    branch $348pred, 350, 364                ['$348pred']
label 350:
    $354binary_subscr.3 = getitem(value=final_lb, index=i, fn=<built-in function getitem>) ['$354binary_subscr.3', 'final_lb', 'i']
    supertrend[i] = $354binary_subscr.3      ['$354binary_subscr.3', 'i', 'supertrend']
    jump 50                                  []
label 364:
    $const368.3.1 = const(int, 1)            ['$const368.3.1']
    $370binary_subtract.4 = i - $const368.3.1 ['$370binary_subtract.4', '$const368.3.1', 'i']
    $372binary_subscr.5 = getitem(value=supertrend, index=$370binary_subtract.4, fn=<built-in function getitem>) ['$370binary_subtract.4', '$372binary_subscr.5', 'supertrend']
    $const378.8.1 = const(int, 1)            ['$const378.8.1']
    $380binary_subtract.9 = i - $const378.8.1 ['$380binary_subtract.9', '$const378.8.1', 'i']
    $382binary_subscr.10 = getitem(value=final_lb, index=$380binary_subtract.9, fn=<built-in function getitem>) ['$380binary_subtract.9', '$382binary_subscr.10', 'final_lb']
    $384compare_op.11 = $372binary_subscr.5 == $382binary_subscr.10 ['$372binary_subscr.5', '$382binary_subscr.10', '$384compare_op.11']
    bool386 = global(bool: <class 'bool'>)   ['bool386']
    $386pred = call bool386($384compare_op.11, func=bool386, args=(Var($384compare_op.11, helper_loops.py:129),), kws=(), vararg=None, varkwarg=None, target=None) ['$384compare_op.11', '$386pred', 'bool386']
    branch $386pred, 388, 418                ['$386pred']
label 388:
    $392binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>) ['$392binary_subscr.3', 'close', 'i']
    $398binary_subscr.6 = getitem(value=final_lb, index=i, fn=<built-in function getitem>) ['$398binary_subscr.6', 'final_lb', 'i']
    $400compare_op.7 = $392binary_subscr.3 < $398binary_subscr.6 ['$392binary_subscr.3', '$398binary_subscr.6', '$400compare_op.7']
    bool402 = global(bool: <class 'bool'>)   ['bool402']
    $402pred = call bool402($400compare_op.7, func=bool402, args=(Var($400compare_op.7, helper_loops.py:129),), kws=(), vararg=None, varkwarg=None, target=None) ['$400compare_op.7', '$402pred', 'bool402']
    branch $402pred, 404, 418                ['$402pred']
label 404:
    $408binary_subscr.3 = getitem(value=final_ub, index=i, fn=<built-in function getitem>) ['$408binary_subscr.3', 'final_ub', 'i']
    supertrend[i] = $408binary_subscr.3      ['$408binary_subscr.3', 'i', 'supertrend']
    jump 50                                  []
label 418:
    $const418.1.2 = const(float, 0.0)        ['$const418.1.2']
    supertrend[i] = $const418.1.2            ['$const418.1.2', 'i', 'supertrend']
    jump 50                                  []
label 428:
    $430return_value.1 = cast(value=supertrend) ['$430return_value.1', 'supertrend']
    return $430return_value.1                ['$430return_value.1']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x769f5ac7bd60>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: close = arg(0, name=close)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: basic_ub = arg(1, name=basic_ub)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: basic_lb = arg(2, name=basic_lb)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: n = arg(3, name=n)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(len: <built-in function len>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: length = call $2load_global.0(close, func=$2load_global.0, args=[Var(close, helper_loops.py:99)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $10load_global.3 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $12load_method.4 = getattr(value=$10load_global.3, attr=zeros)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_ub = call $12load_method.4(length, func=$12load_method.4, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $20load_global.7 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $22load_method.8 = getattr(value=$20load_global.7, attr=zeros)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_lb = call $22load_method.8(length, func=$22load_method.8, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $30load_global.11 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $32load_method.12 = getattr(value=$30load_global.11, attr=zeros)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend = call $32load_method.12(length, func=$32load_method.12, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $40load_global.15 = global(range: <class 'range'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $46call_function.18 = call $40load_global.15(n, length, func=$40load_global.15, args=[Var(n, helper_loops.py:99), Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $48get_iter.19 = getiter(value=$46call_function.18)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $phi50.0 = $48get_iter.19
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 50
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 50
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x769f5ac7bd60>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $50for_iter.1 = iternext(value=$phi50.0)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $phi52.1 = $50for_iter.2
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $50for_iter.3, 52, 428
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 52
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x769f5ac7bd60>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: i = $phi52.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $58binary_subscr.4 = getitem(value=basic_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const64.7.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $66binary_subtract.8 = i - $const64.7.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $68binary_subscr.9 = getitem(value=final_ub, index=$66binary_subtract.8, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $70compare_op.10 = $58binary_subscr.4 < $68binary_subscr.9
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool72 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $72pred = call bool72($70compare_op.10, func=bool72, args=(Var($70compare_op.10, helper_loops.py:113),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $72pred, 98, 74
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 74
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x769f5ac7bd60>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const78.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $80binary_subtract.4 = i - $const78.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $82binary_subscr.5 = getitem(value=close, index=$80binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const88.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $90binary_subtract.9 = i - $const88.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $92binary_subscr.10 = getitem(value=final_ub, index=$90binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $94compare_op.11 = $82binary_subscr.5 > $92binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool96 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $96pred = call bool96($94compare_op.11, func=bool96, args=(Var($94compare_op.11, helper_loops.py:113),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $96pred, 98, 112
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 98
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x769f5ac7bd60>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $102binary_subscr.3 = getitem(value=basic_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_ub[i] = $102binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 128
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 112
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x769f5ac7bd60>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const116.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $118binary_subtract.4 = i - $const116.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $120binary_subscr.5 = getitem(value=final_ub, index=$118binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_ub[i] = $120binary_subscr.5
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 128
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 128
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x769f5ac7bd60>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $132binary_subscr.3 = getitem(value=basic_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const138.6.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $140binary_subtract.7 = i - $const138.6.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $142binary_subscr.8 = getitem(value=final_lb, index=$140binary_subtract.7, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $144compare_op.9 = $132binary_subscr.3 > $142binary_subscr.8
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool146 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $146pred = call bool146($144compare_op.9, func=bool146, args=(Var($144compare_op.9, helper_loops.py:118),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $146pred, 172, 148
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 148
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x769f5ac7bd60>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const152.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $154binary_subtract.4 = i - $const152.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $156binary_subscr.5 = getitem(value=close, index=$154binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const162.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $164binary_subtract.9 = i - $const162.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $166binary_subscr.10 = getitem(value=final_lb, index=$164binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $168compare_op.11 = $156binary_subscr.5 < $166binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool170 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $170pred = call bool170($168compare_op.11, func=bool170, args=(Var($168compare_op.11, helper_loops.py:118),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $170pred, 172, 186
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 172
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x769f5ac7bd60>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $176binary_subscr.3 = getitem(value=basic_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_lb[i] = $176binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 202
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 186
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x769f5ac7bd60>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const190.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $192binary_subtract.4 = i - $const190.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $194binary_subscr.5 = getitem(value=final_lb, index=$192binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_lb[i] = $194binary_subscr.5
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 202
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 202
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x769f5ac7bd60>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const206.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $208binary_subtract.4 = i - $const206.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $210binary_subscr.5 = getitem(value=supertrend, index=$208binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const216.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $218binary_subtract.9 = i - $const216.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $220binary_subscr.10 = getitem(value=final_ub, index=$218binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $222compare_op.11 = $210binary_subscr.5 == $220binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool224 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $224pred = call bool224($222compare_op.11, func=bool224, args=(Var($222compare_op.11, helper_loops.py:123),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $224pred, 226, 256
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 226
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x769f5ac7bd60>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $230binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $236binary_subscr.6 = getitem(value=final_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $238compare_op.7 = $230binary_subscr.3 <= $236binary_subscr.6
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool240 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $240pred = call bool240($238compare_op.7, func=bool240, args=(Var($238compare_op.7, helper_loops.py:123),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $240pred, 242, 256
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 242
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x769f5ac7bd60>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $246binary_subscr.3 = getitem(value=final_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $246binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 256
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x769f5ac7bd60>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const260.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $262binary_subtract.4 = i - $const260.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $264binary_subscr.5 = getitem(value=supertrend, index=$262binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const270.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $272binary_subtract.9 = i - $const270.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $274binary_subscr.10 = getitem(value=final_ub, index=$272binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $276compare_op.11 = $264binary_subscr.5 == $274binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool278 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $278pred = call bool278($276compare_op.11, func=bool278, args=(Var($276compare_op.11, helper_loops.py:125),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $278pred, 280, 310
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 280
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x769f5ac7bd60>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $284binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $290binary_subscr.6 = getitem(value=final_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $292compare_op.7 = $284binary_subscr.3 > $290binary_subscr.6
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool294 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $294pred = call bool294($292compare_op.7, func=bool294, args=(Var($292compare_op.7, helper_loops.py:125),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $294pred, 296, 310
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 296
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x769f5ac7bd60>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $300binary_subscr.3 = getitem(value=final_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $300binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 310
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x769f5ac7bd60>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const314.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $316binary_subtract.4 = i - $const314.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $318binary_subscr.5 = getitem(value=supertrend, index=$316binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const324.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $326binary_subtract.9 = i - $const324.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $328binary_subscr.10 = getitem(value=final_lb, index=$326binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $330compare_op.11 = $318binary_subscr.5 == $328binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool332 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $332pred = call bool332($330compare_op.11, func=bool332, args=(Var($330compare_op.11, helper_loops.py:127),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $332pred, 334, 364
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 334
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x769f5ac7bd60>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $338binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $344binary_subscr.6 = getitem(value=final_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $346compare_op.7 = $338binary_subscr.3 >= $344binary_subscr.6
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool348 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $348pred = call bool348($346compare_op.7, func=bool348, args=(Var($346compare_op.7, helper_loops.py:127),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $348pred, 350, 364
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 350
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x769f5ac7bd60>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $354binary_subscr.3 = getitem(value=final_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $354binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 364
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x769f5ac7bd60>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const368.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $370binary_subtract.4 = i - $const368.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $372binary_subscr.5 = getitem(value=supertrend, index=$370binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const378.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $380binary_subtract.9 = i - $const378.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $382binary_subscr.10 = getitem(value=final_lb, index=$380binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $384compare_op.11 = $372binary_subscr.5 == $382binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool386 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $386pred = call bool386($384compare_op.11, func=bool386, args=(Var($384compare_op.11, helper_loops.py:129),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $386pred, 388, 418
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 388
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x769f5ac7bd60>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $392binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $398binary_subscr.6 = getitem(value=final_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $400compare_op.7 = $392binary_subscr.3 < $398binary_subscr.6
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool402 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $402pred = call bool402($400compare_op.7, func=bool402, args=(Var($400compare_op.7, helper_loops.py:129),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $402pred, 404, 418
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 404
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x769f5ac7bd60>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $408binary_subscr.3 = getitem(value=final_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $408binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 418
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x769f5ac7bd60>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const418.1.2 = const(float, 0.0)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $const418.1.2
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 428
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x769f5ac7bd60>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $430return_value.1 = cast(value=supertrend)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $430return_value.1
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 429
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x769f5ac7bd60>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 50
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$102binary_subscr.3': [(<numba.core.ir.Assign object at 0x769f5ac5d0c0>,
                                      98)],
             '$10load_global.3': [(<numba.core.ir.Assign object at 0x769f5ac08eb0>,
                                   0)],
             '$118binary_subtract.4': [(<numba.core.ir.Assign object at 0x769f5ac5d900>,
                                        112)],
             '$120binary_subscr.5': [(<numba.core.ir.Assign object at 0x769f5ac5da80>,
                                      112)],
             '$12load_method.4': [(<numba.core.ir.Assign object at 0x769f5ac09030>,
                                   0)],
             '$132binary_subscr.3': [(<numba.core.ir.Assign object at 0x769f5ac5e0e0>,
                                      128)],
             '$140binary_subtract.7': [(<numba.core.ir.Assign object at 0x769f5ac5e620>,
                                        128)],
             '$142binary_subscr.8': [(<numba.core.ir.Assign object at 0x769f5ac5e7a0>,
                                      128)],
             '$144compare_op.9': [(<numba.core.ir.Assign object at 0x769f5ac5e920>,
                                   128)],
             '$146pred': [(<numba.core.ir.Assign object at 0x769f5ac5eb90>,
                           128)],
             '$154binary_subtract.4': [(<numba.core.ir.Assign object at 0x769f5ac5f0a0>,
                                        148)],
             '$156binary_subscr.5': [(<numba.core.ir.Assign object at 0x769f5ac5f220>,
                                      148)],
             '$164binary_subtract.9': [(<numba.core.ir.Assign object at 0x769f5ac5f760>,
                                        148)],
             '$166binary_subscr.10': [(<numba.core.ir.Assign object at 0x769f5ac5f8e0>,
                                       148)],
             '$168compare_op.11': [(<numba.core.ir.Assign object at 0x769f5ac5fa60>,
                                    148)],
             '$170pred': [(<numba.core.ir.Assign object at 0x769f5ac5fcd0>,
                           148)],
             '$176binary_subscr.3': [(<numba.core.ir.Assign object at 0x769f5ac680a0>,
                                      172)],
             '$192binary_subtract.4': [(<numba.core.ir.Assign object at 0x769f5ac688e0>,
                                        186)],
             '$194binary_subscr.5': [(<numba.core.ir.Assign object at 0x769f5ac68a60>,
                                      186)],
             '$208binary_subtract.4': [(<numba.core.ir.Assign object at 0x769f5ac69240>,
                                        202)],
             '$20load_global.7': [(<numba.core.ir.Assign object at 0x769f5ac09570>,
                                   0)],
             '$210binary_subscr.5': [(<numba.core.ir.Assign object at 0x769f5ac693c0>,
                                      202)],
             '$218binary_subtract.9': [(<numba.core.ir.Assign object at 0x769f5ac69900>,
                                        202)],
             '$220binary_subscr.10': [(<numba.core.ir.Assign object at 0x769f5ac69a80>,
                                       202)],
             '$222compare_op.11': [(<numba.core.ir.Assign object at 0x769f5ac69c00>,
                                    202)],
             '$224pred': [(<numba.core.ir.Assign object at 0x769f5ac69e70>,
                           202)],
             '$22load_method.8': [(<numba.core.ir.Assign object at 0x769f5ac096f0>,
                                   0)],
             '$230binary_subscr.3': [(<numba.core.ir.Assign object at 0x769f5ac6a200>,
                                      226)],
             '$236binary_subscr.6': [(<numba.core.ir.Assign object at 0x769f5ac6a5c0>,
                                      226)],
             '$238compare_op.7': [(<numba.core.ir.Assign object at 0x769f5ac6a740>,
                                   226)],
             '$240pred': [(<numba.core.ir.Assign object at 0x769f5ac6a9b0>,
                           226)],
             '$246binary_subscr.3': [(<numba.core.ir.Assign object at 0x769f5ac6ad40>,
                                      242)],
             '$262binary_subtract.4': [(<numba.core.ir.Assign object at 0x769f5ac6b580>,
                                        256)],
             '$264binary_subscr.5': [(<numba.core.ir.Assign object at 0x769f5ac6b700>,
                                      256)],
             '$272binary_subtract.9': [(<numba.core.ir.Assign object at 0x769f5ac6bc40>,
                                        256)],
             '$274binary_subscr.10': [(<numba.core.ir.Assign object at 0x769f5ac6bdc0>,
                                       256)],
             '$276compare_op.11': [(<numba.core.ir.Assign object at 0x769f5ac6bf40>,
                                    256)],
             '$278pred': [(<numba.core.ir.Assign object at 0x769f5ac701f0>,
                           256)],
             '$284binary_subscr.3': [(<numba.core.ir.Assign object at 0x769f5ac70580>,
                                      280)],
             '$290binary_subscr.6': [(<numba.core.ir.Assign object at 0x769f5ac70940>,
                                      280)],
             '$292compare_op.7': [(<numba.core.ir.Assign object at 0x769f5ac70ac0>,
                                   280)],
             '$294pred': [(<numba.core.ir.Assign object at 0x769f5ac70d30>,
                           280)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x769f5ac08970>,
                                  0)],
             '$300binary_subscr.3': [(<numba.core.ir.Assign object at 0x769f5ac710c0>,
                                      296)],
             '$30load_global.11': [(<numba.core.ir.Assign object at 0x769f5ac09c30>,
                                    0)],
             '$316binary_subtract.4': [(<numba.core.ir.Assign object at 0x769f5ac71900>,
                                        310)],
             '$318binary_subscr.5': [(<numba.core.ir.Assign object at 0x769f5ac71a80>,
                                      310)],
             '$326binary_subtract.9': [(<numba.core.ir.Assign object at 0x769f5ac71fc0>,
                                        310)],
             '$328binary_subscr.10': [(<numba.core.ir.Assign object at 0x769f5ac72140>,
                                       310)],
             '$32load_method.12': [(<numba.core.ir.Assign object at 0x769f5ac09db0>,
                                    0)],
             '$330compare_op.11': [(<numba.core.ir.Assign object at 0x769f5ac722c0>,
                                    310)],
             '$332pred': [(<numba.core.ir.Assign object at 0x769f5ac72530>,
                           310)],
             '$338binary_subscr.3': [(<numba.core.ir.Assign object at 0x769f5ac728c0>,
                                      334)],
             '$344binary_subscr.6': [(<numba.core.ir.Assign object at 0x769f5ac72c80>,
                                      334)],
             '$346compare_op.7': [(<numba.core.ir.Assign object at 0x769f5ac72e00>,
                                   334)],
             '$348pred': [(<numba.core.ir.Assign object at 0x769f5ac73070>,
                           334)],
             '$354binary_subscr.3': [(<numba.core.ir.Assign object at 0x769f5ac73400>,
                                      350)],
             '$370binary_subtract.4': [(<numba.core.ir.Assign object at 0x769f5ac73c40>,
                                        364)],
             '$372binary_subscr.5': [(<numba.core.ir.Assign object at 0x769f5ac73dc0>,
                                      364)],
             '$380binary_subtract.9': [(<numba.core.ir.Assign object at 0x769f5ac78340>,
                                        364)],
             '$382binary_subscr.10': [(<numba.core.ir.Assign object at 0x769f5ac784c0>,
                                       364)],
             '$384compare_op.11': [(<numba.core.ir.Assign object at 0x769f5ac78640>,
                                    364)],
             '$386pred': [(<numba.core.ir.Assign object at 0x769f5ac788b0>,
                           364)],
             '$392binary_subscr.3': [(<numba.core.ir.Assign object at 0x769f5ac78c40>,
                                      388)],
             '$398binary_subscr.6': [(<numba.core.ir.Assign object at 0x769f5ac79000>,
                                      388)],
             '$400compare_op.7': [(<numba.core.ir.Assign object at 0x769f5ac79180>,
                                   388)],
             '$402pred': [(<numba.core.ir.Assign object at 0x769f5ac793f0>,
                           388)],
             '$408binary_subscr.3': [(<numba.core.ir.Assign object at 0x769f5ac79780>,
                                      404)],
             '$40load_global.15': [(<numba.core.ir.Assign object at 0x769f5ac0a2f0>,
                                    0)],
             '$430return_value.1': [(<numba.core.ir.Assign object at 0x769f5ac7a230>,
                                     428)],
             '$46call_function.18': [(<numba.core.ir.Assign object at 0x769f5ac0a710>,
                                      0)],
             '$48get_iter.19': [(<numba.core.ir.Assign object at 0x769f5ac0a830>,
                                 0)],
             '$50for_iter.1': [(<numba.core.ir.Assign object at 0x769f5ac0a4a0>,
                                50)],
             '$50for_iter.2': [(<numba.core.ir.Assign object at 0x769f5ac0a920>,
                                50)],
             '$50for_iter.3': [(<numba.core.ir.Assign object at 0x769f5ac0aa40>,
                                50)],
             '$58binary_subscr.4': [(<numba.core.ir.Assign object at 0x769f5ac0b100>,
                                     52)],
             '$66binary_subtract.8': [(<numba.core.ir.Assign object at 0x769f5ac0b640>,
                                       52)],
             '$68binary_subscr.9': [(<numba.core.ir.Assign object at 0x769f5ac0b7c0>,
                                     52)],
             '$70compare_op.10': [(<numba.core.ir.Assign object at 0x769f5ac0b940>,
                                   52)],
             '$72pred': [(<numba.core.ir.Assign object at 0x769f5ac0bbb0>, 52)],
             '$80binary_subtract.4': [(<numba.core.ir.Assign object at 0x769f5ac5c100>,
                                       74)],
             '$82binary_subscr.5': [(<numba.core.ir.Assign object at 0x769f5ac5c280>,
                                     74)],
             '$90binary_subtract.9': [(<numba.core.ir.Assign object at 0x769f5ac5c7c0>,
                                       74)],
             '$92binary_subscr.10': [(<numba.core.ir.Assign object at 0x769f5ac5c940>,
                                      74)],
             '$94compare_op.11': [(<numba.core.ir.Assign object at 0x769f5ac5cac0>,
                                   74)],
             '$96pred': [(<numba.core.ir.Assign object at 0x769f5ac5cd30>, 74)],
             '$const116.3.1': [(<numba.core.ir.Assign object at 0x769f5ac5d750>,
                                112)],
             '$const138.6.1': [(<numba.core.ir.Assign object at 0x769f5ac5e470>,
                                128)],
             '$const152.3.1': [(<numba.core.ir.Assign object at 0x769f5ac5eef0>,
                                148)],
             '$const162.8.1': [(<numba.core.ir.Assign object at 0x769f5ac5f5b0>,
                                148)],
             '$const190.3.1': [(<numba.core.ir.Assign object at 0x769f5ac68730>,
                                186)],
             '$const206.3.1': [(<numba.core.ir.Assign object at 0x769f5ac69090>,
                                202)],
             '$const216.8.1': [(<numba.core.ir.Assign object at 0x769f5ac69750>,
                                202)],
             '$const260.3.1': [(<numba.core.ir.Assign object at 0x769f5ac6b3d0>,
                                256)],
             '$const270.8.1': [(<numba.core.ir.Assign object at 0x769f5ac6ba90>,
                                256)],
             '$const314.3.1': [(<numba.core.ir.Assign object at 0x769f5ac71750>,
                                310)],
             '$const324.8.1': [(<numba.core.ir.Assign object at 0x769f5ac71e10>,
                                310)],
             '$const368.3.1': [(<numba.core.ir.Assign object at 0x769f5ac73a90>,
                                364)],
             '$const378.8.1': [(<numba.core.ir.Assign object at 0x769f5ac78190>,
                                364)],
             '$const418.1.2': [(<numba.core.ir.Assign object at 0x769f5ac79bd0>,
                                418)],
             '$const64.7.1': [(<numba.core.ir.Assign object at 0x769f5ac0b490>,
                               52)],
             '$const78.3.1': [(<numba.core.ir.Assign object at 0x769f5ac0bf10>,
                               74)],
             '$const88.8.1': [(<numba.core.ir.Assign object at 0x769f5ac5c610>,
                               74)],
             '$phi50.0': [(<numba.core.ir.Assign object at 0x769f5ac08b20>, 0)],
             '$phi52.1': [(<numba.core.ir.Assign object at 0x769f5ac09f60>,
                           50)],
             'basic_lb': [(<numba.core.ir.Assign object at 0x769f5ac086d0>, 0)],
             'basic_ub': [(<numba.core.ir.Assign object at 0x769f5ac08490>, 0)],
             'bool146': [(<numba.core.ir.Assign object at 0x769f5ac5ea70>,
                          128)],
             'bool170': [(<numba.core.ir.Assign object at 0x769f5ac5fbb0>,
                          148)],
             'bool224': [(<numba.core.ir.Assign object at 0x769f5ac69d50>,
                          202)],
             'bool240': [(<numba.core.ir.Assign object at 0x769f5ac6a890>,
                          226)],
             'bool278': [(<numba.core.ir.Assign object at 0x769f5ac700d0>,
                          256)],
             'bool294': [(<numba.core.ir.Assign object at 0x769f5ac70c10>,
                          280)],
             'bool332': [(<numba.core.ir.Assign object at 0x769f5ac72410>,
                          310)],
             'bool348': [(<numba.core.ir.Assign object at 0x769f5ac72f50>,
                          334)],
             'bool386': [(<numba.core.ir.Assign object at 0x769f5ac78790>,
                          364)],
             'bool402': [(<numba.core.ir.Assign object at 0x769f5ac792d0>,
                          388)],
             'bool72': [(<numba.core.ir.Assign object at 0x769f5ac0ba90>, 52)],
             'bool96': [(<numba.core.ir.Assign object at 0x769f5ac5cc10>, 74)],
             'close': [(<numba.core.ir.Assign object at 0x769f5ac08190>, 0)],
             'final_lb': [(<numba.core.ir.Assign object at 0x769f5ac09a20>, 0)],
             'final_ub': [(<numba.core.ir.Assign object at 0x769f5ac09360>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x769f5ac0ad10>, 52)],
             'length': [(<numba.core.ir.Assign object at 0x769f5ac08c70>, 0)],
             'n': [(<numba.core.ir.Assign object at 0x769f5ac087f0>, 0)],
             'supertrend': [(<numba.core.ir.Assign object at 0x769f5ac0a0e0>,
                             0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x769f5adefcd0>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4522)
           2	LOAD_GLOBAL(arg=0, lineno=4523)
           4	LOAD_ATTR(arg=1, lineno=4523)
           6	LOAD_FAST(arg=0, lineno=4523)
           8	LOAD_FAST(arg=1, lineno=4523)
          10	LOAD_CONST(arg=1, lineno=4523)
          12	CALL_FUNCTION_KW(arg=2, lineno=4523)
          14	STORE_FAST(arg=2, lineno=4523)
          16	LOAD_FAST(arg=2, lineno=4524)
          18	LOAD_METHOD(arg=2, lineno=4524)
          20	CALL_METHOD(arg=0, lineno=4524)
          22	POP_TOP(arg=None, lineno=4524)
          24	LOAD_FAST(arg=2, lineno=4525)
          26	RETURN_VALUE(arg=None, lineno=4525)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4522)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_attr.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_attr.1', '$shape6.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_attr.1', '$shape6.2', '$dtype8.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=CALL_FUNCTION_KW(arg=2, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_attr.1', '$shape6.2', '$dtype8.3', '$const10.4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=14, inst=STORE_FAST(arg=2, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$12call_function_kw.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=4524)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=4524)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$arr16.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=20, inst=CALL_METHOD(arg=0, lineno=4524)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$18load_method.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=22, inst=POP_TOP(arg=None, lineno=4524)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$20call_method.8']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=24, inst=LOAD_FAST(arg=2, lineno=4525)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=26, inst=RETURN_VALUE(arg=None, lineno=4525)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$arr24.9']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'res': '$shape6.2'}), (8, {'res': '$dtype8.3'}), (10, {'res': '$const10.4.1'}), (12, {'func': '$4load_attr.1', 'args': ['$shape6.2', '$dtype8.3'], 'names': '$const10.4.1', 'res': '$12call_function_kw.5'}), (14, {'value': '$12call_function_kw.5'}), (16, {'res': '$arr16.6'}), (18, {'item': '$arr16.6', 'res': '$18load_method.7'}), (20, {'func': '$18load_method.7', 'args': [], 'res': '$20call_method.8'}), (24, {'res': '$arr24.9'}), (26, {'retval': '$arr24.9', 'castval': '$26return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=empty) ['$2load_global.0', '$4load_attr.1']
    arr = call $4load_attr.1(shape, func=$4load_attr.1, args=[Var(shape, arrayobj.py:4522)], kws=[('dtype', Var(dtype, arrayobj.py:4522))], vararg=None, varkwarg=None, target=None) ['$4load_attr.1', 'arr', 'dtype', 'shape']
    $18load_method.7 = getattr(value=arr, attr=_zero_fill) ['$18load_method.7', 'arr']
    $20call_method.8 = call $18load_method.7(func=$18load_method.7, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_method.7', '$20call_method.8']
    $26return_value.10 = cast(value=arr)     ['$26return_value.10', 'arr']
    return $26return_value.10                ['$26return_value.10']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x769f5accd930>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: shape = arg(0, name=shape)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: dtype = arg(1, name=dtype)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: arr = call $4load_attr.1(shape, func=$4load_attr.1, args=[Var(shape, arrayobj.py:4522)], kws=[('dtype', Var(dtype, arrayobj.py:4522))], vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $18load_method.7 = getattr(value=arr, attr=_zero_fill)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $20call_method.8 = call $18load_method.7(func=$18load_method.7, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $26return_value.10 = cast(value=arr)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $26return_value.10
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$18load_method.7': [(<numba.core.ir.Assign object at 0x769f5accf190>,
                                   0)],
             '$20call_method.8': [(<numba.core.ir.Assign object at 0x769f5accf3a0>,
                                   0)],
             '$26return_value.10': [(<numba.core.ir.Assign object at 0x769f5accf5b0>,
                                     0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x769f5acce6b0>,
                                  0)],
             '$4load_attr.1': [(<numba.core.ir.Assign object at 0x769f5acce830>,
                                0)],
             'arr': [(<numba.core.ir.Assign object at 0x769f5acceef0>, 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x769f5acce530>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x769f5acce410>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x769f5accd930>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4454)
           2	LOAD_GLOBAL(arg=0, lineno=4455)
           4	LOAD_FAST(arg=0, lineno=4455)
           6	LOAD_FAST(arg=1, lineno=4455)
           8	LOAD_DEREF(arg=0, lineno=4455)
          10	CALL_FUNCTION(arg=3, lineno=4455)
          12	RETURN_VALUE(arg=None, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4454)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$shape4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=LOAD_DEREF(arg=0, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$shape4.1', '$dtype6.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=CALL_FUNCTION(arg=3, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$shape4.1', '$dtype6.2', '$8load_deref.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$10call_function.4']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'res': '$dtype6.2'}), (8, {'res': '$8load_deref.3'}), (10, {'func': '$2load_global.0', 'args': ['$shape4.1', '$dtype6.2', '$8load_deref.3'], 'res': '$10call_function.4'}), (12, {'retval': '$10call_function.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$2load_global.0']
    $8load_deref.3 = freevar(retty: array(float64, 1d, C)) ['$8load_deref.3']
    $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4454), Var(dtype, arrayobj.py:4454), Var($8load_deref.3, arrayobj.py:4455)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_deref.3', 'dtype', 'shape']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x769f5ab0cfa0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: shape = arg(0, name=shape)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: dtype = arg(1, name=dtype)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $8load_deref.3 = freevar(retty: array(float64, 1d, C))
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4454), Var(dtype, arrayobj.py:4454), Var($8load_deref.3, arrayobj.py:4455)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $12return_value.5 = cast(value=$10call_function.4)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $12return_value.5
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$10call_function.4': [(<numba.core.ir.Assign object at 0x769f5ab0d240>,
                                     0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x769f5ab0d120>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x769f5ab0d6c0>,
                                  0)],
             '$8load_deref.3': [(<numba.core.ir.Assign object at 0x769f5ab0d420>,
                                 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x769f5ab0d540>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x769f5ab0c730>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x769f5ab0cfa0>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4330)
           2	LOAD_FAST(arg=0, lineno=4333)
           4	LOAD_METHOD(arg=0, lineno=4333)
           6	LOAD_FAST(arg=1, lineno=4333)
           8	LOAD_FAST(arg=2, lineno=4333)
          10	CALL_METHOD(arg=2, lineno=4333)
          12	RETURN_VALUE(arg=None, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4330)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_METHOD(arg=0, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$arrtype2.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_method.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_method.1', '$size6.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=CALL_METHOD(arg=2, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_method.1', '$size6.2', '$align8.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$10call_method.4']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$arrtype2.0'}), (4, {'item': '$arrtype2.0', 'res': '$4load_method.1'}), (6, {'res': '$size6.2'}), (8, {'res': '$align8.3'}), (10, {'func': '$4load_method.1', 'args': ['$size6.2', '$align8.3'], 'res': '$10call_method.4'}), (12, {'retval': '$10call_method.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    arrtype = arg(0, name=arrtype)           ['arrtype']
    size = arg(1, name=size)                 ['size']
    align = arg(2, name=align)               ['align']
    $4load_method.1 = getattr(value=arrtype, attr=_allocate) ['$4load_method.1', 'arrtype']
    $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:4330), Var(align, arrayobj.py:4330)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', 'align', 'size']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x769f5acce140>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: arrtype = arg(0, name=arrtype)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: size = arg(1, name=size)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: align = arg(2, name=align)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $4load_method.1 = getattr(value=arrtype, attr=_allocate)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:4330), Var(align, arrayobj.py:4330)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $12return_value.5 = cast(value=$10call_method.4)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $12return_value.5
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$10call_method.4': [(<numba.core.ir.Assign object at 0x769f5abfca90>,
                                   0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x769f5abfcb80>,
                                    0)],
             '$4load_method.1': [(<numba.core.ir.Assign object at 0x769f5abfc640>,
                                  0)],
             'align': [(<numba.core.ir.Assign object at 0x769f5abfc3a0>, 0)],
             'arrtype': [(<numba.core.ir.Assign object at 0x769f5abe3430>, 0)],
             'size': [(<numba.core.ir.Assign object at 0x769f5abfc280>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x769f5acce140>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4325)
           2	LOAD_GLOBAL(arg=0, lineno=4326)
           4	LOAD_FAST(arg=1, lineno=4326)
           6	LOAD_FAST(arg=2, lineno=4326)
           8	CALL_FUNCTION(arg=2, lineno=4326)
          10	RETURN_VALUE(arg=None, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4325)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=LOAD_FAST(arg=2, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$allocsize4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$allocsize4.1', '$align6.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=RETURN_VALUE(arg=None, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$8call_function.3']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$allocsize4.1'}), (6, {'res': '$align6.2'}), (8, {'func': '$2load_global.0', 'args': ['$allocsize4.1', '$align6.2'], 'res': '$8call_function.3'}), (10, {'retval': '$8call_function.3', 'castval': '$10return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    cls = arg(0, name=cls)                   ['cls']
    allocsize = arg(1, name=allocsize)       ['allocsize']
    align = arg(2, name=align)               ['align']
    $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:4325), Var(align, arrayobj.py:4325)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'align', 'allocsize']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x769f5abfd870>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: cls = arg(0, name=cls)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: allocsize = arg(1, name=allocsize)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: align = arg(2, name=align)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:4325), Var(align, arrayobj.py:4325)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $10return_value.4 = cast(value=$8call_function.3)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $10return_value.4
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$10return_value.4': [(<numba.core.ir.Assign object at 0x769f5abfec50>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x769f5abfe710>,
                                  0)],
             '$8call_function.3': [(<numba.core.ir.Assign object at 0x769f5abfeb30>,
                                    0)],
             'align': [(<numba.core.ir.Assign object at 0x769f5abfe590>, 0)],
             'allocsize': [(<numba.core.ir.Assign object at 0x769f5abfe470>,
                            0)],
             'cls': [(<numba.core.ir.Assign object at 0x769f5abfe350>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x769f5abfd870>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4513)
           2	LOAD_GLOBAL(arg=0, lineno=4514)
           4	LOAD_FAST(arg=0, lineno=4514)
           6	CALL_FUNCTION(arg=1, lineno=4514)
           8	POP_TOP(arg=None, lineno=4514)
          10	LOAD_CONST(arg=0, lineno=4514)
          12	RETURN_VALUE(arg=None, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4513)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$self4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=POP_TOP(arg=None, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$6call_function.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=LOAD_CONST(arg=0, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$const10.3.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$self4.1'}), (6, {'func': '$2load_global.0', 'args': ['$self4.1'], 'res': '$6call_function.2'}), (10, {'res': '$const10.3.0'}), (12, {'retval': '$const10.3.0', 'castval': '$12return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    self = arg(0, name=self)                 ['self']
    $2load_global.0 = global(_zero_fill_array_method: <intrinsic _zero_fill_array_method>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(self, func=$2load_global.0, args=[Var(self, arrayobj.py:4513)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'self']
    $const10.3.0 = const(NoneType, None)     ['$const10.3.0']
    $12return_value.4 = cast(value=$const10.3.0) ['$12return_value.4', '$const10.3.0']
    return $12return_value.4                 ['$12return_value.4']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x769f5aaae3b0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: self = arg(0, name=self)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(_zero_fill_array_method: <intrinsic _zero_fill_array_method>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $6call_function.2 = call $2load_global.0(self, func=$2load_global.0, args=[Var(self, arrayobj.py:4513)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const10.3.0 = const(NoneType, None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $12return_value.4 = cast(value=$const10.3.0)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $12return_value.4
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$12return_value.4': [(<numba.core.ir.Assign object at 0x769f5aaae830>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x769f5aaadae0>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x769f5aaadc30>,
                                    0)],
             '$const10.3.0': [(<numba.core.ir.Assign object at 0x769f5aaae6b0>,
                               0)],
             'self': [(<numba.core.ir.Assign object at 0x769f5aaad930>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x769f5aaae3b0>
yfinance - [DEBUG]{MainThread} - wrapper() - Entering history()
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NQ=F', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -  Entering history()
yfinance - [DEBUG]{MainThread} - history() - NQ=F: Yahoo GET parameters: {'range': '60d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -   Entering get()
yfinance - [DEBUG]{MainThread} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{MainThread} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/NQ=F
yfinance - [DEBUG]{MainThread} - _make_request() - params={'range': '60d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{MainThread} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - _get_crumb_basic() - reusing crumb
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _make_request() - response code=200
yfinance - [DEBUG]{MainThread} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{MainThread} - wrapper() -   Exiting get()
yfinance - [DEBUG]{MainThread} - history() - NQ=F: yfinance received OHLC data: 2025-04-22 04:00:00 -> 2025-06-30 06:33:57
yfinance - [DEBUG]{MainThread} - history() - NQ=F: OHLC after cleaning: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:33:57-04:00
yfinance - [DEBUG]{MainThread} - history() - NQ=F: OHLC after combining events: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:33:57-04:00
yfinance - [DEBUG]{MainThread} - history() - NQ=F: yfinance returning OHLC: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:30:00-04:00
yfinance - [DEBUG]{MainThread} - wrapper() -  Exiting history()
yfinance - [DEBUG]{MainThread} - wrapper() - Exiting history()
yfinance - [DEBUG]{MainThread} - wrapper() - Entering history()
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PYPL', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -  Entering history()
yfinance - [DEBUG]{MainThread} - history() - PYPL: Yahoo GET parameters: {'range': '60d', 'interval': '15m', 'includePrePost': True, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -   Entering get()
yfinance - [DEBUG]{MainThread} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{MainThread} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/PYPL
yfinance - [DEBUG]{MainThread} - _make_request() - params={'range': '60d', 'interval': '15m', 'includePrePost': True, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{MainThread} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - _get_crumb_basic() - reusing crumb
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _make_request() - response code=200
yfinance - [DEBUG]{MainThread} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{MainThread} - wrapper() -   Exiting get()
yfinance - [DEBUG]{MainThread} - history() - PYPL: yfinance received OHLC data: 2025-04-02 08:00:00 -> 2025-06-27 23:59:55
yfinance - [DEBUG]{MainThread} - history() - PYPL: OHLC after cleaning: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:59:55-04:00
yfinance - [DEBUG]{MainThread} - history() - PYPL: OHLC after combining events: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:59:55-04:00
yfinance - [DEBUG]{MainThread} - history() - PYPL: yfinance returning OHLC: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:45:00-04:00
yfinance - [DEBUG]{MainThread} - wrapper() -  Exiting history()
yfinance - [DEBUG]{MainThread} - wrapper() - Exiting history()
root - [INFO]{MainThread} - get_buy_sell_points_Roll() - Parameters of acquisition "buy_sell_points" for this stock is set to POSITIVE (units) 	92%: 0.8108 	98%: 1.5836 NEGATIVE (units) 	93%: 0.7986 	98%: 1.2999
yfinance - [DEBUG]{MainThread} - wrapper() - Entering history()
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NQ=F', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -  Entering history()
yfinance - [DEBUG]{MainThread} - history() - NQ=F: Yahoo GET parameters: {'range': '60d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -   Entering get()
yfinance - [DEBUG]{MainThread} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{MainThread} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/NQ=F
yfinance - [DEBUG]{MainThread} - _make_request() - params={'range': '60d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{MainThread} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - _get_crumb_basic() - reusing crumb
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _make_request() - response code=200
yfinance - [DEBUG]{MainThread} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{MainThread} - wrapper() -   Exiting get()
yfinance - [DEBUG]{MainThread} - history() - NQ=F: yfinance received OHLC data: 2025-04-22 04:00:00 -> 2025-06-30 06:34:46
yfinance - [DEBUG]{MainThread} - history() - NQ=F: OHLC after cleaning: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:34:46-04:00
yfinance - [DEBUG]{MainThread} - history() - NQ=F: OHLC after combining events: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:34:46-04:00
yfinance - [DEBUG]{MainThread} - history() - NQ=F: yfinance returning OHLC: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:30:00-04:00
yfinance - [DEBUG]{MainThread} - wrapper() -  Exiting history()
yfinance - [DEBUG]{MainThread} - wrapper() - Exiting history()
h5py._conv - [DEBUG]{MainThread} - <module>() - Creating converter from 7 to 5
h5py._conv - [DEBUG]{MainThread} - <module>() - Creating converter from 5 to 7
h5py._conv - [DEBUG]{MainThread} - <module>() - Creating converter from 7 to 5
h5py._conv - [DEBUG]{MainThread} - <module>() - Creating converter from 5 to 7
matplotlib - [DEBUG]{MainThread} - wrapper() - matplotlib data path: /opt/conda/lib/python3.10/site-packages/matplotlib/mpl-data
matplotlib - [DEBUG]{MainThread} - wrapper() - CONFIGDIR=/root/.config/matplotlib
matplotlib - [DEBUG]{MainThread} - <module>() - interactive is False
matplotlib - [DEBUG]{MainThread} - <module>() - platform is linux
matplotlib - [DEBUG]{MainThread} - wrapper() - CACHEDIR=/root/.cache/matplotlib
matplotlib.font_manager - [DEBUG]{MainThread} - _load_fontmanager() - Using fontManager instance from /root/.cache/matplotlib/fontlist-v390.json
yfinance - [DEBUG]{MainThread} - wrapper() - Entering history()
peewee - [DEBUG]{MainThread} - execute_sql() - ('CREATE TABLE IF NOT EXISTS "_tz_kv" ("key" VARCHAR(255) NOT NULL PRIMARY KEY, "value" VARCHAR(255)) WITHOUT ROWID', [])
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['UBER', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -  Entering history()
yfinance - [DEBUG]{MainThread} - history() - UBER: Yahoo GET parameters: {'range': '60d', 'interval': '15m', 'includePrePost': True, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -   Entering get()
yfinance - [DEBUG]{MainThread} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{MainThread} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/UBER
yfinance - [DEBUG]{MainThread} - _make_request() - params={'range': '60d', 'interval': '15m', 'includePrePost': True, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{MainThread} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -        Entering _load_cookie_curlCffi()
peewee - [DEBUG]{MainThread} - execute_sql() - ('CREATE TABLE IF NOT EXISTS "_cookieschema" ("strategy" VARCHAR(255) NOT NULL PRIMARY KEY, "fetch_date" DATETIME NOT NULL, "cookie_bytes" BLOB NOT NULL) WITHOUT ROWID', [])
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."strategy", "t1"."fetch_date", "t1"."cookie_bytes" FROM "_cookieschema" AS "t1" WHERE ("t1"."strategy" = ?) LIMIT ? OFFSET ?', ['curlCffi', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -        Exiting _load_cookie_curlCffi()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing persistent cookie
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -        Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{MainThread} - wrapper() -        Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_crumb_basic() - crumb = 'dK3IG/1ev6r'
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _make_request() - response code=200
yfinance - [DEBUG]{MainThread} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{MainThread} - wrapper() -   Exiting get()
yfinance - [DEBUG]{MainThread} - history() - UBER: yfinance received OHLC data: 2025-04-02 08:00:00 -> 2025-06-27 23:59:53
yfinance - [DEBUG]{MainThread} - history() - UBER: OHLC after cleaning: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:59:53-04:00
yfinance - [DEBUG]{MainThread} - history() - UBER: OHLC after combining events: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:59:53-04:00
yfinance - [DEBUG]{MainThread} - history() - UBER: yfinance returning OHLC: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:45:00-04:00
yfinance - [DEBUG]{MainThread} - wrapper() -  Exiting history()
yfinance - [DEBUG]{MainThread} - wrapper() - Exiting history()
root - [INFO]{MainThread} - get_buy_sell_points_Roll() - Parameters of acquisition "buy_sell_points" for this stock is set to POSITIVE (units) 	92%: 1.123 	98%: 1.8743 NEGATIVE (units) 	93%: 1.252 	98%: 1.9188
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=99)
           2	LOAD_GLOBAL(arg=0, lineno=106)
           4	LOAD_FAST(arg=0, lineno=106)
           6	CALL_FUNCTION(arg=1, lineno=106)
           8	STORE_FAST(arg=4, lineno=106)
          10	LOAD_GLOBAL(arg=1, lineno=107)
          12	LOAD_METHOD(arg=2, lineno=107)
          14	LOAD_FAST(arg=4, lineno=107)
          16	CALL_METHOD(arg=1, lineno=107)
          18	STORE_FAST(arg=5, lineno=107)
          20	LOAD_GLOBAL(arg=1, lineno=108)
          22	LOAD_METHOD(arg=2, lineno=108)
          24	LOAD_FAST(arg=4, lineno=108)
          26	CALL_METHOD(arg=1, lineno=108)
          28	STORE_FAST(arg=6, lineno=108)
          30	LOAD_GLOBAL(arg=1, lineno=109)
          32	LOAD_METHOD(arg=2, lineno=109)
          34	LOAD_FAST(arg=4, lineno=109)
          36	CALL_METHOD(arg=1, lineno=109)
          38	STORE_FAST(arg=7, lineno=109)
          40	LOAD_GLOBAL(arg=3, lineno=111)
          42	LOAD_FAST(arg=3, lineno=111)
          44	LOAD_FAST(arg=4, lineno=111)
          46	CALL_FUNCTION(arg=2, lineno=111)
          48	GET_ITER(arg=None, lineno=111)
>         50	FOR_ITER(arg=188, lineno=111)
          52	STORE_FAST(arg=8, lineno=111)
          54	LOAD_FAST(arg=1, lineno=113)
          56	LOAD_FAST(arg=8, lineno=113)
          58	BINARY_SUBSCR(arg=None, lineno=113)
          60	LOAD_FAST(arg=5, lineno=113)
          62	LOAD_FAST(arg=8, lineno=113)
          64	LOAD_CONST(arg=1, lineno=113)
          66	BINARY_SUBTRACT(arg=None, lineno=113)
          68	BINARY_SUBSCR(arg=None, lineno=113)
          70	COMPARE_OP(arg=0, lineno=113)
          72	POP_JUMP_IF_TRUE(arg=50, lineno=113)
          74	LOAD_FAST(arg=0, lineno=113)
          76	LOAD_FAST(arg=8, lineno=113)
          78	LOAD_CONST(arg=1, lineno=113)
          80	BINARY_SUBTRACT(arg=None, lineno=113)
          82	BINARY_SUBSCR(arg=None, lineno=113)
          84	LOAD_FAST(arg=5, lineno=113)
          86	LOAD_FAST(arg=8, lineno=113)
          88	LOAD_CONST(arg=1, lineno=113)
          90	BINARY_SUBTRACT(arg=None, lineno=113)
          92	BINARY_SUBSCR(arg=None, lineno=113)
          94	COMPARE_OP(arg=4, lineno=113)
          96	POP_JUMP_IF_FALSE(arg=57, lineno=113)
>         98	LOAD_FAST(arg=1, lineno=114)
         100	LOAD_FAST(arg=8, lineno=114)
         102	BINARY_SUBSCR(arg=None, lineno=114)
         104	LOAD_FAST(arg=5, lineno=114)
         106	LOAD_FAST(arg=8, lineno=114)
         108	STORE_SUBSCR(arg=None, lineno=114)
         110	JUMP_FORWARD(arg=8, lineno=114)
>        112	LOAD_FAST(arg=5, lineno=116)
         114	LOAD_FAST(arg=8, lineno=116)
         116	LOAD_CONST(arg=1, lineno=116)
         118	BINARY_SUBTRACT(arg=None, lineno=116)
         120	BINARY_SUBSCR(arg=None, lineno=116)
         122	LOAD_FAST(arg=5, lineno=116)
         124	LOAD_FAST(arg=8, lineno=116)
         126	STORE_SUBSCR(arg=None, lineno=116)
>        128	LOAD_FAST(arg=2, lineno=118)
         130	LOAD_FAST(arg=8, lineno=118)
         132	BINARY_SUBSCR(arg=None, lineno=118)
         134	LOAD_FAST(arg=6, lineno=118)
         136	LOAD_FAST(arg=8, lineno=118)
         138	LOAD_CONST(arg=1, lineno=118)
         140	BINARY_SUBTRACT(arg=None, lineno=118)
         142	BINARY_SUBSCR(arg=None, lineno=118)
         144	COMPARE_OP(arg=4, lineno=118)
         146	POP_JUMP_IF_TRUE(arg=87, lineno=118)
         148	LOAD_FAST(arg=0, lineno=118)
         150	LOAD_FAST(arg=8, lineno=118)
         152	LOAD_CONST(arg=1, lineno=118)
         154	BINARY_SUBTRACT(arg=None, lineno=118)
         156	BINARY_SUBSCR(arg=None, lineno=118)
         158	LOAD_FAST(arg=6, lineno=118)
         160	LOAD_FAST(arg=8, lineno=118)
         162	LOAD_CONST(arg=1, lineno=118)
         164	BINARY_SUBTRACT(arg=None, lineno=118)
         166	BINARY_SUBSCR(arg=None, lineno=118)
         168	COMPARE_OP(arg=0, lineno=118)
         170	POP_JUMP_IF_FALSE(arg=94, lineno=118)
>        172	LOAD_FAST(arg=2, lineno=119)
         174	LOAD_FAST(arg=8, lineno=119)
         176	BINARY_SUBSCR(arg=None, lineno=119)
         178	LOAD_FAST(arg=6, lineno=119)
         180	LOAD_FAST(arg=8, lineno=119)
         182	STORE_SUBSCR(arg=None, lineno=119)
         184	JUMP_FORWARD(arg=8, lineno=119)
>        186	LOAD_FAST(arg=6, lineno=121)
         188	LOAD_FAST(arg=8, lineno=121)
         190	LOAD_CONST(arg=1, lineno=121)
         192	BINARY_SUBTRACT(arg=None, lineno=121)
         194	BINARY_SUBSCR(arg=None, lineno=121)
         196	LOAD_FAST(arg=6, lineno=121)
         198	LOAD_FAST(arg=8, lineno=121)
         200	STORE_SUBSCR(arg=None, lineno=121)
>        202	LOAD_FAST(arg=7, lineno=123)
         204	LOAD_FAST(arg=8, lineno=123)
         206	LOAD_CONST(arg=1, lineno=123)
         208	BINARY_SUBTRACT(arg=None, lineno=123)
         210	BINARY_SUBSCR(arg=None, lineno=123)
         212	LOAD_FAST(arg=5, lineno=123)
         214	LOAD_FAST(arg=8, lineno=123)
         216	LOAD_CONST(arg=1, lineno=123)
         218	BINARY_SUBTRACT(arg=None, lineno=123)
         220	BINARY_SUBSCR(arg=None, lineno=123)
         222	COMPARE_OP(arg=2, lineno=123)
         224	POP_JUMP_IF_FALSE(arg=129, lineno=123)
         226	LOAD_FAST(arg=0, lineno=123)
         228	LOAD_FAST(arg=8, lineno=123)
         230	BINARY_SUBSCR(arg=None, lineno=123)
         232	LOAD_FAST(arg=5, lineno=123)
         234	LOAD_FAST(arg=8, lineno=123)
         236	BINARY_SUBSCR(arg=None, lineno=123)
         238	COMPARE_OP(arg=1, lineno=123)
         240	POP_JUMP_IF_FALSE(arg=129, lineno=123)
         242	LOAD_FAST(arg=5, lineno=124)
         244	LOAD_FAST(arg=8, lineno=124)
         246	BINARY_SUBSCR(arg=None, lineno=124)
         248	LOAD_FAST(arg=7, lineno=124)
         250	LOAD_FAST(arg=8, lineno=124)
         252	STORE_SUBSCR(arg=None, lineno=124)
         254	JUMP_ABSOLUTE(arg=26, lineno=124)
>        256	LOAD_FAST(arg=7, lineno=125)
         258	LOAD_FAST(arg=8, lineno=125)
         260	LOAD_CONST(arg=1, lineno=125)
         262	BINARY_SUBTRACT(arg=None, lineno=125)
         264	BINARY_SUBSCR(arg=None, lineno=125)
         266	LOAD_FAST(arg=5, lineno=125)
         268	LOAD_FAST(arg=8, lineno=125)
         270	LOAD_CONST(arg=1, lineno=125)
         272	BINARY_SUBTRACT(arg=None, lineno=125)
         274	BINARY_SUBSCR(arg=None, lineno=125)
         276	COMPARE_OP(arg=2, lineno=125)
         278	POP_JUMP_IF_FALSE(arg=156, lineno=125)
         280	LOAD_FAST(arg=0, lineno=125)
         282	LOAD_FAST(arg=8, lineno=125)
         284	BINARY_SUBSCR(arg=None, lineno=125)
         286	LOAD_FAST(arg=5, lineno=125)
         288	LOAD_FAST(arg=8, lineno=125)
         290	BINARY_SUBSCR(arg=None, lineno=125)
         292	COMPARE_OP(arg=4, lineno=125)
         294	POP_JUMP_IF_FALSE(arg=156, lineno=125)
         296	LOAD_FAST(arg=6, lineno=126)
         298	LOAD_FAST(arg=8, lineno=126)
         300	BINARY_SUBSCR(arg=None, lineno=126)
         302	LOAD_FAST(arg=7, lineno=126)
         304	LOAD_FAST(arg=8, lineno=126)
         306	STORE_SUBSCR(arg=None, lineno=126)
         308	JUMP_ABSOLUTE(arg=26, lineno=126)
>        310	LOAD_FAST(arg=7, lineno=127)
         312	LOAD_FAST(arg=8, lineno=127)
         314	LOAD_CONST(arg=1, lineno=127)
         316	BINARY_SUBTRACT(arg=None, lineno=127)
         318	BINARY_SUBSCR(arg=None, lineno=127)
         320	LOAD_FAST(arg=6, lineno=127)
         322	LOAD_FAST(arg=8, lineno=127)
         324	LOAD_CONST(arg=1, lineno=127)
         326	BINARY_SUBTRACT(arg=None, lineno=127)
         328	BINARY_SUBSCR(arg=None, lineno=127)
         330	COMPARE_OP(arg=2, lineno=127)
         332	POP_JUMP_IF_FALSE(arg=183, lineno=127)
         334	LOAD_FAST(arg=0, lineno=127)
         336	LOAD_FAST(arg=8, lineno=127)
         338	BINARY_SUBSCR(arg=None, lineno=127)
         340	LOAD_FAST(arg=6, lineno=127)
         342	LOAD_FAST(arg=8, lineno=127)
         344	BINARY_SUBSCR(arg=None, lineno=127)
         346	COMPARE_OP(arg=5, lineno=127)
         348	POP_JUMP_IF_FALSE(arg=183, lineno=127)
         350	LOAD_FAST(arg=6, lineno=128)
         352	LOAD_FAST(arg=8, lineno=128)
         354	BINARY_SUBSCR(arg=None, lineno=128)
         356	LOAD_FAST(arg=7, lineno=128)
         358	LOAD_FAST(arg=8, lineno=128)
         360	STORE_SUBSCR(arg=None, lineno=128)
         362	JUMP_ABSOLUTE(arg=26, lineno=128)
>        364	LOAD_FAST(arg=7, lineno=129)
         366	LOAD_FAST(arg=8, lineno=129)
         368	LOAD_CONST(arg=1, lineno=129)
         370	BINARY_SUBTRACT(arg=None, lineno=129)
         372	BINARY_SUBSCR(arg=None, lineno=129)
         374	LOAD_FAST(arg=6, lineno=129)
         376	LOAD_FAST(arg=8, lineno=129)
         378	LOAD_CONST(arg=1, lineno=129)
         380	BINARY_SUBTRACT(arg=None, lineno=129)
         382	BINARY_SUBSCR(arg=None, lineno=129)
         384	COMPARE_OP(arg=2, lineno=129)
         386	POP_JUMP_IF_FALSE(arg=210, lineno=129)
         388	LOAD_FAST(arg=0, lineno=129)
         390	LOAD_FAST(arg=8, lineno=129)
         392	BINARY_SUBSCR(arg=None, lineno=129)
         394	LOAD_FAST(arg=6, lineno=129)
         396	LOAD_FAST(arg=8, lineno=129)
         398	BINARY_SUBSCR(arg=None, lineno=129)
         400	COMPARE_OP(arg=0, lineno=129)
         402	POP_JUMP_IF_FALSE(arg=210, lineno=129)
         404	LOAD_FAST(arg=5, lineno=130)
         406	LOAD_FAST(arg=8, lineno=130)
         408	BINARY_SUBSCR(arg=None, lineno=130)
         410	LOAD_FAST(arg=7, lineno=130)
         412	LOAD_FAST(arg=8, lineno=130)
         414	STORE_SUBSCR(arg=None, lineno=130)
         416	JUMP_ABSOLUTE(arg=26, lineno=130)
>        418	LOAD_CONST(arg=2, lineno=132)
         420	LOAD_FAST(arg=7, lineno=132)
         422	LOAD_FAST(arg=8, lineno=132)
         424	STORE_SUBSCR(arg=None, lineno=132)
         426	JUMP_ABSOLUTE(arg=26, lineno=132)
>        428	LOAD_FAST(arg=7, lineno=134)
         430	RETURN_VALUE(arg=None, lineno=134)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=99)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=106)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=106)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=106)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$close4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=STORE_FAST(arg=4, lineno=106)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$6call_function.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=LOAD_GLOBAL(arg=1, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=LOAD_METHOD(arg=2, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$10load_global.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=14, inst=LOAD_FAST(arg=4, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$12load_method.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=16, inst=CALL_METHOD(arg=1, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$12load_method.4', '$length14.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=18, inst=STORE_FAST(arg=5, lineno=107)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$16call_method.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=20, inst=LOAD_GLOBAL(arg=1, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=22, inst=LOAD_METHOD(arg=2, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$20load_global.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=24, inst=LOAD_FAST(arg=4, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$22load_method.8']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=26, inst=CALL_METHOD(arg=1, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$22load_method.8', '$length24.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=28, inst=STORE_FAST(arg=6, lineno=108)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$26call_method.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=30, inst=LOAD_GLOBAL(arg=1, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=32, inst=LOAD_METHOD(arg=2, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$30load_global.11']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=34, inst=LOAD_FAST(arg=4, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$32load_method.12']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=36, inst=CALL_METHOD(arg=1, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$32load_method.12', '$length34.13']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=38, inst=STORE_FAST(arg=7, lineno=109)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$36call_method.14']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=40, inst=LOAD_GLOBAL(arg=3, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=42, inst=LOAD_FAST(arg=3, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$40load_global.15']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=44, inst=LOAD_FAST(arg=4, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$40load_global.15', '$n42.16']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=46, inst=CALL_FUNCTION(arg=2, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$40load_global.15', '$n42.16', '$length44.17']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=48, inst=GET_ITER(arg=None, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$46call_function.18']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$48get_iter.19',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi50.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=50 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=50, inst=FOR_ITER(arg=188, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi50.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=428, stack=(), blockstack=(), npush=0), Edge(pc=52, stack=('$phi50.0', '$50for_iter.2'), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=428 nstack_initial=0), State(pc_initial=52 nstack_initial=2)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=428 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=428, inst=LOAD_FAST(arg=7, lineno=134)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=430, inst=RETURN_VALUE(arg=None, lineno=134)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$supertrend428.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=52 nstack_initial=2)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi52.0', '$phi52.1']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=52 nstack_initial=2)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=52, inst=STORE_FAST(arg=8, lineno=111)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$phi52.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=54, inst=LOAD_FAST(arg=1, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=56, inst=LOAD_FAST(arg=8, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$basic_ub54.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=58, inst=BINARY_SUBSCR(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$basic_ub54.2', '$i56.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=60, inst=LOAD_FAST(arg=5, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=62, inst=LOAD_FAST(arg=8, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$final_ub60.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=64, inst=LOAD_CONST(arg=1, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$final_ub60.5', '$i62.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=66, inst=BINARY_SUBTRACT(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$final_ub60.5', '$i62.6', '$const64.7.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=68, inst=BINARY_SUBSCR(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$final_ub60.5', '$66binary_subtract.8']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=70, inst=COMPARE_OP(arg=0, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$58binary_subscr.4', '$68binary_subscr.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=72, inst=POP_JUMP_IF_TRUE(arg=50, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi52.0', '$70compare_op.10']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=74, stack=('$phi52.0',), blockstack=(), npush=0), Edge(pc=98, stack=('$phi52.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=74 nstack_initial=1), State(pc_initial=98 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi74.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=74 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=74, inst=LOAD_FAST(arg=0, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=76, inst=LOAD_FAST(arg=8, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$close74.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=78, inst=LOAD_CONST(arg=1, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$close74.1', '$i76.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=80, inst=BINARY_SUBTRACT(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$close74.1', '$i76.2', '$const78.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=82, inst=BINARY_SUBSCR(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$close74.1', '$80binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=84, inst=LOAD_FAST(arg=5, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=86, inst=LOAD_FAST(arg=8, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$final_ub84.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=88, inst=LOAD_CONST(arg=1, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$final_ub84.6', '$i86.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=90, inst=BINARY_SUBTRACT(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$final_ub84.6', '$i86.7', '$const88.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=92, inst=BINARY_SUBSCR(arg=None, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$final_ub84.6', '$90binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=94, inst=COMPARE_OP(arg=4, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$82binary_subscr.5', '$92binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=96, inst=POP_JUMP_IF_FALSE(arg=57, lineno=113)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi74.0', '$94compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=98, stack=('$phi74.0',), blockstack=(), npush=0), Edge(pc=112, stack=('$phi74.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=98 nstack_initial=1), State(pc_initial=98 nstack_initial=1), State(pc_initial=112 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi98.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=98 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=98, inst=LOAD_FAST(arg=1, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=100, inst=LOAD_FAST(arg=8, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$basic_ub98.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=102, inst=BINARY_SUBSCR(arg=None, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$basic_ub98.1', '$i100.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=104, inst=LOAD_FAST(arg=5, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$102binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=106, inst=LOAD_FAST(arg=8, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$102binary_subscr.3', '$final_ub104.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=108, inst=STORE_SUBSCR(arg=None, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0', '$102binary_subscr.3', '$final_ub104.4', '$i106.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=110, inst=JUMP_FORWARD(arg=8, lineno=114)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi98.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=128, stack=('$phi98.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=98 nstack_initial=1), State(pc_initial=112 nstack_initial=1), State(pc_initial=128 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=112 nstack_initial=1), State(pc_initial=128 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi112.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=112 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=112, inst=LOAD_FAST(arg=5, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=114, inst=LOAD_FAST(arg=8, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$final_ub112.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=116, inst=LOAD_CONST(arg=1, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$final_ub112.1', '$i114.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=118, inst=BINARY_SUBTRACT(arg=None, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$final_ub112.1', '$i114.2', '$const116.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=120, inst=BINARY_SUBSCR(arg=None, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$final_ub112.1', '$118binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=122, inst=LOAD_FAST(arg=5, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$120binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=124, inst=LOAD_FAST(arg=8, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$120binary_subscr.5', '$final_ub122.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=126, inst=STORE_SUBSCR(arg=None, lineno=116)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi112.0', '$120binary_subscr.5', '$final_ub122.6', '$i124.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=128, stack=('$phi112.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=128 nstack_initial=1), State(pc_initial=128 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi128.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=128 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=128, inst=LOAD_FAST(arg=2, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=130, inst=LOAD_FAST(arg=8, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$basic_lb128.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=132, inst=BINARY_SUBSCR(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$basic_lb128.1', '$i130.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=134, inst=LOAD_FAST(arg=6, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=136, inst=LOAD_FAST(arg=8, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$final_lb134.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=138, inst=LOAD_CONST(arg=1, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$final_lb134.4', '$i136.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=140, inst=BINARY_SUBTRACT(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$final_lb134.4', '$i136.5', '$const138.6.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=142, inst=BINARY_SUBSCR(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$final_lb134.4', '$140binary_subtract.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=144, inst=COMPARE_OP(arg=4, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$132binary_subscr.3', '$142binary_subscr.8']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=146, inst=POP_JUMP_IF_TRUE(arg=87, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi128.0', '$144compare_op.9']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=148, stack=('$phi128.0',), blockstack=(), npush=0), Edge(pc=172, stack=('$phi128.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=128 nstack_initial=1), State(pc_initial=148 nstack_initial=1), State(pc_initial=172 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=148 nstack_initial=1), State(pc_initial=172 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi148.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=148 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=148, inst=LOAD_FAST(arg=0, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=150, inst=LOAD_FAST(arg=8, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$close148.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=152, inst=LOAD_CONST(arg=1, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$close148.1', '$i150.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=154, inst=BINARY_SUBTRACT(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$close148.1', '$i150.2', '$const152.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=156, inst=BINARY_SUBSCR(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$close148.1', '$154binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=158, inst=LOAD_FAST(arg=6, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=160, inst=LOAD_FAST(arg=8, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$final_lb158.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=162, inst=LOAD_CONST(arg=1, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$final_lb158.6', '$i160.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=164, inst=BINARY_SUBTRACT(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$final_lb158.6', '$i160.7', '$const162.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=166, inst=BINARY_SUBSCR(arg=None, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$final_lb158.6', '$164binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=168, inst=COMPARE_OP(arg=0, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$156binary_subscr.5', '$166binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=170, inst=POP_JUMP_IF_FALSE(arg=94, lineno=118)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi148.0', '$168compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=172, stack=('$phi148.0',), blockstack=(), npush=0), Edge(pc=186, stack=('$phi148.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=172 nstack_initial=1), State(pc_initial=172 nstack_initial=1), State(pc_initial=186 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi172.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=172 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=172, inst=LOAD_FAST(arg=2, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=174, inst=LOAD_FAST(arg=8, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$basic_lb172.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=176, inst=BINARY_SUBSCR(arg=None, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$basic_lb172.1', '$i174.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=178, inst=LOAD_FAST(arg=6, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$176binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=180, inst=LOAD_FAST(arg=8, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$176binary_subscr.3', '$final_lb178.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=182, inst=STORE_SUBSCR(arg=None, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0', '$176binary_subscr.3', '$final_lb178.4', '$i180.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=184, inst=JUMP_FORWARD(arg=8, lineno=119)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi172.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=202, stack=('$phi172.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=172 nstack_initial=1), State(pc_initial=186 nstack_initial=1), State(pc_initial=202 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=186 nstack_initial=1), State(pc_initial=202 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi186.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=186 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=186, inst=LOAD_FAST(arg=6, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=188, inst=LOAD_FAST(arg=8, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$final_lb186.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=190, inst=LOAD_CONST(arg=1, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$final_lb186.1', '$i188.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=192, inst=BINARY_SUBTRACT(arg=None, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$final_lb186.1', '$i188.2', '$const190.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=194, inst=BINARY_SUBSCR(arg=None, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$final_lb186.1', '$192binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=196, inst=LOAD_FAST(arg=6, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$194binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=198, inst=LOAD_FAST(arg=8, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$194binary_subscr.5', '$final_lb196.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=200, inst=STORE_SUBSCR(arg=None, lineno=121)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi186.0', '$194binary_subscr.5', '$final_lb196.6', '$i198.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=202, stack=('$phi186.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=202 nstack_initial=1), State(pc_initial=202 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi202.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=202 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=202, inst=LOAD_FAST(arg=7, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=204, inst=LOAD_FAST(arg=8, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$supertrend202.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=206, inst=LOAD_CONST(arg=1, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$supertrend202.1', '$i204.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=208, inst=BINARY_SUBTRACT(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$supertrend202.1', '$i204.2', '$const206.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=210, inst=BINARY_SUBSCR(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$supertrend202.1', '$208binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=212, inst=LOAD_FAST(arg=5, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=214, inst=LOAD_FAST(arg=8, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$final_ub212.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=216, inst=LOAD_CONST(arg=1, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$final_ub212.6', '$i214.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=218, inst=BINARY_SUBTRACT(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$final_ub212.6', '$i214.7', '$const216.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=220, inst=BINARY_SUBSCR(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$final_ub212.6', '$218binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=222, inst=COMPARE_OP(arg=2, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$210binary_subscr.5', '$220binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=224, inst=POP_JUMP_IF_FALSE(arg=129, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi202.0', '$222compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=226, stack=('$phi202.0',), blockstack=(), npush=0), Edge(pc=256, stack=('$phi202.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=202 nstack_initial=1), State(pc_initial=226 nstack_initial=1), State(pc_initial=256 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=226 nstack_initial=1), State(pc_initial=256 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi226.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=226 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=226, inst=LOAD_FAST(arg=0, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=228, inst=LOAD_FAST(arg=8, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$close226.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=230, inst=BINARY_SUBSCR(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$close226.1', '$i228.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=232, inst=LOAD_FAST(arg=5, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$230binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=234, inst=LOAD_FAST(arg=8, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$230binary_subscr.3', '$final_ub232.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=236, inst=BINARY_SUBSCR(arg=None, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$230binary_subscr.3', '$final_ub232.4', '$i234.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=238, inst=COMPARE_OP(arg=1, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$230binary_subscr.3', '$236binary_subscr.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=240, inst=POP_JUMP_IF_FALSE(arg=129, lineno=123)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi226.0', '$238compare_op.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=242, stack=('$phi226.0',), blockstack=(), npush=0), Edge(pc=256, stack=('$phi226.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=256 nstack_initial=1), State(pc_initial=242 nstack_initial=1), State(pc_initial=256 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi256.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=256 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=256, inst=LOAD_FAST(arg=7, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=258, inst=LOAD_FAST(arg=8, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$supertrend256.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=260, inst=LOAD_CONST(arg=1, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$supertrend256.1', '$i258.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=262, inst=BINARY_SUBTRACT(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$supertrend256.1', '$i258.2', '$const260.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=264, inst=BINARY_SUBSCR(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$supertrend256.1', '$262binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=266, inst=LOAD_FAST(arg=5, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=268, inst=LOAD_FAST(arg=8, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$final_ub266.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=270, inst=LOAD_CONST(arg=1, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$final_ub266.6', '$i268.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=272, inst=BINARY_SUBTRACT(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$final_ub266.6', '$i268.7', '$const270.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=274, inst=BINARY_SUBSCR(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$final_ub266.6', '$272binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=276, inst=COMPARE_OP(arg=2, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$264binary_subscr.5', '$274binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=278, inst=POP_JUMP_IF_FALSE(arg=156, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi256.0', '$276compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=280, stack=('$phi256.0',), blockstack=(), npush=0), Edge(pc=310, stack=('$phi256.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=242 nstack_initial=1), State(pc_initial=256 nstack_initial=1), State(pc_initial=280 nstack_initial=1), State(pc_initial=310 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi242.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=242 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=242, inst=LOAD_FAST(arg=5, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=244, inst=LOAD_FAST(arg=8, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$final_ub242.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=246, inst=BINARY_SUBSCR(arg=None, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$final_ub242.1', '$i244.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=248, inst=LOAD_FAST(arg=7, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$246binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=250, inst=LOAD_FAST(arg=8, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$246binary_subscr.3', '$supertrend248.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=252, inst=STORE_SUBSCR(arg=None, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0', '$246binary_subscr.3', '$supertrend248.4', '$i250.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=254, inst=JUMP_ABSOLUTE(arg=26, lineno=124)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi242.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi242.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=256 nstack_initial=1), State(pc_initial=280 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=280 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi280.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=280 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=280, inst=LOAD_FAST(arg=0, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=282, inst=LOAD_FAST(arg=8, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$close280.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=284, inst=BINARY_SUBSCR(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$close280.1', '$i282.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=286, inst=LOAD_FAST(arg=5, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$284binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=288, inst=LOAD_FAST(arg=8, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$284binary_subscr.3', '$final_ub286.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=290, inst=BINARY_SUBSCR(arg=None, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$284binary_subscr.3', '$final_ub286.4', '$i288.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=292, inst=COMPARE_OP(arg=4, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$284binary_subscr.3', '$290binary_subscr.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=294, inst=POP_JUMP_IF_FALSE(arg=156, lineno=125)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi280.0', '$292compare_op.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=296, stack=('$phi280.0',), blockstack=(), npush=0), Edge(pc=310, stack=('$phi280.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=310 nstack_initial=1), State(pc_initial=50 nstack_initial=1), State(pc_initial=296 nstack_initial=1), State(pc_initial=310 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi310.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=310 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=310, inst=LOAD_FAST(arg=7, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=312, inst=LOAD_FAST(arg=8, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$supertrend310.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=314, inst=LOAD_CONST(arg=1, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$supertrend310.1', '$i312.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=316, inst=BINARY_SUBTRACT(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$supertrend310.1', '$i312.2', '$const314.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=318, inst=BINARY_SUBSCR(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$supertrend310.1', '$316binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=320, inst=LOAD_FAST(arg=6, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=322, inst=LOAD_FAST(arg=8, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$final_lb320.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=324, inst=LOAD_CONST(arg=1, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$final_lb320.6', '$i322.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=326, inst=BINARY_SUBTRACT(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$final_lb320.6', '$i322.7', '$const324.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=328, inst=BINARY_SUBSCR(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$final_lb320.6', '$326binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=330, inst=COMPARE_OP(arg=2, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$318binary_subscr.5', '$328binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=332, inst=POP_JUMP_IF_FALSE(arg=183, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi310.0', '$330compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=334, stack=('$phi310.0',), blockstack=(), npush=0), Edge(pc=364, stack=('$phi310.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=296 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=334 nstack_initial=1), State(pc_initial=364 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=296 nstack_initial=1), State(pc_initial=310 nstack_initial=1), State(pc_initial=334 nstack_initial=1), State(pc_initial=364 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi296.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=296 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=296, inst=LOAD_FAST(arg=6, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=298, inst=LOAD_FAST(arg=8, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$final_lb296.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=300, inst=BINARY_SUBSCR(arg=None, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$final_lb296.1', '$i298.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=302, inst=LOAD_FAST(arg=7, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$300binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=304, inst=LOAD_FAST(arg=8, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$300binary_subscr.3', '$supertrend302.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=306, inst=STORE_SUBSCR(arg=None, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0', '$300binary_subscr.3', '$supertrend302.4', '$i304.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=308, inst=JUMP_ABSOLUTE(arg=26, lineno=126)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi296.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi296.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=310 nstack_initial=1), State(pc_initial=334 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=334 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi334.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=334 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=334, inst=LOAD_FAST(arg=0, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=336, inst=LOAD_FAST(arg=8, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$close334.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=338, inst=BINARY_SUBSCR(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$close334.1', '$i336.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=340, inst=LOAD_FAST(arg=6, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$338binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=342, inst=LOAD_FAST(arg=8, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$338binary_subscr.3', '$final_lb340.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=344, inst=BINARY_SUBSCR(arg=None, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$338binary_subscr.3', '$final_lb340.4', '$i342.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=346, inst=COMPARE_OP(arg=5, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$338binary_subscr.3', '$344binary_subscr.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=348, inst=POP_JUMP_IF_FALSE(arg=183, lineno=127)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi334.0', '$346compare_op.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=350, stack=('$phi334.0',), blockstack=(), npush=0), Edge(pc=364, stack=('$phi334.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=364 nstack_initial=1), State(pc_initial=50 nstack_initial=1), State(pc_initial=350 nstack_initial=1), State(pc_initial=364 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi364.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=364 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=364, inst=LOAD_FAST(arg=7, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=366, inst=LOAD_FAST(arg=8, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$supertrend364.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=368, inst=LOAD_CONST(arg=1, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$supertrend364.1', '$i366.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=370, inst=BINARY_SUBTRACT(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$supertrend364.1', '$i366.2', '$const368.3.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=372, inst=BINARY_SUBSCR(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$supertrend364.1', '$370binary_subtract.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=374, inst=LOAD_FAST(arg=6, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=376, inst=LOAD_FAST(arg=8, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$final_lb374.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=378, inst=LOAD_CONST(arg=1, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$final_lb374.6', '$i376.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=380, inst=BINARY_SUBTRACT(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$final_lb374.6', '$i376.7', '$const378.8.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=382, inst=BINARY_SUBSCR(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$final_lb374.6', '$380binary_subtract.9']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=384, inst=COMPARE_OP(arg=2, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$372binary_subscr.5', '$382binary_subscr.10']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=386, inst=POP_JUMP_IF_FALSE(arg=210, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi364.0', '$384compare_op.11']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=388, stack=('$phi364.0',), blockstack=(), npush=0), Edge(pc=418, stack=('$phi364.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=350 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=388 nstack_initial=1), State(pc_initial=418 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=350 nstack_initial=1), State(pc_initial=364 nstack_initial=1), State(pc_initial=388 nstack_initial=1), State(pc_initial=418 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi350.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=350 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=350, inst=LOAD_FAST(arg=6, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=352, inst=LOAD_FAST(arg=8, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$final_lb350.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=354, inst=BINARY_SUBSCR(arg=None, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$final_lb350.1', '$i352.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=356, inst=LOAD_FAST(arg=7, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$354binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=358, inst=LOAD_FAST(arg=8, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$354binary_subscr.3', '$supertrend356.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=360, inst=STORE_SUBSCR(arg=None, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0', '$354binary_subscr.3', '$supertrend356.4', '$i358.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=362, inst=JUMP_ABSOLUTE(arg=26, lineno=128)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi350.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi350.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=364 nstack_initial=1), State(pc_initial=388 nstack_initial=1), State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=388 nstack_initial=1), State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi388.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=388 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=388, inst=LOAD_FAST(arg=0, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=390, inst=LOAD_FAST(arg=8, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$close388.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=392, inst=BINARY_SUBSCR(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$close388.1', '$i390.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=394, inst=LOAD_FAST(arg=6, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$392binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=396, inst=LOAD_FAST(arg=8, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$392binary_subscr.3', '$final_lb394.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=398, inst=BINARY_SUBSCR(arg=None, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$392binary_subscr.3', '$final_lb394.4', '$i396.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=400, inst=COMPARE_OP(arg=0, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$392binary_subscr.3', '$398binary_subscr.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=402, inst=POP_JUMP_IF_FALSE(arg=210, lineno=129)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi388.0', '$400compare_op.7']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=404, stack=('$phi388.0',), blockstack=(), npush=0), Edge(pc=418, stack=('$phi388.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1), State(pc_initial=404 nstack_initial=1), State(pc_initial=418 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi418.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=418 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=418, inst=LOAD_CONST(arg=2, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=420, inst=LOAD_FAST(arg=7, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0', '$const418.1.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=422, inst=LOAD_FAST(arg=8, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0', '$const418.1.2', '$supertrend420.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=424, inst=STORE_SUBSCR(arg=None, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0', '$const418.1.2', '$supertrend420.2', '$i422.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=426, inst=JUMP_ABSOLUTE(arg=26, lineno=132)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi418.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi418.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=404 nstack_initial=1), State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=404 nstack_initial=1), State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: ['$phi404.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=404 nstack_initial=1)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=404, inst=LOAD_FAST(arg=5, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=406, inst=LOAD_FAST(arg=8, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$final_ub404.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=408, inst=BINARY_SUBSCR(arg=None, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$final_ub404.1', '$i406.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=410, inst=LOAD_FAST(arg=7, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$408binary_subscr.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=412, inst=LOAD_FAST(arg=8, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$408binary_subscr.3', '$supertrend410.4']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=414, inst=STORE_SUBSCR(arg=None, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0', '$408binary_subscr.3', '$supertrend410.4', '$i412.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=416, inst=JUMP_ABSOLUTE(arg=26, lineno=130)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$phi404.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[Edge(pc=50, stack=('$phi404.0',), blockstack=(), npush=0)]
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=418 nstack_initial=1), State(pc_initial=50 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1), State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=50 nstack_initial=1)])
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>,
            {State(pc_initial=0 nstack_initial=0): set(),
             State(pc_initial=50 nstack_initial=1): {'$phi50.0'},
             State(pc_initial=52 nstack_initial=2): {'$phi52.1'},
             State(pc_initial=74 nstack_initial=1): set(),
             State(pc_initial=98 nstack_initial=1): set(),
             State(pc_initial=112 nstack_initial=1): set(),
             State(pc_initial=128 nstack_initial=1): set(),
             State(pc_initial=148 nstack_initial=1): set(),
             State(pc_initial=172 nstack_initial=1): set(),
             State(pc_initial=186 nstack_initial=1): set(),
             State(pc_initial=202 nstack_initial=1): set(),
             State(pc_initial=226 nstack_initial=1): set(),
             State(pc_initial=242 nstack_initial=1): set(),
             State(pc_initial=256 nstack_initial=1): set(),
             State(pc_initial=280 nstack_initial=1): set(),
             State(pc_initial=296 nstack_initial=1): set(),
             State(pc_initial=310 nstack_initial=1): set(),
             State(pc_initial=334 nstack_initial=1): set(),
             State(pc_initial=350 nstack_initial=1): set(),
             State(pc_initial=364 nstack_initial=1): set(),
             State(pc_initial=388 nstack_initial=1): set(),
             State(pc_initial=404 nstack_initial=1): set(),
             State(pc_initial=418 nstack_initial=1): set(),
             State(pc_initial=428 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {'$phi50.0': State(pc_initial=0 nstack_initial=0),
 '$phi52.1': State(pc_initial=50 nstack_initial=1)}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi128.0': {('$phi112.0',
                            State(pc_initial=112 nstack_initial=1)),
                           ('$phi98.0', State(pc_initial=98 nstack_initial=1))},
             '$phi148.0': {('$phi128.0',
                            State(pc_initial=128 nstack_initial=1))},
             '$phi172.0': {('$phi128.0',
                            State(pc_initial=128 nstack_initial=1)),
                           ('$phi148.0',
                            State(pc_initial=148 nstack_initial=1))},
             '$phi186.0': {('$phi148.0',
                            State(pc_initial=148 nstack_initial=1))},
             '$phi202.0': {('$phi172.0',
                            State(pc_initial=172 nstack_initial=1)),
                           ('$phi186.0',
                            State(pc_initial=186 nstack_initial=1))},
             '$phi226.0': {('$phi202.0',
                            State(pc_initial=202 nstack_initial=1))},
             '$phi242.0': {('$phi226.0',
                            State(pc_initial=226 nstack_initial=1))},
             '$phi256.0': {('$phi202.0',
                            State(pc_initial=202 nstack_initial=1)),
                           ('$phi226.0',
                            State(pc_initial=226 nstack_initial=1))},
             '$phi280.0': {('$phi256.0',
                            State(pc_initial=256 nstack_initial=1))},
             '$phi296.0': {('$phi280.0',
                            State(pc_initial=280 nstack_initial=1))},
             '$phi310.0': {('$phi256.0',
                            State(pc_initial=256 nstack_initial=1)),
                           ('$phi280.0',
                            State(pc_initial=280 nstack_initial=1))},
             '$phi334.0': {('$phi310.0',
                            State(pc_initial=310 nstack_initial=1))},
             '$phi350.0': {('$phi334.0',
                            State(pc_initial=334 nstack_initial=1))},
             '$phi364.0': {('$phi310.0',
                            State(pc_initial=310 nstack_initial=1)),
                           ('$phi334.0',
                            State(pc_initial=334 nstack_initial=1))},
             '$phi388.0': {('$phi364.0',
                            State(pc_initial=364 nstack_initial=1))},
             '$phi404.0': {('$phi388.0',
                            State(pc_initial=388 nstack_initial=1))},
             '$phi418.0': {('$phi364.0',
                            State(pc_initial=364 nstack_initial=1)),
                           ('$phi388.0',
                            State(pc_initial=388 nstack_initial=1))},
             '$phi50.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi242.0', State(pc_initial=242 nstack_initial=1)),
                          ('$phi296.0', State(pc_initial=296 nstack_initial=1)),
                          ('$phi350.0', State(pc_initial=350 nstack_initial=1)),
                          ('$phi404.0', State(pc_initial=404 nstack_initial=1)),
                          ('$phi418.0',
                           State(pc_initial=418 nstack_initial=1))},
             '$phi52.0': {('$phi50.0', State(pc_initial=50 nstack_initial=1))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))},
             '$phi74.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi98.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))}})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2))},
             '$phi128.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi148.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi172.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi186.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi202.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi226.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi242.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi256.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi280.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi296.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi310.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi334.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi350.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi364.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi388.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi404.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi418.0': {('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                           ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi50.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi52.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi52.0', State(pc_initial=52 nstack_initial=2)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))},
             '$phi74.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0)),
                          ('$phi74.0', State(pc_initial=74 nstack_initial=1))},
             '$phi98.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))}})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi128.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi148.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi172.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi186.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi202.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi226.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi242.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi256.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi280.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi296.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi310.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi334.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi350.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi364.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi388.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi404.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi418.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))},
             '$phi74.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))}})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>,
            {'$phi112.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi128.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi148.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi172.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi186.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi202.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi226.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi242.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi256.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi280.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi296.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi310.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi334.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi350.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi364.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi388.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi404.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi418.0': {('$48get_iter.19',
                            State(pc_initial=0 nstack_initial=0))},
             '$phi50.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi52.1': {('$50for_iter.2',
                           State(pc_initial=50 nstack_initial=1))},
             '$phi74.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))},
             '$phi98.0': {('$48get_iter.19',
                           State(pc_initial=0 nstack_initial=0))}})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {'$phi50.0': {('$48get_iter.19', State(pc_initial=0 nstack_initial=0))},
 '$phi52.1': {('$50for_iter.2', State(pc_initial=50 nstack_initial=1))}}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>,
            {State(pc_initial=0 nstack_initial=0): {'$phi50.0': '$48get_iter.19'},
             State(pc_initial=50 nstack_initial=1): {'$phi52.1': '$50for_iter.2'}})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$close4.1'}), (6, {'func': '$2load_global.0', 'args': ['$close4.1'], 'res': '$6call_function.2'}), (8, {'value': '$6call_function.2'}), (10, {'res': '$10load_global.3'}), (12, {'item': '$10load_global.3', 'res': '$12load_method.4'}), (14, {'res': '$length14.5'}), (16, {'func': '$12load_method.4', 'args': ['$length14.5'], 'res': '$16call_method.6'}), (18, {'value': '$16call_method.6'}), (20, {'res': '$20load_global.7'}), (22, {'item': '$20load_global.7', 'res': '$22load_method.8'}), (24, {'res': '$length24.9'}), (26, {'func': '$22load_method.8', 'args': ['$length24.9'], 'res': '$26call_method.10'}), (28, {'value': '$26call_method.10'}), (30, {'res': '$30load_global.11'}), (32, {'item': '$30load_global.11', 'res': '$32load_method.12'}), (34, {'res': '$length34.13'}), (36, {'func': '$32load_method.12', 'args': ['$length34.13'], 'res': '$36call_method.14'}), (38, {'value': '$36call_method.14'}), (40, {'res': '$40load_global.15'}), (42, {'res': '$n42.16'}), (44, {'res': '$length44.17'}), (46, {'func': '$40load_global.15', 'args': ['$n42.16', '$length44.17'], 'res': '$46call_function.18'}), (48, {'value': '$46call_function.18', 'res': '$48get_iter.19'})), outgoing_phis={'$phi50.0': '$48get_iter.19'}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$48get_iter.19',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=50 nstack_initial=1):
AdaptBlockInfo(insts=((50, {'iterator': '$phi50.0', 'pair': '$50for_iter.1', 'indval': '$50for_iter.2', 'pred': '$50for_iter.3'}),), outgoing_phis={'$phi52.1': '$50for_iter.2'}, blockstack=(), active_try_block=None, outgoing_edgepushed={428: (), 52: ('$phi50.0', '$50for_iter.2')})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=52 nstack_initial=2):
AdaptBlockInfo(insts=((52, {'value': '$phi52.1'}), (54, {'res': '$basic_ub54.2'}), (56, {'res': '$i56.3'}), (58, {'index': '$i56.3', 'target': '$basic_ub54.2', 'res': '$58binary_subscr.4'}), (60, {'res': '$final_ub60.5'}), (62, {'res': '$i62.6'}), (64, {'res': '$const64.7.1'}), (66, {'lhs': '$i62.6', 'rhs': '$const64.7.1', 'res': '$66binary_subtract.8'}), (68, {'index': '$66binary_subtract.8', 'target': '$final_ub60.5', 'res': '$68binary_subscr.9'}), (70, {'lhs': '$58binary_subscr.4', 'rhs': '$68binary_subscr.9', 'res': '$70compare_op.10'}), (72, {'pred': '$70compare_op.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={74: ('$phi52.0',), 98: ('$phi52.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=74 nstack_initial=1):
AdaptBlockInfo(insts=((74, {'res': '$close74.1'}), (76, {'res': '$i76.2'}), (78, {'res': '$const78.3.1'}), (80, {'lhs': '$i76.2', 'rhs': '$const78.3.1', 'res': '$80binary_subtract.4'}), (82, {'index': '$80binary_subtract.4', 'target': '$close74.1', 'res': '$82binary_subscr.5'}), (84, {'res': '$final_ub84.6'}), (86, {'res': '$i86.7'}), (88, {'res': '$const88.8.1'}), (90, {'lhs': '$i86.7', 'rhs': '$const88.8.1', 'res': '$90binary_subtract.9'}), (92, {'index': '$90binary_subtract.9', 'target': '$final_ub84.6', 'res': '$92binary_subscr.10'}), (94, {'lhs': '$82binary_subscr.5', 'rhs': '$92binary_subscr.10', 'res': '$94compare_op.11'}), (96, {'pred': '$94compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={98: ('$phi74.0',), 112: ('$phi74.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=98 nstack_initial=1):
AdaptBlockInfo(insts=((98, {'res': '$basic_ub98.1'}), (100, {'res': '$i100.2'}), (102, {'index': '$i100.2', 'target': '$basic_ub98.1', 'res': '$102binary_subscr.3'}), (104, {'res': '$final_ub104.4'}), (106, {'res': '$i106.5'}), (108, {'target': '$final_ub104.4', 'index': '$i106.5', 'value': '$102binary_subscr.3'}), (110, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={128: ('$phi98.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=112 nstack_initial=1):
AdaptBlockInfo(insts=((112, {'res': '$final_ub112.1'}), (114, {'res': '$i114.2'}), (116, {'res': '$const116.3.1'}), (118, {'lhs': '$i114.2', 'rhs': '$const116.3.1', 'res': '$118binary_subtract.4'}), (120, {'index': '$118binary_subtract.4', 'target': '$final_ub112.1', 'res': '$120binary_subscr.5'}), (122, {'res': '$final_ub122.6'}), (124, {'res': '$i124.7'}), (126, {'target': '$final_ub122.6', 'index': '$i124.7', 'value': '$120binary_subscr.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={128: ('$phi112.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=128 nstack_initial=1):
AdaptBlockInfo(insts=((128, {'res': '$basic_lb128.1'}), (130, {'res': '$i130.2'}), (132, {'index': '$i130.2', 'target': '$basic_lb128.1', 'res': '$132binary_subscr.3'}), (134, {'res': '$final_lb134.4'}), (136, {'res': '$i136.5'}), (138, {'res': '$const138.6.1'}), (140, {'lhs': '$i136.5', 'rhs': '$const138.6.1', 'res': '$140binary_subtract.7'}), (142, {'index': '$140binary_subtract.7', 'target': '$final_lb134.4', 'res': '$142binary_subscr.8'}), (144, {'lhs': '$132binary_subscr.3', 'rhs': '$142binary_subscr.8', 'res': '$144compare_op.9'}), (146, {'pred': '$144compare_op.9'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={148: ('$phi128.0',), 172: ('$phi128.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=148 nstack_initial=1):
AdaptBlockInfo(insts=((148, {'res': '$close148.1'}), (150, {'res': '$i150.2'}), (152, {'res': '$const152.3.1'}), (154, {'lhs': '$i150.2', 'rhs': '$const152.3.1', 'res': '$154binary_subtract.4'}), (156, {'index': '$154binary_subtract.4', 'target': '$close148.1', 'res': '$156binary_subscr.5'}), (158, {'res': '$final_lb158.6'}), (160, {'res': '$i160.7'}), (162, {'res': '$const162.8.1'}), (164, {'lhs': '$i160.7', 'rhs': '$const162.8.1', 'res': '$164binary_subtract.9'}), (166, {'index': '$164binary_subtract.9', 'target': '$final_lb158.6', 'res': '$166binary_subscr.10'}), (168, {'lhs': '$156binary_subscr.5', 'rhs': '$166binary_subscr.10', 'res': '$168compare_op.11'}), (170, {'pred': '$168compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={172: ('$phi148.0',), 186: ('$phi148.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=172 nstack_initial=1):
AdaptBlockInfo(insts=((172, {'res': '$basic_lb172.1'}), (174, {'res': '$i174.2'}), (176, {'index': '$i174.2', 'target': '$basic_lb172.1', 'res': '$176binary_subscr.3'}), (178, {'res': '$final_lb178.4'}), (180, {'res': '$i180.5'}), (182, {'target': '$final_lb178.4', 'index': '$i180.5', 'value': '$176binary_subscr.3'}), (184, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={202: ('$phi172.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=186 nstack_initial=1):
AdaptBlockInfo(insts=((186, {'res': '$final_lb186.1'}), (188, {'res': '$i188.2'}), (190, {'res': '$const190.3.1'}), (192, {'lhs': '$i188.2', 'rhs': '$const190.3.1', 'res': '$192binary_subtract.4'}), (194, {'index': '$192binary_subtract.4', 'target': '$final_lb186.1', 'res': '$194binary_subscr.5'}), (196, {'res': '$final_lb196.6'}), (198, {'res': '$i198.7'}), (200, {'target': '$final_lb196.6', 'index': '$i198.7', 'value': '$194binary_subscr.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={202: ('$phi186.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=202 nstack_initial=1):
AdaptBlockInfo(insts=((202, {'res': '$supertrend202.1'}), (204, {'res': '$i204.2'}), (206, {'res': '$const206.3.1'}), (208, {'lhs': '$i204.2', 'rhs': '$const206.3.1', 'res': '$208binary_subtract.4'}), (210, {'index': '$208binary_subtract.4', 'target': '$supertrend202.1', 'res': '$210binary_subscr.5'}), (212, {'res': '$final_ub212.6'}), (214, {'res': '$i214.7'}), (216, {'res': '$const216.8.1'}), (218, {'lhs': '$i214.7', 'rhs': '$const216.8.1', 'res': '$218binary_subtract.9'}), (220, {'index': '$218binary_subtract.9', 'target': '$final_ub212.6', 'res': '$220binary_subscr.10'}), (222, {'lhs': '$210binary_subscr.5', 'rhs': '$220binary_subscr.10', 'res': '$222compare_op.11'}), (224, {'pred': '$222compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={226: ('$phi202.0',), 256: ('$phi202.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=226 nstack_initial=1):
AdaptBlockInfo(insts=((226, {'res': '$close226.1'}), (228, {'res': '$i228.2'}), (230, {'index': '$i228.2', 'target': '$close226.1', 'res': '$230binary_subscr.3'}), (232, {'res': '$final_ub232.4'}), (234, {'res': '$i234.5'}), (236, {'index': '$i234.5', 'target': '$final_ub232.4', 'res': '$236binary_subscr.6'}), (238, {'lhs': '$230binary_subscr.3', 'rhs': '$236binary_subscr.6', 'res': '$238compare_op.7'}), (240, {'pred': '$238compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={242: ('$phi226.0',), 256: ('$phi226.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=242 nstack_initial=1):
AdaptBlockInfo(insts=((242, {'res': '$final_ub242.1'}), (244, {'res': '$i244.2'}), (246, {'index': '$i244.2', 'target': '$final_ub242.1', 'res': '$246binary_subscr.3'}), (248, {'res': '$supertrend248.4'}), (250, {'res': '$i250.5'}), (252, {'target': '$supertrend248.4', 'index': '$i250.5', 'value': '$246binary_subscr.3'}), (254, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi242.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=256 nstack_initial=1):
AdaptBlockInfo(insts=((256, {'res': '$supertrend256.1'}), (258, {'res': '$i258.2'}), (260, {'res': '$const260.3.1'}), (262, {'lhs': '$i258.2', 'rhs': '$const260.3.1', 'res': '$262binary_subtract.4'}), (264, {'index': '$262binary_subtract.4', 'target': '$supertrend256.1', 'res': '$264binary_subscr.5'}), (266, {'res': '$final_ub266.6'}), (268, {'res': '$i268.7'}), (270, {'res': '$const270.8.1'}), (272, {'lhs': '$i268.7', 'rhs': '$const270.8.1', 'res': '$272binary_subtract.9'}), (274, {'index': '$272binary_subtract.9', 'target': '$final_ub266.6', 'res': '$274binary_subscr.10'}), (276, {'lhs': '$264binary_subscr.5', 'rhs': '$274binary_subscr.10', 'res': '$276compare_op.11'}), (278, {'pred': '$276compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={280: ('$phi256.0',), 310: ('$phi256.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=280 nstack_initial=1):
AdaptBlockInfo(insts=((280, {'res': '$close280.1'}), (282, {'res': '$i282.2'}), (284, {'index': '$i282.2', 'target': '$close280.1', 'res': '$284binary_subscr.3'}), (286, {'res': '$final_ub286.4'}), (288, {'res': '$i288.5'}), (290, {'index': '$i288.5', 'target': '$final_ub286.4', 'res': '$290binary_subscr.6'}), (292, {'lhs': '$284binary_subscr.3', 'rhs': '$290binary_subscr.6', 'res': '$292compare_op.7'}), (294, {'pred': '$292compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={296: ('$phi280.0',), 310: ('$phi280.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=296 nstack_initial=1):
AdaptBlockInfo(insts=((296, {'res': '$final_lb296.1'}), (298, {'res': '$i298.2'}), (300, {'index': '$i298.2', 'target': '$final_lb296.1', 'res': '$300binary_subscr.3'}), (302, {'res': '$supertrend302.4'}), (304, {'res': '$i304.5'}), (306, {'target': '$supertrend302.4', 'index': '$i304.5', 'value': '$300binary_subscr.3'}), (308, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi296.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=310 nstack_initial=1):
AdaptBlockInfo(insts=((310, {'res': '$supertrend310.1'}), (312, {'res': '$i312.2'}), (314, {'res': '$const314.3.1'}), (316, {'lhs': '$i312.2', 'rhs': '$const314.3.1', 'res': '$316binary_subtract.4'}), (318, {'index': '$316binary_subtract.4', 'target': '$supertrend310.1', 'res': '$318binary_subscr.5'}), (320, {'res': '$final_lb320.6'}), (322, {'res': '$i322.7'}), (324, {'res': '$const324.8.1'}), (326, {'lhs': '$i322.7', 'rhs': '$const324.8.1', 'res': '$326binary_subtract.9'}), (328, {'index': '$326binary_subtract.9', 'target': '$final_lb320.6', 'res': '$328binary_subscr.10'}), (330, {'lhs': '$318binary_subscr.5', 'rhs': '$328binary_subscr.10', 'res': '$330compare_op.11'}), (332, {'pred': '$330compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={334: ('$phi310.0',), 364: ('$phi310.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=334 nstack_initial=1):
AdaptBlockInfo(insts=((334, {'res': '$close334.1'}), (336, {'res': '$i336.2'}), (338, {'index': '$i336.2', 'target': '$close334.1', 'res': '$338binary_subscr.3'}), (340, {'res': '$final_lb340.4'}), (342, {'res': '$i342.5'}), (344, {'index': '$i342.5', 'target': '$final_lb340.4', 'res': '$344binary_subscr.6'}), (346, {'lhs': '$338binary_subscr.3', 'rhs': '$344binary_subscr.6', 'res': '$346compare_op.7'}), (348, {'pred': '$346compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={350: ('$phi334.0',), 364: ('$phi334.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=350 nstack_initial=1):
AdaptBlockInfo(insts=((350, {'res': '$final_lb350.1'}), (352, {'res': '$i352.2'}), (354, {'index': '$i352.2', 'target': '$final_lb350.1', 'res': '$354binary_subscr.3'}), (356, {'res': '$supertrend356.4'}), (358, {'res': '$i358.5'}), (360, {'target': '$supertrend356.4', 'index': '$i358.5', 'value': '$354binary_subscr.3'}), (362, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi350.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=364 nstack_initial=1):
AdaptBlockInfo(insts=((364, {'res': '$supertrend364.1'}), (366, {'res': '$i366.2'}), (368, {'res': '$const368.3.1'}), (370, {'lhs': '$i366.2', 'rhs': '$const368.3.1', 'res': '$370binary_subtract.4'}), (372, {'index': '$370binary_subtract.4', 'target': '$supertrend364.1', 'res': '$372binary_subscr.5'}), (374, {'res': '$final_lb374.6'}), (376, {'res': '$i376.7'}), (378, {'res': '$const378.8.1'}), (380, {'lhs': '$i376.7', 'rhs': '$const378.8.1', 'res': '$380binary_subtract.9'}), (382, {'index': '$380binary_subtract.9', 'target': '$final_lb374.6', 'res': '$382binary_subscr.10'}), (384, {'lhs': '$372binary_subscr.5', 'rhs': '$382binary_subscr.10', 'res': '$384compare_op.11'}), (386, {'pred': '$384compare_op.11'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={388: ('$phi364.0',), 418: ('$phi364.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=388 nstack_initial=1):
AdaptBlockInfo(insts=((388, {'res': '$close388.1'}), (390, {'res': '$i390.2'}), (392, {'index': '$i390.2', 'target': '$close388.1', 'res': '$392binary_subscr.3'}), (394, {'res': '$final_lb394.4'}), (396, {'res': '$i396.5'}), (398, {'index': '$i396.5', 'target': '$final_lb394.4', 'res': '$398binary_subscr.6'}), (400, {'lhs': '$392binary_subscr.3', 'rhs': '$398binary_subscr.6', 'res': '$400compare_op.7'}), (402, {'pred': '$400compare_op.7'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={404: ('$phi388.0',), 418: ('$phi388.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=404 nstack_initial=1):
AdaptBlockInfo(insts=((404, {'res': '$final_ub404.1'}), (406, {'res': '$i406.2'}), (408, {'index': '$i406.2', 'target': '$final_ub404.1', 'res': '$408binary_subscr.3'}), (410, {'res': '$supertrend410.4'}), (412, {'res': '$i412.5'}), (414, {'target': '$supertrend410.4', 'index': '$i412.5', 'value': '$408binary_subscr.3'}), (416, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi404.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=418 nstack_initial=1):
AdaptBlockInfo(insts=((418, {'res': '$const418.1.2'}), (420, {'res': '$supertrend420.2'}), (422, {'res': '$i422.3'}), (424, {'target': '$supertrend420.2', 'index': '$i422.3', 'value': '$const418.1.2'}), (426, {})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={50: ('$phi418.0',)})
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=428 nstack_initial=0):
AdaptBlockInfo(insts=((428, {'res': '$supertrend428.0'}), (430, {'retval': '$supertrend428.0', 'castval': '$430return_value.1'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    close = arg(0, name=close)               ['close']
    basic_ub = arg(1, name=basic_ub)         ['basic_ub']
    basic_lb = arg(2, name=basic_lb)         ['basic_lb']
    n = arg(3, name=n)                       ['n']
    $2load_global.0 = global(len: <built-in function len>) ['$2load_global.0']
    length = call $2load_global.0(close, func=$2load_global.0, args=[Var(close, helper_loops.py:99)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', 'close', 'length']
    $10load_global.3 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>) ['$10load_global.3']
    $12load_method.4 = getattr(value=$10load_global.3, attr=zeros) ['$10load_global.3', '$12load_method.4']
    final_ub = call $12load_method.4(length, func=$12load_method.4, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$12load_method.4', 'final_ub', 'length']
    $20load_global.7 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>) ['$20load_global.7']
    $22load_method.8 = getattr(value=$20load_global.7, attr=zeros) ['$20load_global.7', '$22load_method.8']
    final_lb = call $22load_method.8(length, func=$22load_method.8, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$22load_method.8', 'final_lb', 'length']
    $30load_global.11 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>) ['$30load_global.11']
    $32load_method.12 = getattr(value=$30load_global.11, attr=zeros) ['$30load_global.11', '$32load_method.12']
    supertrend = call $32load_method.12(length, func=$32load_method.12, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$32load_method.12', 'length', 'supertrend']
    $40load_global.15 = global(range: <class 'range'>) ['$40load_global.15']
    $46call_function.18 = call $40load_global.15(n, length, func=$40load_global.15, args=[Var(n, helper_loops.py:99), Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None) ['$40load_global.15', '$46call_function.18', 'length', 'n']
    $48get_iter.19 = getiter(value=$46call_function.18) ['$46call_function.18', '$48get_iter.19']
    $phi50.0 = $48get_iter.19                ['$48get_iter.19', '$phi50.0']
    jump 50                                  []
label 50:
    $50for_iter.1 = iternext(value=$phi50.0) ['$50for_iter.1', '$phi50.0']
    $50for_iter.2 = pair_first(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.2']
    $50for_iter.3 = pair_second(value=$50for_iter.1) ['$50for_iter.1', '$50for_iter.3']
    $phi52.1 = $50for_iter.2                 ['$50for_iter.2', '$phi52.1']
    branch $50for_iter.3, 52, 428            ['$50for_iter.3']
label 52:
    i = $phi52.1                             ['$phi52.1', 'i']
    $58binary_subscr.4 = getitem(value=basic_ub, index=i, fn=<built-in function getitem>) ['$58binary_subscr.4', 'basic_ub', 'i']
    $const64.7.1 = const(int, 1)             ['$const64.7.1']
    $66binary_subtract.8 = i - $const64.7.1  ['$66binary_subtract.8', '$const64.7.1', 'i']
    $68binary_subscr.9 = getitem(value=final_ub, index=$66binary_subtract.8, fn=<built-in function getitem>) ['$66binary_subtract.8', '$68binary_subscr.9', 'final_ub']
    $70compare_op.10 = $58binary_subscr.4 < $68binary_subscr.9 ['$58binary_subscr.4', '$68binary_subscr.9', '$70compare_op.10']
    bool72 = global(bool: <class 'bool'>)    ['bool72']
    $72pred = call bool72($70compare_op.10, func=bool72, args=(Var($70compare_op.10, helper_loops.py:113),), kws=(), vararg=None, varkwarg=None, target=None) ['$70compare_op.10', '$72pred', 'bool72']
    branch $72pred, 98, 74                   ['$72pred']
label 74:
    $const78.3.1 = const(int, 1)             ['$const78.3.1']
    $80binary_subtract.4 = i - $const78.3.1  ['$80binary_subtract.4', '$const78.3.1', 'i']
    $82binary_subscr.5 = getitem(value=close, index=$80binary_subtract.4, fn=<built-in function getitem>) ['$80binary_subtract.4', '$82binary_subscr.5', 'close']
    $const88.8.1 = const(int, 1)             ['$const88.8.1']
    $90binary_subtract.9 = i - $const88.8.1  ['$90binary_subtract.9', '$const88.8.1', 'i']
    $92binary_subscr.10 = getitem(value=final_ub, index=$90binary_subtract.9, fn=<built-in function getitem>) ['$90binary_subtract.9', '$92binary_subscr.10', 'final_ub']
    $94compare_op.11 = $82binary_subscr.5 > $92binary_subscr.10 ['$82binary_subscr.5', '$92binary_subscr.10', '$94compare_op.11']
    bool96 = global(bool: <class 'bool'>)    ['bool96']
    $96pred = call bool96($94compare_op.11, func=bool96, args=(Var($94compare_op.11, helper_loops.py:113),), kws=(), vararg=None, varkwarg=None, target=None) ['$94compare_op.11', '$96pred', 'bool96']
    branch $96pred, 98, 112                  ['$96pred']
label 98:
    $102binary_subscr.3 = getitem(value=basic_ub, index=i, fn=<built-in function getitem>) ['$102binary_subscr.3', 'basic_ub', 'i']
    final_ub[i] = $102binary_subscr.3        ['$102binary_subscr.3', 'final_ub', 'i']
    jump 128                                 []
label 112:
    $const116.3.1 = const(int, 1)            ['$const116.3.1']
    $118binary_subtract.4 = i - $const116.3.1 ['$118binary_subtract.4', '$const116.3.1', 'i']
    $120binary_subscr.5 = getitem(value=final_ub, index=$118binary_subtract.4, fn=<built-in function getitem>) ['$118binary_subtract.4', '$120binary_subscr.5', 'final_ub']
    final_ub[i] = $120binary_subscr.5        ['$120binary_subscr.5', 'final_ub', 'i']
    jump 128                                 []
label 128:
    $132binary_subscr.3 = getitem(value=basic_lb, index=i, fn=<built-in function getitem>) ['$132binary_subscr.3', 'basic_lb', 'i']
    $const138.6.1 = const(int, 1)            ['$const138.6.1']
    $140binary_subtract.7 = i - $const138.6.1 ['$140binary_subtract.7', '$const138.6.1', 'i']
    $142binary_subscr.8 = getitem(value=final_lb, index=$140binary_subtract.7, fn=<built-in function getitem>) ['$140binary_subtract.7', '$142binary_subscr.8', 'final_lb']
    $144compare_op.9 = $132binary_subscr.3 > $142binary_subscr.8 ['$132binary_subscr.3', '$142binary_subscr.8', '$144compare_op.9']
    bool146 = global(bool: <class 'bool'>)   ['bool146']
    $146pred = call bool146($144compare_op.9, func=bool146, args=(Var($144compare_op.9, helper_loops.py:118),), kws=(), vararg=None, varkwarg=None, target=None) ['$144compare_op.9', '$146pred', 'bool146']
    branch $146pred, 172, 148                ['$146pred']
label 148:
    $const152.3.1 = const(int, 1)            ['$const152.3.1']
    $154binary_subtract.4 = i - $const152.3.1 ['$154binary_subtract.4', '$const152.3.1', 'i']
    $156binary_subscr.5 = getitem(value=close, index=$154binary_subtract.4, fn=<built-in function getitem>) ['$154binary_subtract.4', '$156binary_subscr.5', 'close']
    $const162.8.1 = const(int, 1)            ['$const162.8.1']
    $164binary_subtract.9 = i - $const162.8.1 ['$164binary_subtract.9', '$const162.8.1', 'i']
    $166binary_subscr.10 = getitem(value=final_lb, index=$164binary_subtract.9, fn=<built-in function getitem>) ['$164binary_subtract.9', '$166binary_subscr.10', 'final_lb']
    $168compare_op.11 = $156binary_subscr.5 < $166binary_subscr.10 ['$156binary_subscr.5', '$166binary_subscr.10', '$168compare_op.11']
    bool170 = global(bool: <class 'bool'>)   ['bool170']
    $170pred = call bool170($168compare_op.11, func=bool170, args=(Var($168compare_op.11, helper_loops.py:118),), kws=(), vararg=None, varkwarg=None, target=None) ['$168compare_op.11', '$170pred', 'bool170']
    branch $170pred, 172, 186                ['$170pred']
label 172:
    $176binary_subscr.3 = getitem(value=basic_lb, index=i, fn=<built-in function getitem>) ['$176binary_subscr.3', 'basic_lb', 'i']
    final_lb[i] = $176binary_subscr.3        ['$176binary_subscr.3', 'final_lb', 'i']
    jump 202                                 []
label 186:
    $const190.3.1 = const(int, 1)            ['$const190.3.1']
    $192binary_subtract.4 = i - $const190.3.1 ['$192binary_subtract.4', '$const190.3.1', 'i']
    $194binary_subscr.5 = getitem(value=final_lb, index=$192binary_subtract.4, fn=<built-in function getitem>) ['$192binary_subtract.4', '$194binary_subscr.5', 'final_lb']
    final_lb[i] = $194binary_subscr.5        ['$194binary_subscr.5', 'final_lb', 'i']
    jump 202                                 []
label 202:
    $const206.3.1 = const(int, 1)            ['$const206.3.1']
    $208binary_subtract.4 = i - $const206.3.1 ['$208binary_subtract.4', '$const206.3.1', 'i']
    $210binary_subscr.5 = getitem(value=supertrend, index=$208binary_subtract.4, fn=<built-in function getitem>) ['$208binary_subtract.4', '$210binary_subscr.5', 'supertrend']
    $const216.8.1 = const(int, 1)            ['$const216.8.1']
    $218binary_subtract.9 = i - $const216.8.1 ['$218binary_subtract.9', '$const216.8.1', 'i']
    $220binary_subscr.10 = getitem(value=final_ub, index=$218binary_subtract.9, fn=<built-in function getitem>) ['$218binary_subtract.9', '$220binary_subscr.10', 'final_ub']
    $222compare_op.11 = $210binary_subscr.5 == $220binary_subscr.10 ['$210binary_subscr.5', '$220binary_subscr.10', '$222compare_op.11']
    bool224 = global(bool: <class 'bool'>)   ['bool224']
    $224pred = call bool224($222compare_op.11, func=bool224, args=(Var($222compare_op.11, helper_loops.py:123),), kws=(), vararg=None, varkwarg=None, target=None) ['$222compare_op.11', '$224pred', 'bool224']
    branch $224pred, 226, 256                ['$224pred']
label 226:
    $230binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>) ['$230binary_subscr.3', 'close', 'i']
    $236binary_subscr.6 = getitem(value=final_ub, index=i, fn=<built-in function getitem>) ['$236binary_subscr.6', 'final_ub', 'i']
    $238compare_op.7 = $230binary_subscr.3 <= $236binary_subscr.6 ['$230binary_subscr.3', '$236binary_subscr.6', '$238compare_op.7']
    bool240 = global(bool: <class 'bool'>)   ['bool240']
    $240pred = call bool240($238compare_op.7, func=bool240, args=(Var($238compare_op.7, helper_loops.py:123),), kws=(), vararg=None, varkwarg=None, target=None) ['$238compare_op.7', '$240pred', 'bool240']
    branch $240pred, 242, 256                ['$240pred']
label 242:
    $246binary_subscr.3 = getitem(value=final_ub, index=i, fn=<built-in function getitem>) ['$246binary_subscr.3', 'final_ub', 'i']
    supertrend[i] = $246binary_subscr.3      ['$246binary_subscr.3', 'i', 'supertrend']
    jump 50                                  []
label 256:
    $const260.3.1 = const(int, 1)            ['$const260.3.1']
    $262binary_subtract.4 = i - $const260.3.1 ['$262binary_subtract.4', '$const260.3.1', 'i']
    $264binary_subscr.5 = getitem(value=supertrend, index=$262binary_subtract.4, fn=<built-in function getitem>) ['$262binary_subtract.4', '$264binary_subscr.5', 'supertrend']
    $const270.8.1 = const(int, 1)            ['$const270.8.1']
    $272binary_subtract.9 = i - $const270.8.1 ['$272binary_subtract.9', '$const270.8.1', 'i']
    $274binary_subscr.10 = getitem(value=final_ub, index=$272binary_subtract.9, fn=<built-in function getitem>) ['$272binary_subtract.9', '$274binary_subscr.10', 'final_ub']
    $276compare_op.11 = $264binary_subscr.5 == $274binary_subscr.10 ['$264binary_subscr.5', '$274binary_subscr.10', '$276compare_op.11']
    bool278 = global(bool: <class 'bool'>)   ['bool278']
    $278pred = call bool278($276compare_op.11, func=bool278, args=(Var($276compare_op.11, helper_loops.py:125),), kws=(), vararg=None, varkwarg=None, target=None) ['$276compare_op.11', '$278pred', 'bool278']
    branch $278pred, 280, 310                ['$278pred']
label 280:
    $284binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>) ['$284binary_subscr.3', 'close', 'i']
    $290binary_subscr.6 = getitem(value=final_ub, index=i, fn=<built-in function getitem>) ['$290binary_subscr.6', 'final_ub', 'i']
    $292compare_op.7 = $284binary_subscr.3 > $290binary_subscr.6 ['$284binary_subscr.3', '$290binary_subscr.6', '$292compare_op.7']
    bool294 = global(bool: <class 'bool'>)   ['bool294']
    $294pred = call bool294($292compare_op.7, func=bool294, args=(Var($292compare_op.7, helper_loops.py:125),), kws=(), vararg=None, varkwarg=None, target=None) ['$292compare_op.7', '$294pred', 'bool294']
    branch $294pred, 296, 310                ['$294pred']
label 296:
    $300binary_subscr.3 = getitem(value=final_lb, index=i, fn=<built-in function getitem>) ['$300binary_subscr.3', 'final_lb', 'i']
    supertrend[i] = $300binary_subscr.3      ['$300binary_subscr.3', 'i', 'supertrend']
    jump 50                                  []
label 310:
    $const314.3.1 = const(int, 1)            ['$const314.3.1']
    $316binary_subtract.4 = i - $const314.3.1 ['$316binary_subtract.4', '$const314.3.1', 'i']
    $318binary_subscr.5 = getitem(value=supertrend, index=$316binary_subtract.4, fn=<built-in function getitem>) ['$316binary_subtract.4', '$318binary_subscr.5', 'supertrend']
    $const324.8.1 = const(int, 1)            ['$const324.8.1']
    $326binary_subtract.9 = i - $const324.8.1 ['$326binary_subtract.9', '$const324.8.1', 'i']
    $328binary_subscr.10 = getitem(value=final_lb, index=$326binary_subtract.9, fn=<built-in function getitem>) ['$326binary_subtract.9', '$328binary_subscr.10', 'final_lb']
    $330compare_op.11 = $318binary_subscr.5 == $328binary_subscr.10 ['$318binary_subscr.5', '$328binary_subscr.10', '$330compare_op.11']
    bool332 = global(bool: <class 'bool'>)   ['bool332']
    $332pred = call bool332($330compare_op.11, func=bool332, args=(Var($330compare_op.11, helper_loops.py:127),), kws=(), vararg=None, varkwarg=None, target=None) ['$330compare_op.11', '$332pred', 'bool332']
    branch $332pred, 334, 364                ['$332pred']
label 334:
    $338binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>) ['$338binary_subscr.3', 'close', 'i']
    $344binary_subscr.6 = getitem(value=final_lb, index=i, fn=<built-in function getitem>) ['$344binary_subscr.6', 'final_lb', 'i']
    $346compare_op.7 = $338binary_subscr.3 >= $344binary_subscr.6 ['$338binary_subscr.3', '$344binary_subscr.6', '$346compare_op.7']
    bool348 = global(bool: <class 'bool'>)   ['bool348']
    $348pred = call bool348($346compare_op.7, func=bool348, args=(Var($346compare_op.7, helper_loops.py:127),), kws=(), vararg=None, varkwarg=None, target=None) ['$346compare_op.7', '$348pred', 'bool348']
    branch $348pred, 350, 364                ['$348pred']
label 350:
    $354binary_subscr.3 = getitem(value=final_lb, index=i, fn=<built-in function getitem>) ['$354binary_subscr.3', 'final_lb', 'i']
    supertrend[i] = $354binary_subscr.3      ['$354binary_subscr.3', 'i', 'supertrend']
    jump 50                                  []
label 364:
    $const368.3.1 = const(int, 1)            ['$const368.3.1']
    $370binary_subtract.4 = i - $const368.3.1 ['$370binary_subtract.4', '$const368.3.1', 'i']
    $372binary_subscr.5 = getitem(value=supertrend, index=$370binary_subtract.4, fn=<built-in function getitem>) ['$370binary_subtract.4', '$372binary_subscr.5', 'supertrend']
    $const378.8.1 = const(int, 1)            ['$const378.8.1']
    $380binary_subtract.9 = i - $const378.8.1 ['$380binary_subtract.9', '$const378.8.1', 'i']
    $382binary_subscr.10 = getitem(value=final_lb, index=$380binary_subtract.9, fn=<built-in function getitem>) ['$380binary_subtract.9', '$382binary_subscr.10', 'final_lb']
    $384compare_op.11 = $372binary_subscr.5 == $382binary_subscr.10 ['$372binary_subscr.5', '$382binary_subscr.10', '$384compare_op.11']
    bool386 = global(bool: <class 'bool'>)   ['bool386']
    $386pred = call bool386($384compare_op.11, func=bool386, args=(Var($384compare_op.11, helper_loops.py:129),), kws=(), vararg=None, varkwarg=None, target=None) ['$384compare_op.11', '$386pred', 'bool386']
    branch $386pred, 388, 418                ['$386pred']
label 388:
    $392binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>) ['$392binary_subscr.3', 'close', 'i']
    $398binary_subscr.6 = getitem(value=final_lb, index=i, fn=<built-in function getitem>) ['$398binary_subscr.6', 'final_lb', 'i']
    $400compare_op.7 = $392binary_subscr.3 < $398binary_subscr.6 ['$392binary_subscr.3', '$398binary_subscr.6', '$400compare_op.7']
    bool402 = global(bool: <class 'bool'>)   ['bool402']
    $402pred = call bool402($400compare_op.7, func=bool402, args=(Var($400compare_op.7, helper_loops.py:129),), kws=(), vararg=None, varkwarg=None, target=None) ['$400compare_op.7', '$402pred', 'bool402']
    branch $402pred, 404, 418                ['$402pred']
label 404:
    $408binary_subscr.3 = getitem(value=final_ub, index=i, fn=<built-in function getitem>) ['$408binary_subscr.3', 'final_ub', 'i']
    supertrend[i] = $408binary_subscr.3      ['$408binary_subscr.3', 'i', 'supertrend']
    jump 50                                  []
label 418:
    $const418.1.2 = const(float, 0.0)        ['$const418.1.2']
    supertrend[i] = $const418.1.2            ['$const418.1.2', 'i', 'supertrend']
    jump 50                                  []
label 428:
    $430return_value.1 = cast(value=supertrend) ['$430return_value.1', 'supertrend']
    return $430return_value.1                ['$430return_value.1']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7d783d07fd30>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: close = arg(0, name=close)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: basic_ub = arg(1, name=basic_ub)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: basic_lb = arg(2, name=basic_lb)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: n = arg(3, name=n)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(len: <built-in function len>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: length = call $2load_global.0(close, func=$2load_global.0, args=[Var(close, helper_loops.py:99)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $10load_global.3 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $12load_method.4 = getattr(value=$10load_global.3, attr=zeros)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_ub = call $12load_method.4(length, func=$12load_method.4, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $20load_global.7 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $22load_method.8 = getattr(value=$20load_global.7, attr=zeros)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_lb = call $22load_method.8(length, func=$22load_method.8, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $30load_global.11 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $32load_method.12 = getattr(value=$30load_global.11, attr=zeros)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend = call $32load_method.12(length, func=$32load_method.12, args=[Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $40load_global.15 = global(range: <class 'range'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $46call_function.18 = call $40load_global.15(n, length, func=$40load_global.15, args=[Var(n, helper_loops.py:99), Var(length, helper_loops.py:106)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $48get_iter.19 = getiter(value=$46call_function.18)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $phi50.0 = $48get_iter.19
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 50
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 50
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7d783d07fd30>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $50for_iter.1 = iternext(value=$phi50.0)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $50for_iter.2 = pair_first(value=$50for_iter.1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $50for_iter.3 = pair_second(value=$50for_iter.1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $phi52.1 = $50for_iter.2
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $50for_iter.3, 52, 428
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 52
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7d783d07fd30>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: i = $phi52.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $58binary_subscr.4 = getitem(value=basic_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const64.7.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $66binary_subtract.8 = i - $const64.7.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $68binary_subscr.9 = getitem(value=final_ub, index=$66binary_subtract.8, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $70compare_op.10 = $58binary_subscr.4 < $68binary_subscr.9
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool72 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $72pred = call bool72($70compare_op.10, func=bool72, args=(Var($70compare_op.10, helper_loops.py:113),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $72pred, 98, 74
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 74
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7d783d07fd30>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const78.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $80binary_subtract.4 = i - $const78.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $82binary_subscr.5 = getitem(value=close, index=$80binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const88.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $90binary_subtract.9 = i - $const88.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $92binary_subscr.10 = getitem(value=final_ub, index=$90binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $94compare_op.11 = $82binary_subscr.5 > $92binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool96 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $96pred = call bool96($94compare_op.11, func=bool96, args=(Var($94compare_op.11, helper_loops.py:113),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $96pred, 98, 112
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 98
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7d783d07fd30>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $102binary_subscr.3 = getitem(value=basic_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_ub[i] = $102binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 128
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 112
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7d783d07fd30>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const116.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $118binary_subtract.4 = i - $const116.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $120binary_subscr.5 = getitem(value=final_ub, index=$118binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_ub[i] = $120binary_subscr.5
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 128
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 128
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7d783d07fd30>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $132binary_subscr.3 = getitem(value=basic_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const138.6.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $140binary_subtract.7 = i - $const138.6.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $142binary_subscr.8 = getitem(value=final_lb, index=$140binary_subtract.7, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $144compare_op.9 = $132binary_subscr.3 > $142binary_subscr.8
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool146 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $146pred = call bool146($144compare_op.9, func=bool146, args=(Var($144compare_op.9, helper_loops.py:118),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $146pred, 172, 148
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 148
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7d783d07fd30>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const152.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $154binary_subtract.4 = i - $const152.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $156binary_subscr.5 = getitem(value=close, index=$154binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const162.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $164binary_subtract.9 = i - $const162.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $166binary_subscr.10 = getitem(value=final_lb, index=$164binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $168compare_op.11 = $156binary_subscr.5 < $166binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool170 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $170pred = call bool170($168compare_op.11, func=bool170, args=(Var($168compare_op.11, helper_loops.py:118),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $170pred, 172, 186
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 172
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7d783d07fd30>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $176binary_subscr.3 = getitem(value=basic_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_lb[i] = $176binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 202
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 186
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7d783d07fd30>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const190.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $192binary_subtract.4 = i - $const190.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $194binary_subscr.5 = getitem(value=final_lb, index=$192binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: final_lb[i] = $194binary_subscr.5
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 202
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 202
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7d783d07fd30>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const206.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $208binary_subtract.4 = i - $const206.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $210binary_subscr.5 = getitem(value=supertrend, index=$208binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const216.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $218binary_subtract.9 = i - $const216.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $220binary_subscr.10 = getitem(value=final_ub, index=$218binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $222compare_op.11 = $210binary_subscr.5 == $220binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool224 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $224pred = call bool224($222compare_op.11, func=bool224, args=(Var($222compare_op.11, helper_loops.py:123),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $224pred, 226, 256
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 226
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7d783d07fd30>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $230binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $236binary_subscr.6 = getitem(value=final_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $238compare_op.7 = $230binary_subscr.3 <= $236binary_subscr.6
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool240 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $240pred = call bool240($238compare_op.7, func=bool240, args=(Var($238compare_op.7, helper_loops.py:123),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $240pred, 242, 256
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 242
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7d783d07fd30>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $246binary_subscr.3 = getitem(value=final_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $246binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 256
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7d783d07fd30>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const260.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $262binary_subtract.4 = i - $const260.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $264binary_subscr.5 = getitem(value=supertrend, index=$262binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const270.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $272binary_subtract.9 = i - $const270.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $274binary_subscr.10 = getitem(value=final_ub, index=$272binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $276compare_op.11 = $264binary_subscr.5 == $274binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool278 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $278pred = call bool278($276compare_op.11, func=bool278, args=(Var($276compare_op.11, helper_loops.py:125),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $278pred, 280, 310
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 280
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7d783d07fd30>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $284binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $290binary_subscr.6 = getitem(value=final_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $292compare_op.7 = $284binary_subscr.3 > $290binary_subscr.6
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool294 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $294pred = call bool294($292compare_op.7, func=bool294, args=(Var($292compare_op.7, helper_loops.py:125),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $294pred, 296, 310
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 296
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7d783d07fd30>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $300binary_subscr.3 = getitem(value=final_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $300binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 310
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7d783d07fd30>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const314.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $316binary_subtract.4 = i - $const314.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $318binary_subscr.5 = getitem(value=supertrend, index=$316binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const324.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $326binary_subtract.9 = i - $const324.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $328binary_subscr.10 = getitem(value=final_lb, index=$326binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $330compare_op.11 = $318binary_subscr.5 == $328binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool332 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $332pred = call bool332($330compare_op.11, func=bool332, args=(Var($330compare_op.11, helper_loops.py:127),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $332pred, 334, 364
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 334
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7d783d07fd30>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $338binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $344binary_subscr.6 = getitem(value=final_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $346compare_op.7 = $338binary_subscr.3 >= $344binary_subscr.6
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool348 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $348pred = call bool348($346compare_op.7, func=bool348, args=(Var($346compare_op.7, helper_loops.py:127),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $348pred, 350, 364
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 350
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7d783d07fd30>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $354binary_subscr.3 = getitem(value=final_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $354binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 364
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7d783d07fd30>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const368.3.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $370binary_subtract.4 = i - $const368.3.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $372binary_subscr.5 = getitem(value=supertrend, index=$370binary_subtract.4, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const378.8.1 = const(int, 1)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $380binary_subtract.9 = i - $const378.8.1
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $382binary_subscr.10 = getitem(value=final_lb, index=$380binary_subtract.9, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $384compare_op.11 = $372binary_subscr.5 == $382binary_subscr.10
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool386 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $386pred = call bool386($384compare_op.11, func=bool386, args=(Var($384compare_op.11, helper_loops.py:129),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $386pred, 388, 418
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 388
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7d783d07fd30>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $392binary_subscr.3 = getitem(value=close, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $398binary_subscr.6 = getitem(value=final_lb, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $400compare_op.7 = $392binary_subscr.3 < $398binary_subscr.6
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: bool402 = global(bool: <class 'bool'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $402pred = call bool402($400compare_op.7, func=bool402, args=(Var($400compare_op.7, helper_loops.py:129),), kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: branch $402pred, 404, 418
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 404
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7d783d07fd30>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $408binary_subscr.3 = getitem(value=final_ub, index=i, fn=<built-in function getitem>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $408binary_subscr.3
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 418
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7d783d07fd30>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const418.1.2 = const(float, 0.0)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: supertrend[i] = $const418.1.2
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 429
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 428
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7d783d07fd30>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $430return_value.1 = cast(value=supertrend)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $430return_value.1
numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 429
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7d783d07fd30>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: jump 50
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$102binary_subscr.3': [(<numba.core.ir.Assign object at 0x7d783d0613f0>,
                                      98)],
             '$10load_global.3': [(<numba.core.ir.Assign object at 0x7d783d0111e0>,
                                   0)],
             '$118binary_subtract.4': [(<numba.core.ir.Assign object at 0x7d783d061c30>,
                                        112)],
             '$120binary_subscr.5': [(<numba.core.ir.Assign object at 0x7d783d061db0>,
                                      112)],
             '$12load_method.4': [(<numba.core.ir.Assign object at 0x7d783d011360>,
                                   0)],
             '$132binary_subscr.3': [(<numba.core.ir.Assign object at 0x7d783d062410>,
                                      128)],
             '$140binary_subtract.7': [(<numba.core.ir.Assign object at 0x7d783d062950>,
                                        128)],
             '$142binary_subscr.8': [(<numba.core.ir.Assign object at 0x7d783d062ad0>,
                                      128)],
             '$144compare_op.9': [(<numba.core.ir.Assign object at 0x7d783d062c50>,
                                   128)],
             '$146pred': [(<numba.core.ir.Assign object at 0x7d783d062ec0>,
                           128)],
             '$154binary_subtract.4': [(<numba.core.ir.Assign object at 0x7d783d0633d0>,
                                        148)],
             '$156binary_subscr.5': [(<numba.core.ir.Assign object at 0x7d783d063550>,
                                      148)],
             '$164binary_subtract.9': [(<numba.core.ir.Assign object at 0x7d783d063a90>,
                                        148)],
             '$166binary_subscr.10': [(<numba.core.ir.Assign object at 0x7d783d063c10>,
                                       148)],
             '$168compare_op.11': [(<numba.core.ir.Assign object at 0x7d783d063d90>,
                                    148)],
             '$170pred': [(<numba.core.ir.Assign object at 0x7d783d06c040>,
                           148)],
             '$176binary_subscr.3': [(<numba.core.ir.Assign object at 0x7d783d06c3d0>,
                                      172)],
             '$192binary_subtract.4': [(<numba.core.ir.Assign object at 0x7d783d06cc10>,
                                        186)],
             '$194binary_subscr.5': [(<numba.core.ir.Assign object at 0x7d783d06cd90>,
                                      186)],
             '$208binary_subtract.4': [(<numba.core.ir.Assign object at 0x7d783d06d570>,
                                        202)],
             '$20load_global.7': [(<numba.core.ir.Assign object at 0x7d783d0118a0>,
                                   0)],
             '$210binary_subscr.5': [(<numba.core.ir.Assign object at 0x7d783d06d6f0>,
                                      202)],
             '$218binary_subtract.9': [(<numba.core.ir.Assign object at 0x7d783d06dc30>,
                                        202)],
             '$220binary_subscr.10': [(<numba.core.ir.Assign object at 0x7d783d06ddb0>,
                                       202)],
             '$222compare_op.11': [(<numba.core.ir.Assign object at 0x7d783d06df30>,
                                    202)],
             '$224pred': [(<numba.core.ir.Assign object at 0x7d783d06e1a0>,
                           202)],
             '$22load_method.8': [(<numba.core.ir.Assign object at 0x7d783d011a20>,
                                   0)],
             '$230binary_subscr.3': [(<numba.core.ir.Assign object at 0x7d783d06e530>,
                                      226)],
             '$236binary_subscr.6': [(<numba.core.ir.Assign object at 0x7d783d06e8f0>,
                                      226)],
             '$238compare_op.7': [(<numba.core.ir.Assign object at 0x7d783d06ea70>,
                                   226)],
             '$240pred': [(<numba.core.ir.Assign object at 0x7d783d06ece0>,
                           226)],
             '$246binary_subscr.3': [(<numba.core.ir.Assign object at 0x7d783d06f070>,
                                      242)],
             '$262binary_subtract.4': [(<numba.core.ir.Assign object at 0x7d783d06f8b0>,
                                        256)],
             '$264binary_subscr.5': [(<numba.core.ir.Assign object at 0x7d783d06fa30>,
                                      256)],
             '$272binary_subtract.9': [(<numba.core.ir.Assign object at 0x7d783d06ff70>,
                                        256)],
             '$274binary_subscr.10': [(<numba.core.ir.Assign object at 0x7d783d074130>,
                                       256)],
             '$276compare_op.11': [(<numba.core.ir.Assign object at 0x7d783d0742b0>,
                                    256)],
             '$278pred': [(<numba.core.ir.Assign object at 0x7d783d074520>,
                           256)],
             '$284binary_subscr.3': [(<numba.core.ir.Assign object at 0x7d783d0748b0>,
                                      280)],
             '$290binary_subscr.6': [(<numba.core.ir.Assign object at 0x7d783d074c70>,
                                      280)],
             '$292compare_op.7': [(<numba.core.ir.Assign object at 0x7d783d074df0>,
                                   280)],
             '$294pred': [(<numba.core.ir.Assign object at 0x7d783d075060>,
                           280)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7d783d010ca0>,
                                  0)],
             '$300binary_subscr.3': [(<numba.core.ir.Assign object at 0x7d783d0753f0>,
                                      296)],
             '$30load_global.11': [(<numba.core.ir.Assign object at 0x7d783d011f60>,
                                    0)],
             '$316binary_subtract.4': [(<numba.core.ir.Assign object at 0x7d783d075c30>,
                                        310)],
             '$318binary_subscr.5': [(<numba.core.ir.Assign object at 0x7d783d075db0>,
                                      310)],
             '$326binary_subtract.9': [(<numba.core.ir.Assign object at 0x7d783d0762f0>,
                                        310)],
             '$328binary_subscr.10': [(<numba.core.ir.Assign object at 0x7d783d076470>,
                                       310)],
             '$32load_method.12': [(<numba.core.ir.Assign object at 0x7d783d0120e0>,
                                    0)],
             '$330compare_op.11': [(<numba.core.ir.Assign object at 0x7d783d0765f0>,
                                    310)],
             '$332pred': [(<numba.core.ir.Assign object at 0x7d783d076860>,
                           310)],
             '$338binary_subscr.3': [(<numba.core.ir.Assign object at 0x7d783d076bf0>,
                                      334)],
             '$344binary_subscr.6': [(<numba.core.ir.Assign object at 0x7d783d076fb0>,
                                      334)],
             '$346compare_op.7': [(<numba.core.ir.Assign object at 0x7d783d077130>,
                                   334)],
             '$348pred': [(<numba.core.ir.Assign object at 0x7d783d0773a0>,
                           334)],
             '$354binary_subscr.3': [(<numba.core.ir.Assign object at 0x7d783d077730>,
                                      350)],
             '$370binary_subtract.4': [(<numba.core.ir.Assign object at 0x7d783d077f70>,
                                        364)],
             '$372binary_subscr.5': [(<numba.core.ir.Assign object at 0x7d783d07c130>,
                                      364)],
             '$380binary_subtract.9': [(<numba.core.ir.Assign object at 0x7d783d07c670>,
                                        364)],
             '$382binary_subscr.10': [(<numba.core.ir.Assign object at 0x7d783d07c7f0>,
                                       364)],
             '$384compare_op.11': [(<numba.core.ir.Assign object at 0x7d783d07c970>,
                                    364)],
             '$386pred': [(<numba.core.ir.Assign object at 0x7d783d07cbe0>,
                           364)],
             '$392binary_subscr.3': [(<numba.core.ir.Assign object at 0x7d783d07cf70>,
                                      388)],
             '$398binary_subscr.6': [(<numba.core.ir.Assign object at 0x7d783d07d330>,
                                      388)],
             '$400compare_op.7': [(<numba.core.ir.Assign object at 0x7d783d07d4b0>,
                                   388)],
             '$402pred': [(<numba.core.ir.Assign object at 0x7d783d07d720>,
                           388)],
             '$408binary_subscr.3': [(<numba.core.ir.Assign object at 0x7d783d07dab0>,
                                      404)],
             '$40load_global.15': [(<numba.core.ir.Assign object at 0x7d783d012620>,
                                    0)],
             '$430return_value.1': [(<numba.core.ir.Assign object at 0x7d783d07e560>,
                                     428)],
             '$46call_function.18': [(<numba.core.ir.Assign object at 0x7d783d012a40>,
                                      0)],
             '$48get_iter.19': [(<numba.core.ir.Assign object at 0x7d783d012b60>,
                                 0)],
             '$50for_iter.1': [(<numba.core.ir.Assign object at 0x7d783d0127d0>,
                                50)],
             '$50for_iter.2': [(<numba.core.ir.Assign object at 0x7d783d012c50>,
                                50)],
             '$50for_iter.3': [(<numba.core.ir.Assign object at 0x7d783d012d70>,
                                50)],
             '$58binary_subscr.4': [(<numba.core.ir.Assign object at 0x7d783d013430>,
                                     52)],
             '$66binary_subtract.8': [(<numba.core.ir.Assign object at 0x7d783d013970>,
                                       52)],
             '$68binary_subscr.9': [(<numba.core.ir.Assign object at 0x7d783d013af0>,
                                     52)],
             '$70compare_op.10': [(<numba.core.ir.Assign object at 0x7d783d013c70>,
                                   52)],
             '$72pred': [(<numba.core.ir.Assign object at 0x7d783d013ee0>, 52)],
             '$80binary_subtract.4': [(<numba.core.ir.Assign object at 0x7d783d060430>,
                                       74)],
             '$82binary_subscr.5': [(<numba.core.ir.Assign object at 0x7d783d0605b0>,
                                     74)],
             '$90binary_subtract.9': [(<numba.core.ir.Assign object at 0x7d783d060af0>,
                                       74)],
             '$92binary_subscr.10': [(<numba.core.ir.Assign object at 0x7d783d060c70>,
                                      74)],
             '$94compare_op.11': [(<numba.core.ir.Assign object at 0x7d783d060df0>,
                                   74)],
             '$96pred': [(<numba.core.ir.Assign object at 0x7d783d061060>, 74)],
             '$const116.3.1': [(<numba.core.ir.Assign object at 0x7d783d061a80>,
                                112)],
             '$const138.6.1': [(<numba.core.ir.Assign object at 0x7d783d0627a0>,
                                128)],
             '$const152.3.1': [(<numba.core.ir.Assign object at 0x7d783d063220>,
                                148)],
             '$const162.8.1': [(<numba.core.ir.Assign object at 0x7d783d0638e0>,
                                148)],
             '$const190.3.1': [(<numba.core.ir.Assign object at 0x7d783d06ca60>,
                                186)],
             '$const206.3.1': [(<numba.core.ir.Assign object at 0x7d783d06d3c0>,
                                202)],
             '$const216.8.1': [(<numba.core.ir.Assign object at 0x7d783d06da80>,
                                202)],
             '$const260.3.1': [(<numba.core.ir.Assign object at 0x7d783d06f700>,
                                256)],
             '$const270.8.1': [(<numba.core.ir.Assign object at 0x7d783d06fdc0>,
                                256)],
             '$const314.3.1': [(<numba.core.ir.Assign object at 0x7d783d075a80>,
                                310)],
             '$const324.8.1': [(<numba.core.ir.Assign object at 0x7d783d076140>,
                                310)],
             '$const368.3.1': [(<numba.core.ir.Assign object at 0x7d783d077dc0>,
                                364)],
             '$const378.8.1': [(<numba.core.ir.Assign object at 0x7d783d07c4c0>,
                                364)],
             '$const418.1.2': [(<numba.core.ir.Assign object at 0x7d783d07df00>,
                                418)],
             '$const64.7.1': [(<numba.core.ir.Assign object at 0x7d783d0137c0>,
                               52)],
             '$const78.3.1': [(<numba.core.ir.Assign object at 0x7d783d060280>,
                               74)],
             '$const88.8.1': [(<numba.core.ir.Assign object at 0x7d783d060940>,
                               74)],
             '$phi50.0': [(<numba.core.ir.Assign object at 0x7d783d010e50>, 0)],
             '$phi52.1': [(<numba.core.ir.Assign object at 0x7d783d012290>,
                           50)],
             'basic_lb': [(<numba.core.ir.Assign object at 0x7d783d0103a0>, 0)],
             'basic_ub': [(<numba.core.ir.Assign object at 0x7d783d0108b0>, 0)],
             'bool146': [(<numba.core.ir.Assign object at 0x7d783d062da0>,
                          128)],
             'bool170': [(<numba.core.ir.Assign object at 0x7d783d063ee0>,
                          148)],
             'bool224': [(<numba.core.ir.Assign object at 0x7d783d06e080>,
                          202)],
             'bool240': [(<numba.core.ir.Assign object at 0x7d783d06ebc0>,
                          226)],
             'bool278': [(<numba.core.ir.Assign object at 0x7d783d074400>,
                          256)],
             'bool294': [(<numba.core.ir.Assign object at 0x7d783d074f40>,
                          280)],
             'bool332': [(<numba.core.ir.Assign object at 0x7d783d076740>,
                          310)],
             'bool348': [(<numba.core.ir.Assign object at 0x7d783d077280>,
                          334)],
             'bool386': [(<numba.core.ir.Assign object at 0x7d783d07cac0>,
                          364)],
             'bool402': [(<numba.core.ir.Assign object at 0x7d783d07d600>,
                          388)],
             'bool72': [(<numba.core.ir.Assign object at 0x7d783d013dc0>, 52)],
             'bool96': [(<numba.core.ir.Assign object at 0x7d783d060f40>, 74)],
             'close': [(<numba.core.ir.Assign object at 0x7d783d0100a0>, 0)],
             'final_lb': [(<numba.core.ir.Assign object at 0x7d783d011d50>, 0)],
             'final_ub': [(<numba.core.ir.Assign object at 0x7d783d011690>, 0)],
             'i': [(<numba.core.ir.Assign object at 0x7d783d013040>, 52)],
             'length': [(<numba.core.ir.Assign object at 0x7d783d010fa0>, 0)],
             'n': [(<numba.core.ir.Assign object at 0x7d783d010b20>, 0)],
             'supertrend': [(<numba.core.ir.Assign object at 0x7d783d012410>,
                             0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x7d783d1f3bb0>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4522)
           2	LOAD_GLOBAL(arg=0, lineno=4523)
           4	LOAD_ATTR(arg=1, lineno=4523)
           6	LOAD_FAST(arg=0, lineno=4523)
           8	LOAD_FAST(arg=1, lineno=4523)
          10	LOAD_CONST(arg=1, lineno=4523)
          12	CALL_FUNCTION_KW(arg=2, lineno=4523)
          14	STORE_FAST(arg=2, lineno=4523)
          16	LOAD_FAST(arg=2, lineno=4524)
          18	LOAD_METHOD(arg=2, lineno=4524)
          20	CALL_METHOD(arg=0, lineno=4524)
          22	POP_TOP(arg=None, lineno=4524)
          24	LOAD_FAST(arg=2, lineno=4525)
          26	RETURN_VALUE(arg=None, lineno=4525)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4522)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_ATTR(arg=1, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=LOAD_FAST(arg=0, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_attr.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=LOAD_FAST(arg=1, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_attr.1', '$shape6.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=LOAD_CONST(arg=1, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_attr.1', '$shape6.2', '$dtype8.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=CALL_FUNCTION_KW(arg=2, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_attr.1', '$shape6.2', '$dtype8.3', '$const10.4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=14, inst=STORE_FAST(arg=2, lineno=4523)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$12call_function_kw.5']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=16, inst=LOAD_FAST(arg=2, lineno=4524)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=18, inst=LOAD_METHOD(arg=2, lineno=4524)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$arr16.6']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=20, inst=CALL_METHOD(arg=0, lineno=4524)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$18load_method.7']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=22, inst=POP_TOP(arg=None, lineno=4524)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$20call_method.8']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=24, inst=LOAD_FAST(arg=2, lineno=4525)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=26, inst=RETURN_VALUE(arg=None, lineno=4525)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$arr24.9']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'item': '$2load_global.0', 'res': '$4load_attr.1'}), (6, {'res': '$shape6.2'}), (8, {'res': '$dtype8.3'}), (10, {'res': '$const10.4.1'}), (12, {'func': '$4load_attr.1', 'args': ['$shape6.2', '$dtype8.3'], 'names': '$const10.4.1', 'res': '$12call_function_kw.5'}), (14, {'value': '$12call_function_kw.5'}), (16, {'res': '$arr16.6'}), (18, {'item': '$arr16.6', 'res': '$18load_method.7'}), (20, {'func': '$18load_method.7', 'args': [], 'res': '$20call_method.8'}), (24, {'res': '$arr24.9'}), (26, {'retval': '$arr24.9', 'castval': '$26return_value.10'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>) ['$2load_global.0']
    $4load_attr.1 = getattr(value=$2load_global.0, attr=empty) ['$2load_global.0', '$4load_attr.1']
    arr = call $4load_attr.1(shape, func=$4load_attr.1, args=[Var(shape, arrayobj.py:4522)], kws=[('dtype', Var(dtype, arrayobj.py:4522))], vararg=None, varkwarg=None, target=None) ['$4load_attr.1', 'arr', 'dtype', 'shape']
    $18load_method.7 = getattr(value=arr, attr=_zero_fill) ['$18load_method.7', 'arr']
    $20call_method.8 = call $18load_method.7(func=$18load_method.7, args=[], kws=(), vararg=None, varkwarg=None, target=None) ['$18load_method.7', '$20call_method.8']
    $26return_value.10 = cast(value=arr)     ['$26return_value.10', 'arr']
    return $26return_value.10                ['$26return_value.10']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7d783d0d1c60>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: shape = arg(0, name=shape)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: dtype = arg(1, name=dtype)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(np: <module 'numpy' from '/opt/conda/lib/python3.10/site-packages/numpy/__init__.py'>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $4load_attr.1 = getattr(value=$2load_global.0, attr=empty)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: arr = call $4load_attr.1(shape, func=$4load_attr.1, args=[Var(shape, arrayobj.py:4522)], kws=[('dtype', Var(dtype, arrayobj.py:4522))], vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $18load_method.7 = getattr(value=arr, attr=_zero_fill)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $20call_method.8 = call $18load_method.7(func=$18load_method.7, args=[], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $26return_value.10 = cast(value=arr)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $26return_value.10
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$18load_method.7': [(<numba.core.ir.Assign object at 0x7d783d0d34c0>,
                                   0)],
             '$20call_method.8': [(<numba.core.ir.Assign object at 0x7d783d0d36d0>,
                                   0)],
             '$26return_value.10': [(<numba.core.ir.Assign object at 0x7d783d0d38e0>,
                                     0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7d783d0d29e0>,
                                  0)],
             '$4load_attr.1': [(<numba.core.ir.Assign object at 0x7d783d0d2b60>,
                                0)],
             'arr': [(<numba.core.ir.Assign object at 0x7d783d0d3220>, 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x7d783d0d2860>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x7d783d0d2740>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x7d783d0d1c60>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4454)
           2	LOAD_GLOBAL(arg=0, lineno=4455)
           4	LOAD_FAST(arg=0, lineno=4455)
           6	LOAD_FAST(arg=1, lineno=4455)
           8	LOAD_DEREF(arg=0, lineno=4455)
          10	CALL_FUNCTION(arg=3, lineno=4455)
          12	RETURN_VALUE(arg=None, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4454)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$shape4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=LOAD_DEREF(arg=0, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$shape4.1', '$dtype6.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=CALL_FUNCTION(arg=3, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$shape4.1', '$dtype6.2', '$8load_deref.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4455)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$10call_function.4']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$shape4.1'}), (6, {'res': '$dtype6.2'}), (8, {'res': '$8load_deref.3'}), (10, {'func': '$2load_global.0', 'args': ['$shape4.1', '$dtype6.2', '$8load_deref.3'], 'res': '$10call_function.4'}), (12, {'retval': '$10call_function.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    shape = arg(0, name=shape)               ['shape']
    dtype = arg(1, name=dtype)               ['dtype']
    $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>) ['$2load_global.0']
    $8load_deref.3 = freevar(retty: array(float64, 1d, C)) ['$8load_deref.3']
    $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4454), Var(dtype, arrayobj.py:4454), Var($8load_deref.3, arrayobj.py:4455)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_function.4', '$2load_global.0', '$8load_deref.3', 'dtype', 'shape']
    $12return_value.5 = cast(value=$10call_function.4) ['$10call_function.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7d783cfa12d0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: shape = arg(0, name=shape)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: dtype = arg(1, name=dtype)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(numpy_empty_nd: <intrinsic numpy_empty_nd>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $8load_deref.3 = freevar(retty: array(float64, 1d, C))
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $10call_function.4 = call $2load_global.0(shape, dtype, $8load_deref.3, func=$2load_global.0, args=[Var(shape, arrayobj.py:4454), Var(dtype, arrayobj.py:4454), Var($8load_deref.3, arrayobj.py:4455)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $12return_value.5 = cast(value=$10call_function.4)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $12return_value.5
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$10call_function.4': [(<numba.core.ir.Assign object at 0x7d783cfa1570>,
                                     0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x7d783cfa1450>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7d783cfa19f0>,
                                  0)],
             '$8load_deref.3': [(<numba.core.ir.Assign object at 0x7d783cfa1750>,
                                 0)],
             'dtype': [(<numba.core.ir.Assign object at 0x7d783cfa1870>, 0)],
             'shape': [(<numba.core.ir.Assign object at 0x7d783cfa0a60>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x7d783cfa12d0>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4330)
           2	LOAD_FAST(arg=0, lineno=4333)
           4	LOAD_METHOD(arg=0, lineno=4333)
           6	LOAD_FAST(arg=1, lineno=4333)
           8	LOAD_FAST(arg=2, lineno=4333)
          10	CALL_METHOD(arg=2, lineno=4333)
          12	RETURN_VALUE(arg=None, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4330)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_FAST(arg=0, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_METHOD(arg=0, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$arrtype2.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=LOAD_FAST(arg=1, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_method.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=LOAD_FAST(arg=2, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_method.1', '$size6.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=CALL_METHOD(arg=2, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$4load_method.1', '$size6.2', '$align8.3']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4333)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$10call_method.4']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$arrtype2.0'}), (4, {'item': '$arrtype2.0', 'res': '$4load_method.1'}), (6, {'res': '$size6.2'}), (8, {'res': '$align8.3'}), (10, {'func': '$4load_method.1', 'args': ['$size6.2', '$align8.3'], 'res': '$10call_method.4'}), (12, {'retval': '$10call_method.4', 'castval': '$12return_value.5'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    arrtype = arg(0, name=arrtype)           ['arrtype']
    size = arg(1, name=size)                 ['size']
    align = arg(2, name=align)               ['align']
    $4load_method.1 = getattr(value=arrtype, attr=_allocate) ['$4load_method.1', 'arrtype']
    $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:4330), Var(align, arrayobj.py:4330)], kws=(), vararg=None, varkwarg=None, target=None) ['$10call_method.4', '$4load_method.1', 'align', 'size']
    $12return_value.5 = cast(value=$10call_method.4) ['$10call_method.4', '$12return_value.5']
    return $12return_value.5                 ['$12return_value.5']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7d783d0d2410>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: arrtype = arg(0, name=arrtype)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: size = arg(1, name=size)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: align = arg(2, name=align)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $4load_method.1 = getattr(value=arrtype, attr=_allocate)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $10call_method.4 = call $4load_method.1(size, align, func=$4load_method.1, args=[Var(size, arrayobj.py:4330), Var(align, arrayobj.py:4330)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $12return_value.5 = cast(value=$10call_method.4)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $12return_value.5
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$10call_method.4': [(<numba.core.ir.Assign object at 0x7d783d000dc0>,
                                   0)],
             '$12return_value.5': [(<numba.core.ir.Assign object at 0x7d783d000eb0>,
                                    0)],
             '$4load_method.1': [(<numba.core.ir.Assign object at 0x7d783d000970>,
                                  0)],
             'align': [(<numba.core.ir.Assign object at 0x7d783d0006d0>, 0)],
             'arrtype': [(<numba.core.ir.Assign object at 0x7d783cfe74f0>, 0)],
             'size': [(<numba.core.ir.Assign object at 0x7d783d0005b0>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x7d783d0d2410>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4325)
           2	LOAD_GLOBAL(arg=0, lineno=4326)
           4	LOAD_FAST(arg=1, lineno=4326)
           6	LOAD_FAST(arg=2, lineno=4326)
           8	CALL_FUNCTION(arg=2, lineno=4326)
          10	RETURN_VALUE(arg=None, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4325)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_FAST(arg=1, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=LOAD_FAST(arg=2, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$allocsize4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=CALL_FUNCTION(arg=2, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$allocsize4.1', '$align6.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=RETURN_VALUE(arg=None, lineno=4326)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$8call_function.3']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$allocsize4.1'}), (6, {'res': '$align6.2'}), (8, {'func': '$2load_global.0', 'args': ['$allocsize4.1', '$align6.2'], 'res': '$8call_function.3'}), (10, {'retval': '$8call_function.3', 'castval': '$10return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    cls = arg(0, name=cls)                   ['cls']
    allocsize = arg(1, name=allocsize)       ['allocsize']
    align = arg(2, name=align)               ['align']
    $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>) ['$2load_global.0']
    $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:4325), Var(align, arrayobj.py:4325)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$8call_function.3', 'align', 'allocsize']
    $10return_value.4 = cast(value=$8call_function.3) ['$10return_value.4', '$8call_function.3']
    return $10return_value.4                 ['$10return_value.4']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7d783d001ba0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: cls = arg(0, name=cls)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: allocsize = arg(1, name=allocsize)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: align = arg(2, name=align)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(intrin_alloc: <intrinsic intrin_alloc>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $8call_function.3 = call $2load_global.0(allocsize, align, func=$2load_global.0, args=[Var(allocsize, arrayobj.py:4325), Var(align, arrayobj.py:4325)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $10return_value.4 = cast(value=$8call_function.3)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $10return_value.4
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$10return_value.4': [(<numba.core.ir.Assign object at 0x7d783d002f80>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7d783d002a40>,
                                  0)],
             '$8call_function.3': [(<numba.core.ir.Assign object at 0x7d783d002e60>,
                                    0)],
             'align': [(<numba.core.ir.Assign object at 0x7d783d0028c0>, 0)],
             'allocsize': [(<numba.core.ir.Assign object at 0x7d783d0027a0>,
                            0)],
             'cls': [(<numba.core.ir.Assign object at 0x7d783d002680>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x7d783d001ba0>
numba.core.byteflow - [DEBUG]{MainThread} - __init__() - bytecode dump:
>          0	NOP(arg=None, lineno=4513)
           2	LOAD_GLOBAL(arg=0, lineno=4514)
           4	LOAD_FAST(arg=0, lineno=4514)
           6	CALL_FUNCTION(arg=1, lineno=4514)
           8	POP_TOP(arg=None, lineno=4514)
          10	LOAD_CONST(arg=0, lineno=4514)
          12	RETURN_VALUE(arg=None, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - run() - pending: deque([State(pc_initial=0 nstack_initial=0)])
numba.core.byteflow - [DEBUG]{MainThread} - run() - stack: []
numba.core.byteflow - [DEBUG]{MainThread} - run() - state.pc_initial: State(pc_initial=0 nstack_initial=0)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=0, inst=NOP(arg=None, lineno=4513)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=2, inst=LOAD_GLOBAL(arg=0, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=4, inst=LOAD_FAST(arg=0, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=6, inst=CALL_FUNCTION(arg=1, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$2load_global.0', '$self4.1']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=8, inst=POP_TOP(arg=None, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$6call_function.2']
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=10, inst=LOAD_CONST(arg=0, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack []
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - dispatch pc=12, inst=RETURN_VALUE(arg=None, lineno=4514)
numba.core.byteflow - [DEBUG]{MainThread} - dispatch() - stack ['$const10.3.0']
numba.core.byteflow - [DEBUG]{MainThread} - run() - end state. edges=[]
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - -------------------------Prune PHIs-------------------------
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - Used_phis: defaultdict(<class 'set'>, {State(pc_initial=0 nstack_initial=0): set()})
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - defmap: {}
numba.core.byteflow - [DEBUG]{MainThread} - find_use_defs() - phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - propagate_phi_map() - changing phismap: defaultdict(<class 'set'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - keep phismap: {}
numba.core.byteflow - [DEBUG]{MainThread} - apply_changes() - new_out: defaultdict(<class 'dict'>, {})
numba.core.byteflow - [DEBUG]{MainThread} - _prune_phis() - ----------------------DONE Prune PHIs-----------------------
numba.core.byteflow - [DEBUG]{MainThread} - run() - block_infos State(pc_initial=0 nstack_initial=0):
AdaptBlockInfo(insts=((0, {}), (2, {'res': '$2load_global.0'}), (4, {'res': '$self4.1'}), (6, {'func': '$2load_global.0', 'args': ['$self4.1'], 'res': '$6call_function.2'}), (10, {'res': '$const10.3.0'}), (12, {'retval': '$const10.3.0', 'castval': '$12return_value.4'})), outgoing_phis={}, blockstack=(), active_try_block=None, outgoing_edgepushed={})
numba.core.interpreter - [DEBUG]{MainThread} - interpret() - label 0:
    self = arg(0, name=self)                 ['self']
    $2load_global.0 = global(_zero_fill_array_method: <intrinsic _zero_fill_array_method>) ['$2load_global.0']
    $6call_function.2 = call $2load_global.0(self, func=$2load_global.0, args=[Var(self, arrayobj.py:4513)], kws=(), vararg=None, varkwarg=None, target=None) ['$2load_global.0', '$6call_function.2', 'self']
    $const10.3.0 = const(NoneType, None)     ['$const10.3.0']
    $12return_value.4 = cast(value=$const10.3.0) ['$12return_value.4', '$const10.3.0']
    return $12return_value.4                 ['$12return_value.4']

numba.core.ssa - [DEBUG]{MainThread} - _run_block_analysis() - ==== SSA block analysis pass on 0
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - Running <numba.core.ssa._GatherDefsHandler object at 0x7d783ceb26e0>
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: self = arg(0, name=self)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $2load_global.0 = global(_zero_fill_array_method: <intrinsic _zero_fill_array_method>)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $6call_function.2 = call $2load_global.0(self, func=$2load_global.0, args=[Var(self, arrayobj.py:4513)], kws=(), vararg=None, varkwarg=None, target=None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $const10.3.0 = const(NoneType, None)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: $12return_value.4 = cast(value=$const10.3.0)
numba.core.ssa - [DEBUG]{MainThread} - _run_ssa_block_pass() - on stmt: return $12return_value.4
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - defs defaultdict(<class 'list'>,
            {'$12return_value.4': [(<numba.core.ir.Assign object at 0x7d783ceb2b60>,
                                    0)],
             '$2load_global.0': [(<numba.core.ir.Assign object at 0x7d783ceb1e10>,
                                  0)],
             '$6call_function.2': [(<numba.core.ir.Assign object at 0x7d783ceb1f60>,
                                    0)],
             '$const10.3.0': [(<numba.core.ir.Assign object at 0x7d783ceb29e0>,
                               0)],
             'self': [(<numba.core.ir.Assign object at 0x7d783ceb1c60>, 0)]})
numba.core.ssa - [DEBUG]{MainThread} - _find_defs_violators() - SSA violators <numba.core.utils.OrderedSet object at 0x7d783ceb26e0>
yfinance - [DEBUG]{MainThread} - wrapper() - Entering history()
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NQ=F', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -  Entering history()
yfinance - [DEBUG]{MainThread} - history() - NQ=F: Yahoo GET parameters: {'range': '60d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -   Entering get()
yfinance - [DEBUG]{MainThread} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{MainThread} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/NQ=F
yfinance - [DEBUG]{MainThread} - _make_request() - params={'range': '60d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{MainThread} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - _get_crumb_basic() - reusing crumb
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _make_request() - response code=200
yfinance - [DEBUG]{MainThread} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{MainThread} - wrapper() -   Exiting get()
yfinance - [DEBUG]{MainThread} - history() - NQ=F: yfinance received OHLC data: 2025-04-22 04:00:00 -> 2025-06-30 06:37:49
yfinance - [DEBUG]{MainThread} - history() - NQ=F: OHLC after cleaning: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:37:49-04:00
yfinance - [DEBUG]{MainThread} - history() - NQ=F: OHLC after combining events: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:37:49-04:00
yfinance - [DEBUG]{MainThread} - history() - NQ=F: yfinance returning OHLC: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:30:00-04:00
yfinance - [DEBUG]{MainThread} - wrapper() -  Exiting history()
yfinance - [DEBUG]{MainThread} - wrapper() - Exiting history()
yfinance - [DEBUG]{MainThread} - wrapper() - Entering history()
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['PYPL', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -  Entering history()
yfinance - [DEBUG]{MainThread} - history() - PYPL: Yahoo GET parameters: {'range': '60d', 'interval': '15m', 'includePrePost': True, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -   Entering get()
yfinance - [DEBUG]{MainThread} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{MainThread} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/PYPL
yfinance - [DEBUG]{MainThread} - _make_request() - params={'range': '60d', 'interval': '15m', 'includePrePost': True, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{MainThread} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - _get_crumb_basic() - reusing crumb
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _make_request() - response code=200
yfinance - [DEBUG]{MainThread} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{MainThread} - wrapper() -   Exiting get()
yfinance - [DEBUG]{MainThread} - history() - PYPL: yfinance received OHLC data: 2025-04-02 08:00:00 -> 2025-06-27 23:59:55
yfinance - [DEBUG]{MainThread} - history() - PYPL: OHLC after cleaning: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:59:55-04:00
yfinance - [DEBUG]{MainThread} - history() - PYPL: OHLC after combining events: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:59:55-04:00
yfinance - [DEBUG]{MainThread} - history() - PYPL: yfinance returning OHLC: 2025-04-02 04:00:00-04:00 -> 2025-06-27 19:45:00-04:00
yfinance - [DEBUG]{MainThread} - wrapper() -  Exiting history()
yfinance - [DEBUG]{MainThread} - wrapper() - Exiting history()
root - [INFO]{MainThread} - get_buy_sell_points_Roll() - Parameters of acquisition "buy_sell_points" for this stock is set to POSITIVE (units) 	92%: 0.8108 	98%: 1.5836 NEGATIVE (units) 	93%: 0.7986 	98%: 1.2999
yfinance - [DEBUG]{MainThread} - wrapper() - Entering history()
peewee - [DEBUG]{MainThread} - execute_sql() - ('SELECT "t1"."key", "t1"."value" FROM "_tz_kv" AS "t1" WHERE ("t1"."key" = ?) LIMIT ? OFFSET ?', ['NQ=F', 1, 0])
yfinance - [DEBUG]{MainThread} - wrapper() -  Entering history()
yfinance - [DEBUG]{MainThread} - history() - NQ=F: Yahoo GET parameters: {'range': '60d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -   Entering get()
yfinance - [DEBUG]{MainThread} - wrapper() -    Entering _make_request()
yfinance - [DEBUG]{MainThread} - _make_request() - url=https://query2.finance.yahoo.com/v8/finance/chart/NQ=F
yfinance - [DEBUG]{MainThread} - _make_request() - params={'range': '60d', 'interval': '15m', 'includePrePost': False, 'events': 'div,splits,capitalGains'}
yfinance - [DEBUG]{MainThread} - wrapper() -     Entering _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _get_cookie_and_crumb() - cookie_mode = 'basic'
yfinance - [DEBUG]{MainThread} - wrapper() -      Entering _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - _get_cookie_basic() - reusing cookie
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_cookie_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -       Entering _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - _get_crumb_basic() - reusing crumb
yfinance - [DEBUG]{MainThread} - wrapper() -       Exiting _get_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -      Exiting _get_cookie_and_crumb_basic()
yfinance - [DEBUG]{MainThread} - wrapper() -     Exiting _get_cookie_and_crumb()
yfinance - [DEBUG]{MainThread} - _make_request() - response code=200
yfinance - [DEBUG]{MainThread} - wrapper() -    Exiting _make_request()
yfinance - [DEBUG]{MainThread} - wrapper() -   Exiting get()
yfinance - [DEBUG]{MainThread} - history() - NQ=F: yfinance received OHLC data: 2025-04-22 04:00:00 -> 2025-06-30 06:38:45
yfinance - [DEBUG]{MainThread} - history() - NQ=F: OHLC after cleaning: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:38:45-04:00
yfinance - [DEBUG]{MainThread} - history() - NQ=F: OHLC after combining events: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:38:45-04:00
yfinance - [DEBUG]{MainThread} - history() - NQ=F: yfinance returning OHLC: 2025-04-22 00:00:00-04:00 -> 2025-06-30 02:30:00-04:00
yfinance - [DEBUG]{MainThread} - wrapper() -  Exiting history()
yfinance - [DEBUG]{MainThread} - wrapper() - Exiting history()
matplotlib - [DEBUG]{MainThread} - wrapper() - matplotlib data path: /opt/conda/lib/python3.10/site-packages/matplotlib/mpl-data
matplotlib - [DEBUG]{MainThread} - wrapper() - CONFIGDIR=/root/.config/matplotlib
matplotlib - [DEBUG]{MainThread} - <module>() - interactive is False
matplotlib - [DEBUG]{MainThread} - <module>() - platform is linux
matplotlib - [DEBUG]{MainThread} - wrapper() - CACHEDIR=/root/.cache/matplotlib
matplotlib.font_manager - [DEBUG]{MainThread} - _load_fontmanager() - Using fontManager instance from /root/.cache/matplotlib/fontlist-v390.json
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1561, 1075) Path: d_price/UBER_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, olap_BBAND_dif, ma_TRIMA_50, vola_NATR, mtum_PLUS_DM, ichi_senkou_a, vola_ATR, mtum_DMP_14, NQ_per_Volume
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point  olap_BBAND_dif  ma_TRIMA_50  vola_NATR  mtum_PLUS_DM  ichi_senkou_a  vola_ATR  mtum_DMP_14  NQ_per_Volume
0  2025-04-02 09:30:00               0             NaN          NaN        NaN           NaN            NaN       NaN          NaN     477.179627
1  2025-04-02 09:45:00             100             NaN          NaN        NaN           NaN            NaN       NaN          NaN     477.179627
2  2025-04-02 10:00:00             100             NaN          NaN        NaN           NaN            NaN       NaN          NaN     477.179627
3  2025-04-02 10:15:00               0             NaN          NaN        NaN           NaN            NaN       NaN          NaN     477.179627
4  2025-04-02 10:30:00               0             NaN          NaN        NaN           NaN            NaN       NaN          NaN     477.179627
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point  olap_BBAND_dif  ma_TRIMA_50    vola_NATR  mtum_PLUS_DM  ichi_senkou_a     vola_ATR  mtum_DMP_14  NQ_per_Volume
count     1561.000000     1542.000000  1512.000000  1547.000000   1548.000000    1510.000000  1547.000000  1548.000000    1561.000000
mean        -0.512492        2.656749    82.224722     0.663065      1.720222      82.063959     0.527630     1.720222     122.257997
std         33.393439        1.973503     7.313157     0.340513      1.025082       7.309909     0.213126     1.025082     205.385753
min       -100.000000        0.530443    64.579723     0.277935      0.358561      63.482500     0.235772     0.358561     -74.464402
25%          0.000000        1.344908    76.868652     0.457631      1.052638      75.800000     0.394399     1.052638     -15.465827
50%          0.000000        2.007707    84.176325     0.565828      1.430629      83.830625     0.471907     1.430629      11.261856
75%          0.000000        3.308072    87.157016     0.719375      2.056302      86.989998     0.579107     2.056302     227.112644
max        100.000000       12.856822    92.597722     2.541488      7.152036      93.084999     1.607618     7.152036     757.830994
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
matplotlib - [DEBUG]{MainThread} - wrapper() - matplotlib data path: /opt/conda/lib/python3.10/site-packages/matplotlib/mpl-data
matplotlib - [DEBUG]{MainThread} - wrapper() - CONFIGDIR=/root/.config/matplotlib
matplotlib - [DEBUG]{MainThread} - <module>() - interactive is False
matplotlib - [DEBUG]{MainThread} - <module>() - platform is linux
matplotlib - [DEBUG]{MainThread} - wrapper() - CACHEDIR=/root/.cache/matplotlib
matplotlib.font_manager - [DEBUG]{MainThread} - _load_fontmanager() - Using fontManager instance from /root/.cache/matplotlib/fontlist-v390.json
matplotlib - [DEBUG]{MainThread} - wrapper() - matplotlib data path: /opt/conda/lib/python3.10/site-packages/matplotlib/mpl-data
matplotlib - [DEBUG]{MainThread} - wrapper() - CONFIGDIR=/root/.config/matplotlib
matplotlib - [DEBUG]{MainThread} - <module>() - interactive is False
matplotlib - [DEBUG]{MainThread} - <module>() - platform is linux
matplotlib - [DEBUG]{MainThread} - wrapper() - CACHEDIR=/root/.cache/matplotlib
matplotlib.font_manager - [DEBUG]{MainThread} - _load_fontmanager() - Using fontManager instance from /root/.cache/matplotlib/fontlist-v390.json
matplotlib - [DEBUG]{MainThread} - wrapper() - matplotlib data path: /opt/conda/lib/python3.10/site-packages/matplotlib/mpl-data
matplotlib - [DEBUG]{MainThread} - wrapper() - CONFIGDIR=/root/.config/matplotlib
matplotlib - [DEBUG]{MainThread} - <module>() - interactive is False
matplotlib - [DEBUG]{MainThread} - <module>() - platform is linux
matplotlib - [DEBUG]{MainThread} - wrapper() - CACHEDIR=/root/.cache/matplotlib
matplotlib.font_manager - [DEBUG]{MainThread} - _load_fontmanager() - Using fontManager instance from /root/.cache/matplotlib/fontlist-v390.json
matplotlib - [DEBUG]{MainThread} - wrapper() - matplotlib data path: /opt/conda/lib/python3.10/site-packages/matplotlib/mpl-data
matplotlib - [DEBUG]{MainThread} - wrapper() - CONFIGDIR=/root/.config/matplotlib
matplotlib - [DEBUG]{MainThread} - <module>() - interactive is False
matplotlib - [DEBUG]{MainThread} - <module>() - platform is linux
matplotlib - [DEBUG]{MainThread} - wrapper() - CACHEDIR=/root/.cache/matplotlib
matplotlib.font_manager - [DEBUG]{MainThread} - _load_fontmanager() - Using fontManager instance from /root/.cache/matplotlib/fontlist-v390.json
matplotlib - [DEBUG]{MainThread} - wrapper() - matplotlib data path: /opt/conda/lib/python3.10/site-packages/matplotlib/mpl-data
matplotlib - [DEBUG]{MainThread} - wrapper() - CONFIGDIR=/root/.config/matplotlib
matplotlib - [DEBUG]{MainThread} - <module>() - interactive is False
matplotlib - [DEBUG]{MainThread} - <module>() - platform is linux
matplotlib - [DEBUG]{MainThread} - wrapper() - CACHEDIR=/root/.cache/matplotlib
matplotlib.font_manager - [DEBUG]{MainThread} - _load_fontmanager() - Using fontManager instance from /root/.cache/matplotlib/fontlist-v390.json
matplotlib - [DEBUG]{MainThread} - wrapper() - matplotlib data path: /opt/conda/lib/python3.10/site-packages/matplotlib/mpl-data
matplotlib - [DEBUG]{MainThread} - wrapper() - CONFIGDIR=/root/.config/matplotlib
matplotlib - [DEBUG]{MainThread} - <module>() - interactive is False
matplotlib - [DEBUG]{MainThread} - <module>() - platform is linux
matplotlib - [DEBUG]{MainThread} - wrapper() - CACHEDIR=/root/.cache/matplotlib
matplotlib.font_manager - [DEBUG]{MainThread} - _load_fontmanager() - Using fontManager instance from /root/.cache/matplotlib/fontlist-v390.json
matplotlib - [DEBUG]{MainThread} - wrapper() - matplotlib data path: /opt/conda/lib/python3.10/site-packages/matplotlib/mpl-data
matplotlib - [DEBUG]{MainThread} - wrapper() - CONFIGDIR=/root/.config/matplotlib
matplotlib - [DEBUG]{MainThread} - <module>() - interactive is False
matplotlib - [DEBUG]{MainThread} - <module>() - platform is linux
matplotlib - [DEBUG]{MainThread} - wrapper() - CACHEDIR=/root/.cache/matplotlib
matplotlib.font_manager - [DEBUG]{MainThread} - _load_fontmanager() - Using fontManager instance from /root/.cache/matplotlib/fontlist-v390.json
matplotlib - [DEBUG]{MainThread} - wrapper() - matplotlib data path: /opt/conda/lib/python3.10/site-packages/matplotlib/mpl-data
matplotlib - [DEBUG]{MainThread} - wrapper() - CONFIGDIR=/root/.config/matplotlib
matplotlib - [DEBUG]{MainThread} - <module>() - interactive is False
matplotlib - [DEBUG]{MainThread} - <module>() - platform is linux
matplotlib - [DEBUG]{MainThread} - wrapper() - CACHEDIR=/root/.cache/matplotlib
matplotlib.font_manager - [DEBUG]{MainThread} - _load_fontmanager() - Using fontManager instance from /root/.cache/matplotlib/fontlist-v390.json
matplotlib - [DEBUG]{MainThread} - wrapper() - matplotlib data path: /opt/conda/lib/python3.10/site-packages/matplotlib/mpl-data
matplotlib - [DEBUG]{MainThread} - wrapper() - CONFIGDIR=/root/.config/matplotlib
matplotlib - [DEBUG]{MainThread} - <module>() - interactive is False
matplotlib - [DEBUG]{MainThread} - <module>() - platform is linux
matplotlib - [DEBUG]{MainThread} - wrapper() - CACHEDIR=/root/.cache/matplotlib
matplotlib.font_manager - [DEBUG]{MainThread} - _load_fontmanager() - Using fontManager instance from /root/.cache/matplotlib/fontlist-v390.json
matplotlib - [DEBUG]{MainThread} - wrapper() - matplotlib data path: /opt/conda/lib/python3.10/site-packages/matplotlib/mpl-data
matplotlib - [DEBUG]{MainThread} - wrapper() - CONFIGDIR=/root/.config/matplotlib
matplotlib - [DEBUG]{MainThread} - <module>() - interactive is False
matplotlib - [DEBUG]{MainThread} - <module>() - platform is linux
matplotlib - [DEBUG]{MainThread} - wrapper() - CACHEDIR=/root/.cache/matplotlib
matplotlib.font_manager - [DEBUG]{MainThread} - _load_fontmanager() - Using fontManager instance from /root/.cache/matplotlib/fontlist-v390.json
matplotlib - [DEBUG]{MainThread} - wrapper() - matplotlib data path: /opt/conda/lib/python3.10/site-packages/matplotlib/mpl-data
matplotlib - [DEBUG]{MainThread} - wrapper() - CONFIGDIR=/root/.config/matplotlib
matplotlib - [DEBUG]{MainThread} - <module>() - interactive is False
matplotlib - [DEBUG]{MainThread} - <module>() - platform is linux
matplotlib - [DEBUG]{MainThread} - wrapper() - CACHEDIR=/root/.cache/matplotlib
matplotlib.font_manager - [DEBUG]{MainThread} - _load_fontmanager() - Using fontManager instance from /root/.cache/matplotlib/fontlist-v390.json
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1561, 1075) Path: d_price/UBER_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, olap_BBAND_dif, ma_TRIMA_50, vola_NATR, mtum_PLUS_DM, ichi_senkou_a, vola_ATR, mtum_DMP_14, NQ_per_Volume
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point  olap_BBAND_dif  ma_TRIMA_50  vola_NATR  mtum_PLUS_DM  ichi_senkou_a  vola_ATR  mtum_DMP_14  NQ_per_Volume
0  2025-04-02 09:30:00               0             NaN          NaN        NaN           NaN            NaN       NaN          NaN     477.179627
1  2025-04-02 09:45:00             100             NaN          NaN        NaN           NaN            NaN       NaN          NaN     477.179627
2  2025-04-02 10:00:00             100             NaN          NaN        NaN           NaN            NaN       NaN          NaN     477.179627
3  2025-04-02 10:15:00               0             NaN          NaN        NaN           NaN            NaN       NaN          NaN     477.179627
4  2025-04-02 10:30:00               0             NaN          NaN        NaN           NaN            NaN       NaN          NaN     477.179627
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point  olap_BBAND_dif  ma_TRIMA_50    vola_NATR  mtum_PLUS_DM  ichi_senkou_a     vola_ATR  mtum_DMP_14  NQ_per_Volume
count     1561.000000     1542.000000  1512.000000  1547.000000   1548.000000    1510.000000  1547.000000  1548.000000    1561.000000
mean        -0.512492        2.656749    82.224722     0.663065      1.720222      82.063959     0.527630     1.720222     122.257997
std         33.393439        1.973503     7.313157     0.340513      1.025082       7.309909     0.213126     1.025082     205.385753
min       -100.000000        0.530443    64.579723     0.277935      0.358561      63.482500     0.235772     0.358561     -74.464402
25%          0.000000        1.344908    76.868652     0.457631      1.052638      75.800000     0.394399     1.052638     -15.465827
50%          0.000000        2.007707    84.176325     0.565828      1.430629      83.830625     0.471907     1.430629      11.261856
75%          0.000000        3.308072    87.157016     0.719375      2.056302      86.989998     0.579107     2.056302     227.112644
max        100.000000       12.856822    92.597722     2.541488      7.152036      93.084999     1.607618     7.152036     757.830994
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
matplotlib - [DEBUG]{MainThread} - wrapper() - matplotlib data path: /opt/conda/lib/python3.10/site-packages/matplotlib/mpl-data
matplotlib - [DEBUG]{MainThread} - wrapper() - CONFIGDIR=/root/.config/matplotlib
matplotlib - [DEBUG]{MainThread} - <module>() - interactive is False
matplotlib - [DEBUG]{MainThread} - <module>() - platform is linux
matplotlib - [DEBUG]{MainThread} - wrapper() - CACHEDIR=/root/.cache/matplotlib
matplotlib.font_manager - [DEBUG]{MainThread} - _load_fontmanager() - Using fontManager instance from /root/.cache/matplotlib/fontlist-v390.json
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1561, 1075) Path: d_price/UBER_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, olap_BBAND_dif, ma_TRIMA_50, vola_NATR, mtum_PLUS_DM, ichi_senkou_a, vola_ATR, mtum_DMP_14, NQ_per_Volume
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point  olap_BBAND_dif  ma_TRIMA_50  vola_NATR  mtum_PLUS_DM  ichi_senkou_a  vola_ATR  mtum_DMP_14  NQ_per_Volume
0  2025-04-02 09:30:00               0             NaN          NaN        NaN           NaN            NaN       NaN          NaN     477.179627
1  2025-04-02 09:45:00             100             NaN          NaN        NaN           NaN            NaN       NaN          NaN     477.179627
2  2025-04-02 10:00:00             100             NaN          NaN        NaN           NaN            NaN       NaN          NaN     477.179627
3  2025-04-02 10:15:00               0             NaN          NaN        NaN           NaN            NaN       NaN          NaN     477.179627
4  2025-04-02 10:30:00               0             NaN          NaN        NaN           NaN            NaN       NaN          NaN     477.179627
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point  olap_BBAND_dif  ma_TRIMA_50    vola_NATR  mtum_PLUS_DM  ichi_senkou_a     vola_ATR  mtum_DMP_14  NQ_per_Volume
count     1561.000000     1542.000000  1512.000000  1547.000000   1548.000000    1510.000000  1547.000000  1548.000000    1561.000000
mean        -0.512492        2.656749    82.224722     0.663065      1.720222      82.063959     0.527630     1.720222     122.257997
std         33.393439        1.973503     7.313157     0.340513      1.025082       7.309909     0.213126     1.025082     205.385753
min       -100.000000        0.530443    64.579723     0.277935      0.358561      63.482500     0.235772     0.358561     -74.464402
25%          0.000000        1.344908    76.868652     0.457631      1.052638      75.800000     0.394399     1.052638     -15.465827
50%          0.000000        2.007707    84.176325     0.565828      1.430629      83.830625     0.471907     1.430629      11.261856
75%          0.000000        3.308072    87.157016     0.719375      2.056302      86.989998     0.579107     2.056302     227.112644
max        100.000000       12.856822    92.597722     2.541488      7.152036      93.084999     1.607618     7.152036     757.830994
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() -  groupby(Y_TARGET).count()                 Date
buy_sell_point      
0               1470
100               91
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
