matplotlib - [DEBUG]{MainThread} - wrapper() - matplotlib data path: /opt/conda/lib/python3.10/site-packages/matplotlib/mpl-data
matplotlib - [DEBUG]{MainThread} - wrapper() - CONFIGDIR=/root/.config/matplotlib
matplotlib - [DEBUG]{MainThread} - <module>() - interactive is False
matplotlib - [DEBUG]{MainThread} - <module>() - platform is linux
matplotlib - [DEBUG]{MainThread} - wrapper() - CACHEDIR=/root/.cache/matplotlib
matplotlib.font_manager - [DEBUG]{MainThread} - _load_fontmanager() - Using fontManager instance from /root/.cache/matplotlib/fontlist-v390.json
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1561, 1075) Path: d_price/UBER_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, olap_BBAND_dif, NQ_per_Volume, sti_CORREL, tend_PSARl_002_02, mcrh_KAMA_50_EMA_100
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point  olap_BBAND_dif  NQ_per_Volume  sti_CORREL  tend_PSARl_002_02  mcrh_KAMA_50_EMA_100
0  2025-04-03 09:30:00               0             NaN     477.179627         NaN                0.0                     0
1  2025-04-03 09:45:00               0             NaN     477.179627         NaN                0.0                     0
2  2025-04-03 10:00:00               0             NaN     477.179627         NaN                0.0                     0
3  2025-04-03 10:15:00               0             NaN     477.179627         NaN                0.0                     0
4  2025-04-03 10:30:00               0             NaN     477.179627         NaN                0.0                     0
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point  olap_BBAND_dif  NQ_per_Volume   sti_CORREL  tend_PSARl_002_02  mcrh_KAMA_50_EMA_100
count     1561.000000     1542.000000    1561.000000  1532.000000        1561.000000           1561.000000
mean        -0.640615        2.619034     115.242976     0.881361          43.478613              0.001281
std         33.198697        1.950824     200.778674     0.114870          41.206014              0.129093
min       -100.000000        0.530443     -74.464402     0.195671           0.000000             -1.000000
25%          0.000000        1.333563     -15.516376     0.850843           0.000000              0.000000
50%          0.000000        1.999191       9.167455     0.911976          65.614708              0.000000
75%          0.000000        3.220194     155.304220     0.956833          83.517501              0.000000
max        100.000000       12.856822     757.830994     0.996600          93.109910              1.000000
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() -  groupby(Y_TARGET).count()                 Date
buy_sell_point      
0               1470
100               91
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96mDataFrame head:
            Date  buy_sell_point  olap_BBAND_dif  NQ_per_Volume  sti_CORREL  tend_PSARl_002_02  mcrh_KAMA_50_EMA_100
29  1.743762e+09               0        8.024305     477.179627    0.983524           0.000000                     0
30  1.743763e+09               0        8.965404     477.179627    0.988774           0.000000                     0
31  1.743764e+09               0        9.581151     477.179627    0.990613           0.000000                     0
32  1.743764e+09               1        9.540748     477.179627    0.989956          64.019997                     0
33  1.743765e+09               0        9.635624     477.179627    0.990308          64.019997                     0[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 6)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 6)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96marr_vali sample: [[1.74376980e+09 9.41168900e+00 4.77179627e+02 9.91321000e-01
  0.00000000e+00 0.00000000e+00]
 [1.74376890e+09 9.48807500e+00 4.77179627e+02 9.90964000e-01
  6.44614110e+01 0.00000000e+00]
 [1.74376800e+09 9.48879100e+00 4.77179627e+02 9.90598000e-01
  6.43577200e+01 0.00000000e+00]
 [1.74376710e+09 9.66227900e+00 4.77179627e+02 9.90841000e-01
  6.42497090e+01 0.00000000e+00]
 [1.74376620e+09 9.59947000e+00 4.77179627e+02 9.90686000e-01
  6.41371970e+01 0.00000000e+00]
 [1.74376530e+09 9.63562400e+00 4.77179627e+02 9.90308000e-01
  6.40199970e+01 0.00000000e+00]
 [1.74376440e+09 9.54074800e+00 4.77179627e+02 9.89956000e-01
  6.40199970e+01 0.00000000e+00]
 [1.74376350e+09 9.58115100e+00 4.77179627e+02 9.90613000e-01
  0.00000000e+00 0.00000000e+00]
 [1.74376260e+09 8.96540400e+00 4.77179627e+02 9.88774000e-01
  0.00000000e+00 0.00000000e+00]
 [1.74376170e+09 8.02430500e+00 4.77179627e+02 9.83524000e-01
  0.00000000e+00 0.00000000e+00]][0m
matplotlib - [DEBUG]{MainThread} - wrapper() - matplotlib data path: /opt/conda/lib/python3.10/site-packages/matplotlib/mpl-data
matplotlib - [DEBUG]{MainThread} - wrapper() - CONFIGDIR=/root/.config/matplotlib
matplotlib - [DEBUG]{MainThread} - <module>() - interactive is False
matplotlib - [DEBUG]{MainThread} - <module>() - platform is linux
matplotlib - [DEBUG]{MainThread} - wrapper() - CACHEDIR=/root/.cache/matplotlib
matplotlib.font_manager - [DEBUG]{MainThread} - _load_fontmanager() - Using fontManager instance from /root/.cache/matplotlib/fontlist-v390.json
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1561, 1075) Path: d_price/UBER_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, olap_BBAND_dif, NQ_per_Volume, sti_CORREL, tend_PSARl_002_02, mcrh_KAMA_50_EMA_100
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point  olap_BBAND_dif  NQ_per_Volume  sti_CORREL  tend_PSARl_002_02  mcrh_KAMA_50_EMA_100
0  2025-04-03 09:30:00               0             NaN     477.179627         NaN                0.0                     0
1  2025-04-03 09:45:00               0             NaN     477.179627         NaN                0.0                     0
2  2025-04-03 10:00:00               0             NaN     477.179627         NaN                0.0                     0
3  2025-04-03 10:15:00               0             NaN     477.179627         NaN                0.0                     0
4  2025-04-03 10:30:00               0             NaN     477.179627         NaN                0.0                     0
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point  olap_BBAND_dif  NQ_per_Volume   sti_CORREL  tend_PSARl_002_02  mcrh_KAMA_50_EMA_100
count     1561.000000     1542.000000    1561.000000  1532.000000        1561.000000           1561.000000
mean        -0.640615        2.619034     115.242976     0.881361          43.478613              0.001281
std         33.198697        1.950824     200.778674     0.114870          41.206014              0.129093
min       -100.000000        0.530443     -74.464402     0.195671           0.000000             -1.000000
25%          0.000000        1.333563     -15.516376     0.850843           0.000000              0.000000
50%          0.000000        1.999191       9.167455     0.911976          65.614708              0.000000
75%          0.000000        3.220194     155.304220     0.956833          83.517501              0.000000
max        100.000000       12.856822     757.830994     0.996600          93.109910              1.000000
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() -  groupby(Y_TARGET).count()                 Date
buy_sell_point      
0               1470
100               91
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96mDataFrame head:
            Date  buy_sell_point  olap_BBAND_dif  NQ_per_Volume  sti_CORREL  tend_PSARl_002_02  mcrh_KAMA_50_EMA_100
29  1.743762e+09               0        8.024305     477.179627    0.983524           0.000000                     0
30  1.743763e+09               0        8.965404     477.179627    0.988774           0.000000                     0
31  1.743764e+09               0        9.581151     477.179627    0.990613           0.000000                     0
32  1.743764e+09               1        9.540748     477.179627    0.989956          64.019997                     0
33  1.743765e+09               0        9.635624     477.179627    0.990308          64.019997                     0[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 6)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 6)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96marr_vali sample: [[1.74376980e+09 9.41168900e+00 4.77179627e+02 9.91321000e-01
  0.00000000e+00 0.00000000e+00]
 [1.74376890e+09 9.48807500e+00 4.77179627e+02 9.90964000e-01
  6.44614110e+01 0.00000000e+00]
 [1.74376800e+09 9.48879100e+00 4.77179627e+02 9.90598000e-01
  6.43577200e+01 0.00000000e+00]
 [1.74376710e+09 9.66227900e+00 4.77179627e+02 9.90841000e-01
  6.42497090e+01 0.00000000e+00]
 [1.74376620e+09 9.59947000e+00 4.77179627e+02 9.90686000e-01
  6.41371970e+01 0.00000000e+00]
 [1.74376530e+09 9.63562400e+00 4.77179627e+02 9.90308000e-01
  6.40199970e+01 0.00000000e+00]
 [1.74376440e+09 9.54074800e+00 4.77179627e+02 9.89956000e-01
  6.40199970e+01 0.00000000e+00]
 [1.74376350e+09 9.58115100e+00 4.77179627e+02 9.90613000e-01
  0.00000000e+00 0.00000000e+00]
 [1.74376260e+09 8.96540400e+00 4.77179627e+02 9.88774000e-01
  0.00000000e+00 0.00000000e+00]
 [1.74376170e+09 8.02430500e+00 4.77179627e+02 9.83524000e-01
  0.00000000e+00 0.00000000e+00]][0m
matplotlib - [DEBUG]{MainThread} - wrapper() - matplotlib data path: /opt/conda/lib/python3.10/site-packages/matplotlib/mpl-data
matplotlib - [DEBUG]{MainThread} - wrapper() - CONFIGDIR=/root/.config/matplotlib
matplotlib - [DEBUG]{MainThread} - <module>() - interactive is False
matplotlib - [DEBUG]{MainThread} - <module>() - platform is linux
matplotlib - [DEBUG]{MainThread} - wrapper() - CACHEDIR=/root/.cache/matplotlib
matplotlib.font_manager - [DEBUG]{MainThread} - _load_fontmanager() - Using fontManager instance from /root/.cache/matplotlib/fontlist-v390.json
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1561, 1075) Path: d_price/UBER_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, olap_BBAND_dif, NQ_per_Volume, sti_CORREL, tend_PSARl_002_02, mcrh_KAMA_50_EMA_100
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point  olap_BBAND_dif  NQ_per_Volume  sti_CORREL  tend_PSARl_002_02  mcrh_KAMA_50_EMA_100
0  2025-04-03 09:30:00               0             NaN     477.179627         NaN                0.0                     0
1  2025-04-03 09:45:00               0             NaN     477.179627         NaN                0.0                     0
2  2025-04-03 10:00:00               0             NaN     477.179627         NaN                0.0                     0
3  2025-04-03 10:15:00               0             NaN     477.179627         NaN                0.0                     0
4  2025-04-03 10:30:00               0             NaN     477.179627         NaN                0.0                     0
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point  olap_BBAND_dif  NQ_per_Volume   sti_CORREL  tend_PSARl_002_02  mcrh_KAMA_50_EMA_100
count     1561.000000     1542.000000    1561.000000  1532.000000        1561.000000           1561.000000
mean        -0.640615        2.619034     115.242976     0.881361          43.478613              0.001281
std         33.198697        1.950824     200.778674     0.114870          41.206014              0.129093
min       -100.000000        0.530443     -74.464402     0.195671           0.000000             -1.000000
25%          0.000000        1.333563     -15.516376     0.850843           0.000000              0.000000
50%          0.000000        1.999191       9.167455     0.911976          65.614708              0.000000
75%          0.000000        3.220194     155.304220     0.956833          83.517501              0.000000
max        100.000000       12.856822     757.830994     0.996600          93.109910              1.000000
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() -  groupby(Y_TARGET).count()                 Date
buy_sell_point      
0               1470
100               91
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96mDataFrame head:
            Date  buy_sell_point  olap_BBAND_dif  NQ_per_Volume  sti_CORREL  tend_PSARl_002_02  mcrh_KAMA_50_EMA_100
29  1.743762e+09               0        8.024305     477.179627    0.983524           0.000000                     0
30  1.743763e+09               0        8.965404     477.179627    0.988774           0.000000                     0
31  1.743764e+09               0        9.581151     477.179627    0.990613           0.000000                     0
32  1.743764e+09               1        9.540748     477.179627    0.989956          64.019997                     0
33  1.743765e+09               0        9.635624     477.179627    0.990308          64.019997                     0[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 6)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 6)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96marr_vali sample: [[1.74376980e+09 9.41168900e+00 4.77179627e+02 9.91321000e-01
  0.00000000e+00 0.00000000e+00]
 [1.74376890e+09 9.48807500e+00 4.77179627e+02 9.90964000e-01
  6.44614110e+01 0.00000000e+00]
 [1.74376800e+09 9.48879100e+00 4.77179627e+02 9.90598000e-01
  6.43577200e+01 0.00000000e+00]
 [1.74376710e+09 9.66227900e+00 4.77179627e+02 9.90841000e-01
  6.42497090e+01 0.00000000e+00]
 [1.74376620e+09 9.59947000e+00 4.77179627e+02 9.90686000e-01
  6.41371970e+01 0.00000000e+00]
 [1.74376530e+09 9.63562400e+00 4.77179627e+02 9.90308000e-01
  6.40199970e+01 0.00000000e+00]
 [1.74376440e+09 9.54074800e+00 4.77179627e+02 9.89956000e-01
  6.40199970e+01 0.00000000e+00]
 [1.74376350e+09 9.58115100e+00 4.77179627e+02 9.90613000e-01
  0.00000000e+00 0.00000000e+00]
 [1.74376260e+09 8.96540400e+00 4.77179627e+02 9.88774000e-01
  0.00000000e+00 0.00000000e+00]
 [1.74376170e+09 8.02430500e+00 4.77179627e+02 9.83524000e-01
  0.00000000e+00 0.00000000e+00]][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - i want to chc folder: Models/TF_multi/Scalers/UBER_neg_vgood16_
matplotlib - [DEBUG]{MainThread} - wrapper() - matplotlib data path: /opt/conda/lib/python3.10/site-packages/matplotlib/mpl-data
matplotlib - [DEBUG]{MainThread} - wrapper() - CONFIGDIR=/root/.config/matplotlib
matplotlib - [DEBUG]{MainThread} - <module>() - interactive is False
matplotlib - [DEBUG]{MainThread} - <module>() - platform is linux
matplotlib - [DEBUG]{MainThread} - wrapper() - CACHEDIR=/root/.cache/matplotlib
matplotlib.font_manager - [DEBUG]{MainThread} - _load_fontmanager() - Using fontManager instance from /root/.cache/matplotlib/fontlist-v390.json
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1561, 1075) Path: d_price/UBER_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, olap_BBAND_dif, NQ_per_Volume, sti_CORREL, tend_PSARl_002_02, mcrh_KAMA_50_EMA_100
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point  olap_BBAND_dif  NQ_per_Volume  sti_CORREL  tend_PSARl_002_02  mcrh_KAMA_50_EMA_100
0  2025-04-03 09:30:00               0             NaN     477.179627         NaN                0.0                     0
1  2025-04-03 09:45:00               0             NaN     477.179627         NaN                0.0                     0
2  2025-04-03 10:00:00               0             NaN     477.179627         NaN                0.0                     0
3  2025-04-03 10:15:00               0             NaN     477.179627         NaN                0.0                     0
4  2025-04-03 10:30:00               0             NaN     477.179627         NaN                0.0                     0
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point  olap_BBAND_dif  NQ_per_Volume   sti_CORREL  tend_PSARl_002_02  mcrh_KAMA_50_EMA_100
count     1561.000000     1542.000000    1561.000000  1532.000000        1561.000000           1561.000000
mean        -0.640615        2.619034     115.242976     0.881361          43.478613              0.001281
std         33.198697        1.950824     200.778674     0.114870          41.206014              0.129093
min       -100.000000        0.530443     -74.464402     0.195671           0.000000             -1.000000
25%          0.000000        1.333563     -15.516376     0.850843           0.000000              0.000000
50%          0.000000        1.999191       9.167455     0.911976          65.614708              0.000000
75%          0.000000        3.220194     155.304220     0.956833          83.517501              0.000000
max        100.000000       12.856822     757.830994     0.996600          93.109910              1.000000
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() -  groupby(Y_TARGET).count()                 Date
buy_sell_point      
0               1470
100               91
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96mDataFrame head:
            Date  buy_sell_point  olap_BBAND_dif  NQ_per_Volume  sti_CORREL  tend_PSARl_002_02  mcrh_KAMA_50_EMA_100
29  1.743762e+09               0        8.024305     477.179627    0.983524           0.000000                     0
30  1.743763e+09               0        8.965404     477.179627    0.988774           0.000000                     0
31  1.743764e+09               0        9.581151     477.179627    0.990613           0.000000                     0
32  1.743764e+09               1        9.540748     477.179627    0.989956          64.019997                     0
33  1.743765e+09               0        9.635624     477.179627    0.990308          64.019997                     0[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 6)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 6)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96marr_vali sample: [[1.74376980e+09 9.41168900e+00 4.77179627e+02 9.91321000e-01
  0.00000000e+00 0.00000000e+00]
 [1.74376890e+09 9.48807500e+00 4.77179627e+02 9.90964000e-01
  6.44614110e+01 0.00000000e+00]
 [1.74376800e+09 9.48879100e+00 4.77179627e+02 9.90598000e-01
  6.43577200e+01 0.00000000e+00]
 [1.74376710e+09 9.66227900e+00 4.77179627e+02 9.90841000e-01
  6.42497090e+01 0.00000000e+00]
 [1.74376620e+09 9.59947000e+00 4.77179627e+02 9.90686000e-01
  6.41371970e+01 0.00000000e+00]
 [1.74376530e+09 9.63562400e+00 4.77179627e+02 9.90308000e-01
  6.40199970e+01 0.00000000e+00]
 [1.74376440e+09 9.54074800e+00 4.77179627e+02 9.89956000e-01
  6.40199970e+01 0.00000000e+00]
 [1.74376350e+09 9.58115100e+00 4.77179627e+02 9.90613000e-01
  0.00000000e+00 0.00000000e+00]
 [1.74376260e+09 8.96540400e+00 4.77179627e+02 9.88774000e-01
  0.00000000e+00 0.00000000e+00]
 [1.74376170e+09 8.02430500e+00 4.77179627e+02 9.83524000e-01
  0.00000000e+00 0.00000000e+00]][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - i want to chc folder: Models/TF_multi/Scalers/UBER_neg_vgood16_
root - [DEBUG]{MainThread} - scaler_min_max_array() - Scaler will be Saved Path: Models/TF_multi/Scalers/UBER_neg_vgood16_.scal
root - [INFO]{MainThread} - log_shapes_trains_val_data() - Training features shape SMOTE:(1538, 10, 6)	 Labels shape:(1538, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Validation features shape:(437, 10, 6)	 Labels shape:(437, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Test features shape:(275, 10, 6)		 Labels shape:(275, 1)
root - [DEBUG]{MainThread} - __init__() - [95mCreated object TF_multidimension Path from: d_price/UBER_PLAIN_stock_history_MONTH_3_AD.csv[0m
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1561, 1075) Path: d_price/UBER_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, olap_BBAND_dif, NQ_per_Volume, sti_CORREL, tend_PSARl_002_02, mcrh_KAMA_50_EMA_100, ti_chaikin_10_3, NQ_SMA_20, NQ_Close, tend_PSARs_002_02, has_preMarket, vola_RVI_14, mcrh_T3_20_TEMA_100, mtum_STOCH_RSI_d, vola_UI_14, NQ_SMA_100, volu_Chaikin_ADOSC, tend_renko_ATR, cycl_DCPERIOD, NQ_per_Close, vola_NATR, mcrh_KAMA_20_DEMA_50, olap_VMAP, sti_TOS_STDEVALL_L_2, mtum_MACD_ext_signal, mtum_INERTIA_20_14, mtum_PVOs_12_26_9, sti_TOS_STDEVALL_L_1, sti_KURT_30, mcrh_WMA_50_SMA_100, mtum_PLUS_DM, mtum_APO, mtum_PSL_12, mtum_FISHERT_9_1, sti_TOS_STDEVALL_L_3, NQ_Volume, cdl_HAMMER, olap_BBAND_LOWER, mcrh_KAMA_50_TEMA_100, mtum_FISHERTs_9_1, mtum_MACD_signal, mtum_PPO, volu_Chaikin_AD, mcrh_WMA_50_WMA_100, mcrh_WMA_50_TRIMA_100, mcrh_TEMA_50_KAMA_100, vola_THERMO_20_2_05, mtum_STOCH_k, vola_KCBe_20_2, sti_TOS_STDEVALL_LR, mtum_MACD_ext, sti_TOS_STDEVALL_U_3, ti_konk_bl, ma_KAMA_50, mcrh_DEMA_50_WMA_100
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point  olap_BBAND_dif  NQ_per_Volume  ...  sti_TOS_STDEVALL_U_3  ti_konk_bl  ma_KAMA_50  mcrh_DEMA_50_WMA_100
0  2025-04-03 09:30:00               0             NaN     477.179627  ...             94.717892         NaN         NaN                     0
1  2025-04-03 09:45:00               0             NaN     477.179627  ...             94.731095         NaN         NaN                     0
2  2025-04-03 10:00:00               0             NaN     477.179627  ...             94.744297         NaN         NaN                     0
3  2025-04-03 10:15:00               0             NaN     477.179627  ...             94.757499         NaN         NaN                     0
4  2025-04-03 10:30:00               0             NaN     477.179627  ...             94.770701         NaN         NaN                     0

[5 rows x 56 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point  olap_BBAND_dif  NQ_per_Volume   sti_CORREL  ...  sti_TOS_STDEVALL_U_3   ti_konk_bl   ma_KAMA_50  mcrh_DEMA_50_WMA_100
count     1561.000000     1542.000000    1561.000000  1532.000000  ...           1561.000000  1458.000000  1511.000000           1561.000000
mean        -0.640615        2.619034     115.242976     0.881361  ...            105.015505     5.122442    82.599618              0.000000
std         33.198697        1.950824     200.778674     0.114870  ...              5.951046    25.145017     7.469070              0.143223
min       -100.000000        0.530443     -74.464402     0.195671  ...             94.717892  -216.159024    64.512606             -1.000000
25%          0.000000        1.333563     -15.516376     0.850843  ...             99.866699    -5.571000    77.903796              0.000000
50%          0.000000        1.999191       9.167455     0.911976  ...            105.015505     3.199322    84.426312              0.000000
75%          0.000000        3.220194     155.304220     0.956833  ...            110.164312    13.456063    88.402788              0.000000
max        100.000000       12.856822     757.830994     0.996600  ...            115.313118   299.069356    92.068559              1.000000

[8 rows x 54 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() -  groupby(Y_TARGET).count()                 Date
buy_sell_point      
0               1470
100               91
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96mDataFrame head:
             Date  buy_sell_point  olap_BBAND_dif  NQ_per_Volume  ...  sti_TOS_STDEVALL_U_3  ti_konk_bl  ma_KAMA_50  mcrh_DEMA_50_WMA_100
103  1.744127e+09               0        4.690336     477.179627  ...             96.077705   -9.206589   65.230567                    -1
104  1.744191e+09               0        4.415588     477.179627  ...             96.090908   18.519468   65.235559                     0
105  1.744192e+09               0        4.238780     477.179627  ...             96.104110   13.350447   65.251318                     0
106  1.744193e+09               0        3.881922     477.179627  ...             96.117312   11.681641   65.265021                     0
107  1.744194e+09               0        3.515356     477.179627  ...             96.130514   10.221436   65.278258                     0

[5 rows x 56 columns][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 55)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 55)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96marr_vali sample: [[1744198200.0 2.929925 477.1796266086641 0.950546 64.385555 0
  -409531.277543 18102.8625 18210.25 0.0 False 44.089224 0 69.043625
  2.522277 18600.625 -409531.277595 0.918103 24.921523 0.3209012780960734
  1.481133 0 66.462491 58.740629 -0.762781 45.970272 -0.514223 66.231808
  -0.101279 0 2.845173 -0.218666 50.0 1.020928 51.24945 31843.0 0
  64.175382 0 1.138187 -0.147466 -0.331712 -18384191.45302 0 0 0 0.090004
  51.439592 65.913318 73.722987 -0.218666 96.196524 5.4853 65.32524 0]
 [1744197300.0 2.927404 477.1796266086641 0.95906 64.26912 0
  -306889.217076 18102.8625 18210.25 0.0 False 51.129644 0 48.658237
  2.720743 18600.625 -306889.21714 0.922141 24.803098 0.3209012780960734
  1.494158 0 66.463747 58.727427 -0.898143 44.698846 0.67899 66.218606
  -0.182627 0 3.064032 -0.402769 50.0 1.138187 51.236248 31843.0 0
  64.174642 0 1.112049 -0.167993 -0.610291 -17862967.11083 0 0 0 0.830002
  37.296569 65.915773 73.709785 -0.402769 96.183322 16.344702 65.317734 0]
 [1744196400.0 2.94162 477.1796266086641 0.965516 64.147834 0
  -393185.509398 18102.8625 18210.25 0.0 False 43.262335 0 19.808293
  2.877627 18600.625 -393185.509476 0.930718 23.785979 0.3209012780960734
  1.540063 0 66.464834 58.714225 -1.0027 41.635115 1.700471 66.205404
  -0.233718 0 2.734341 -0.530846 50.0 1.112049 51.223046 31843.0 0
  64.171035 0 1.254272 -0.192148 -0.803863 -18013725.561244 0 0 0 0.57
  33.580464 65.870065 73.696583 -0.530846 96.17012 18.67966 65.301639 0]
 [1744195500.0 3.044922 477.1796266086641 0.96915 64.021493 0
  -399500.871552 18102.8625 18210.25 0.0 False 34.460391 0 33.333333
  3.016881 18600.625 -399500.871646 0.918603 23.470943 0.3209012780960734
  1.563129 0 66.468792 58.701023 -1.07231 39.463247 2.449553 66.192202
  -0.391349 0 2.944675 -0.667528 41.666667 1.254272 51.209844 31843.0 0
  64.151008 0 1.153967 -0.208972 -1.009718 -18384785.167406 0 0 0
  1.035004 47.070588 65.861388 73.683381 -0.667528 96.156918 3.5594
  65.295013 0]
 [1744194600.0 3.223044 477.1796266086641 0.974149 63.889889 0
  -37558.536124 18102.8625 18210.25 0.0 False 39.772801 0 65.074927
  3.111503 18600.625 -37558.53624 0.885718 24.094424 0.3209012780960734
  1.478478 0 66.47384 58.687821 -1.106207 38.45364 2.409884 66.179
  -0.532418 0 3.171188 -0.757175 41.666667 1.153967 51.196642 31843.0 0
  64.155697 0 0.64454 -0.223509 -1.143302 -17468075.943142 0 0 0 0.090004
  71.402809 65.935744 73.670179 -0.757175 96.143716 4.067885 65.296726 0]
 [1744193700.0 3.515356 477.1796266086641 0.972427 63.752801 0
  142539.672966 18102.8625 18210.25 0.0 False 46.078039 0 96.81652
  3.280569 18600.625 142539.672825 0.88276 24.541351 0.3209012780960734
  1.50051 0 66.473507 58.674619 -1.106154 36.10127 2.434304 66.165798
  -0.752044 0 3.318198 -0.886415 41.666667 0.64454 51.18344 31843.0 0
  64.068541 0 0.005506 -0.254242 -1.33658 -16978928.918459 0 0 0 0.370003
  77.771155 65.902665 73.656977 -0.886415 96.130514 10.221436 65.278258 0]
 [1744192800.0 3.881922 477.1796266086641 0.972922 63.610001 0
  170656.570886 18102.8625 18210.25 0.0 False 37.399787 0 96.81652
  3.593274 18600.625 170656.570714 0.881222 24.40139 0.3209012780960734
  1.537625 0 66.473688 58.661417 -1.068308 32.127397 1.71114 66.152596
  -0.812223 0 3.573444 -1.005487 33.333333 0.005506 51.170238 31843.0 0
  63.950508 0 -0.902442 -0.281185 -1.51388 -17092150.891746 0 0 0
  0.550003 77.822551 65.839262 73.643775 -1.005487 96.117312 11.681641
  65.265021 0]
 [1744191900.0 4.23878 477.1796266086641 0.973874 63.540001 0
  289524.618161 18102.8625 18210.25 0.0 False 37.399787 0 98.40826
  3.817519 18600.625 289524.61795 0.865353 23.696019 0.3209012780960734
  1.529604 0 66.472666 58.648215 -0.995462 29.183342 0.009173 66.139394
  -0.907197 0 3.256014 -1.108987 41.666667 -0.902442 51.157036 31843.0 0
  63.85308 0 -2.097745 -0.294259 -1.666862 -16597838.473154 0 0 0
  1.010002 77.464155 65.797079 73.630573 -1.108987 96.10411 13.350447
  65.251318 0]
 [1744191000.0 4.415588 477.1796266086641 0.974678 63.5 0 131286.937447
  18102.8625 18210.25 0.0 True 42.085928 0 66.666667 3.964276 18600.625
  131286.937189 0.871622 22.659542 0.3209012780960734 1.565938 0 66.4738
  58.635012 -0.89278 27.066039 -3.101213 66.126191 -1.003577 0 3.506476
  -1.287159 41.666667 -2.097745 51.143833 31843.0 0 63.822925 0 -3.629806
  -0.291884 -1.931534 -16485512.438446 0 0 0 1.840004 53.862865 65.750456
  73.61737 -1.287159 96.090908 18.519468 65.235559 0]
 [1744127100.0 4.690336 477.1796266086641 0.984826 0.0 0 -372055.850726
  18102.8625 18210.25 65.563061 False 34.874494 0 42.232166 4.090061
  18600.625 -372055.851041 0.962391 21.584733 0.3209012780960734 1.474413
  0 66.481945 58.62181 -0.750567 23.584041 -8.146563 66.112989 -1.07059 0
  1.794662 -1.436922 33.333333 -3.629806 51.130631 31843.0 0 63.759352 0
  -4.274643 -0.266126 -2.152884 -17161504.15011 0 0 0 0.449997 35.656564
  65.683241 73.604168 -1.436922 96.077705 -9.206589 65.230567 -1]][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - i want to chc folder: Models/TF_multi/Scalers/UBER_neg_good9_
root - [DEBUG]{MainThread} - scaler_min_max_array() - Scaler will be Saved Path: Models/TF_multi/Scalers/UBER_neg_good9_.scal
root - [INFO]{MainThread} - log_shapes_trains_val_data() - Training features shape SMOTE:(1460, 10, 55)	 Labels shape:(1460, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Validation features shape:(416, 10, 55)	 Labels shape:(416, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Test features shape:(261, 10, 55)		 Labels shape:(261, 1)
root - [DEBUG]{MainThread} - __init__() - [95mCreated object TF_multidimension Path from: d_price/UBER_PLAIN_stock_history_MONTH_3_AD.csv[0m
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1561, 1075) Path: d_price/UBER_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, olap_BBAND_dif, NQ_per_Volume, sti_CORREL, tend_PSARl_002_02, mcrh_KAMA_50_EMA_100, ti_chaikin_10_3, NQ_SMA_20, NQ_Close, tend_PSARs_002_02, has_preMarket, vola_RVI_14, mcrh_T3_20_TEMA_100, mtum_STOCH_RSI_d, vola_UI_14, NQ_SMA_100, volu_Chaikin_ADOSC, tend_renko_ATR, cycl_DCPERIOD, NQ_per_Close, vola_NATR, mcrh_KAMA_20_DEMA_50, olap_VMAP, sti_TOS_STDEVALL_L_2, mtum_MACD_ext_signal, mtum_INERTIA_20_14, mtum_PVOs_12_26_9, sti_TOS_STDEVALL_L_1, sti_KURT_30, mcrh_WMA_50_SMA_100, mtum_PLUS_DM, mtum_APO, mtum_PSL_12, mtum_FISHERT_9_1, sti_TOS_STDEVALL_L_3, NQ_Volume, cdl_HAMMER, olap_BBAND_LOWER, mcrh_KAMA_50_TEMA_100, mtum_FISHERTs_9_1, mtum_MACD_signal, mtum_PPO, volu_Chaikin_AD, mcrh_WMA_50_WMA_100, mcrh_WMA_50_TRIMA_100, mcrh_TEMA_50_KAMA_100, vola_THERMO_20_2_05, mtum_STOCH_k, vola_KCBe_20_2, sti_TOS_STDEVALL_LR, mtum_MACD_ext, sti_TOS_STDEVALL_U_3, ti_konk_bl, ma_KAMA_50, mcrh_DEMA_50_WMA_100, ti_vortex_neg_14, vola_THERMOma_20_2_05, ti_konk_gre, sti_TOS_STDEVALL_U_2, mcrh_EMA_50_TEMA_100, ti_donchian_lower_20, ti_kelt_20_lower, mtum_STOCH_d, volu_NVI_1, mtum_DMP_14, volu_PVOL, Volume, sti_TOS_STDEVALL_U_1, mtum_STOCH_Fa_d, ma_SMA_50, vola_KCLe_20_2, vola_ATR, ichi_senkou_b, olap_MCGD_10, ti_acc_dist, mtum_td_seq_sig, mtum_MFI, ti_coppock_14_11_10, mtum_MACD_fix_signal, tend_hl, per_preMarket, tend_renko_TR, olap_SINWMA_14, mtum_QQEs_14_5_4236, vola_TRANGE, olap_SAR, mtum_STOCH_RSI_k, olap_HT_TRENDLINE, mtum_PVO_12_26_9, vola_TRUERANGE_1, mtum_STCmacd_10_12_26_05, olap_BBAND_MIDDLE, olap_SAREXT, mtum_MACD_fix, mtum_K_9_3, cdl_TAKURI, mcrh_KAMA_5_SMA_10, mcrh_DEMA_50_SMA_100, ma_TRIMA_50, mcrh_SMA_50_SMA_100, ma_SMA_20, ma_KAMA_20, ma_EMA_50, ichi_senkou_a, mcrh_T3_50_TEMA_100, mcrh_TEMA_50_SMA_100, mcrh_TRIMA_50_KAMA_100, ma_EMA_20, cdl_MATCHINGLOW, cdl_LONGLEGGEDDOJI, mtum_D_9_3, cdl_DOJI, mtum_ADX, mtum_AROON_down, mcrh_EMA_50_TRIMA_100, mcrh_WMA_50_KAMA_100
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point  olap_BBAND_dif  NQ_per_Volume  ...  mtum_ADX  mtum_AROON_down  mcrh_EMA_50_TRIMA_100  mcrh_WMA_50_KAMA_100
0  2025-04-03 09:30:00               0             NaN     477.179627  ...       NaN              NaN                      0                     0
1  2025-04-03 09:45:00               0             NaN     477.179627  ...       NaN              NaN                      0                     0
2  2025-04-03 10:00:00               0             NaN     477.179627  ...       NaN              NaN                      0                     0
3  2025-04-03 10:15:00               0             NaN     477.179627  ...       NaN              NaN                      0                     0
4  2025-04-03 10:30:00               0             NaN     477.179627  ...       NaN              NaN                      0                     0

[5 rows x 117 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point  olap_BBAND_dif  NQ_per_Volume   sti_CORREL  ...     mtum_ADX  mtum_AROON_down  mcrh_EMA_50_TRIMA_100  mcrh_WMA_50_KAMA_100
count     1561.000000     1542.000000    1561.000000  1532.000000  ...  1534.000000      1547.000000            1561.000000           1561.000000
mean        -0.640615        2.619034     115.242976     0.881361  ...    26.782390        42.150706              -0.000641              0.000000
std         33.198697        1.950824     200.778674     0.114870  ...    10.089100        35.511282               0.158113              0.143223
min       -100.000000        0.530443     -74.464402     0.195671  ...     8.049614         0.000000              -1.000000             -1.000000
25%          0.000000        1.333563     -15.516376     0.850843  ...    18.999388         7.142857               0.000000              0.000000
50%          0.000000        1.999191       9.167455     0.911976  ...    25.423980        35.714286               0.000000              0.000000
75%          0.000000        3.220194     155.304220     0.956833  ...    33.374645        78.571429               0.000000              0.000000
max        100.000000       12.856822     757.830994     0.996600  ...    61.814687       100.000000               1.000000              1.000000

[8 rows x 115 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() -  groupby(Y_TARGET).count()                 Date
buy_sell_point      
0               1470
100               91
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96mDataFrame head:
             Date  buy_sell_point  olap_BBAND_dif  NQ_per_Volume  ...   mtum_ADX  mtum_AROON_down  mcrh_EMA_50_TRIMA_100  mcrh_WMA_50_KAMA_100
103  1.744127e+09               0        4.690336     477.179627  ...  22.367169        92.857143                      0                     0
104  1.744191e+09               0        4.415588     477.179627  ...  21.205075        85.714286                      0                     0
105  1.744192e+09               0        4.238780     477.179627  ...  20.125988        78.571429                      0                     0
106  1.744193e+09               0        3.881922     477.179627  ...  19.714286        71.428571                      0                     0
107  1.744194e+09               0        3.515356     477.179627  ...  19.314576        64.285714                      0                     0

[5 rows x 117 columns][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 116)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 116)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96marr_vali sample: [[1744198200.0 2.929925 477.1796266086641 ... 28.571429 0 0]
 [1744197300.0 2.927404 477.1796266086641 ... 35.714286 0 0]
 [1744196400.0 2.94162 477.1796266086641 ... 42.857143 0 0]
 ...
 [1744191900.0 4.23878 477.1796266086641 ... 78.571429 0 0]
 [1744191000.0 4.415588 477.1796266086641 ... 85.714286 0 0]
 [1744127100.0 4.690336 477.1796266086641 ... 92.857143 0 0]][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - i want to chc folder: Models/TF_multi/Scalers/UBER_neg_reg4_
root - [DEBUG]{MainThread} - scaler_min_max_array() - Scaler will be Saved Path: Models/TF_multi/Scalers/UBER_neg_reg4_.scal
root - [INFO]{MainThread} - log_shapes_trains_val_data() - Training features shape SMOTE:(1482, 10, 116)	 Labels shape:(1482, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Validation features shape:(416, 10, 116)	 Labels shape:(416, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Test features shape:(261, 10, 116)		 Labels shape:(261, 1)
root - [DEBUG]{MainThread} - __init__() - [95mCreated object TF_multidimension Path from: d_price/UBER_PLAIN_stock_history_MONTH_3_AD.csv[0m
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1561, 1075) Path: d_price/UBER_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, olap_BBAND_dif, NQ_per_Volume, sti_CORREL, tend_PSARl_002_02, mcrh_KAMA_50_EMA_100, ti_chaikin_10_3, NQ_SMA_20, NQ_Close, tend_PSARs_002_02, has_preMarket, vola_RVI_14, mcrh_T3_20_TEMA_100, mtum_STOCH_RSI_d, vola_UI_14, NQ_SMA_100, volu_Chaikin_ADOSC, tend_renko_ATR, cycl_DCPERIOD, NQ_per_Close, vola_NATR, mcrh_KAMA_20_DEMA_50, olap_VMAP, sti_TOS_STDEVALL_L_2, mtum_MACD_ext_signal, mtum_INERTIA_20_14, mtum_PVOs_12_26_9, sti_TOS_STDEVALL_L_1, sti_KURT_30, mcrh_WMA_50_SMA_100, mtum_PLUS_DM, mtum_APO, mtum_PSL_12, mtum_FISHERT_9_1, sti_TOS_STDEVALL_L_3, NQ_Volume, cdl_HAMMER, olap_BBAND_LOWER, mcrh_KAMA_50_TEMA_100, mtum_FISHERTs_9_1, mtum_MACD_signal, mtum_PPO, volu_Chaikin_AD, mcrh_WMA_50_WMA_100, mcrh_WMA_50_TRIMA_100, mcrh_TEMA_50_KAMA_100, vola_THERMO_20_2_05, mtum_STOCH_k, vola_KCBe_20_2, sti_TOS_STDEVALL_LR, mtum_MACD_ext, sti_TOS_STDEVALL_U_3, ti_konk_bl, ma_KAMA_50, mcrh_DEMA_50_WMA_100, ti_vortex_neg_14, vola_THERMOma_20_2_05, ti_konk_gre, sti_TOS_STDEVALL_U_2, mcrh_EMA_50_TEMA_100, ti_donchian_lower_20, ti_kelt_20_lower, mtum_STOCH_d, volu_NVI_1, mtum_DMP_14, volu_PVOL, Volume, sti_TOS_STDEVALL_U_1, mtum_STOCH_Fa_d, ma_SMA_50, vola_KCLe_20_2, vola_ATR, ichi_senkou_b, olap_MCGD_10, ti_acc_dist, mtum_td_seq_sig, mtum_MFI, ti_coppock_14_11_10, mtum_MACD_fix_signal, tend_hl, per_preMarket, tend_renko_TR, olap_SINWMA_14, mtum_QQEs_14_5_4236, vola_TRANGE, olap_SAR, mtum_STOCH_RSI_k, olap_HT_TRENDLINE, mtum_PVO_12_26_9, vola_TRUERANGE_1, mtum_STCmacd_10_12_26_05, olap_BBAND_MIDDLE, olap_SAREXT, mtum_MACD_fix, mtum_K_9_3, cdl_TAKURI, mcrh_KAMA_5_SMA_10, mcrh_DEMA_50_SMA_100, ma_TRIMA_50, mcrh_SMA_50_SMA_100, ma_SMA_20, ma_KAMA_20, ma_EMA_50, ichi_senkou_a, mcrh_T3_50_TEMA_100, mcrh_TEMA_50_SMA_100, mcrh_TRIMA_50_KAMA_100, ma_EMA_20, cdl_MATCHINGLOW, cdl_LONGLEGGEDDOJI, mtum_D_9_3, cdl_DOJI, mtum_ADX, mtum_AROON_down, mcrh_EMA_50_TRIMA_100, mcrh_WMA_50_KAMA_100, ti_donchian_center_20, mcrh_EMA_20_SMA_100, mcrh_EMA_10_TEMA_50, mcrh_DEMA_50_T3_100, tend_ll, cycl_EBSW_40_10, cama_s2, mcrh_DEMA_20_WMA_100, tend_renko_brick, tend_renko_change, mcrh_DEMA_20_DEMA_100, mcrh_DEMA_10_WMA_100, volu_PVI_1, volu_OBV, cycl_HT_TRENDMODE, cycl_SINE_sine, ma_T3_10, ti_kelt_20_upper, vola_THERMOs_20_2_05, cama_s3, ti_konk_rest, ti_mass_index_9_25, ma_KAMA_10, ti_vortex_pos_14, tend_PSARaf_002_02, cdl_DRAGONFLYDOJI, vola_KCUe_20_2, ichi_isin_cloud, ma_TRIMA_20, mcrh_KAMA_5_EMA_10, mcrh_EMA_20_T3_100, mcrh_T3_10_KAMA_20, mcrh_T3_10_T3_50, olap_ALMA_10_60_085, mcrh_T3_10_TRIMA_50, mtum_ULTOSC, mcrh_T3_20_T3_100, mcrh_TRIMA_20_T3_100, mcrh_WMA_10_WMA_100, mtum_STC_10_12_26_05, mtum_SMI_5_20_5, mtum_RSI, mtum_QQEl_14_5_4236, mtum_PVOh_12_26_9, mtum_ADXR, mtum_AO_5_34, mtum_AROON_up, mtum_PLUS_DI, mtum_AR_26, mcrh_T3_10_SMA_50, mcrh_T3_10_KAMA_100, mcrh_EMA_50_ti_h20, olap_HWMA_02_01_01, mcrh_KAMA_20_KAMA_100, mcrh_KAMA_50_T3_100, mtum_J_9_3, sti_STDDEV, mcrh_KAMA_5_TRIMA_10, mcrh_SMA_10_DEMA_20, perf_CUMLOGRET_1, mcrh_SMA_20_T3_100, pcrh_wood_pp, pcrh_demark_r1, olap_SWMA_10, mcrh_SMA_50_WMA_100, mcrh_SMA_5_TEMA_20, mcrh_T3_10_DEMA_20, olap_PWMA_10, olap_MIDPOINT, mcrh_T3_10_DEMA_50, volu_PVT
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point  ...  mcrh_T3_10_DEMA_50      volu_PVT
0  2025-04-03 09:30:00               0  ...                   0           NaN
1  2025-04-03 09:45:00               0  ...                   0 -6.167347e+05
2  2025-04-03 10:00:00               0  ...                   0 -1.342025e+06
3  2025-04-03 10:15:00               0  ...                   0 -1.471885e+06
4  2025-04-03 10:30:00               0  ...                   0 -1.956809e+06

[5 rows x 188 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point  olap_BBAND_dif  ...  mcrh_T3_10_DEMA_50      volu_PVT
count     1561.000000     1542.000000  ...         1561.000000  1.560000e+03
mean        -0.640615        2.619034  ...            0.000641 -2.144031e+07
std         33.198697        1.950824  ...            0.269138  2.185404e+07
min       -100.000000        0.530443  ...           -1.000000 -6.084680e+07
25%          0.000000        1.333563  ...            0.000000 -4.122267e+07
50%          0.000000        1.999191  ...            0.000000 -2.310906e+07
75%          0.000000        3.220194  ...            0.000000 -3.964528e+06
max        100.000000       12.856822  ...            1.000000  2.270050e+07

[8 rows x 186 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() -  groupby(Y_TARGET).count()                 Date
buy_sell_point      
0               1470
100               91
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96mDataFrame head:
             Date  buy_sell_point  ...  mcrh_T3_10_DEMA_50      volu_PVT
103  1.744127e+09               0  ...                   0 -2.272888e+07
104  1.744191e+09               0  ...                   0 -1.898202e+07
105  1.744192e+09               0  ...                   0 -1.913557e+07
106  1.744193e+09               0  ...                   0 -1.913557e+07
107  1.744194e+09               0  ...                   0 -1.886002e+07

[5 rows x 188 columns][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 187)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 187)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96marr_vali sample: [[1744198200.0 2.929925 477.1796266086641 ... 65.097498 0
  -20114308.836712]
 [1744197300.0 2.927404 477.1796266086641 ... 65.097498 0
  -19699409.758438]
 [1744196400.0 2.94162 477.1796266086641 ... 65.097498 0 -20071138.381464]
 ...
 [1744191900.0 4.23878 477.1796266086641 ... 65.039499 0 -19135572.512016]
 [1744191000.0 4.415588 477.1796266086641 ... 65.054998 0
  -18982020.631639]
 [1744127100.0 4.690336 477.1796266086641 ... 65.137499 0
  -22728878.641682]][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - i want to chc folder: Models/TF_multi/Scalers/UBER_neg_low1_
root - [DEBUG]{MainThread} - scaler_min_max_array() - Scaler will be Saved Path: Models/TF_multi/Scalers/UBER_neg_low1_.scal
root - [INFO]{MainThread} - log_shapes_trains_val_data() - Training features shape SMOTE:(1476, 10, 187)	 Labels shape:(1476, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Validation features shape:(416, 10, 187)	 Labels shape:(416, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Test features shape:(261, 10, 187)		 Labels shape:(261, 1)
root - [DEBUG]{MainThread} - __init__() - [95mCreated object TF_multidimension Path from: d_price/UBER_PLAIN_stock_history_MONTH_3_AD.csv[0m
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1561, 1075) Path: d_price/UBER_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, vola_THERMO_20_2_05, tend_renko_ATR, vola_ATR, tend_renko_TR, vola_TRUERANGE_1, vola_NATR, vola_TRANGE, mtum_DMP_14, sti_CORREL
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point  ...  mtum_DMP_14  sti_CORREL
0  2025-04-03 09:30:00               0  ...          NaN         NaN
1  2025-04-03 09:45:00               0  ...          NaN         NaN
2  2025-04-03 10:00:00               0  ...          NaN         NaN
3  2025-04-03 10:15:00               0  ...          NaN         NaN
4  2025-04-03 10:30:00               0  ...          NaN         NaN

[5 rows x 11 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point  vola_THERMO_20_2_05  ...  mtum_DMP_14   sti_CORREL
count     1561.000000          1560.000000  ...  1548.000000  1532.000000
mean        -0.640615             0.337919  ...     1.725798     0.881361
std         33.198697             0.443046  ...     1.024102     0.114870
min       -100.000000             0.004997  ...     0.357494     0.195671
25%          0.000000             0.116853  ...     1.057190     0.850843
50%          0.000000             0.224998  ...     1.433941     0.911976
75%          0.000000             0.389999  ...     2.099051     0.956833
max        100.000000             5.324997  ...     7.136476     0.996600

[8 rows x 10 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() -  groupby(Y_TARGET).count()                 Date
buy_sell_point      
0               1480
100               81
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96mDataFrame head:
            Date  buy_sell_point  ...  mtum_DMP_14  sti_CORREL
29  1.743762e+09               0  ...     0.667011    0.983524
30  1.743763e+09               0  ...     0.619367    0.988774
31  1.743764e+09               0  ...     0.575127    0.990613
32  1.743764e+09               0  ...     2.514042    0.989956
33  1.743765e+09               0  ...     2.574465    0.990308

[5 rows x 11 columns][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 10)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 10)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96marr_vali sample: [[1.7437698e+09 5.9000400e-01 8.5520400e-01 9.0670600e-01 8.0999800e-01
  8.0999800e-01 1.3979440e+00 8.0999800e-01 1.8333580e+00 9.9132100e-01]
 [1.7437689e+09 5.1999700e-01 8.4289600e-01 9.1414600e-01 1.0700000e+00
  1.0700000e+00 1.4113720e+00 1.0700000e+00 1.9743850e+00 9.9096400e-01]
 [1.7437680e+09 2.0000500e-01 8.1609600e-01 9.0215700e-01 5.8999600e-01
  5.8999600e-01 1.3721020e+00 5.8999600e-01 2.1262610e+00 9.9059800e-01]
 [1.7437671e+09 7.0000000e-02 8.1013500e-01 9.2616900e-01 7.7000400e-01
  7.7000400e-01 1.4189810e+00 7.7000400e-01 2.2898190e+00 9.9084100e-01]
 [1.7437662e+09 9.7999600e-01 8.0532700e-01 9.3818200e-01 7.0000500e-01
  7.0000500e-01 1.4284130e+00 7.0000500e-01 2.3905750e+00 9.9068600e-01]
 [1.7437653e+09 8.6000100e-01 8.0840400e-01 9.5650300e-01 1.3200000e+00
  1.3200000e+00 1.4568630e+00 1.3200000e+00 2.5744650e+00 9.9030800e-01]
 [1.7437644e+09 1.9799960e+00 7.7725000e-01 9.2854200e-01 2.1699980e+00
  2.1699980e+00 1.3943120e+00 2.1699980e+00 2.5140420e+00 9.8995600e-01]
 [1.7437635e+09 7.5499700e-01 7.1678900e-01 8.3304500e-01 7.1000700e-01
  7.1000700e-01 1.2907430e+00 7.1000700e-01 5.7512700e-01 9.9061300e-01]
 [1.7437626e+09 6.8000000e-01 7.1178800e-01 8.4251000e-01 1.0250020e+00
  1.0250020e+00 1.3070270e+00 1.0250020e+00 6.1936700e-01 9.8877400e-01]
 [1.7437617e+09 4.8500100e-01 7.0620700e-01 8.2847200e-01 9.4000200e-01
  9.4000200e-01 1.2718330e+00 9.4000200e-01 6.6701100e-01 9.8352400e-01]][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - i want to chc folder: Models/TF_multi/Scalers/UBER_pos_vgood16_
root - [DEBUG]{MainThread} - scaler_min_max_array() - Scaler will be Saved Path: Models/TF_multi/Scalers/UBER_pos_vgood16_.scal
root - [INFO]{MainThread} - log_shapes_trains_val_data() - Training features shape SMOTE:(1544, 10, 10)	 Labels shape:(1544, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Validation features shape:(437, 10, 10)	 Labels shape:(437, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Test features shape:(275, 10, 10)		 Labels shape:(275, 1)
root - [DEBUG]{MainThread} - __init__() - [95mCreated object TF_multidimension Path from: d_price/UBER_PLAIN_stock_history_MONTH_3_AD.csv[0m
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1561, 1075) Path: d_price/UBER_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, vola_THERMO_20_2_05, tend_renko_ATR, vola_ATR, tend_renko_TR, vola_TRUERANGE_1, vola_NATR, vola_TRANGE, mtum_DMP_14, sti_CORREL, tend_hl, mtum_PLUS_DM, mtum_PSL_12, volu_Chaikin_ADOSC, NQ_Volume, tend_hh, vola_THERMOma_20_2_05, sti_VAR, olap_VMAP, has_preMarket, tend_lh, ichi_kijun_sen, tend_renko_brick, sti_KURT_30, vola_RVI_14, sti_STDDEV, ti_donchian_lower_20, ti_chaikin_10_3, mtum_FISHERT_9_1, NQ_per_Volume, olap_BBAND_LOWER, mtum_INERTIA_20_14, tend_PSARs_002_02, mtum_PVOh_12_26_9, ma_SMA_50, mtum_FISHERTs_9_1, olap_SINWMA_14, ti_kelt_20_lower, mcrh_KAMA_50_EMA_100, ma_EMA_50, ma_TRIMA_50
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point  ...  ma_EMA_50  ma_TRIMA_50
0  2025-04-03 09:30:00               0  ...        NaN          NaN
1  2025-04-03 09:45:00               0  ...        NaN          NaN
2  2025-04-03 10:00:00               0  ...        NaN          NaN
3  2025-04-03 10:15:00               0  ...        NaN          NaN
4  2025-04-03 10:30:00               0  ...        NaN          NaN

[5 rows x 42 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point  vola_THERMO_20_2_05  ...    ma_EMA_50  ma_TRIMA_50
count     1561.000000          1560.000000  ...  1512.000000  1512.000000
mean        -0.640615             0.337919  ...    82.617889    82.582140
std         33.198697             0.443046  ...     7.103054     7.249597
min       -100.000000             0.004997  ...    65.882094    64.590700
25%          0.000000             0.116853  ...    77.645260    77.972551
50%          0.000000             0.224998  ...    84.507878    84.303494
75%          0.000000             0.389999  ...    88.302446    88.008672
max        100.000000             5.324997  ...    92.400350    92.597722

[8 rows x 40 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() -  groupby(Y_TARGET).count()                 Date
buy_sell_point      
0               1480
100               81
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96mDataFrame head:
            Date  buy_sell_point  ...  ma_EMA_50  ma_TRIMA_50
49  1.743780e+09               0  ...  68.105156    68.136930
50  1.743781e+09               0  ...  68.003385    67.923587
51  1.743782e+09               0  ...  67.869527    67.711643
52  1.744018e+09               1  ...  67.598369    67.500553
53  1.744019e+09               0  ...  67.422354    67.293124

[5 rows x 42 columns][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 41)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 41)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96marr_vali sample: [[1744023600.0 0.489998 1.327939 1.604745 2.309998 2.309998 2.536946
  2.309998 5.120933 0.624894 60.955002 5.120933 66.666667 -1113856.820217
  31843.0 66.445 1.07943 1.343233 66.675879 False 66.445 64.108549 1.0
  4.672274 56.449583 1.158979 60.630001 -1113854.185668 0.471988
  477.1796266086641 62.26182 58.805887 0.0 -2.185124 66.826608 0.348685
  64.271219 61.647458 0 66.865184 66.377965]
 [1744022700.0 0.880001 1.322555 1.550495 1.580002 1.580002 2.391448
  1.580002 5.514851 0.644927 60.955002 5.514851 66.666667 -901000.767529
  31843.0 66.445 1.141476 1.412369 66.727329 False 66.445 64.108549 1.0
  6.118309 67.682403 1.188431 60.630001 -900997.547525 0.348685
  477.1796266086641 62.420693 58.97782 0.0 -0.127932 66.993308 0.16826
  64.36445 61.877708 0 67.012539 66.549721]
 [1744021800.0 2.847099 1.289093 1.548226 1.98 1.98 2.423268 1.98
  5.422143 0.656995 60.955002 5.422143 58.333333 -1197949.268873 31843.0
  66.445 1.168999 3.083872 66.765223 False 66.445 64.108549 1.0 5.580501
  61.011326 1.756096 60.630001 -1197945.333312 0.16826 477.1796266086641
  62.418315 57.407764 0.0 5.006626 67.11584 -0.025343 64.462404 61.925458
  0 67.101418 66.724502]
 [1744020900.0 0.827095 1.252363 1.515012 4.207096 4.207096 2.385095
  4.207096 5.839231 0.654166 60.955002 5.839231 50.0 -1228564.687069
  31843.0 66.445 0.992357 3.24795 66.822446 False 66.445 64.108549 1.0
  6.360538 52.209686 1.802207 60.630001 -1228559.876938 -0.025343
  477.1796266086641 62.491014 56.314153 0.0 11.631789 67.25204 -0.549956
  64.585272 62.157458 0 67.232496 66.906053]
 [1744020000.0 3.500004 1.126705 1.307929 3.750004 3.750004 1.968438
  3.750004 5.397685 0.868838 60.955002 5.397685 58.333333 -896754.988084
  31843.0 66.445 1.009753 3.719184 66.876577 False 66.445 63.789999 1.0
  6.993949 64.912071 1.928519 60.630001 -896749.109035 -0.549956
  477.1796266086641 62.64039 57.297973 0.0 14.305995 67.39404 -0.843517
  64.701135 62.588667 0 67.384027 67.096081]
 [1744019100.0 0.269997 1.028436 1.120077 2.629997 2.629997 1.774801
  2.629997 2.043657 0.950707 60.955002 2.043657 58.333333 -1692472.359833
  31843.0 65.690002 0.747621 2.853821 66.949247 False 65.690002 63.789999
  1.0 5.001386 55.837791 1.689326 60.630001 -1692465.174329 -0.843517
  477.1796266086641 62.691234 55.229025 65.760566 18.744839 67.47794
  -0.478923 64.794003 62.855417 0 67.422354 67.293124]
 [1744018200.0 3.754997 0.969205 1.003929 3.879997 3.879997 1.647001
  3.879997 1.910096 0.964521 60.955002 1.910096 58.333333 -1859686.705096
  31843.0 65.690002 0.797898 2.856734 67.120872 True 65.690002 63.829998
  1.0 3.667291 44.261437 1.690188 60.709999 -1859677.922814 -0.478923
  477.1796266086641 62.936695 55.425774 66.082942 25.163002 67.635656
  -0.250366 64.932914 63.113667 0 67.598369 67.500553]
 [1743781500.0 0.700005 0.985794 0.782693 1.255005 1.255005 1.211787
  1.255005 2.057026 0.974009 64.769997 2.057026 58.333333 -498770.033708
  31843.0 65.690002 0.486624 0.142712 67.54942 False 65.690002 65.7897
  1.0 2.407014 56.354143 0.377773 64.330002 -498759.299808 -0.250366
  477.1796266086641 64.18608 56.817152 66.155981 17.111338 67.838156
  -0.47181 65.030397 63.566667 0 67.869527 67.711643]
 [1743780600.0 0.425003 0.949448 0.746362 0.470001 0.470001 1.139309
  0.470001 2.215259 0.979274 64.769997 2.215259 66.666667 303444.752816
  31843.0 65.690002 0.464163 0.180727 67.722408 False 65.690002 67.049999
  1.0 1.224741 61.092881 0.42512 64.019997 303457.872028 -0.47181
  477.1796266086641 64.17734 57.04743 66.232064 1.840912 67.977756
  -0.876288 65.033133 63.618667 0 68.003385 67.923587]
 [1743779700.0 0.409996 0.943621 0.76762 0.749603 0.749603 1.175889
  0.749603 2.229078 0.982265 64.769997 2.229078 66.666667 22294.848746
  31843.0 65.690002 0.468285 0.105285 67.781327 False 65.690002 67.052498
  1.0 0.297677 58.148265 0.324476 64.019997 22310.883338 -0.876288
  477.1796266086641 64.086773 57.624009 66.311316 -1.976073 68.105156
  -1.000473 65.041849 63.510667 0 68.105156 68.13693]][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - i want to chc folder: Models/TF_multi/Scalers/UBER_pos_good9_
root - [DEBUG]{MainThread} - scaler_min_max_array() - Scaler will be Saved Path: Models/TF_multi/Scalers/UBER_pos_good9_.scal
root - [INFO]{MainThread} - log_shapes_trains_val_data() - Training features shape SMOTE:(1516, 10, 41)	 Labels shape:(1516, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Validation features shape:(432, 10, 41)	 Labels shape:(432, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Test features shape:(271, 10, 41)		 Labels shape:(271, 1)
root - [DEBUG]{MainThread} - __init__() - [95mCreated object TF_multidimension Path from: d_price/UBER_PLAIN_stock_history_MONTH_3_AD.csv[0m
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1561, 1075) Path: d_price/UBER_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, vola_THERMO_20_2_05, tend_renko_ATR, vola_ATR, tend_renko_TR, vola_TRUERANGE_1, vola_NATR, vola_TRANGE, mtum_DMP_14, sti_CORREL, tend_hl, mtum_PLUS_DM, mtum_PSL_12, volu_Chaikin_ADOSC, NQ_Volume, tend_hh, vola_THERMOma_20_2_05, sti_VAR, olap_VMAP, has_preMarket, tend_lh, ichi_kijun_sen, tend_renko_brick, sti_KURT_30, vola_RVI_14, sti_STDDEV, ti_donchian_lower_20, ti_chaikin_10_3, mtum_FISHERT_9_1, NQ_per_Volume, olap_BBAND_LOWER, mtum_INERTIA_20_14, tend_PSARs_002_02, mtum_PVOh_12_26_9, ma_SMA_50, mtum_FISHERTs_9_1, olap_SINWMA_14, ti_kelt_20_lower, mcrh_KAMA_50_EMA_100, ma_EMA_50, ma_TRIMA_50, mtum_ADXR, ma_T3_10, olap_ALMA_10_60_085, mtum_td_seq_sig, ti_konk_gre, ma_TRIMA_10, ma_TRIMA_20, ma_WMA_20, ma_SMA_20, ti_donchian_center_20, trad_r3, mtum_ADX, ma_EMA_20, olap_BBAND_MIDDLE, ma_DEMA_10, volu_PVOL, sti_TOS_STDEVALL_U_1, Volume, cama_pp, sti_TOS_STDEVALL_L_3, sti_LINEARREG_INTERCEPT, olap_VWMA_10, olap_SWMA_10, olap_HT_TRENDLINE, vola_KCLe_20_2, vola_HWM, tend_ll, ma_DEMA_5, vola_HWL, mtum_STOCH_Fa_d, mtum_K_9_3, sti_TOS_STDEVALL_U_3, sti_TOS_STDEVALL_U_2, mtum_D_9_3, olap_HWMA_02_01_01, olap_JMA_7_0, olap_MCGD_10, mtum_STOCH_k, sti_TOS_STDEVALL_L_2, sti_TOS_STDEVALL_L_1, mtum_STOCH_RSI_d, sti_TOS_STDEVALL_LR, High, ti_donchian_upper_20, perf_CUMLOGRET_1, olap_MIDPOINT, mtum_STOCH_d, olap_MIDPRICE, olap_SAR, mtum_MFI, trad_r1, ma_EMA_5, fibo_r1, ma_KAMA_10, ti_hma_20, ma_EMA_10, ma_DEMA_20, ichi_senkou_b, ichi_senkou_a, vola_KCBe_20_2, fibo_s1, fibo_r2, fibo_pp, ma_KAMA_50, demark_s1, cycl_DCPERIOD, clas_s3, clas_s2, clas_s1, cama_s2, volu_NVI_1, volu_OBV, NQ_SMA_100, ma_KAMA_20, tend_PSARaf_002_02, ma_SMA_10, mcrh_DEMA_50_DEMA_100, ti_kelt_20_upper, ti_konk_rest, ti_supertrend_20, mcrh_SMA_50_SMA_100, ma_SMA_5, trad_pp, ti_vortex_neg_14, trad_s2, ma_T3_5, ma_WMA_10, trad_s3, ma_TEMA_20, ma_TEMA_10
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point  ...  ma_TEMA_20  ma_TEMA_10
0  2025-04-03 09:30:00               0  ...         NaN         NaN
1  2025-04-03 09:45:00               0  ...         NaN         NaN
2  2025-04-03 10:00:00               0  ...         NaN         NaN
3  2025-04-03 10:15:00               0  ...         NaN         NaN
4  2025-04-03 10:30:00               0  ...         NaN         NaN

[5 rows x 132 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point  vola_THERMO_20_2_05  ...   ma_TEMA_20   ma_TEMA_10
count     1561.000000          1560.000000  ...  1504.000000  1534.000000
mean        -0.640615             0.337919  ...    83.109118    82.751220
std         33.198697             0.443046  ...     7.022838     7.391963
min       -100.000000             0.004997  ...    63.585428    62.995169
25%          0.000000             0.116853  ...    78.615430    78.024835
50%          0.000000             0.224998  ...    84.334551    84.244244
75%          0.000000             0.389999  ...    88.296882    88.302234
max        100.000000             5.324997  ...    93.712312    93.611528

[8 rows x 130 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() -  groupby(Y_TARGET).count()                 Date
buy_sell_point      
0               1480
100               81
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96mDataFrame head:
             Date  buy_sell_point  ...  ma_TEMA_20  ma_TEMA_10
103  1.744127e+09               0  ...   64.468957   64.285488
104  1.744191e+09               0  ...   64.817825   65.108224
105  1.744192e+09               0  ...   65.073770   65.606473
106  1.744193e+09               0  ...   65.290229   65.941790
107  1.744194e+09               0  ...   65.541479   66.280292

[5 rows x 132 columns][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 131)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 131)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96marr_vali sample: [[1744198200.0 0.090004 0.918103 ... 65.309995 65.781858 66.129873]
 [1744197300.0 0.830002 0.922141 ... 64.361661 65.762675 66.204136]
 [1744196400.0 0.57 0.930718 ... 63.111664 65.595647 65.993102]
 ...
 [1744191900.0 1.010002 0.865353 ... 63.12266 65.07377 65.606473]
 [1744191000.0 1.840004 0.871622 ... 62.320005 64.817825 65.108224]
 [1744127100.0 0.449997 0.962391 ... 61.959999 64.468957 64.285488]][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - i want to chc folder: Models/TF_multi/Scalers/UBER_pos_reg4_
root - [DEBUG]{MainThread} - scaler_min_max_array() - Scaler will be Saved Path: Models/TF_multi/Scalers/UBER_pos_reg4_.scal
root - [INFO]{MainThread} - log_shapes_trains_val_data() - Training features shape SMOTE:(1476, 10, 131)	 Labels shape:(1476, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Validation features shape:(416, 10, 131)	 Labels shape:(416, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Test features shape:(261, 10, 131)		 Labels shape:(261, 1)
root - [DEBUG]{MainThread} - __init__() - [95mCreated object TF_multidimension Path from: d_price/UBER_PLAIN_stock_history_MONTH_3_AD.csv[0m
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1561, 1075) Path: d_price/UBER_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, vola_THERMO_20_2_05, tend_renko_ATR, vola_ATR, tend_renko_TR, vola_TRUERANGE_1, vola_NATR, vola_TRANGE, mtum_DMP_14, sti_CORREL, tend_hl, mtum_PLUS_DM, mtum_PSL_12, volu_Chaikin_ADOSC, NQ_Volume, tend_hh, vola_THERMOma_20_2_05, sti_VAR, olap_VMAP, has_preMarket, tend_lh, ichi_kijun_sen, tend_renko_brick, sti_KURT_30, vola_RVI_14, sti_STDDEV, ti_donchian_lower_20, ti_chaikin_10_3, mtum_FISHERT_9_1, NQ_per_Volume, olap_BBAND_LOWER, mtum_INERTIA_20_14, tend_PSARs_002_02, mtum_PVOh_12_26_9, ma_SMA_50, mtum_FISHERTs_9_1, olap_SINWMA_14, ti_kelt_20_lower, mcrh_KAMA_50_EMA_100, ma_EMA_50, ma_TRIMA_50, mtum_ADXR, ma_T3_10, olap_ALMA_10_60_085, mtum_td_seq_sig, ti_konk_gre, ma_TRIMA_10, ma_TRIMA_20, ma_WMA_20, ma_SMA_20, ti_donchian_center_20, trad_r3, mtum_ADX, ma_EMA_20, olap_BBAND_MIDDLE, ma_DEMA_10, volu_PVOL, sti_TOS_STDEVALL_U_1, Volume, cama_pp, sti_TOS_STDEVALL_L_3, sti_LINEARREG_INTERCEPT, olap_VWMA_10, olap_SWMA_10, olap_HT_TRENDLINE, vola_KCLe_20_2, vola_HWM, tend_ll, ma_DEMA_5, vola_HWL, mtum_STOCH_Fa_d, mtum_K_9_3, sti_TOS_STDEVALL_U_3, sti_TOS_STDEVALL_U_2, mtum_D_9_3, olap_HWMA_02_01_01, olap_JMA_7_0, olap_MCGD_10, mtum_STOCH_k, sti_TOS_STDEVALL_L_2, sti_TOS_STDEVALL_L_1, mtum_STOCH_RSI_d, sti_TOS_STDEVALL_LR, High, ti_donchian_upper_20, perf_CUMLOGRET_1, olap_MIDPOINT, mtum_STOCH_d, olap_MIDPRICE, olap_SAR, mtum_MFI, trad_r1, ma_EMA_5, fibo_r1, ma_KAMA_10, ti_hma_20, ma_EMA_10, ma_DEMA_20, ichi_senkou_b, ichi_senkou_a, vola_KCBe_20_2, fibo_s1, fibo_r2, fibo_pp, ma_KAMA_50, demark_s1, cycl_DCPERIOD, clas_s3, clas_s2, clas_s1, cama_s2, volu_NVI_1, volu_OBV, NQ_SMA_100, ma_KAMA_20, tend_PSARaf_002_02, ma_SMA_10, mcrh_DEMA_50_DEMA_100, ti_kelt_20_upper, ti_konk_rest, ti_supertrend_20, mcrh_SMA_50_SMA_100, ma_SMA_5, trad_pp, ti_vortex_neg_14, trad_s2, ma_T3_5, ma_WMA_10, trad_s3, ma_TEMA_20, ma_TEMA_10, vola_KCUe_20_2, ti_konk_bro, wood_s2, wood_r3, wood_pp, volu_PVI_1, ti_konk_bl, vola_THERMOs_20_2_05, volu_Chaikin_AD, trad_s1, ti_mass_index_9_25, ti_acc_dist, ti_vortex_pos_14, trad_r2, ti_force_index_13, Close, tend_PSARl_002_02, clas_r2, mcrh_DEMA_10_WMA_100, ma_TRIMA_5, ma_TEMA_5, ma_KAMA_5, ichi_tenkan_sen, ichi_isin_cloud, fibo_s3, fibo_s2, demark_r1, cycl_EBSW_40_10, clas_r3, clas_r1, mcrh_DEMA_50_T3_100, clas_pp, cdl_LONGLEGGEDDOJI, cdl_DOJI, cama_s1, cama_r3, cama_r1, Open, NQ_per_Close, NQ_SMA_20, NQ_Close, Low, mcrh_DEMA_20_WMA_100, mcrh_EMA_10_TEMA_50, sti_TSF, mtum_AROON_up, sti_LINEARREG, per_preMarket, olap_SSF_10_2, olap_PWMA_10, mtum_QQEs_14_5_4236, mtum_QQEl_14_5_4236, mtum_PGO_14, mtum_MACD_ext_signal, mtum_MACD_ext, mtum_J_9_3, mtum_CFO_9, mcrh_WMA_10_WMA_100, mcrh_EMA_20_T3_100, mcrh_TRIMA_20_T3_100, mcrh_T3_20_TEMA_100, mcrh_T3_10_TRIMA_50, mcrh_T3_10_SMA_50, mcrh_T3_10_KAMA_20, mcrh_T3_10_KAMA_100, mcrh_T3_10_DEMA_50, mcrh_SMA_5_TEMA_20, mcrh_SMA_20_T3_100, mcrh_SMA_20_SMA_50, mcrh_KAMA_50_T3_100, wood_s3
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point  ...  mcrh_KAMA_50_T3_100    wood_s3
0  2025-04-03 09:30:00               0  ...                    0        NaN
1  2025-04-03 09:45:00               0  ...                    0  70.226002
2  2025-04-03 10:00:00               0  ...                    0  70.218197
3  2025-04-03 10:15:00               0  ...                    0  69.635006
4  2025-04-03 10:30:00               0  ...                    0  70.480003

[5 rows x 203 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point  vola_THERMO_20_2_05  ...  mcrh_KAMA_50_T3_100      wood_s3
count     1561.000000          1560.000000  ...          1561.000000  1560.000000
mean        -0.640615             0.337919  ...             0.000000    81.777460
std         33.198697             0.443046  ...             0.087706     7.702622
min       -100.000000             0.004997  ...            -1.000000    57.179358
25%          0.000000             0.116853  ...             0.000000    76.943213
50%          0.000000             0.224998  ...             0.000000    83.606648
75%          0.000000             0.389999  ...             0.000000    87.575259
max        100.000000             5.324997  ...             1.000000    93.174999

[8 rows x 201 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() -  groupby(Y_TARGET).count()                 Date
buy_sell_point      
0               1480
100               81
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96mDataFrame head:
             Date  buy_sell_point  ...  mcrh_KAMA_50_T3_100    wood_s3
103  1.744127e+09               0  ...                    0  61.810001
104  1.744191e+09               0  ...                    0  62.510006
105  1.744192e+09               0  ...                    0  63.074993
106  1.744193e+09               0  ...                    0  65.245003
107  1.744194e+09               0  ...                    0  64.608597

[5 rows x 203 columns][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 202)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 202)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96marr_vali sample: [[1744198200.0 0.090004 0.918103 ... 0 0 65.347496]
 [1744197300.0 0.830002 0.922141 ... 0 0 64.509998]
 [1744196400.0 0.57 0.930718 ... 0 0 62.867496]
 ...
 [1744191900.0 1.010002 0.865353 ... 0 0 63.074993]
 [1744191000.0 1.840004 0.871622 ... 0 0 62.510006]
 [1744127100.0 0.449997 0.962391 ... 0 0 61.810001]][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - i want to chc folder: Models/TF_multi/Scalers/UBER_pos_low1_
root - [DEBUG]{MainThread} - scaler_min_max_array() - Scaler will be Saved Path: Models/TF_multi/Scalers/UBER_pos_low1_.scal
root - [INFO]{MainThread} - log_shapes_trains_val_data() - Training features shape SMOTE:(1484, 10, 202)	 Labels shape:(1484, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Validation features shape:(416, 10, 202)	 Labels shape:(416, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Test features shape:(261, 10, 202)		 Labels shape:(261, 1)
root - [DEBUG]{MainThread} - __init__() - [95mCreated object TF_multidimension Path from: d_price/UBER_PLAIN_stock_history_MONTH_3_AD.csv[0m
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1561, 1075) Path: d_price/PYPL_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, mtum_DMP_14, mtum_PLUS_DM, vola_NATR, sti_STDDEV, vola_ATR, mtum_APO, mtum_MACD_ext, olap_BBAND_dif, sti_VAR, vola_THERMOma_20_2_05, mtum_MACD_ext_signal, mtum_PPO, mcrh_WMA_50_TEMA_100, NQ_per_Volume
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point  ...  mcrh_WMA_50_TEMA_100  NQ_per_Volume
0  2025-04-03 09:30:00            -100  ...                     0     477.179627
1  2025-04-03 09:45:00               0  ...                     0     477.179627
2  2025-04-03 10:00:00               0  ...                     0     477.179627
3  2025-04-03 10:15:00               0  ...                     0     477.179627
4  2025-04-03 10:30:00             100  ...                     0     477.179627

[5 rows x 16 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point  mtum_DMP_14  ...  mcrh_WMA_50_TEMA_100  NQ_per_Volume
count     1561.000000  1548.000000  ...           1561.000000    1561.000000
mean        -0.768738     1.143283  ...             -0.001922     115.242976
std         30.372448     0.779220  ...              0.091267     200.778674
min       -100.000000     0.296354  ...             -1.000000     -74.464402
25%          0.000000     0.666661  ...              0.000000     -15.516376
50%          0.000000     0.915122  ...              0.000000       9.167455
75%          0.000000     1.336073  ...              0.000000     155.304220
max        100.000000     5.816853  ...              1.000000     757.830994

[8 rows x 15 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() -  groupby(Y_TARGET).count()                 Date
buy_sell_point      
0               1483
100               78
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96mDataFrame head:
            Date  buy_sell_point  ...  mcrh_WMA_50_TEMA_100  NQ_per_Volume
33  1.743765e+09               0  ...                     0     477.179627
34  1.743766e+09               0  ...                     0     477.179627
35  1.743767e+09               0  ...                     0     477.179627
36  1.743768e+09               0  ...                     0     477.179627
37  1.743769e+09               1  ...                     0     477.179627

[5 rows x 16 columns][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 15)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 15)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96marr_vali sample: [[ 1.74377340e+09  1.58117000e+00  1.58117000e+00  1.02160100e+00
   1.01379000e-01  6.09587000e-01 -7.40714000e-01 -7.40714000e-01
   4.15436900e+00  1.02780000e-02  3.35264000e-01 -1.30737600e+00
  -1.23136200e+00  0.00000000e+00  4.77179627e+02]
 [ 1.74377250e+09  1.56269400e+00  1.56269400e+00  1.03579900e+00
   1.28904000e-01  6.18787000e-01 -9.83525000e-01 -9.83525000e-01
   4.56086800e+00  1.66160000e-02  3.52671000e-01 -1.36891700e+00
  -1.63226700e+00  0.00000000e+00  4.77179627e+02]
 [ 1.74377160e+09  1.68290100e+00  1.68290100e+00  1.05183500e+00
   1.44028000e-01  6.25632000e-01 -1.18083300e+00 -1.18083300e+00
   4.99188000e+00  2.07440000e-02  3.70858000e-01 -1.38930100e+00
  -1.95656000e+00  0.00000000e+00  4.77179627e+02]
 [ 1.74377070e+09  1.64004800e+00  1.64004800e+00  1.06214600e+00
   1.62801000e-01  6.34526000e-01 -1.34576900e+00 -1.34576900e+00
   5.38334200e+00  2.65040000e-02  3.93054000e-01 -1.36816100e+00
  -2.22539500e+00  0.00000000e+00  4.77179627e+02]
 [ 1.74376980e+09  1.76620500e+00  1.76620500e+00  1.09158800e+00
   1.43861000e-01  6.50259000e-01 -1.46692300e+00 -1.46692300e+00
   5.62391100e+00  2.06960000e-02  4.18638000e-01 -1.30687100e+00
  -2.42168700e+00  0.00000000e+00  4.77179627e+02]
 [ 1.74376890e+09  1.84822200e+00  1.84822200e+00  1.10843100e+00
   1.46710000e-01  6.58741000e-01 -1.62272400e+00 -1.62272400e+00
   5.78744900e+00  2.15240000e-02  4.51127000e-01 -1.21163900e+00
  -2.67391000e+00  0.00000000e+00  4.77179627e+02]
 [ 1.74376800e+09  1.99039300e+00  1.99039300e+00  1.10912900e+00
   2.64469000e-01  6.63259000e-01 -1.56038400e+00 -1.56038400e+00
   5.94515800e+00  6.99440000e-02  4.95403000e-01 -1.08083000e+00
  -2.56598300e+00  0.00000000e+00  4.77179627e+02]
 [ 1.74376710e+09  2.14350000e+00  2.14350000e+00  1.13022500e+00
   4.97588000e-01  6.71241000e-01 -1.48442300e+00 -1.48442300e+00
   6.16602700e+00  2.47594000e-01  5.34919000e-01 -9.37810000e-01
  -2.43719900e+00  0.00000000e+00  4.77179627e+02]
 [ 1.74376620e+09  1.98530800e+00  1.98530800e+00  1.13437900e+00
   6.39457000e-01  6.75182000e-01 -1.38109000e+00 -1.38109000e+00
   6.28235300e+00  4.08906000e-01  5.59648000e-01 -7.88820000e-01
  -2.26373200e+00  0.00000000e+00  4.77179627e+02]
 [ 1.74376530e+09  2.13802400e+00  2.13802400e+00  1.15181500e+00
   5.37544000e-01  6.84812000e-01 -1.29458100e+00 -1.29458100e+00
   6.44014900e+00  2.88954000e-01  5.76453000e-01 -6.35761000e-01
  -2.11841400e+00  0.00000000e+00  4.77179627e+02]][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - i want to chc folder: Models/TF_multi/Scalers/PYPL_neg_vgood16_
root - [DEBUG]{MainThread} - scaler_min_max_array() - Scaler will be Saved Path: Models/TF_multi/Scalers/PYPL_neg_vgood16_.scal
root - [INFO]{MainThread} - log_shapes_trains_val_data() - Training features shape SMOTE:(1556, 10, 15)	 Labels shape:(1556, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Validation features shape:(436, 10, 15)	 Labels shape:(436, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Test features shape:(274, 10, 15)		 Labels shape:(274, 1)
root - [DEBUG]{MainThread} - __init__() - [95mCreated object TF_multidimension Path from: d_price/PYPL_PLAIN_stock_history_MONTH_3_AD.csv[0m
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1561, 1075) Path: d_price/PYPL_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, mtum_DMP_14, mtum_PLUS_DM, vola_NATR, sti_STDDEV, vola_ATR, mtum_APO, mtum_MACD_ext, olap_BBAND_dif, sti_VAR, vola_THERMOma_20_2_05, mtum_MACD_ext_signal, mtum_PPO, mcrh_WMA_50_TEMA_100, NQ_per_Volume, tend_renko_brick, mtum_MACD_signal, tend_renko_TR, tend_renko_ATR, vola_TRUERANGE_1, mtum_STCmacd_10_12_26_05, mtum_MACD_fix, vola_THERMO_20_2_05, NQ_Volume, mtum_MACD_fix_signal, vola_TRANGE, mtum_AO_5_34, ti_chaikin_10_3, mtum_BIAS_SMA_26, mtum_MACD, ma_TRIMA_50, ti_mass_index_9_25, ma_KAMA_50, ti_coppock_14_11_10, volu_NVI_1, volu_Chaikin_ADOSC, has_preMarket, ichi_senkou_b, volu_Chaikin_AD, volu_PVI_1, ichi_senkou_a, mcrh_TEMA_10_KAMA_50, ti_donchian_lower_20, cdl_INVERTEDHAMMER, ti_acc_dist, ma_SMA_50
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point  ...   ti_acc_dist  ma_SMA_50
0  2025-04-03 09:30:00            -100  ... -1.326660e+06        NaN
1  2025-04-03 09:45:00               0  ... -2.305083e+06        NaN
2  2025-04-03 10:00:00               0  ... -3.019560e+06        NaN
3  2025-04-03 10:15:00               0  ... -2.767432e+06        NaN
4  2025-04-03 10:30:00             100  ... -3.395097e+06        NaN

[5 rows x 47 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point  mtum_DMP_14  ...   ti_acc_dist    ma_SMA_50
count     1561.000000  1548.000000  ...  1.561000e+03  1512.000000
mean        -0.768738     1.143283  ... -9.846664e+06    68.506632
std         30.372448     0.779220  ...  3.052416e+06     4.844958
min       -100.000000     0.296354  ... -1.496397e+07    58.471936
25%          0.000000     0.666661  ... -1.215555e+07    64.892405
50%          0.000000     0.915122  ... -1.049147e+07    70.738336
75%          0.000000     1.336073  ... -8.304676e+06    72.308356
max        100.000000     5.816853  ... -1.326660e+06    74.834338

[8 rows x 45 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() -  groupby(Y_TARGET).count()                 Date
buy_sell_point      
0               1483
100               78
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96mDataFrame head:
            Date  buy_sell_point  ...   ti_acc_dist  ma_SMA_50
77  1.744041e+09               0  ... -9.528224e+06  58.724278
78  1.744105e+09               0  ... -7.968506e+06  58.755678
79  1.744106e+09               0  ... -7.607239e+06  58.800978
80  1.744106e+09               1  ... -7.632238e+06  58.856578
81  1.744107e+09               1  ... -7.394857e+06  58.913098

[5 rows x 47 columns][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 46)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 46)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96marr_vali sample: [[1744111800.0 2.929966 2.929966 1.283941 0.316291 0.773382 0.827522
  0.827522 4.031455 0.10004 0.463409 0.539774 1.400562 0
  477.1796266086641 1.0 0.347741 0.59 0.714265 0.59 0.440775 0.420028
  0.224998 31843.0 0.329712 0.59 1.398757 -12647.874663 0.019463 0.440778
  58.618128 21.939754 58.896703 5.978039 1007.333127 -12647.904025 False
  59.275 -8509400.088973 988.555989 58.664999 0 58.080002 0
  -8509400.088973 58.990698]
 [1744110900.0 2.913042 2.913042 1.31533 0.453542 0.787488 0.714221
  0.714221 4.075366 0.205701 0.488505 0.470888 1.209818 0
  477.1796266086641 1.0 0.324481 0.475002 0.743112 0.475002 0.442832
  0.421524 0.224899 31843.0 0.307133 0.475002 1.65714 31856.215823
  0.014137 0.442836 58.610772 21.997006 58.889216 5.923805 1006.72347
  31856.179936 False 59.275 -8606386.196573 988.555989 58.664999 0
  57.470001 0 -8606386.196573 58.981998]
 [1744110000.0 3.137122 3.137122 1.353219 0.3963 0.811525 0.66717 0.66717
  4.34674 0.157054 0.516253 0.405225 1.13174 0 477.1796266086641 1.0
  0.294893 0.509903 0.760804 0.509903 0.476181 0.452212 0.510098 31843.0
  0.278535 0.509903 1.85064 208998.47274 0.017289 0.476185 58.60707
  22.173359 58.883578 5.922601 1006.72347 208998.428877 False 59.275
  -8414369.83446 988.722743 58.664999 0 57.220001 100 -8414369.83446
  58.972398]
 [1744109100.0 3.378439 3.378439 1.387281 0.281957 0.834727 0.659742
  0.659742 4.428825 0.0795 0.516901 0.337735 1.120694 0 477.1796266086641
  1.0 0.24957 0.779999 0.819654 0.779999 0.501638 0.475234 0.549999
  31843.0 0.235116 0.779999 1.966354 446222.714061 0.022099 0.501643
  58.607638 22.382909 58.877448 5.821807 1006.72347 446222.660451 False
  59.275 -8120527.184252 989.055129 58.664999 0 57.220001 0
  -8120527.184252 58.963398]
 [1744108200.0 3.638319 3.638319 1.380285 0.156368 0.838937 0.559646
  0.559646 4.381289 0.024451 0.513417 0.266486 0.951327 0
  477.1796266086641 1.0 0.186551 0.549999 0.846192 0.549999 0.50647
  0.478638 0.079998 31843.0 0.175086 0.549999 1.858633 698399.306226
  0.033183 0.506476 58.614221 22.718331 58.86889 5.876102 1007.72709
  698399.240703 False 59.275 -7778358.097237 989.055129 58.664999 0
  57.220001 0 -7778358.097237 58.949098]
 [1744107300.0 3.832038 3.832038 1.411488 0.906187 0.861163 0.478171
  0.478171 4.138149 0.821174 0.55904 0.199857 0.814114 0
  477.1796266086641 1.0 0.10657 0.540001 0.886961 0.540001 0.443162
  0.41793 0.200001 31843.0 0.099198 0.540001 1.392545 893499.618013
  0.038747 0.443169 58.624197 23.142279 58.84697 5.278158 1008.105715
  893499.53793 False 59.275 -7394857.126167 989.055129 58.664999 0
  57.220001 0 -7394857.126167 58.913098]
 [1744106400.0 3.911425 3.911425 1.458219 1.151913 0.885868 0.428543
  0.428543 3.647902 1.326904 0.596834 0.139961 0.730988 0
  477.1796266086641 1.0 0.02242 0.439999 0.995773 0.439999 0.332392
  0.312703 0.260002 31843.0 0.019515 0.439999 0.979339 873577.487546
  0.036244 0.3324 58.636473 23.717648 58.810346 4.333275 1008.105715
  873577.389666 False 59.275 -7632238.493493 988.625497 58.275 0
  57.220001 0 -7632238.493493 58.856578]
 [1744105500.0 4.212303 4.212303 1.513305 1.179533 0.920165 0.297453
  0.297453 3.144533 1.391299 0.63229 0.087278 0.507582 0
  477.1796266086641 1.0 -0.055075 0.700001 1.094234 0.700001 0.212748
  0.199292 1.279999 31843.0 -0.053781 0.700001 0.55506 815380.568203
  0.037591 0.212758 58.652535 24.512039 58.778003 3.479478 1008.196169
  815380.448572 False 59.275 -7607239.297842 988.625497 57.852499 1
  57.220001 0 -7607239.297842 58.800978]
 [1744104600.0 4.127095 4.127095 1.548416 0.907512 0.937101 0.225498
  0.225498 2.527831 0.823578 0.56411 0.039806 0.385526 0
  477.1796266086641 1.0 -0.122033 2.059998 1.149619 2.059998 0.051345
  0.046951 2.019997 31843.0 -0.11705 2.059998 0.167633 472481.931368
  0.034687 0.051356 58.67012 25.178625 58.750693 2.16597 1007.72525
  472481.785152 True 59.535 -7968506.266578 988.625497 57.967501 1
  57.220001 0 -7968506.266578 58.755678]
 [1744040700.0 2.269183 2.269183 1.453236 0.143835 0.850724 0.207549
  0.207549 1.73751 0.020689 0.410858 -0.010233 0.355876 0
  477.1796266086641 1.0 -0.165381 0.470001 1.165388 0.470001 -0.126393
  -0.120291 0.379997 31843.0 -0.15805 0.470001 -0.065734 -189725.301072
  0.00376 -0.126379 58.690297 25.618486 58.732981 0.892566 1007.72525
  -189725.47978 False 60.632399 -9528223.898411 985.243195 58.92495 0
  57.220001 0 -9528223.898411 58.724278]][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - i want to chc folder: Models/TF_multi/Scalers/PYPL_neg_good9_
root - [DEBUG]{MainThread} - scaler_min_max_array() - Scaler will be Saved Path: Models/TF_multi/Scalers/PYPL_neg_good9_.scal
root - [INFO]{MainThread} - log_shapes_trains_val_data() - Training features shape SMOTE:(1508, 10, 46)	 Labels shape:(1508, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Validation features shape:(424, 10, 46)	 Labels shape:(424, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Test features shape:(266, 10, 46)		 Labels shape:(266, 1)
root - [DEBUG]{MainThread} - __init__() - [95mCreated object TF_multidimension Path from: d_price/PYPL_PLAIN_stock_history_MONTH_3_AD.csv[0m
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1561, 1075) Path: d_price/PYPL_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, mtum_DMP_14, mtum_PLUS_DM, vola_NATR, sti_STDDEV, vola_ATR, mtum_APO, mtum_MACD_ext, olap_BBAND_dif, sti_VAR, vola_THERMOma_20_2_05, mtum_MACD_ext_signal, mtum_PPO, mcrh_WMA_50_TEMA_100, NQ_per_Volume, tend_renko_brick, mtum_MACD_signal, tend_renko_TR, tend_renko_ATR, vola_TRUERANGE_1, mtum_STCmacd_10_12_26_05, mtum_MACD_fix, vola_THERMO_20_2_05, NQ_Volume, mtum_MACD_fix_signal, vola_TRANGE, mtum_AO_5_34, ti_chaikin_10_3, mtum_BIAS_SMA_26, mtum_MACD, ma_TRIMA_50, ti_mass_index_9_25, ma_KAMA_50, ti_coppock_14_11_10, volu_NVI_1, volu_Chaikin_ADOSC, has_preMarket, ichi_senkou_b, volu_Chaikin_AD, volu_PVI_1, ichi_senkou_a, mcrh_TEMA_10_KAMA_50, ti_donchian_lower_20, cdl_INVERTEDHAMMER, ti_acc_dist, ma_SMA_50, volu_EFI_13, mtum_MINUS_DM, vola_KCLe_20_2, sti_TOS_STDEVALL_U_2, tend_ll, ti_force_index_13, ti_kelt_20_lower, ma_WMA_20, ma_TRIMA_20, olap_HT_TRENDLINE, mtum_PVO_12_26_9, olap_BBAND_LOWER, mtum_PLUS_DI, olap_ALMA_10_60_085, mcrh_WMA_5_TEMA_50, olap_MCGD_10, olap_SINWMA_14, NQ_SMA_100, olap_BBAND_MIDDLE, mtum_BEARP_13, sti_TOS_STDEVALL_L_3, NQ_SMA_20, mtum_STC_10_12_26_05, sti_KURT_30, volu_OBV, sti_TOS_STDEVALL_L_1, NQ_Close, Volume, vola_HWM, vola_THERMOs_20_2_05, tend_hl, mcrh_DEMA_20_KAMA_100, vola_KCBe_20_2, ti_kelt_20_upper, ma_SMA_20, mcrh_WMA_50_DEMA_100, mcrh_DEMA_5_SMA_50, ichi_kijun_sen, ti_donchian_center_20, mcrh_KAMA_20_SMA_100, ma_KAMA_20, olap_MIDPRICE, mcrh_T3_10_EMA_100, ma_EMA_20, mcrh_T3_20_EMA_100, mcrh_T3_20_SMA_50, tend_hl_crash, ma_EMA_10, cycl_HT_TRENDMODE, ma_EMA_50, cycl_DCPERIOD
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point  ...  ma_EMA_50  cycl_DCPERIOD
0  2025-04-03 09:30:00            -100  ...        NaN            NaN
1  2025-04-03 09:45:00               0  ...        NaN            NaN
2  2025-04-03 10:00:00               0  ...        NaN            NaN
3  2025-04-03 10:15:00               0  ...        NaN            NaN
4  2025-04-03 10:30:00             100  ...        NaN            NaN

[5 rows x 98 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point  mtum_DMP_14  ...    ma_EMA_50  cycl_DCPERIOD
count     1561.000000  1548.000000  ...  1512.000000    1529.000000
mean        -0.768738     1.143283  ...    68.520946      22.618667
std         30.372448     0.779220  ...     4.802901       5.085947
min       -100.000000     0.296354  ...    58.146103      11.821163
25%          0.000000     0.666661  ...    64.623333      19.040120
50%          0.000000     0.915122  ...    70.732969      21.708556
75%          0.000000     1.336073  ...    72.291828      25.763826
max        100.000000     5.816853  ...    74.785011      39.844692

[8 rows x 96 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() -  groupby(Y_TARGET).count()                 Date
buy_sell_point      
0               1483
100               78
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96mDataFrame head:
            Date  buy_sell_point  ...  ma_EMA_50  cycl_DCPERIOD
77  1.744041e+09               0  ...  59.121130      14.281710
78  1.744105e+09               0  ...  59.175988      13.965532
79  1.744106e+09               0  ...  59.239871      13.696639
80  1.744106e+09               1  ...  59.299091      13.474316
81  1.744107e+09               1  ...  59.366225      13.267201

[5 rows x 98 columns][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 97)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 97)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96marr_vali sample: [[1744111800.0 2.929966 2.929966 1.283941 0.316291 0.773382 0.827522
  0.827522 4.031455 0.10004 0.463409 0.539774 1.400562 0
  477.1796266086641 1.0 0.347741 0.59 0.714265 0.59 0.440775 0.420028
  0.224998 31843.0 0.329712 0.59 1.398757 -12647.874663 0.019463 0.440778
  58.618128 21.939754 58.896703 5.978039 1007.333127 -12647.904025 False
  59.275 -8509400.088973 988.555989 58.664999 0 58.080002 0
  -8509400.088973 58.990698 149541.597033 1.817594 58.138587 71.731141
  58.119499 149541.764778 58.010335 59.794026 59.324332 59.472494
  -8.094044 57.393797 27.066629 60.281225 0 59.548858 59.89546 18600.625
  59.409525 -0.023585 46.8981 18102.8625 0.0 -0.943884 -1886148.0
  56.831317 18210.25 286108 60.885594 0 58.119499 0 59.602458 60.808716
  59.409525 0 0 59.24 59.67 0 59.63025 59.674999 0 59.602458 0 0 0
  60.001084 0 59.516332 13.032313]
 [1744110900.0 2.913042 2.913042 1.31533 0.453542 0.787488 0.714221
  0.714221 4.075366 0.205701 0.488505 0.470888 1.209818 0
  477.1796266086641 1.0 0.324481 0.475002 0.743112 0.475002 0.442832
  0.421524 0.224899 31843.0 0.307133 0.475002 1.65714 31856.215823
  0.014137 0.442836 58.610772 21.997006 58.889216 5.923805 1006.72347
  31856.179936 False 59.275 -8606386.196573 988.555989 58.664999 0
  57.470001 0 -8606386.196573 58.981998 157060.213167 1.957409 58.042123
  71.721512 58.119499 157060.40887 57.864585 59.706005 59.1695 59.386091
  -4.216932 57.273092 26.428571 59.602814 0 59.476783 59.710914 18600.625
  59.310775 -0.071684 46.888471 18102.8625 0.0 -0.641796 -2172256.0
  56.821687 18210.25 467726 60.805224 0 58.119499 0 59.535874 60.756965
  59.310775 0 0 59.24 59.365 0 59.59634 59.674999 0 59.535874 0 0 0
  59.949103 0 59.486999 12.804409]
 [1744110000.0 3.137122 3.137122 1.353219 0.3963 0.811525 0.66717 0.66717
  4.34674 0.157054 0.516253 0.405225 1.13174 0 477.1796266086641 1.0
  0.294893 0.509903 0.760804 0.509903 0.476181 0.452212 0.510098 31843.0
  0.278535 0.509903 1.85064 208998.47274 0.017289 0.476185 58.60707
  22.173359 58.883578 5.922601 1006.72347 208998.428877 False 59.275
  -8414369.83446 988.722743 58.664999 0 57.220001 100 -8414369.83446
  58.972398 191032.527119 1.903365 57.949715 71.711882 58.119499
  191032.755439 57.725585 59.641221 59.027264 59.285431 -2.615805
  57.016405 27.618791 58.940751 0 59.434485 59.510812 18600.625 59.189775
  0.129701 46.878841 18102.8625 0.0 -0.380995 -1704530.0 56.812057
  18210.25 365534 60.792154 1 58.119499 0 59.500703 60.653965 59.189775 0
  0 59.24 59.24 0 59.577159 59.674999 0 59.500703 0 0 0 59.966682 1
  59.471366 12.654838]
 [1744109100.0 3.378439 3.378439 1.387281 0.281957 0.834727 0.659742
  0.659742 4.428825 0.0795 0.516901 0.337735 1.120694 0 477.1796266086641
  1.0 0.24957 0.779999 0.819654 0.779999 0.501638 0.475234 0.549999
  31843.0 0.235116 0.779999 1.966354 446222.714061 0.022099 0.501643
  58.607638 22.382909 58.877448 5.821807 1006.72347 446222.660451 False
  59.275 -8120527.184252 989.055129 58.664999 0 57.220001 0
  -8120527.184252 58.963398 235055.562385 1.791314 57.844401 71.702252
  58.119499 235055.828758 57.604325 59.556938 58.897259 59.140269
  1.023078 56.870612 28.916904 58.508861 0 59.377546 59.300623 18600.625
  59.085025 0.399653 46.869212 18102.8625 0.0 -0.441237 -1338996.0
  56.802428 18210.25 351172 60.73997 1 58.119499 0 59.451304 60.565725
  59.085025 0 0 59.24 59.24 0 59.556517 59.674999 0 59.451304 0 0 0
  59.965944 1 59.451014 12.769558]
 [1744108200.0 3.638319 3.638319 1.380285 0.156368 0.838937 0.559646
  0.559646 4.381289 0.024451 0.513417 0.266486 0.951327 0
  477.1796266086641 1.0 0.186551 0.549999 0.846192 0.549999 0.50647
  0.478638 0.079998 31843.0 0.175086 0.549999 1.858633 698399.306226
  0.033183 0.506476 58.614221 22.718331 58.86889 5.876102 1007.72709
  698399.240703 False 59.275 -7778358.097237 989.055129 58.664999 0
  57.220001 0 -7778358.097237 58.949098 309934.011839 1.336801 57.763812
  71.692623 58.119499 309934.322608 57.496425 59.444036 58.781436
  58.969166 5.576802 56.793881 30.985564 58.317049 0 59.295029 59.100568
  18600.625 58.984525 1.017928 46.859582 18102.8625 0.0 -0.016689
  -987824.0 56.792798 18210.25 514452 60.619792 0 58.119499 0 59.375652
  60.472625 58.984525 0 0 59.24 59.24 0 59.526676 59.674999 0 59.375652 0
  0 0 59.920599 1 59.421667 13.023228]
 [1744107300.0 3.832038 3.832038 1.411488 0.906187 0.861163 0.478171
  0.478171 4.138149 0.821174 0.55904 0.199857 0.814114 0
  477.1796266086641 1.0 0.10657 0.540001 0.886961 0.540001 0.443162
  0.41793 0.200001 31843.0 0.099198 0.540001 1.392545 893499.618013
  0.038747 0.443169 58.624197 23.142279 58.84697 5.278158 1008.105715
  893499.53793 False 59.275 -7394857.126167 989.055129 58.664999 0
  57.220001 0 -7394857.126167 58.913098 381396.323209 1.439631 57.562108
  71.682993 58.119499 381396.685773 57.353926 59.259657 58.67425
  58.770322 8.680373 56.774951 31.793484 58.392276 0 59.148721 58.9195
  18600.625 58.844025 1.12925 46.849953 18102.8625 0.0 0.937897 -473372.0
  56.783169 18210.25 634574 60.321671 0 58.119499 0 59.227825 60.334125
  58.844025 0 0 59.200001 59.200001 0 59.414119 59.635 0 59.227825 0 0 0
  59.729621 1 59.366225 13.267201]
 [1744106400.0 3.911425 3.911425 1.458219 1.151913 0.885868 0.428543
  0.428543 3.647902 1.326904 0.596834 0.139961 0.730988 0
  477.1796266086641 1.0 0.02242 0.439999 0.995773 0.439999 0.332392
  0.312703 0.260002 31843.0 0.019515 0.439999 0.979339 873577.487546
  0.036244 0.3324 58.636473 23.717648 58.810346 4.333275 1008.105715
  873577.389666 False 59.275 -7632238.493493 988.625497 58.275 0
  57.220001 0 -7632238.493493 58.856578 417358.240242 1.550372 57.312751
  71.673364 58.119499 417358.663233 57.196126 59.040393 58.582609
  58.614406 10.76972 56.884774 31.547537 58.476736 0 58.97064 58.772325
  18600.625 58.708725 1.279293 46.840323 18102.8625 0.0 1.636456
  -1107946.0 56.773539 18210.25 549968 59.9187 0 58.119499 0 59.040123
  60.221325 58.708725 0 0 59.35 59.1 0 59.28251 59.530001 0 59.040123 0 0
  0 59.444869 1 59.299091 13.474316]
 [1744105500.0 4.212303 4.212303 1.513305 1.179533 0.920165 0.297453
  0.297453 3.144533 1.391299 0.63229 0.087278 0.507582 0
  477.1796266086641 1.0 -0.055075 0.700001 1.094234 0.700001 0.212748
  0.199292 1.279999 31843.0 -0.053781 0.700001 0.55506 815380.568203
  0.037591 0.212758 58.652535 24.512039 58.778003 3.479478 1008.196169
  815380.448572 False 59.275 -7607239.297842 988.625497 57.852499 1
  57.220001 0 -7607239.297842 58.800978 491959.348255 1.669632 57.043566
  71.663734 58.119499 491959.841744 57.015875 58.837391 58.516341
  58.48029 14.393329 57.046209 32.70829 58.569348 0 58.799456 58.662875
  18600.625 58.618475 1.267506 46.830693 18102.8625 0.0 2.343839
  -557978.0 56.76391 18210.25 722530 59.521787 1 58.119499 0 58.860136
  60.221075 58.618475 0 1 59.35 59.1 0 59.222043 59.225 0 58.860136 0 0 0
  59.15484 1 59.239871 13.696639]
 [1744104600.0 4.127095 4.127095 1.548416 0.907512 0.937101 0.225498
  0.225498 2.527831 0.823578 0.56411 0.039806 0.385526 0
  477.1796266086641 1.0 -0.122033 2.059998 1.149619 2.059998 0.051345
  0.046951 2.019997 31843.0 -0.11705 2.059998 0.167633 472481.931368
  0.034687 0.051356 58.67012 25.178625 58.750693 2.16597 1007.72525
  472481.785152 True 59.535 -7968506.266578 988.625497 57.967501 1
  57.220001 0 -7968506.266578 58.755678 539632.416339 1.798065 56.794995
  71.654105 58.119499 539632.992076 56.835625 58.614222 58.455846
  58.398085 16.515091 57.197809 31.468038 58.705839 0 58.609973 58.572529
  18600.625 58.461725 0.286259 46.821064 18102.8625 0.0 2.776516
  -1280508.0 56.75428 18210.25 1733015 59.054155 1 58.119499 0 58.655413
  60.087825 58.461725 0 1 58.664999 58.91 0 59.100172 58.91 0 58.655413 0
  0 0 58.788138 0 59.175988 13.965532]
 [1744040700.0 2.269183 2.269183 1.453236 0.143835 0.850724 0.207549
  0.207549 1.73751 0.020689 0.410858 -0.010233 0.355876 0
  477.1796266086641 1.0 -0.165381 0.470001 1.165388 0.470001 -0.126393
  -0.120291 0.379997 31843.0 -0.15805 0.470001 -0.065734 -189725.301072
  0.00376 -0.126379 58.690297 25.618486 58.732981 0.892566 1007.72525
  -189725.47978 False 60.632399 -9528223.898411 985.243195 58.92495 0
  57.220001 0 -9528223.898411 58.724278 57676.334614 1.936377 56.836572
  71.644475 58.119499 57677.006308 56.703865 58.405456 58.401303
  58.368305 4.332648 57.45921 19.059795 58.807826 0 58.428252 58.515726
  18600.625 58.327965 -0.302697 46.811434 18102.8625 0.0 3.263979
  -3013523.0 56.744651 18210.25 1507382 58.592725 1 58.119499 0 58.459141
  59.952065 58.327965 0 0 58.664999 58.455 0 59.013628 58.236 0 58.459141
  0 0 0 58.40328 0 59.12113 14.28171]][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - i want to chc folder: Models/TF_multi/Scalers/PYPL_neg_reg4_
root - [DEBUG]{MainThread} - scaler_min_max_array() - Scaler will be Saved Path: Models/TF_multi/Scalers/PYPL_neg_reg4_.scal
root - [INFO]{MainThread} - log_shapes_trains_val_data() - Training features shape SMOTE:(1496, 10, 97)	 Labels shape:(1496, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Validation features shape:(424, 10, 97)	 Labels shape:(424, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Test features shape:(266, 10, 97)		 Labels shape:(266, 1)
root - [DEBUG]{MainThread} - __init__() - [95mCreated object TF_multidimension Path from: d_price/PYPL_PLAIN_stock_history_MONTH_3_AD.csv[0m
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1561, 1075) Path: d_price/PYPL_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, mtum_DMP_14, mtum_PLUS_DM, vola_NATR, sti_STDDEV, vola_ATR, mtum_APO, mtum_MACD_ext, olap_BBAND_dif, sti_VAR, vola_THERMOma_20_2_05, mtum_MACD_ext_signal, mtum_PPO, mcrh_WMA_50_TEMA_100, NQ_per_Volume, tend_renko_brick, mtum_MACD_signal, tend_renko_TR, tend_renko_ATR, vola_TRUERANGE_1, mtum_STCmacd_10_12_26_05, mtum_MACD_fix, vola_THERMO_20_2_05, NQ_Volume, mtum_MACD_fix_signal, vola_TRANGE, mtum_AO_5_34, ti_chaikin_10_3, mtum_BIAS_SMA_26, mtum_MACD, ma_TRIMA_50, ti_mass_index_9_25, ma_KAMA_50, ti_coppock_14_11_10, volu_NVI_1, volu_Chaikin_ADOSC, has_preMarket, ichi_senkou_b, volu_Chaikin_AD, volu_PVI_1, ichi_senkou_a, mcrh_TEMA_10_KAMA_50, ti_donchian_lower_20, cdl_INVERTEDHAMMER, ti_acc_dist, ma_SMA_50, volu_EFI_13, mtum_MINUS_DM, vola_KCLe_20_2, sti_TOS_STDEVALL_U_2, tend_ll, ti_force_index_13, ti_kelt_20_lower, ma_WMA_20, ma_TRIMA_20, olap_HT_TRENDLINE, mtum_PVO_12_26_9, olap_BBAND_LOWER, mtum_PLUS_DI, olap_ALMA_10_60_085, mcrh_WMA_5_TEMA_50, olap_MCGD_10, olap_SINWMA_14, NQ_SMA_100, olap_BBAND_MIDDLE, mtum_BEARP_13, sti_TOS_STDEVALL_L_3, NQ_SMA_20, mtum_STC_10_12_26_05, sti_KURT_30, volu_OBV, sti_TOS_STDEVALL_L_1, NQ_Close, Volume, vola_HWM, vola_THERMOs_20_2_05, tend_hl, mcrh_DEMA_20_KAMA_100, vola_KCBe_20_2, ti_kelt_20_upper, ma_SMA_20, mcrh_WMA_50_DEMA_100, mcrh_DEMA_5_SMA_50, ichi_kijun_sen, ti_donchian_center_20, mcrh_KAMA_20_SMA_100, ma_KAMA_20, olap_MIDPRICE, mcrh_T3_10_EMA_100, ma_EMA_20, mcrh_T3_20_EMA_100, mcrh_T3_20_SMA_50, tend_hl_crash, ma_EMA_10, cycl_HT_TRENDMODE, ma_EMA_50, cycl_DCPERIOD, vola_HWU, perf_z_30_1, trad_s2, olap_VMAP, trad_s3, olap_SWMA_10, sti_ENTP_10, sti_CORREL, vola_KCUe_20_2, ti_konk_bro, sti_LINEARREG_INTERCEPT, ti_konk_avg, wood_s2, volu_PVT, sti_TOS_STDEVALL_LR, volu_PVR, volu_PVOL, ti_ease_of_movement_14, ti_donchian_upper_20, sti_TOS_STDEVALL_L_2, sti_TOS_STDEVALL_U_1, tend_lh, sti_TOS_STDEVALL_U_3, olap_PWMA_10, Low, olap_MIDPOINT, cdl_UPSIDEGAP2CROWS, mcrh_DEMA_20_EMA_50, mcrh_DEMA_10_KAMA_50, ma_TRIMA_10, ma_T3_10, ma_SMA_10, ma_KAMA_5, ma_KAMA_10, ichi_tenkan_sen, ichi_isin_cloud, fibo_s3, cycl_SINE_lead, clas_s3, clas_s2, cdl_UNIQUE3RIVER, mcrh_EMA_50_TEMA_100, cdl_TRISTAR, cdl_TASUKIGAP, cdl_STICKSANDWICH, cdl_PIERCING, cdl_MATHOLD, cdl_KICKINGBYLENGTH, cdl_KICKING, cdl_INNECK, cdl_CONCEALBABYSWALL, cdl_ABANDONEDBABY, cdl_3WHITESOLDIERS, cdl_3STARSINSOUTH, cdl_2CROWS, mcrh_EMA_10_KAMA_20, mcrh_EMA_5_KAMA_20, olap_HWMA_02_01_01, mtum_AR_26, olap_BBAND_UPPER, mtum_ULTOSC, mtum_STCstoch_10_12_26_05, mtum_SMI_5_20_5, mtum_RSI, mtum_ROCR100, mtum_ROCP, mtum_PVOs_12_26_9, mtum_MINUS_DI, mtum_MACD_ext_crash, mtum_J_9_3, mtum_DMN_14, mtum_BULLP_13, mtum_ADXR, mcrh_EMA_5_SMA_50, mcrh_WMA_5_SMA_50, mcrh_WMA_50_ti_h20, mcrh_WMA_10_WMA_100, mcrh_WMA_10_TEMA_50, mcrh_TRIMA_20_T3_100, mcrh_TEMA_50_KAMA_100, mcrh_TEMA_10_SMA_50, mcrh_T3_20_EMA_50, mcrh_T3_10_TRIMA_20, mcrh_KAMA_5_WMA_50, mcrh_KAMA_10_WMA_100, mcrh_KAMA_10_TEMA_20, mcrh_EMA_5_T3_100, wood_s3
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point  ...  mcrh_EMA_5_T3_100    wood_s3
0  2025-04-03 09:30:00            -100  ...                  0        NaN
1  2025-04-03 09:45:00               0  ...                  0  61.744999
2  2025-04-03 10:00:00               0  ...                  0  60.340006
3  2025-04-03 10:15:00               0  ...                  0  60.915003
4  2025-04-03 10:30:00             100  ...                  0  60.994997

[5 rows x 186 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point  mtum_DMP_14  ...  mcrh_EMA_5_T3_100      wood_s3
count     1561.000000  1548.000000  ...        1561.000000  1560.000000
mean        -0.768738     1.143283  ...           0.000641    67.984537
std         30.372448     0.779220  ...           0.126591     5.173543
min       -100.000000     0.296354  ...          -1.000000    53.136351
25%          0.000000     0.666661  ...           0.000000    63.929752
50%          0.000000     0.915122  ...           0.000000    70.172503
75%          0.000000     1.336073  ...           0.000000    71.990630
max        100.000000     5.816853  ...           1.000000    74.934998

[8 rows x 184 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() -  groupby(Y_TARGET).count()                 Date
buy_sell_point      
0               1483
100               78
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96mDataFrame head:
            Date  buy_sell_point  ...  mcrh_EMA_5_T3_100    wood_s3
77  1.744041e+09               0  ...                  0  56.889999
78  1.744105e+09               0  ...                  0  59.197998
79  1.744106e+09               0  ...                  0  58.120003
80  1.744106e+09               1  ...                  0  59.740000
81  1.744107e+09               1  ...                  0  60.100000

[5 rows x 186 columns][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 185)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 185)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96marr_vali sample: [[1744111800.0 2.929966 2.929966 ... 0 0 59.157495]
 [1744110900.0 2.913042 2.913042 ... 0 0 59.201946]
 [1744110000.0 3.137122 3.137122 ... 0 0 58.995003]
 ...
 [1744105500.0 4.212303 4.212303 ... 0 0 58.120003]
 [1744104600.0 4.127095 4.127095 ... 0 0 59.197998]
 [1744040700.0 2.269183 2.269183 ... 1 0 56.889999]][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - i want to chc folder: Models/TF_multi/Scalers/PYPL_neg_low1_
root - [DEBUG]{MainThread} - scaler_min_max_array() - Scaler will be Saved Path: Models/TF_multi/Scalers/PYPL_neg_low1_.scal
root - [INFO]{MainThread} - log_shapes_trains_val_data() - Training features shape SMOTE:(1500, 10, 185)	 Labels shape:(1500, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Validation features shape:(424, 10, 185)	 Labels shape:(424, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Test features shape:(266, 10, 185)		 Labels shape:(266, 1)
root - [DEBUG]{MainThread} - __init__() - [95mCreated object TF_multidimension Path from: d_price/PYPL_PLAIN_stock_history_MONTH_3_AD.csv[0m
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1561, 1075) Path: d_price/PYPL_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, tend_renko_brick, vola_NATR, tend_renko_ATR, vola_ATR, tend_ll, vola_THERMOma_20_2_05, vola_TRANGE, vola_TRUERANGE_1, tend_renko_TR, mtum_DMP_14
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point  ...  tend_renko_TR  mtum_DMP_14
0  2025-04-03 09:30:00            -100  ...            NaN          NaN
1  2025-04-03 09:45:00               0  ...            NaN          NaN
2  2025-04-03 10:00:00               0  ...            NaN          NaN
3  2025-04-03 10:15:00               0  ...            NaN          NaN
4  2025-04-03 10:30:00             100  ...            NaN          NaN

[5 rows x 12 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point  tend_renko_brick  ...  tend_renko_TR  mtum_DMP_14
count     1561.000000       1535.000000  ...    1535.000000  1548.000000
mean        -0.768738          0.121824  ...       0.341425     1.143283
std         30.372448          0.327189  ...       0.355286     0.779220
min       -100.000000          0.000000  ...       0.053398     0.296354
25%          0.000000          0.000000  ...       0.164997     0.666661
50%          0.000000          0.000000  ...       0.235001     0.915122
75%          0.000000          0.000000  ...       0.384999     1.336073
max        100.000000          1.000000  ...       4.689999     5.816853

[8 rows x 11 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() -  groupby(Y_TARGET).count()                 Date
buy_sell_point      
0               1495
100               66
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96mDataFrame head:
            Date  buy_sell_point  ...  tend_renko_TR  mtum_DMP_14
26  1.743759e+09               0  ...       2.724998     0.738253
27  1.743760e+09               0  ...       0.735001     0.685521
28  1.743761e+09               1  ...       0.629997     0.636555
29  1.743762e+09               1  ...       0.535000     0.591087
30  1.743763e+09               1  ...       0.770000     0.548866

[5 rows x 12 columns][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 11)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 11)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96marr_vali sample: [[1.7437671e+09 1.0000000e+00 1.1302250e+00 5.8359600e-01 6.7124100e-01
  5.7970001e+01 5.3491900e-01 6.1999900e-01 6.1999900e-01 6.1999900e-01
  2.1435000e+00]
 [1.7437662e+09 1.0000000e+00 1.1343790e+00 5.7917300e-01 6.7518200e-01
  5.7970001e+01 5.5964800e-01 5.4999900e-01 5.4999900e-01 5.4999900e-01
  1.9853080e+00]
 [1.7437653e+09 1.0000000e+00 1.1518150e+00 5.7801900e-01 6.8481200e-01
  5.7970001e+01 5.7645300e-01 1.1199990e+00 1.1199990e+00 1.1199990e+00
  2.1380240e+00]
 [1.7437644e+09 1.0000000e+00 1.1043330e+00 5.5378900e-01 6.5133600e-01
  5.7970001e+01 4.9608000e-01 9.5999900e-01 9.5999900e-01 9.5999900e-01
  1.1932580e+00]
 [1.7437635e+09 1.0000000e+00 1.0786160e+00 5.3609600e-01 6.2759300e-01
  5.7970001e+01 4.6564600e-01 1.0252000e+00 1.0252000e+00 1.0252000e+00
  5.0966200e-01]
 [1.7437626e+09 1.0000000e+00 1.0298560e+00 5.1628100e-01 5.9700700e-01
  5.7970001e+01 4.4990300e-01 7.7000000e-01 7.7000000e-01 7.7000000e-01
  5.4886600e-01]
 [1.7437617e+09 1.0000000e+00 9.9709600e-01 5.0628100e-01 5.8370000e-01
  6.1764999e+01 4.3726200e-01 5.3500000e-01 5.3500000e-01 5.3500000e-01
  5.9108700e-01]
 [1.7437608e+09 1.0000000e+00 9.9651600e-01 5.0455000e-01 5.8744600e-01
  6.1764999e+01 4.3223600e-01 6.2999700e-01 6.2999700e-01 6.2999700e-01
  6.3655500e-01]
 [1.7437599e+09 1.0000000e+00 9.8180400e-01 5.0147300e-01 5.8417300e-01
  6.1764999e+01 4.5668200e-01 7.3500100e-01 7.3500100e-01 7.3500100e-01
  6.8552100e-01]
 [1.7437590e+09 1.0000000e+00 9.6955600e-01 5.1858800e-01 5.7257100e-01
  6.1764999e+01 4.5633300e-01 2.7249980e+00 2.7249980e+00 2.7249980e+00
  7.3825300e-01]][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - i want to chc folder: Models/TF_multi/Scalers/PYPL_pos_vgood16_
root - [DEBUG]{MainThread} - scaler_min_max_array() - Scaler will be Saved Path: Models/TF_multi/Scalers/PYPL_pos_vgood16_.scal
root - [INFO]{MainThread} - log_shapes_trains_val_data() - Training features shape SMOTE:(1564, 10, 11)	 Labels shape:(1564, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Validation features shape:(438, 10, 11)	 Labels shape:(438, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Test features shape:(275, 10, 11)		 Labels shape:(275, 1)
root - [DEBUG]{MainThread} - __init__() - [95mCreated object TF_multidimension Path from: d_price/PYPL_PLAIN_stock_history_MONTH_3_AD.csv[0m
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1561, 1075) Path: d_price/PYPL_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, tend_renko_brick, vola_NATR, tend_renko_ATR, vola_ATR, tend_ll, vola_THERMOma_20_2_05, vola_TRANGE, vola_TRUERANGE_1, tend_renko_TR, mtum_DMP_14, NQ_per_Volume, mtum_PLUS_DM, volu_Chaikin_ADOSC, vola_KCLe_20_2, ti_kelt_20_lower, ti_chaikin_10_3, vola_HWL, has_preMarket, ma_TRIMA_20, ti_mass_index_9_25, mtum_APO, mtum_PPO, ma_KAMA_50, olap_BBAND_MIDDLE, demark_s1, ma_EMA_50, ma_SMA_50, mtum_MACD_ext_signal, mtum_MACD_ext, olap_HT_TRENDLINE, tend_hl, vola_THERMO_20_2_05, volu_NVI_1, ma_EMA_10, ma_T3_10, trad_s3, ma_SMA_20, mtum_STCmacd_10_12_26_05, volu_Chaikin_AD, ma_KAMA_20, ti_coppock_14_11_10, NQ_Volume, mcrh_TEMA_10_KAMA_50, clas_s3, olap_MCGD_10, ichi_senkou_b, olap_PWMA_10, olap_SINWMA_14, tend_lh, fibo_s3, ma_EMA_20
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point  ...    fibo_s3  ma_EMA_20
0  2025-04-03 09:30:00            -100  ...        NaN        NaN
1  2025-04-03 09:45:00               0  ...  62.433332        NaN
2  2025-04-03 10:00:00               0  ...  61.250004        NaN
3  2025-04-03 10:15:00               0  ...  61.316667        NaN
4  2025-04-03 10:30:00             100  ...  61.196664        NaN

[5 rows x 53 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point  tend_renko_brick  ...      fibo_s3    ma_EMA_20
count     1561.000000       1535.000000  ...  1560.000000  1542.000000
mean        -0.768738          0.121824  ...    68.148760    68.485785
std         30.372448          0.327189  ...     5.091334     4.907887
min       -100.000000          0.000000  ...    54.976668    57.430420
25%          0.000000          0.000000  ...    64.114998    64.661483
50%          0.000000          0.000000  ...    70.305834    70.571125
75%          0.000000          0.000000  ...    72.082237    72.269270
max        100.000000          1.000000  ...    74.965001    74.946666

[8 rows x 51 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() -  groupby(Y_TARGET).count()                 Date
buy_sell_point      
0               1495
100               66
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96mDataFrame head:
            Date  buy_sell_point  ...    fibo_s3  ma_EMA_20
77  1.744041e+09               0  ...  57.553332  58.459141
78  1.744105e+09               0  ...  57.940000  58.655413
79  1.744106e+09               0  ...  58.440001  58.860136
80  1.744106e+09               0  ...  59.988332  59.040123
81  1.744107e+09               0  ...  60.316668  59.227825

[5 rows x 53 columns][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 52)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 52)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96marr_vali sample: [[1744111800.0 1.0 1.283941 0.714265 0.773382 58.119499 0.463409 0.59
  0.59 0.59 2.929966 477.1796266086641 2.929966 -12647.904025 58.138587
  58.010335 -12647.874663 60.182361 False 59.324332 21.939754 0.827522
  1.400562 58.896703 59.409525 59.562498 59.516332 58.990698 0.539774
  0.827522 59.472494 58.119499 0.224998 1007.333127 60.001084 60.082442
  59.189996 59.409525 0.440775 -8509400.088973 59.63025 5.978039 31843.0
  0 58.984996 59.548858 59.275 60.650646 59.89546 59.095001 59.459998
  59.602458]
 [1744110900.0 1.0 1.31533 0.743112 0.787488 58.119499 0.488505 0.475002
  0.475002 0.475002 2.913042 477.1796266086641 2.913042 31856.179936
  58.042123 57.864585 31856.215823 60.116471 False 59.1695 21.997006
  0.714221 1.209818 58.889216 59.310775 59.690048 59.486999 58.981998
  0.470888 0.714221 59.386091 58.119499 0.224899 1006.72347 59.949103
  59.93186 59.273463 59.310775 0.442832 -8606386.196573 59.59634 5.923805
  31843.0 0 59.086828 59.476783 59.275 60.711926 59.710914 59.095001
  59.596731 59.535874]
 [1744110000.0 1.0 1.353219 0.760804 0.811525 58.119499 0.516253 0.509903
  0.509903 0.509903 3.137122 477.1796266086641 3.137122 208998.428877
  57.949715 57.725585 208998.47274 60.091445 False 59.027264 22.173359
  0.66717 1.13174 58.883578 59.189775 59.775 59.471366 58.972398 0.405225
  0.66717 59.285431 58.119499 0.510098 1006.72347 59.966682 59.745544
  59.126667 59.189775 0.476181 -8414369.83446 59.577159 5.922601 31843.0
  0 58.863335 59.434485 59.275 60.553308 59.510812 59.095001 59.643333
  59.500703]
 [1744109100.0 1.0 1.387281 0.819654 0.834727 58.119499 0.516901 0.779999
  0.779999 0.779999 3.378439 477.1796266086641 3.378439 446222.660451
  57.844401 57.604325 446222.714061 60.003291 False 58.897259 22.382909
  0.659742 1.120694 58.877448 59.085025 60.469999 59.451014 58.963398
  0.337735 0.659742 59.140269 58.119499 0.549999 1006.72347 59.965944
  59.518213 60.023333 59.085025 0.501638 -8120527.184252 59.556517
  5.821807 31843.0 0 59.816667 59.377546 59.275 60.130335 59.300623
  59.095001 60.366666 59.451304]
 [1744108200.0 1.0 1.380285 0.846192 0.838937 58.119499 0.513417 0.549999
  0.549999 0.549999 3.638319 477.1796266086641 3.638319 698399.240703
  57.763812 57.496425 698399.306226 59.878038 False 58.781436 22.718331
  0.559646 0.951327 58.86889 58.984525 60.5555 59.421667 58.949098
  0.266486 0.559646 58.969166 58.119499 0.079998 1007.72709 59.920599
  59.263041 60.167333 58.984525 0.50647 -7778358.097237 59.526676
  5.876102 31843.0 0 59.863665 59.295029 59.275 59.508381 59.100568
  59.095001 60.403666 59.375652]
 [1744107300.0 1.0 1.411488 0.886961 0.861163 58.119499 0.55904 0.540001
  0.540001 0.540001 3.832038 477.1796266086641 3.832038 893499.53793
  57.562108 57.353926 893499.618013 59.590543 False 58.67425 23.142279
  0.478171 0.814114 58.84697 58.844025 60.425001 59.366225 58.913098
  0.199857 0.478171 58.770322 58.119499 0.200001 1008.105715 59.729621
  59.004131 60.093335 58.844025 0.443162 -7394857.126167 59.414119
  5.278158 31843.0 0 59.87667 59.148721 59.275 58.888221 58.9195
  59.095001 60.316668 59.227825]
 [1744106400.0 1.0 1.458219 0.995773 0.885868 58.119499 0.596834 0.439999
  0.439999 0.439999 3.911425 477.1796266086641 3.911425 873577.389666
  57.312751 57.196126 873577.487546 59.277621 False 58.582609 23.717648
  0.428543 0.730988 58.810346 58.708725 60.192499 59.299091 58.856578
  0.139961 0.428543 58.614406 58.119499 0.260002 1008.105715 59.444869
  58.775503 59.696665 58.708725 0.332392 -7632238.493493 59.28251
  4.333275 31843.0 0 59.288331 58.97064 59.275 58.47724 58.772325
  59.095001 59.988332 59.040123]
 [1744105500.0 1.0 1.513305 1.094234 0.920165 58.119499 0.63229 0.700001
  0.700001 0.700001 4.212303 477.1796266086641 4.212303 815380.448572
  57.043566 57.015875 815380.568203 59.054988 False 58.516341 24.512039
  0.297453 0.507582 58.778003 58.618475 58.960001 59.239871 58.800978
  0.087278 0.297453 58.48029 58.119499 1.279999 1008.196169 59.15484
  58.599534 57.880002 58.618475 0.212748 -7607239.297842 59.222043
  3.479478 31843.0 1 56.840003 58.799456 59.275 58.336146 58.662875
  59.095001 58.440001 58.860136]
 [1744104600.0 1.0 1.548416 1.149619 0.937101 58.119499 0.56411 2.059998
  2.059998 2.059998 4.127095 477.1796266086641 4.127095 472481.785152
  56.794995 56.835625 472481.931368 58.56242 True 58.455846 25.178625
  0.225498 0.385526 58.750693 58.461725 58.09 59.175988 58.755678
  0.039806 0.225498 58.398085 58.119499 2.019997 1007.72525 58.788138
  58.485549 57.769999 58.461725 0.051345 -7968506.266578 59.100172
  2.16597 31843.0 1 57.469999 58.609973 59.535 58.382271 58.572529
  59.095001 57.94 58.655413]
 [1744040700.0 1.0 1.453236 1.165388 0.850724 58.119499 0.410858 0.470001
  0.470001 0.470001 2.269183 477.1796266086641 2.269183 -189725.47978
  56.836572 56.703865 -189725.301072 58.090347 False 58.401303 25.618486
  0.207549 0.355876 58.732981 58.327965 57.709999 59.12113 58.724278
  -0.010233 0.207549 58.368305 58.119499 0.379997 1007.72525 58.40328
  58.43841 57.006666 58.327965 -0.126393 -9528223.898411 59.013628
  0.892566 31843.0 0 56.693331 58.428252 60.632399 58.498861 58.515726
  59.095001 57.553332 58.459141]][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - i want to chc folder: Models/TF_multi/Scalers/PYPL_pos_good9_
root - [DEBUG]{MainThread} - scaler_min_max_array() - Scaler will be Saved Path: Models/TF_multi/Scalers/PYPL_pos_good9_.scal
root - [INFO]{MainThread} - log_shapes_trains_val_data() - Training features shape SMOTE:(1516, 10, 52)	 Labels shape:(1516, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Validation features shape:(424, 10, 52)	 Labels shape:(424, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Test features shape:(266, 10, 52)		 Labels shape:(266, 1)
root - [DEBUG]{MainThread} - __init__() - [95mCreated object TF_multidimension Path from: d_price/PYPL_PLAIN_stock_history_MONTH_3_AD.csv[0m
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1561, 1075) Path: d_price/PYPL_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, tend_renko_brick, vola_NATR, tend_renko_ATR, vola_ATR, tend_ll, vola_THERMOma_20_2_05, vola_TRANGE, vola_TRUERANGE_1, tend_renko_TR, mtum_DMP_14, NQ_per_Volume, mtum_PLUS_DM, volu_Chaikin_ADOSC, vola_KCLe_20_2, ti_kelt_20_lower, ti_chaikin_10_3, vola_HWL, has_preMarket, ma_TRIMA_20, ti_mass_index_9_25, mtum_APO, mtum_PPO, ma_KAMA_50, olap_BBAND_MIDDLE, demark_s1, ma_EMA_50, ma_SMA_50, mtum_MACD_ext_signal, mtum_MACD_ext, olap_HT_TRENDLINE, tend_hl, vola_THERMO_20_2_05, volu_NVI_1, ma_EMA_10, ma_T3_10, trad_s3, ma_SMA_20, mtum_STCmacd_10_12_26_05, volu_Chaikin_AD, ma_KAMA_20, ti_coppock_14_11_10, NQ_Volume, mcrh_TEMA_10_KAMA_50, clas_s3, olap_MCGD_10, ichi_senkou_b, olap_PWMA_10, olap_SINWMA_14, tend_lh, fibo_s3, ma_EMA_20, mtum_MACD_signal, vola_UI_14, mtum_MACD_fix_signal, mtum_BIAS_SMA_26, olap_ALMA_10_60_085, vola_KCBe_20_2, ti_donchian_lower_20, sti_LINEARREG_INTERCEPT, ti_acc_dist, olap_VMAP, olap_VWMA_10, mtum_AO_5_34, wood_s3, ma_DEMA_20, ma_WMA_20, ma_TRIMA_10, ma_SMA_10, ichi_tenkan_sen, mcrh_DEMA_5_SMA_50, fibo_s2, olap_SWMA_10, olap_SAR, olap_HWMA_02_01_01, olap_BBAND_LOWER, ma_KAMA_10, ma_WMA_10, ma_KAMA_5, mtum_td_seq, ma_T3_5, mtum_MACD_fix, sti_TOS_STDEVALL_L_3, sti_TOS_STDEVALL_U_1, tend_hl_crash, Volume, wood_s2, volu_PVT, volu_PVI_1, NQ_SMA_100, volu_EFI_13, NQ_SMA_20, cama_s2, cycl_DCPERIOD, vola_HWM, trad_s2, trad_s1, ti_force_index_13, clas_s1, clas_s2, ma_TRIMA_50, olap_MIDPOINT, Low, mcrh_KAMA_20_SMA_100, mtum_MACD, mcrh_T3_20_SMA_50, mcrh_T3_20_EMA_50, mcrh_T3_10_EMA_100, mcrh_WMA_5_TEMA_50, NQ_Close, mtum_BEARP_13, mcrh_DEMA_20_KAMA_100, mcrh_EMA_5_TEMA_20
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  ...  mcrh_EMA_5_TEMA_20
0  2025-04-03 09:30:00  ...                   0
1  2025-04-03 09:45:00  ...                   0
2  2025-04-03 10:00:00  ...                   0
3  2025-04-03 10:15:00  ...                   0
4  2025-04-03 10:30:00  ...                   0

[5 rows x 114 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point  ...  mcrh_EMA_5_TEMA_20
count     1561.000000  ...         1561.000000
mean        -0.768738  ...            0.003203
std         30.372448  ...            0.321240
min       -100.000000  ...           -1.000000
25%          0.000000  ...            0.000000
50%          0.000000  ...            0.000000
75%          0.000000  ...            0.000000
max        100.000000  ...            1.000000

[8 rows x 112 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() -  groupby(Y_TARGET).count()                 Date
buy_sell_point      
0               1495
100               66
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96mDataFrame head:
            Date  buy_sell_point  ...  mcrh_DEMA_20_KAMA_100  mcrh_EMA_5_TEMA_20
77  1.744041e+09               0  ...                      0                   0
78  1.744105e+09               0  ...                      0                   1
79  1.744106e+09               0  ...                      0                   1
80  1.744106e+09               0  ...                      0                   0
81  1.744107e+09               0  ...                      0                   0

[5 rows x 114 columns][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 113)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 113)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96marr_vali sample: [[1744111800.0 1.0 1.283941 ... -0.023585 0 0]
 [1744110900.0 1.0 1.31533 ... -0.071684 0 0]
 [1744110000.0 1.0 1.353219 ... 0.129701 0 0]
 ...
 [1744105500.0 1.0 1.513305 ... 1.267506 0 1]
 [1744104600.0 1.0 1.548416 ... 0.286259 0 1]
 [1744040700.0 1.0 1.453236 ... -0.302697 0 0]][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - i want to chc folder: Models/TF_multi/Scalers/PYPL_pos_reg4_
root - [DEBUG]{MainThread} - scaler_min_max_array() - Scaler will be Saved Path: Models/TF_multi/Scalers/PYPL_pos_reg4_.scal
root - [INFO]{MainThread} - log_shapes_trains_val_data() - Training features shape SMOTE:(1518, 10, 113)	 Labels shape:(1518, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Validation features shape:(424, 10, 113)	 Labels shape:(424, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Test features shape:(266, 10, 113)		 Labels shape:(266, 1)
root - [DEBUG]{MainThread} - __init__() - [95mCreated object TF_multidimension Path from: d_price/PYPL_PLAIN_stock_history_MONTH_3_AD.csv[0m
root - [INFO]{MainThread} - load_and_clean_DF_Train_from_csv() - df loaded from .csv Shape: (1561, 1075) Path: d_price/PYPL_PLAIN_stock_history_MONTH_3_AD.csv
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - columns_selection List HAS vulues, works trains with: Date, buy_sell_point, tend_renko_brick, vola_NATR, tend_renko_ATR, vola_ATR, tend_ll, vola_THERMOma_20_2_05, vola_TRANGE, vola_TRUERANGE_1, tend_renko_TR, mtum_DMP_14, NQ_per_Volume, mtum_PLUS_DM, volu_Chaikin_ADOSC, vola_KCLe_20_2, ti_kelt_20_lower, ti_chaikin_10_3, vola_HWL, has_preMarket, ma_TRIMA_20, ti_mass_index_9_25, mtum_APO, mtum_PPO, ma_KAMA_50, olap_BBAND_MIDDLE, demark_s1, ma_EMA_50, ma_SMA_50, mtum_MACD_ext_signal, mtum_MACD_ext, olap_HT_TRENDLINE, tend_hl, vola_THERMO_20_2_05, volu_NVI_1, ma_EMA_10, ma_T3_10, trad_s3, ma_SMA_20, mtum_STCmacd_10_12_26_05, volu_Chaikin_AD, ma_KAMA_20, ti_coppock_14_11_10, NQ_Volume, mcrh_TEMA_10_KAMA_50, clas_s3, olap_MCGD_10, ichi_senkou_b, olap_PWMA_10, olap_SINWMA_14, tend_lh, fibo_s3, ma_EMA_20, mtum_MACD_signal, vola_UI_14, mtum_MACD_fix_signal, mtum_BIAS_SMA_26, olap_ALMA_10_60_085, vola_KCBe_20_2, ti_donchian_lower_20, sti_LINEARREG_INTERCEPT, ti_acc_dist, olap_VMAP, olap_VWMA_10, mtum_AO_5_34, wood_s3, ma_DEMA_20, ma_WMA_20, ma_TRIMA_10, ma_SMA_10, ichi_tenkan_sen, mcrh_DEMA_5_SMA_50, fibo_s2, olap_SWMA_10, olap_SAR, olap_HWMA_02_01_01, olap_BBAND_LOWER, ma_KAMA_10, ma_WMA_10, ma_KAMA_5, mtum_td_seq, ma_T3_5, mtum_MACD_fix, sti_TOS_STDEVALL_L_3, sti_TOS_STDEVALL_U_1, tend_hl_crash, Volume, wood_s2, volu_PVT, volu_PVI_1, NQ_SMA_100, volu_EFI_13, NQ_SMA_20, cama_s2, cycl_DCPERIOD, vola_HWM, trad_s2, trad_s1, ti_force_index_13, clas_s1, clas_s2, ma_TRIMA_50, olap_MIDPOINT, Low, mcrh_KAMA_20_SMA_100, mtum_MACD, mcrh_T3_20_SMA_50, mcrh_T3_20_EMA_50, mcrh_T3_10_EMA_100, mcrh_WMA_5_TEMA_50, NQ_Close, mtum_BEARP_13, mcrh_DEMA_20_KAMA_100, mcrh_EMA_5_TEMA_20, mcrh_KAMA_10_WMA_100, cdl_TASUKIGAP, ti_kelt_20_upper, cdl_PIERCING, ti_hma_20, mcrh_T3_10_TRIMA_20, cdl_STICKSANDWICH, ti_donchian_center_20, cdl_TRISTAR, volu_PVOL, cdl_UNIQUE3RIVER, cdl_UPSIDEGAP2CROWS, clas_r3, mcrh_EMA_5_SMA_50, wood_s1, mcrh_EMA_5_KAMA_20, cdl_MATHOLD, mcrh_SMA_10_WMA_50, cama_s1, cdl_KICKINGBYLENGTH, cdl_KICKING, cdl_INNECK, mcrh_KAMA_5_WMA_50, mcrh_TEMA_10_SMA_50, cdl_ABANDONEDBABY, vola_KCUe_20_2, mcrh_EMA_5_T3_100, cdl_3WHITESOLDIERS, cdl_3STARSINSOUTH, cdl_2CROWS, cama_s3, mcrh_KAMA_10_TEMA_20, mcrh_KAMA_20_TRIMA_50, cdl_CONCEALBABYSWALL, mtum_MACD_ext_list, fibo_pp, tend_VHF_28, mcrh_WMA_5_SMA_50, olap_BBAND_UPPER, mtum_ADX, mcrh_DEMA_20_EMA_50, mtum_ULTOSC, mtum_STOCH_Fa_k, mtum_ROCR100, mtum_ROCR, mtum_ROC, mtum_PVO_12_26_9, ma_SMA_5, mcrh_DEMA_10_KAMA_50, mtum_MINUS_DM, ma_TEMA_20, mtum_DMN_14, mtum_MACD_fix_list, mtum_INERTIA_20_14, mcrh_WMA_50_ti_h20, mcrh_WMA_50_TEMA_100, mcrh_EMA_10_KAMA_20, sti_LINEARREG, sti_VAR, sti_TOS_STDEVALL_U_3, mcrh_TEMA_10_T3_100, mcrh_TEMA_50_KAMA_100, sti_TOS_STDEVALL_L_2, sti_TOS_STDEVALL_LR, fibo_s1, sti_ENTP_10, olap_MIDPRICE, perf_z_30_1, mcrh_TEMA_50_ti_h20, ichi_isin_cloud, mcrh_TRIMA_10_T3_20, ichi_kijun_sen, mcrh_WMA_10_WMA_100, ichi_senkou_a, tend_hh
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame head:
                  Date  buy_sell_point  ...  ichi_senkou_a  tend_hh
0  2025-04-03 09:30:00            -100  ...            NaN      NaN
1  2025-04-03 09:45:00               0  ...            NaN      NaN
2  2025-04-03 10:00:00               0  ...            NaN      NaN
3  2025-04-03 10:15:00               0  ...            NaN      NaN
4  2025-04-03 10:30:00             100  ...            NaN      NaN

[5 rows x 189 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame info:
None
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() - DataFrame describe:
       buy_sell_point  tend_renko_brick  ...  ichi_senkou_a      tend_hh
count     1561.000000       1535.000000  ...    1510.000000  1518.000000
mean        -0.768738          0.121824  ...      68.420012    69.311790
std         30.372448          0.327189  ...       4.873134     4.600277
min       -100.000000          0.000000  ...      57.477500    59.095001
25%          0.000000          0.000000  ...      64.722479    65.339996
50%          0.000000          0.000000  ...      70.537313    71.845001
75%          0.000000          0.000000  ...      72.229538    73.139999
max        100.000000          1.000000  ...      74.848400    75.160004

[8 rows x 187 columns]
root - [DEBUG]{MainThread} - load_and_clean__buy_sell_atack() -  groupby(Y_TARGET).count()                 Date
buy_sell_point      
0               1495
100               66
root - [DEBUG]{MainThread} - cast_Y_label_binary() - Label classes: [0, 100]
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96mDataFrame head:
            Date  buy_sell_point  ...  ichi_senkou_a    tend_hh
77  1.744041e+09               0  ...      58.924950  59.095001
78  1.744105e+09               0  ...      57.967501  59.095001
79  1.744106e+09               0  ...      57.852499  59.095001
80  1.744106e+09               0  ...      58.275000  59.095001
81  1.744107e+09               0  ...      58.664999  61.011002

[5 rows x 189 columns][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 188)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [94mshape_imput_3d: (-1, 10, 188)[0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - [96marr_vali sample: [[1744111800.0 1.0 1.283941 ... 0 58.664999 61.011002]
 [1744110900.0 1.0 1.31533 ... 0 58.664999 61.011002]
 [1744110000.0 1.0 1.353219 ... 0 58.664999 61.011002]
 ...
 [1744105500.0 1.0 1.513305 ... 0 57.852499 59.095001]
 [1744104600.0 1.0 1.548416 ... 0 57.967501 59.095001]
 [1744040700.0 1.0 1.453236 ... 0 58.92495 59.095001]][0m
root - [DEBUG]{MainThread} - load_split_data_multidimension() - i want to chc folder: Models/TF_multi/Scalers/PYPL_pos_low1_
root - [DEBUG]{MainThread} - scaler_min_max_array() - Scaler will be Saved Path: Models/TF_multi/Scalers/PYPL_pos_low1_.scal
root - [INFO]{MainThread} - log_shapes_trains_val_data() - Training features shape SMOTE:(1522, 10, 188)	 Labels shape:(1522, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Validation features shape:(424, 10, 188)	 Labels shape:(424, 1)
root - [DEBUG]{MainThread} - log_shapes_trains_val_data() - Test features shape:(266, 10, 188)		 Labels shape:(266, 1)
root - [DEBUG]{MainThread} - __init__() - [95mCreated object TF_multidimension Path from: d_price/PYPL_PLAIN_stock_history_MONTH_3_AD.csv[0m
matplotlib - [DEBUG]{MainThread} - wrapper() - matplotlib data path: /opt/conda/lib/python3.10/site-packages/matplotlib/mpl-data
matplotlib - [DEBUG]{MainThread} - wrapper() - CONFIGDIR=/root/.config/matplotlib
matplotlib - [DEBUG]{MainThread} - <module>() - interactive is False
matplotlib - [DEBUG]{MainThread} - <module>() - platform is linux
matplotlib - [DEBUG]{MainThread} - wrapper() - CACHEDIR=/root/.cache/matplotlib
matplotlib.font_manager - [DEBUG]{MainThread} - _load_fontmanager() - Using fontManager instance from /root/.cache/matplotlib/fontlist-v390.json
matplotlib - [DEBUG]{MainThread} - wrapper() - matplotlib data path: /opt/conda/lib/python3.10/site-packages/matplotlib/mpl-data
matplotlib - [DEBUG]{MainThread} - wrapper() - CONFIGDIR=/root/.config/matplotlib
matplotlib - [DEBUG]{MainThread} - <module>() - interactive is False
matplotlib - [DEBUG]{MainThread} - <module>() - platform is linux
matplotlib - [DEBUG]{MainThread} - wrapper() - CACHEDIR=/root/.cache/matplotlib
matplotlib.font_manager - [DEBUG]{MainThread} - _load_fontmanager() - Using fontManager instance from /root/.cache/matplotlib/fontlist-v390.json
tensorflow - [DEBUG]{MainThread} - <module>() - Falling back to TensorFlow client; we recommended you install the Cloud TPU client directly with pip install cloud-tpu-client.
